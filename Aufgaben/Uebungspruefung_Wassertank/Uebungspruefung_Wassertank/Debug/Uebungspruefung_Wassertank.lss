
Uebungspruefung_Wassertank.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000e06  00000e9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000f0e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f0e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000025ae  00000000  00000000  0000119c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f81  00000000  00000000  0000374a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001659  00000000  00000000  000046cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  00005d24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cf1  00000000  00000000  000063a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001cf9  00000000  00000000  00007099  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008d92  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	95 c3       	rjmp	.+1834   	; 0x788 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e0       	ldi	r30, 0x06	; 6
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	70 c6       	rjmp	.+3296   	; 0xe02 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#define     DRAWLIMIT           2
#define     LOWLIMIT            1

int main(void)
{
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	ca d1       	rcall	.+916    	; 0x4bc <initBoard>
    uint8_t inswitch=0;
    uint8_t invol=0;
    uint8_t inpressure=0;
    uint8_t inpow=0;
    uint8_t flagblink=0;
    uint8_t outleds=0;
 128:	c0 e0       	ldi	r28, 0x00	; 0
    uint16_t blinktime=0;
    uint8_t inswitch=0;
    uint8_t invol=0;
    uint8_t inpressure=0;
    uint8_t inpow=0;
    uint8_t flagblink=0;
 12a:	d0 e0       	ldi	r29, 0x00	; 0
#define     LOWLIMIT            1

int main(void)
{
    initBoard(1);
    uint16_t blinktime=0;
 12c:	00 e0       	ldi	r16, 0x00	; 0
    while (1) 
    {
//Eingabe

        altflagblink=flagblink;
        inswitch=switchReadAll();
 12e:	10 e0       	ldi	r17, 0x00	; 0
 130:	51 d0       	rcall	.+162    	; 0x1d4 <switchReadAll>
        inpow=inswitch&IMASKPOW;
 132:	98 2f       	mov	r25, r24
 134:	90 78       	andi	r25, 0x80	; 128
        inpressure=inswitch&IMASKPRESSURE;
 136:	28 2f       	mov	r18, r24
 138:	20 74       	andi	r18, 0x40	; 64
        invol=inswitch&IMASKVOL;
 13a:	8f 71       	andi	r24, 0x1F	; 31
        if (invol>MAXVOL)
 13c:	85 31       	cpi	r24, 0x15	; 21
 13e:	08 f0       	brcs	.+2      	; 0x142 <main+0x1e>
        {
            invol=MAXVOL;
 140:	84 e1       	ldi	r24, 0x14	; 20
        }

//Verarbeitung

        if (inpow)
 142:	99 23       	and	r25, r25
 144:	a1 f1       	breq	.+104    	; 0x1ae <main+0x8a>
        {
            outleds=outleds|OMASKPOW;
        if (inpressure)
 146:	22 23       	and	r18, r18
 148:	11 f0       	breq	.+4      	; 0x14e <main+0x2a>
        {
            outleds=outleds|OMASKMAINT;
 14a:	c1 68       	ori	r28, 0x81	; 129
 14c:	02 c0       	rjmp	.+4      	; 0x152 <main+0x2e>
 14e:	ce 7f       	andi	r28, 0xFE	; 254
        } 
        else
        {
            outleds=outleds&~OMASKMAINT;
 150:	c0 68       	ori	r28, 0x80	; 128
        }
        if (invol>=CAPLIMIT)
 152:	81 31       	cpi	r24, 0x11	; 17
 154:	10 f0       	brcs	.+4      	; 0x15a <main+0x36>
        {
            outleds=outleds|OMASKCAP;
 156:	c2 60       	ori	r28, 0x02	; 2
 158:	01 c0       	rjmp	.+2      	; 0x15c <main+0x38>
        } 
        else
        {
            outleds=outleds&~OMASKCAP;
 15a:	cd 7f       	andi	r28, 0xFD	; 253
        }
        if (invol<DRAWLIMIT)
 15c:	82 30       	cpi	r24, 0x02	; 2
 15e:	20 f4       	brcc	.+8      	; 0x168 <main+0x44>
        {
            if (invol<=DRAWLIMIT)
 160:	83 30       	cpi	r24, 0x03	; 3
 162:	18 f4       	brcc	.+6      	; 0x16a <main+0x46>
            {
                outleds=outleds|OMASKOUTDRAW;
 164:	c0 64       	ori	r28, 0x40	; 64
 166:	01 c0       	rjmp	.+2      	; 0x16a <main+0x46>
            }
        } 
        else
        {
            outleds=outleds&~OMASKOUTDRAW;
 168:	cf 7b       	andi	r28, 0xBF	; 191
        }
        if (invol<2)
 16a:	82 30       	cpi	r24, 0x02	; 2
 16c:	18 f4       	brcc	.+6      	; 0x174 <main+0x50>
        {
            flagblink=1;
            outleds=outleds|OMASKLOW;
 16e:	c4 60       	ori	r28, 0x04	; 4
        {
            outleds=outleds&~OMASKOUTDRAW;
        }
        if (invol<2)
        {
            flagblink=1;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	02 c0       	rjmp	.+4      	; 0x178 <main+0x54>
            outleds=outleds|OMASKLOW;
        } 
        else
        {
            flagblink=0;
            outleds=outleds&~OMASKLOW;
 174:	cb 7f       	andi	r28, 0xFB	; 251
            flagblink=1;
            outleds=outleds|OMASKLOW;
        } 
        else
        {
            flagblink=0;
 176:	80 e0       	ldi	r24, 0x00	; 0
            outleds=outleds&~OMASKLOW;
        }
        if ((altflagblink<flagblink)||(blinktime>=BLINKPERIOD))
 178:	d8 17       	cp	r29, r24
 17a:	28 f0       	brcs	.+10     	; 0x186 <main+0x62>
 17c:	00 3d       	cpi	r16, 0xD0	; 208
 17e:	27 e0       	ldi	r18, 0x07	; 7
 180:	12 07       	cpc	r17, r18
 182:	20 f4       	brcc	.+8      	; 0x18c <main+0x68>
 184:	05 c0       	rjmp	.+10     	; 0x190 <main+0x6c>
        {
            blinktime=0;
 186:	00 e0       	ldi	r16, 0x00	; 0
 188:	10 e0       	ldi	r17, 0x00	; 0
 18a:	02 c0       	rjmp	.+4      	; 0x190 <main+0x6c>
 18c:	00 e0       	ldi	r16, 0x00	; 0
 18e:	10 e0       	ldi	r17, 0x00	; 0
        }
        if (flagblink)
 190:	88 23       	and	r24, r24
 192:	51 f0       	breq	.+20     	; 0x1a8 <main+0x84>
        {
            if (blinktime<BLINKONTIME)
 194:	04 3f       	cpi	r16, 0xF4	; 244
 196:	91 e0       	ldi	r25, 0x01	; 1
 198:	19 07       	cpc	r17, r25
 19a:	18 f4       	brcc	.+6      	; 0x1a2 <main+0x7e>
            {
                outleds=outleds|OMASKERR;
 19c:	c0 61       	ori	r28, 0x10	; 16
 19e:	d8 2f       	mov	r29, r24
 1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <main+0x8c>
            } 
            else
            {
                outleds=outleds&~OMASKERR;
 1a2:	cf 7e       	andi	r28, 0xEF	; 239
 1a4:	d8 2f       	mov	r29, r24
 1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <main+0x8c>
            }
        }
        else
        {
            outleds=outleds&~OMASKERR;    
 1a8:	cf 7e       	andi	r28, 0xEF	; 239
 1aa:	d8 2f       	mov	r29, r24
 1ac:	01 c0       	rjmp	.+2      	; 0x1b0 <main+0x8c>
        }
        
        }
        else
        {
            outleds=0;
 1ae:	c0 e0       	ldi	r28, 0x00	; 0
        }        
        
//Ausgabe

        ledWriteAll(outleds);
 1b0:	8c 2f       	mov	r24, r28
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	0c d0       	rcall	.+24     	; 0x1ce <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b6:	2f ef       	ldi	r18, 0xFF	; 255
 1b8:	80 e7       	ldi	r24, 0x70	; 112
 1ba:	92 e0       	ldi	r25, 0x02	; 2
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x98>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0xa2>
 1c6:	00 00       	nop

//systemtakt

        _delay_ms(BLINKTAKT);
        blinktime=blinktime+BLINKTAKT;
 1c8:	0e 5c       	subi	r16, 0xCE	; 206
 1ca:	1f 4f       	sbci	r17, 0xFF	; 255
    }
 1cc:	b1 cf       	rjmp	.-158    	; 0x130 <main+0xc>

000001ce <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1ce:	82 b9       	out	0x02, r24	; 2
 1d0:	95 b9       	out	0x05, r25	; 5
 1d2:	08 95       	ret

000001d4 <switchReadAll>:
 1d4:	86 b1       	in	r24, 0x06	; 6
 1d6:	08 95       	ret

000001d8 <buttonReadAllPL>:
 1d8:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 1dc:	08 95       	ret

000001de <startSystemTimeMs>:
 1de:	83 e0       	ldi	r24, 0x03	; 3
 1e0:	84 bd       	out	0x24, r24	; 36
 1e2:	8b e0       	ldi	r24, 0x0B	; 11
 1e4:	85 bd       	out	0x25, r24	; 37
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 1ec:	89 ef       	ldi	r24, 0xF9	; 249
 1ee:	87 bd       	out	0x27, r24	; 39
 1f0:	08 95       	ret

000001f2 <initAdc>:
 1f2:	11 ba       	out	0x11, r1	; 17
 1f4:	10 ba       	out	0x10, r1	; 16
 1f6:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 1fa:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 1fe:	80 e4       	ldi	r24, 0x40	; 64
 200:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 204:	8f e0       	ldi	r24, 0x0F	; 15
 206:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 210:	ea e7       	ldi	r30, 0x7A	; 122
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	87 ea       	ldi	r24, 0xA7	; 167
 216:	80 83       	st	Z, r24
 218:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 21c:	80 81       	ld	r24, Z
 21e:	80 64       	ori	r24, 0x40	; 64
 220:	80 83       	st	Z, r24
 222:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 226:	84 ff       	sbrs	r24, 4
 228:	fc cf       	rjmp	.-8      	; 0x222 <initAdc+0x30>
 22a:	ea e7       	ldi	r30, 0x7A	; 122
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	8f 7e       	andi	r24, 0xEF	; 239
 232:	80 83       	st	Z, r24
 234:	08 95       	ret

00000236 <rgbWrite>:
 236:	2f ef       	ldi	r18, 0xFF	; 255
 238:	33 e0       	ldi	r19, 0x03	; 3
 23a:	f9 01       	movw	r30, r18
 23c:	e8 1b       	sub	r30, r24
 23e:	f9 0b       	sbc	r31, r25
 240:	c9 01       	movw	r24, r18
 242:	86 1b       	sub	r24, r22
 244:	97 0b       	sbc	r25, r23
 246:	24 1b       	sub	r18, r20
 248:	35 0b       	sbc	r19, r21
 24a:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 24e:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 252:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 256:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 25a:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 25e:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 262:	08 95       	ret

00000264 <initRgb>:
 264:	8e ef       	ldi	r24, 0xFE	; 254
 266:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 26a:	8b e1       	ldi	r24, 0x1B	; 27
 26c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 270:	83 e0       	ldi	r24, 0x03	; 3
 272:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 276:	8f ef       	ldi	r24, 0xFF	; 255
 278:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	50 e0       	ldi	r21, 0x00	; 0
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	d6 cf       	rjmp	.-84     	; 0x236 <rgbWrite>
 28a:	08 95       	ret

0000028c <lcdSid>:
 28c:	88 23       	and	r24, r24
 28e:	21 f0       	breq	.+8      	; 0x298 <lcdSid+0xc>
 290:	84 b3       	in	r24, 0x14	; 20
 292:	81 60       	ori	r24, 0x01	; 1
 294:	84 bb       	out	0x14, r24	; 20
 296:	08 95       	ret
 298:	84 b3       	in	r24, 0x14	; 20
 29a:	8e 7f       	andi	r24, 0xFE	; 254
 29c:	84 bb       	out	0x14, r24	; 20
 29e:	08 95       	ret

000002a0 <lcdSclk>:
 2a0:	88 23       	and	r24, r24
 2a2:	21 f0       	breq	.+8      	; 0x2ac <lcdSclk+0xc>
 2a4:	84 b3       	in	r24, 0x14	; 20
 2a6:	82 60       	ori	r24, 0x02	; 2
 2a8:	84 bb       	out	0x14, r24	; 20
 2aa:	08 95       	ret
 2ac:	84 b3       	in	r24, 0x14	; 20
 2ae:	8d 7f       	andi	r24, 0xFD	; 253
 2b0:	84 bb       	out	0x14, r24	; 20
 2b2:	08 95       	ret

000002b4 <lcdLight>:
 2b4:	81 11       	cpse	r24, r1
 2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <lcdLight+0xc>
 2b8:	84 b5       	in	r24, 0x24	; 36
 2ba:	8f 7d       	andi	r24, 0xDF	; 223
 2bc:	84 bd       	out	0x24, r24	; 36
 2be:	08 95       	ret
 2c0:	94 b5       	in	r25, 0x24	; 36
 2c2:	90 62       	ori	r25, 0x20	; 32
 2c4:	94 bd       	out	0x24, r25	; 36
 2c6:	88 bd       	out	0x28, r24	; 40
 2c8:	08 95       	ret

000002ca <writeLcdF>:
 2ca:	ef 92       	push	r14
 2cc:	ff 92       	push	r15
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	7c 01       	movw	r14, r24
 2d8:	eb 01       	movw	r28, r22
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	d7 df       	rcall	.-82     	; 0x28c <lcdSid>
 2de:	00 e0       	ldi	r16, 0x00	; 0
 2e0:	10 e0       	ldi	r17, 0x00	; 0
 2e2:	06 c0       	rjmp	.+12     	; 0x2f0 <writeLcdF+0x26>
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	dc df       	rcall	.-72     	; 0x2a0 <lcdSclk>
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	da df       	rcall	.-76     	; 0x2a0 <lcdSclk>
 2ec:	0f 5f       	subi	r16, 0xFF	; 255
 2ee:	1f 4f       	sbci	r17, 0xFF	; 255
 2f0:	05 30       	cpi	r16, 0x05	; 5
 2f2:	11 05       	cpc	r17, r1
 2f4:	b8 f3       	brcs	.-18     	; 0x2e4 <writeLcdF+0x1a>
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	c9 df       	rcall	.-110    	; 0x28c <lcdSid>
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	d1 df       	rcall	.-94     	; 0x2a0 <lcdSclk>
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	cf df       	rcall	.-98     	; 0x2a0 <lcdSclk>
 302:	83 e4       	ldi	r24, 0x43	; 67
 304:	e8 16       	cp	r14, r24
 306:	f1 04       	cpc	r15, r1
 308:	19 f4       	brne	.+6      	; 0x310 <writeLcdF+0x46>
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	bf df       	rcall	.-130    	; 0x28c <lcdSid>
 30e:	02 c0       	rjmp	.+4      	; 0x314 <writeLcdF+0x4a>
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	bc df       	rcall	.-136    	; 0x28c <lcdSid>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	c4 df       	rcall	.-120    	; 0x2a0 <lcdSclk>
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	c2 df       	rcall	.-124    	; 0x2a0 <lcdSclk>
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	b6 df       	rcall	.-148    	; 0x28c <lcdSid>
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	be df       	rcall	.-132    	; 0x2a0 <lcdSclk>
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	bc df       	rcall	.-136    	; 0x2a0 <lcdSclk>
 328:	00 e0       	ldi	r16, 0x00	; 0
 32a:	10 e0       	ldi	r17, 0x00	; 0
 32c:	11 c0       	rjmp	.+34     	; 0x350 <writeLcdF+0x86>
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	b7 df       	rcall	.-146    	; 0x2a0 <lcdSclk>
 332:	c0 ff       	sbrs	r28, 0
 334:	03 c0       	rjmp	.+6      	; 0x33c <writeLcdF+0x72>
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	a9 df       	rcall	.-174    	; 0x28c <lcdSid>
 33a:	02 c0       	rjmp	.+4      	; 0x340 <writeLcdF+0x76>
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	a6 df       	rcall	.-180    	; 0x28c <lcdSid>
 340:	d6 95       	lsr	r29
 342:	c7 95       	ror	r28
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	ac df       	rcall	.-168    	; 0x2a0 <lcdSclk>
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	aa df       	rcall	.-172    	; 0x2a0 <lcdSclk>
 34c:	0f 5f       	subi	r16, 0xFF	; 255
 34e:	1f 4f       	sbci	r17, 0xFF	; 255
 350:	04 30       	cpi	r16, 0x04	; 4
 352:	11 05       	cpc	r17, r1
 354:	60 f3       	brcs	.-40     	; 0x32e <writeLcdF+0x64>
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	99 df       	rcall	.-206    	; 0x28c <lcdSid>
 35a:	00 e0       	ldi	r16, 0x00	; 0
 35c:	10 e0       	ldi	r17, 0x00	; 0
 35e:	06 c0       	rjmp	.+12     	; 0x36c <writeLcdF+0xa2>
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	9e df       	rcall	.-196    	; 0x2a0 <lcdSclk>
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	9c df       	rcall	.-200    	; 0x2a0 <lcdSclk>
 368:	0f 5f       	subi	r16, 0xFF	; 255
 36a:	1f 4f       	sbci	r17, 0xFF	; 255
 36c:	04 30       	cpi	r16, 0x04	; 4
 36e:	11 05       	cpc	r17, r1
 370:	b8 f3       	brcs	.-18     	; 0x360 <writeLcdF+0x96>
 372:	00 e0       	ldi	r16, 0x00	; 0
 374:	10 e0       	ldi	r17, 0x00	; 0
 376:	11 c0       	rjmp	.+34     	; 0x39a <writeLcdF+0xd0>
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	92 df       	rcall	.-220    	; 0x2a0 <lcdSclk>
 37c:	c0 ff       	sbrs	r28, 0
 37e:	03 c0       	rjmp	.+6      	; 0x386 <writeLcdF+0xbc>
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	84 df       	rcall	.-248    	; 0x28c <lcdSid>
 384:	02 c0       	rjmp	.+4      	; 0x38a <writeLcdF+0xc0>
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	81 df       	rcall	.-254    	; 0x28c <lcdSid>
 38a:	d6 95       	lsr	r29
 38c:	c7 95       	ror	r28
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	87 df       	rcall	.-242    	; 0x2a0 <lcdSclk>
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	85 df       	rcall	.-246    	; 0x2a0 <lcdSclk>
 396:	0f 5f       	subi	r16, 0xFF	; 255
 398:	1f 4f       	sbci	r17, 0xFF	; 255
 39a:	04 30       	cpi	r16, 0x04	; 4
 39c:	11 05       	cpc	r17, r1
 39e:	60 f3       	brcs	.-40     	; 0x378 <writeLcdF+0xae>
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	74 df       	rcall	.-280    	; 0x28c <lcdSid>
 3a4:	c0 e0       	ldi	r28, 0x00	; 0
 3a6:	d0 e0       	ldi	r29, 0x00	; 0
 3a8:	05 c0       	rjmp	.+10     	; 0x3b4 <writeLcdF+0xea>
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	79 df       	rcall	.-270    	; 0x2a0 <lcdSclk>
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	77 df       	rcall	.-274    	; 0x2a0 <lcdSclk>
 3b2:	21 96       	adiw	r28, 0x01	; 1
 3b4:	c4 30       	cpi	r28, 0x04	; 4
 3b6:	d1 05       	cpc	r29, r1
 3b8:	c0 f3       	brcs	.-16     	; 0x3aa <writeLcdF+0xe0>
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	67 df       	rcall	.-306    	; 0x28c <lcdSid>
 3be:	87 ec       	ldi	r24, 0xC7	; 199
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <writeLcdF+0xf8>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <writeLcdF+0xfe>
 3c8:	00 00       	nop
 3ca:	df 91       	pop	r29
 3cc:	cf 91       	pop	r28
 3ce:	1f 91       	pop	r17
 3d0:	0f 91       	pop	r16
 3d2:	ff 90       	pop	r15
 3d4:	ef 90       	pop	r14
 3d6:	08 95       	ret

000003d8 <lcdWriteText>:
 3d8:	1f 93       	push	r17
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62
 3e2:	65 97       	sbiw	r28, 0x15	; 21
 3e4:	0f b6       	in	r0, 0x3f	; 63
 3e6:	f8 94       	cli
 3e8:	de bf       	out	0x3e, r29	; 62
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	cd bf       	out	0x3d, r28	; 61
 3ee:	9e 01       	movw	r18, r28
 3f0:	20 5e       	subi	r18, 0xE0	; 224
 3f2:	3f 4f       	sbci	r19, 0xFF	; 255
 3f4:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3f6:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3f8:	65 e1       	ldi	r22, 0x15	; 21
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	ce 01       	movw	r24, r28
 3fe:	01 96       	adiw	r24, 0x01	; 1
 400:	1b d2       	rcall	.+1078   	; 0x838 <vsnprintf>
 402:	6d 8d       	ldd	r22, Y+29	; 0x1d
 404:	8c 8d       	ldd	r24, Y+28	; 0x1c
 406:	90 e2       	ldi	r25, 0x20	; 32
 408:	89 9f       	mul	r24, r25
 40a:	60 0d       	add	r22, r0
 40c:	11 24       	eor	r1, r1
 40e:	60 68       	ori	r22, 0x80	; 128
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	83 e4       	ldi	r24, 0x43	; 67
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	59 df       	rcall	.-334    	; 0x2ca <writeLcdF>
 418:	10 e0       	ldi	r17, 0x00	; 0
 41a:	05 c0       	rjmp	.+10     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41c:	1f 5f       	subi	r17, 0xFF	; 255
 41e:	70 e0       	ldi	r23, 0x00	; 0
 420:	84 e4       	ldi	r24, 0x44	; 68
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	52 df       	rcall	.-348    	; 0x2ca <writeLcdF>
 426:	e1 e0       	ldi	r30, 0x01	; 1
 428:	f0 e0       	ldi	r31, 0x00	; 0
 42a:	ec 0f       	add	r30, r28
 42c:	fd 1f       	adc	r31, r29
 42e:	e1 0f       	add	r30, r17
 430:	f1 1d       	adc	r31, r1
 432:	60 81       	ld	r22, Z
 434:	61 11       	cpse	r22, r1
 436:	f2 cf       	rjmp	.-28     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 438:	65 96       	adiw	r28, 0x15	; 21
 43a:	0f b6       	in	r0, 0x3f	; 63
 43c:	f8 94       	cli
 43e:	de bf       	out	0x3e, r29	; 62
 440:	0f be       	out	0x3f, r0	; 63
 442:	cd bf       	out	0x3d, r28	; 61
 444:	df 91       	pop	r29
 446:	cf 91       	pop	r28
 448:	1f 91       	pop	r17
 44a:	08 95       	ret

0000044c <lcdClear>:
 44c:	61 e0       	ldi	r22, 0x01	; 1
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	83 e4       	ldi	r24, 0x43	; 67
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	3a df       	rcall	.-396    	; 0x2ca <writeLcdF>
 456:	8f e3       	ldi	r24, 0x3F	; 63
 458:	9f e1       	ldi	r25, 0x1F	; 31
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <lcdClear+0xe>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <lcdClear+0x14>
 460:	00 00       	nop
 462:	80 e3       	ldi	r24, 0x30	; 48
 464:	92 e0       	ldi	r25, 0x02	; 2
 466:	9f 93       	push	r25
 468:	8f 93       	push	r24
 46a:	1f 92       	push	r1
 46c:	1f 92       	push	r1
 46e:	b4 df       	rcall	.-152    	; 0x3d8 <lcdWriteText>
 470:	0f 90       	pop	r0
 472:	0f 90       	pop	r0
 474:	0f 90       	pop	r0
 476:	0f 90       	pop	r0
 478:	08 95       	ret

0000047a <initLcd>:
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	11 df       	rcall	.-478    	; 0x2a0 <lcdSclk>
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	05 df       	rcall	.-502    	; 0x28c <lcdSid>
 482:	64 e3       	ldi	r22, 0x34	; 52
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	83 e4       	ldi	r24, 0x43	; 67
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	1f df       	rcall	.-450    	; 0x2ca <writeLcdF>
 48c:	69 e0       	ldi	r22, 0x09	; 9
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	83 e4       	ldi	r24, 0x43	; 67
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	1a df       	rcall	.-460    	; 0x2ca <writeLcdF>
 496:	60 e3       	ldi	r22, 0x30	; 48
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	83 e4       	ldi	r24, 0x43	; 67
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	15 df       	rcall	.-470    	; 0x2ca <writeLcdF>
 4a0:	6c e0       	ldi	r22, 0x0C	; 12
 4a2:	70 e0       	ldi	r23, 0x00	; 0
 4a4:	83 e4       	ldi	r24, 0x43	; 67
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	10 df       	rcall	.-480    	; 0x2ca <writeLcdF>
 4aa:	d0 df       	rcall	.-96     	; 0x44c <lcdClear>
 4ac:	67 e0       	ldi	r22, 0x07	; 7
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	83 e4       	ldi	r24, 0x43	; 67
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0a df       	rcall	.-492    	; 0x2ca <writeLcdF>
 4b6:	80 e0       	ldi	r24, 0x00	; 0
 4b8:	fd ce       	rjmp	.-518    	; 0x2b4 <lcdLight>
 4ba:	08 95       	ret

000004bc <initBoard>:
 4bc:	ff 92       	push	r15
 4be:	0f 93       	push	r16
 4c0:	1f 93       	push	r17
 4c2:	cf 93       	push	r28
 4c4:	df 93       	push	r29
 4c6:	c8 2f       	mov	r28, r24
 4c8:	85 b7       	in	r24, 0x35	; 53
 4ca:	85 bf       	out	0x35, r24	; 53
 4cc:	12 b8       	out	0x02, r1	; 2
 4ce:	8f ef       	ldi	r24, 0xFF	; 255
 4d0:	81 b9       	out	0x01, r24	; 1
 4d2:	15 b8       	out	0x05, r1	; 5
 4d4:	84 b9       	out	0x04, r24	; 4
 4d6:	88 b9       	out	0x08, r24	; 8
 4d8:	17 b8       	out	0x07, r1	; 7
 4da:	8b b9       	out	0x0b, r24	; 11
 4dc:	1a b8       	out	0x0a, r1	; 10
 4de:	8e b9       	out	0x0e, r24	; 14
 4e0:	1d b8       	out	0x0d, r1	; 13
 4e2:	9e b1       	in	r25, 0x0e	; 14
 4e4:	9b 7f       	andi	r25, 0xFB	; 251
 4e6:	9e b9       	out	0x0e, r25	; 14
 4e8:	11 ba       	out	0x11, r1	; 17
 4ea:	10 ba       	out	0x10, r1	; 16
 4ec:	94 e0       	ldi	r25, 0x04	; 4
 4ee:	94 bb       	out	0x14, r25	; 20
 4f0:	93 b3       	in	r25, 0x13	; 19
 4f2:	93 60       	ori	r25, 0x03	; 3
 4f4:	93 bb       	out	0x13, r25	; 19
 4f6:	93 b3       	in	r25, 0x13	; 19
 4f8:	90 62       	ori	r25, 0x20	; 32
 4fa:	93 bb       	out	0x13, r25	; 19
 4fc:	97 ec       	ldi	r25, 0xC7	; 199
 4fe:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 502:	98 e3       	ldi	r25, 0x38	; 56
 504:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 508:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 50c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 510:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 514:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 518:	8c e3       	ldi	r24, 0x3C	; 60
 51a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 51e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 522:	78 94       	sei
 524:	5c de       	rcall	.-840    	; 0x1de <startSystemTimeMs>
 526:	a9 df       	rcall	.-174    	; 0x47a <initLcd>
 528:	64 de       	rcall	.-824    	; 0x1f2 <initAdc>
 52a:	9c de       	rcall	.-712    	; 0x264 <initRgb>
 52c:	cc 23       	and	r28, r28
 52e:	09 f4       	brne	.+2      	; 0x532 <initBoard+0x76>
 530:	a3 c0       	rjmp	.+326    	; 0x678 <initBoard+0x1bc>
 532:	8f ef       	ldi	r24, 0xFF	; 255
 534:	bf de       	rcall	.-642    	; 0x2b4 <lcdLight>
 536:	40 e0       	ldi	r20, 0x00	; 0
 538:	50 e0       	ldi	r21, 0x00	; 0
 53a:	6f ef       	ldi	r22, 0xFF	; 255
 53c:	73 e0       	ldi	r23, 0x03	; 3
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	79 de       	rcall	.-782    	; 0x236 <rgbWrite>
 544:	8d e1       	ldi	r24, 0x1D	; 29
 546:	92 e0       	ldi	r25, 0x02	; 2
 548:	9f 93       	push	r25
 54a:	8f 93       	push	r24
 54c:	1f 92       	push	r1
 54e:	1f 92       	push	r1
 550:	43 df       	rcall	.-378    	; 0x3d8 <lcdWriteText>
 552:	82 e3       	ldi	r24, 0x32	; 50
 554:	92 e0       	ldi	r25, 0x02	; 2
 556:	9f 93       	push	r25
 558:	8f 93       	push	r24
 55a:	1f 92       	push	r1
 55c:	81 e0       	ldi	r24, 0x01	; 1
 55e:	8f 93       	push	r24
 560:	3b df       	rcall	.-394    	; 0x3d8 <lcdWriteText>
 562:	88 e0       	ldi	r24, 0x08	; 8
 564:	92 e0       	ldi	r25, 0x02	; 2
 566:	9f 93       	push	r25
 568:	8f 93       	push	r24
 56a:	1f 92       	push	r1
 56c:	82 e0       	ldi	r24, 0x02	; 2
 56e:	8f 93       	push	r24
 570:	33 df       	rcall	.-410    	; 0x3d8 <lcdWriteText>
 572:	87 e4       	ldi	r24, 0x47	; 71
 574:	92 e0       	ldi	r25, 0x02	; 2
 576:	9f 93       	push	r25
 578:	8f 93       	push	r24
 57a:	1f 92       	push	r1
 57c:	83 e0       	ldi	r24, 0x03	; 3
 57e:	8f 93       	push	r24
 580:	2b df       	rcall	.-426    	; 0x3d8 <lcdWriteText>
 582:	8d b7       	in	r24, 0x3d	; 61
 584:	9e b7       	in	r25, 0x3e	; 62
 586:	40 96       	adiw	r24, 0x10	; 16
 588:	0f b6       	in	r0, 0x3f	; 63
 58a:	f8 94       	cli
 58c:	9e bf       	out	0x3e, r25	; 62
 58e:	0f be       	out	0x3f, r0	; 63
 590:	8d bf       	out	0x3d, r24	; 61
 592:	ff 24       	eor	r15, r15
 594:	f3 94       	inc	r15
 596:	c0 e0       	ldi	r28, 0x00	; 0
 598:	10 e0       	ldi	r17, 0x00	; 0
 59a:	01 e0       	ldi	r16, 0x01	; 1
 59c:	d0 e0       	ldi	r29, 0x00	; 0
 59e:	00 23       	and	r16, r16
 5a0:	51 f0       	breq	.+20     	; 0x5b6 <initBoard+0xfa>
 5a2:	80 e0       	ldi	r24, 0x00	; 0
 5a4:	90 e8       	ldi	r25, 0x80	; 128
 5a6:	0d 2e       	mov	r0, r29
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <initBoard+0xf2>
 5aa:	96 95       	lsr	r25
 5ac:	87 95       	ror	r24
 5ae:	0a 94       	dec	r0
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <initBoard+0xee>
 5b2:	0d de       	rcall	.-998    	; 0x1ce <ledWriteAll>
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <initBoard+0x10c>
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0d 2e       	mov	r0, r29
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <initBoard+0x106>
 5be:	88 0f       	add	r24, r24
 5c0:	99 1f       	adc	r25, r25
 5c2:	0a 94       	dec	r0
 5c4:	e2 f7       	brpl	.-8      	; 0x5be <initBoard+0x102>
 5c6:	03 de       	rcall	.-1018   	; 0x1ce <ledWriteAll>
 5c8:	df 5f       	subi	r29, 0xFF	; 255
 5ca:	d1 31       	cpi	r29, 0x11	; 17
 5cc:	28 f0       	brcs	.+10     	; 0x5d8 <initBoard+0x11c>
 5ce:	81 e0       	ldi	r24, 0x01	; 1
 5d0:	01 11       	cpse	r16, r1
 5d2:	80 e0       	ldi	r24, 0x00	; 0
 5d4:	08 2f       	mov	r16, r24
 5d6:	d0 e0       	ldi	r29, 0x00	; 0
 5d8:	ff 20       	and	r15, r15
 5da:	11 f0       	breq	.+4      	; 0x5e0 <initBoard+0x124>
 5dc:	ce 5f       	subi	r28, 0xFE	; 254
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <initBoard+0x126>
 5e0:	c2 50       	subi	r28, 0x02	; 2
 5e2:	8c 2f       	mov	r24, r28
 5e4:	67 de       	rcall	.-818    	; 0x2b4 <lcdLight>
 5e6:	ce 3f       	cpi	r28, 0xFE	; 254
 5e8:	09 f4       	brne	.+2      	; 0x5ec <initBoard+0x130>
 5ea:	f1 2c       	mov	r15, r1
 5ec:	c8 37       	cpi	r28, 0x78	; 120
 5ee:	11 f4       	brne	.+4      	; 0x5f4 <initBoard+0x138>
 5f0:	ff 24       	eor	r15, r15
 5f2:	f3 94       	inc	r15
 5f4:	11 11       	cpse	r17, r1
 5f6:	17 c0       	rjmp	.+46     	; 0x626 <initBoard+0x16a>
 5f8:	ef dd       	rcall	.-1058   	; 0x1d8 <buttonReadAllPL>
 5fa:	83 7c       	andi	r24, 0xC3	; 195
 5fc:	a1 f0       	breq	.+40     	; 0x626 <initBoard+0x16a>
 5fe:	40 e0       	ldi	r20, 0x00	; 0
 600:	50 e0       	ldi	r21, 0x00	; 0
 602:	66 e2       	ldi	r22, 0x26	; 38
 604:	72 e0       	ldi	r23, 0x02	; 2
 606:	8f ef       	ldi	r24, 0xFF	; 255
 608:	93 e0       	ldi	r25, 0x03	; 3
 60a:	15 de       	rcall	.-982    	; 0x236 <rgbWrite>
 60c:	8c e5       	ldi	r24, 0x5C	; 92
 60e:	92 e0       	ldi	r25, 0x02	; 2
 610:	9f 93       	push	r25
 612:	8f 93       	push	r24
 614:	1f 92       	push	r1
 616:	83 e0       	ldi	r24, 0x03	; 3
 618:	8f 93       	push	r24
 61a:	de de       	rcall	.-580    	; 0x3d8 <lcdWriteText>
 61c:	0f 90       	pop	r0
 61e:	0f 90       	pop	r0
 620:	0f 90       	pop	r0
 622:	0f 90       	pop	r0
 624:	11 e0       	ldi	r17, 0x01	; 1
 626:	11 23       	and	r17, r17
 628:	19 f0       	breq	.+6      	; 0x630 <initBoard+0x174>
 62a:	d6 dd       	rcall	.-1108   	; 0x1d8 <buttonReadAllPL>
 62c:	83 7c       	andi	r24, 0xC3	; 195
 62e:	39 f0       	breq	.+14     	; 0x63e <initBoard+0x182>
 630:	8f ef       	ldi	r24, 0xFF	; 255
 632:	9c e7       	ldi	r25, 0x7C	; 124
 634:	01 97       	sbiw	r24, 0x01	; 1
 636:	f1 f7       	brne	.-4      	; 0x634 <initBoard+0x178>
 638:	00 c0       	rjmp	.+0      	; 0x63a <initBoard+0x17e>
 63a:	00 00       	nop
 63c:	b0 cf       	rjmp	.-160    	; 0x59e <initBoard+0xe2>
 63e:	06 df       	rcall	.-500    	; 0x44c <lcdClear>
 640:	80 e0       	ldi	r24, 0x00	; 0
 642:	38 de       	rcall	.-912    	; 0x2b4 <lcdLight>
 644:	80 e0       	ldi	r24, 0x00	; 0
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	c2 dd       	rcall	.-1148   	; 0x1ce <ledWriteAll>
 64a:	40 e0       	ldi	r20, 0x00	; 0
 64c:	50 e0       	ldi	r21, 0x00	; 0
 64e:	60 e0       	ldi	r22, 0x00	; 0
 650:	70 e0       	ldi	r23, 0x00	; 0
 652:	80 e0       	ldi	r24, 0x00	; 0
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	ef dd       	rcall	.-1058   	; 0x236 <rgbWrite>
 658:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 65c:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 660:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 664:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 668:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 66c:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 670:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 674:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 678:	df 91       	pop	r29
 67a:	cf 91       	pop	r28
 67c:	1f 91       	pop	r17
 67e:	0f 91       	pop	r16
 680:	ff 90       	pop	r15
 682:	08 95       	ret

00000684 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 684:	cf 93       	push	r28
 686:	df 93       	push	r29
 688:	cd b7       	in	r28, 0x3d	; 61
 68a:	de b7       	in	r29, 0x3e	; 62
 68c:	28 97       	sbiw	r28, 0x08	; 8
 68e:	0f b6       	in	r0, 0x3f	; 63
 690:	f8 94       	cli
 692:	de bf       	out	0x3e, r29	; 62
 694:	0f be       	out	0x3f, r0	; 63
 696:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 698:	88 e0       	ldi	r24, 0x08	; 8
 69a:	e0 e0       	ldi	r30, 0x00	; 0
 69c:	f2 e0       	ldi	r31, 0x02	; 2
 69e:	de 01       	movw	r26, r28
 6a0:	11 96       	adiw	r26, 0x01	; 1
 6a2:	01 90       	ld	r0, Z+
 6a4:	0d 92       	st	X+, r0
 6a6:	8a 95       	dec	r24
 6a8:	e1 f7       	brne	.-8      	; 0x6a2 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6aa:	e5 e0       	ldi	r30, 0x05	; 5
 6ac:	f1 e0       	ldi	r31, 0x01	; 1
 6ae:	80 81       	ld	r24, Z
 6b0:	8f 7b       	andi	r24, 0xBF	; 191
 6b2:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6b4:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 6b8:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 6bc:	81 e0       	ldi	r24, 0x01	; 1
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	8c 0f       	add	r24, r28
 6c2:	9d 1f       	adc	r25, r29
 6c4:	e8 0f       	add	r30, r24
 6c6:	f9 1f       	adc	r31, r25
 6c8:	80 81       	ld	r24, Z
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 6d0:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 6d4:	80 e0       	ldi	r24, 0x00	; 0
 6d6:	26 c0       	rjmp	.+76     	; 0x724 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 6d8:	e7 e3       	ldi	r30, 0x37	; 55
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	e8 1b       	sub	r30, r24
 6de:	f1 09       	sbc	r31, r1
 6e0:	ee 0f       	add	r30, r30
 6e2:	ff 1f       	adc	r31, r31
 6e4:	ee 57       	subi	r30, 0x7E	; 126
 6e6:	fd 4f       	sbci	r31, 0xFD	; 253
 6e8:	40 81       	ld	r20, Z
 6ea:	51 81       	ldd	r21, Z+1	; 0x01
 6ec:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 6f0:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 6f4:	24 23       	and	r18, r20
 6f6:	35 23       	and	r19, r21
 6f8:	23 2b       	or	r18, r19
 6fa:	31 f0       	breq	.+12     	; 0x708 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 6fc:	e5 e0       	ldi	r30, 0x05	; 5
 6fe:	f1 e0       	ldi	r31, 0x01	; 1
 700:	90 81       	ld	r25, Z
 702:	90 62       	ori	r25, 0x20	; 32
 704:	90 83       	st	Z, r25
 706:	05 c0       	rjmp	.+10     	; 0x712 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 708:	e5 e0       	ldi	r30, 0x05	; 5
 70a:	f1 e0       	ldi	r31, 0x01	; 1
 70c:	90 81       	ld	r25, Z
 70e:	9f 7d       	andi	r25, 0xDF	; 223
 710:	90 83       	st	Z, r25
        }
        CLOCK_1;
 712:	e5 e0       	ldi	r30, 0x05	; 5
 714:	f1 e0       	ldi	r31, 0x01	; 1
 716:	90 81       	ld	r25, Z
 718:	90 61       	ori	r25, 0x10	; 16
 71a:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 71c:	90 81       	ld	r25, Z
 71e:	9f 7e       	andi	r25, 0xEF	; 239
 720:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 722:	8f 5f       	subi	r24, 0xFF	; 255
 724:	88 33       	cpi	r24, 0x38	; 56
 726:	c0 f2       	brcs	.-80     	; 0x6d8 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 728:	e5 e0       	ldi	r30, 0x05	; 5
 72a:	f1 e0       	ldi	r31, 0x01	; 1
 72c:	80 81       	ld	r24, Z
 72e:	87 7f       	andi	r24, 0xF7	; 247
 730:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 732:	80 81       	ld	r24, Z
 734:	88 7f       	andi	r24, 0xF8	; 248
 736:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 738:	90 81       	ld	r25, Z
 73a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 73e:	89 2b       	or	r24, r25
 740:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 742:	80 81       	ld	r24, Z
 744:	80 64       	ori	r24, 0x40	; 64
 746:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 748:	80 81       	ld	r24, Z
 74a:	88 60       	ori	r24, 0x08	; 8
 74c:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 74e:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 752:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 756:	87 30       	cpi	r24, 0x07	; 7
 758:	91 05       	cpc	r25, r1
 75a:	30 f4       	brcc	.+12     	; 0x768 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 75c:	01 96       	adiw	r24, 0x01	; 1
 75e:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 762:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 766:	07 c0       	rjmp	.+14     	; 0x776 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 768:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 76c:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 770:	81 e0       	ldi	r24, 0x01	; 1
 772:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 776:	28 96       	adiw	r28, 0x08	; 8
 778:	0f b6       	in	r0, 0x3f	; 63
 77a:	f8 94       	cli
 77c:	de bf       	out	0x3e, r29	; 62
 77e:	0f be       	out	0x3f, r0	; 63
 780:	cd bf       	out	0x3d, r28	; 61
 782:	df 91       	pop	r29
 784:	cf 91       	pop	r28
 786:	08 95       	ret

00000788 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 788:	1f 92       	push	r1
 78a:	0f 92       	push	r0
 78c:	0f b6       	in	r0, 0x3f	; 63
 78e:	0f 92       	push	r0
 790:	11 24       	eor	r1, r1
 792:	0b b6       	in	r0, 0x3b	; 59
 794:	0f 92       	push	r0
 796:	2f 93       	push	r18
 798:	3f 93       	push	r19
 79a:	4f 93       	push	r20
 79c:	5f 93       	push	r21
 79e:	6f 93       	push	r22
 7a0:	7f 93       	push	r23
 7a2:	8f 93       	push	r24
 7a4:	9f 93       	push	r25
 7a6:	af 93       	push	r26
 7a8:	bf 93       	push	r27
 7aa:	ef 93       	push	r30
 7ac:	ff 93       	push	r31
    systemTimeMs += 1;
 7ae:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 7b2:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 7b6:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 7ba:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 7be:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 7c2:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 7c6:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 7ca:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 7ce:	a1 e0       	ldi	r26, 0x01	; 1
 7d0:	27 d0       	rcall	.+78     	; 0x820 <__adddi3_s8>
 7d2:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 7d6:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 7da:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 7de:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 7e2:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 7e6:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 7ea:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 7ee:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 7f2:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 7f6:	81 11       	cpse	r24, r1
 7f8:	45 df       	rcall	.-374    	; 0x684 <matrixWriteNextLine>
}
 7fa:	ff 91       	pop	r31
 7fc:	ef 91       	pop	r30
 7fe:	bf 91       	pop	r27
 800:	af 91       	pop	r26
 802:	9f 91       	pop	r25
 804:	8f 91       	pop	r24
 806:	7f 91       	pop	r23
 808:	6f 91       	pop	r22
 80a:	5f 91       	pop	r21
 80c:	4f 91       	pop	r20
 80e:	3f 91       	pop	r19
 810:	2f 91       	pop	r18
 812:	0f 90       	pop	r0
 814:	0b be       	out	0x3b, r0	; 59
 816:	0f 90       	pop	r0
 818:	0f be       	out	0x3f, r0	; 63
 81a:	0f 90       	pop	r0
 81c:	1f 90       	pop	r1
 81e:	18 95       	reti

00000820 <__adddi3_s8>:
 820:	00 24       	eor	r0, r0
 822:	a7 fd       	sbrc	r26, 7
 824:	00 94       	com	r0
 826:	2a 0f       	add	r18, r26
 828:	30 1d       	adc	r19, r0
 82a:	40 1d       	adc	r20, r0
 82c:	50 1d       	adc	r21, r0
 82e:	60 1d       	adc	r22, r0
 830:	70 1d       	adc	r23, r0
 832:	80 1d       	adc	r24, r0
 834:	90 1d       	adc	r25, r0
 836:	08 95       	ret

00000838 <vsnprintf>:
 838:	0f 93       	push	r16
 83a:	1f 93       	push	r17
 83c:	cf 93       	push	r28
 83e:	df 93       	push	r29
 840:	cd b7       	in	r28, 0x3d	; 61
 842:	de b7       	in	r29, 0x3e	; 62
 844:	2e 97       	sbiw	r28, 0x0e	; 14
 846:	0f b6       	in	r0, 0x3f	; 63
 848:	f8 94       	cli
 84a:	de bf       	out	0x3e, r29	; 62
 84c:	0f be       	out	0x3f, r0	; 63
 84e:	cd bf       	out	0x3d, r28	; 61
 850:	8c 01       	movw	r16, r24
 852:	fa 01       	movw	r30, r20
 854:	86 e0       	ldi	r24, 0x06	; 6
 856:	8c 83       	std	Y+4, r24	; 0x04
 858:	1a 83       	std	Y+2, r17	; 0x02
 85a:	09 83       	std	Y+1, r16	; 0x01
 85c:	77 ff       	sbrs	r23, 7
 85e:	02 c0       	rjmp	.+4      	; 0x864 <vsnprintf+0x2c>
 860:	60 e0       	ldi	r22, 0x00	; 0
 862:	70 e8       	ldi	r23, 0x80	; 128
 864:	cb 01       	movw	r24, r22
 866:	01 97       	sbiw	r24, 0x01	; 1
 868:	9e 83       	std	Y+6, r25	; 0x06
 86a:	8d 83       	std	Y+5, r24	; 0x05
 86c:	a9 01       	movw	r20, r18
 86e:	bf 01       	movw	r22, r30
 870:	ce 01       	movw	r24, r28
 872:	01 96       	adiw	r24, 0x01	; 1
 874:	19 d0       	rcall	.+50     	; 0x8a8 <vfprintf>
 876:	4d 81       	ldd	r20, Y+5	; 0x05
 878:	5e 81       	ldd	r21, Y+6	; 0x06
 87a:	57 fd       	sbrc	r21, 7
 87c:	0a c0       	rjmp	.+20     	; 0x892 <vsnprintf+0x5a>
 87e:	2f 81       	ldd	r18, Y+7	; 0x07
 880:	38 85       	ldd	r19, Y+8	; 0x08
 882:	42 17       	cp	r20, r18
 884:	53 07       	cpc	r21, r19
 886:	0c f4       	brge	.+2      	; 0x88a <vsnprintf+0x52>
 888:	9a 01       	movw	r18, r20
 88a:	f8 01       	movw	r30, r16
 88c:	e2 0f       	add	r30, r18
 88e:	f3 1f       	adc	r31, r19
 890:	10 82       	st	Z, r1
 892:	2e 96       	adiw	r28, 0x0e	; 14
 894:	0f b6       	in	r0, 0x3f	; 63
 896:	f8 94       	cli
 898:	de bf       	out	0x3e, r29	; 62
 89a:	0f be       	out	0x3f, r0	; 63
 89c:	cd bf       	out	0x3d, r28	; 61
 89e:	df 91       	pop	r29
 8a0:	cf 91       	pop	r28
 8a2:	1f 91       	pop	r17
 8a4:	0f 91       	pop	r16
 8a6:	08 95       	ret

000008a8 <vfprintf>:
 8a8:	2f 92       	push	r2
 8aa:	3f 92       	push	r3
 8ac:	4f 92       	push	r4
 8ae:	5f 92       	push	r5
 8b0:	6f 92       	push	r6
 8b2:	7f 92       	push	r7
 8b4:	8f 92       	push	r8
 8b6:	9f 92       	push	r9
 8b8:	af 92       	push	r10
 8ba:	bf 92       	push	r11
 8bc:	cf 92       	push	r12
 8be:	df 92       	push	r13
 8c0:	ef 92       	push	r14
 8c2:	ff 92       	push	r15
 8c4:	0f 93       	push	r16
 8c6:	1f 93       	push	r17
 8c8:	cf 93       	push	r28
 8ca:	df 93       	push	r29
 8cc:	cd b7       	in	r28, 0x3d	; 61
 8ce:	de b7       	in	r29, 0x3e	; 62
 8d0:	2b 97       	sbiw	r28, 0x0b	; 11
 8d2:	0f b6       	in	r0, 0x3f	; 63
 8d4:	f8 94       	cli
 8d6:	de bf       	out	0x3e, r29	; 62
 8d8:	0f be       	out	0x3f, r0	; 63
 8da:	cd bf       	out	0x3d, r28	; 61
 8dc:	6c 01       	movw	r12, r24
 8de:	7b 01       	movw	r14, r22
 8e0:	8a 01       	movw	r16, r20
 8e2:	fc 01       	movw	r30, r24
 8e4:	17 82       	std	Z+7, r1	; 0x07
 8e6:	16 82       	std	Z+6, r1	; 0x06
 8e8:	83 81       	ldd	r24, Z+3	; 0x03
 8ea:	81 ff       	sbrs	r24, 1
 8ec:	bf c1       	rjmp	.+894    	; 0xc6c <vfprintf+0x3c4>
 8ee:	ce 01       	movw	r24, r28
 8f0:	01 96       	adiw	r24, 0x01	; 1
 8f2:	3c 01       	movw	r6, r24
 8f4:	f6 01       	movw	r30, r12
 8f6:	93 81       	ldd	r25, Z+3	; 0x03
 8f8:	f7 01       	movw	r30, r14
 8fa:	93 fd       	sbrc	r25, 3
 8fc:	85 91       	lpm	r24, Z+
 8fe:	93 ff       	sbrs	r25, 3
 900:	81 91       	ld	r24, Z+
 902:	7f 01       	movw	r14, r30
 904:	88 23       	and	r24, r24
 906:	09 f4       	brne	.+2      	; 0x90a <vfprintf+0x62>
 908:	ad c1       	rjmp	.+858    	; 0xc64 <vfprintf+0x3bc>
 90a:	85 32       	cpi	r24, 0x25	; 37
 90c:	39 f4       	brne	.+14     	; 0x91c <vfprintf+0x74>
 90e:	93 fd       	sbrc	r25, 3
 910:	85 91       	lpm	r24, Z+
 912:	93 ff       	sbrs	r25, 3
 914:	81 91       	ld	r24, Z+
 916:	7f 01       	movw	r14, r30
 918:	85 32       	cpi	r24, 0x25	; 37
 91a:	21 f4       	brne	.+8      	; 0x924 <vfprintf+0x7c>
 91c:	b6 01       	movw	r22, r12
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	d6 d1       	rcall	.+940    	; 0xcce <fputc>
 922:	e8 cf       	rjmp	.-48     	; 0x8f4 <vfprintf+0x4c>
 924:	91 2c       	mov	r9, r1
 926:	21 2c       	mov	r2, r1
 928:	31 2c       	mov	r3, r1
 92a:	ff e1       	ldi	r31, 0x1F	; 31
 92c:	f3 15       	cp	r31, r3
 92e:	d8 f0       	brcs	.+54     	; 0x966 <vfprintf+0xbe>
 930:	8b 32       	cpi	r24, 0x2B	; 43
 932:	79 f0       	breq	.+30     	; 0x952 <vfprintf+0xaa>
 934:	38 f4       	brcc	.+14     	; 0x944 <vfprintf+0x9c>
 936:	80 32       	cpi	r24, 0x20	; 32
 938:	79 f0       	breq	.+30     	; 0x958 <vfprintf+0xb0>
 93a:	83 32       	cpi	r24, 0x23	; 35
 93c:	a1 f4       	brne	.+40     	; 0x966 <vfprintf+0xbe>
 93e:	23 2d       	mov	r18, r3
 940:	20 61       	ori	r18, 0x10	; 16
 942:	1d c0       	rjmp	.+58     	; 0x97e <vfprintf+0xd6>
 944:	8d 32       	cpi	r24, 0x2D	; 45
 946:	61 f0       	breq	.+24     	; 0x960 <vfprintf+0xb8>
 948:	80 33       	cpi	r24, 0x30	; 48
 94a:	69 f4       	brne	.+26     	; 0x966 <vfprintf+0xbe>
 94c:	23 2d       	mov	r18, r3
 94e:	21 60       	ori	r18, 0x01	; 1
 950:	16 c0       	rjmp	.+44     	; 0x97e <vfprintf+0xd6>
 952:	83 2d       	mov	r24, r3
 954:	82 60       	ori	r24, 0x02	; 2
 956:	38 2e       	mov	r3, r24
 958:	e3 2d       	mov	r30, r3
 95a:	e4 60       	ori	r30, 0x04	; 4
 95c:	3e 2e       	mov	r3, r30
 95e:	2a c0       	rjmp	.+84     	; 0x9b4 <vfprintf+0x10c>
 960:	f3 2d       	mov	r31, r3
 962:	f8 60       	ori	r31, 0x08	; 8
 964:	1d c0       	rjmp	.+58     	; 0x9a0 <vfprintf+0xf8>
 966:	37 fc       	sbrc	r3, 7
 968:	2d c0       	rjmp	.+90     	; 0x9c4 <vfprintf+0x11c>
 96a:	20 ed       	ldi	r18, 0xD0	; 208
 96c:	28 0f       	add	r18, r24
 96e:	2a 30       	cpi	r18, 0x0A	; 10
 970:	40 f0       	brcs	.+16     	; 0x982 <vfprintf+0xda>
 972:	8e 32       	cpi	r24, 0x2E	; 46
 974:	b9 f4       	brne	.+46     	; 0x9a4 <vfprintf+0xfc>
 976:	36 fc       	sbrc	r3, 6
 978:	75 c1       	rjmp	.+746    	; 0xc64 <vfprintf+0x3bc>
 97a:	23 2d       	mov	r18, r3
 97c:	20 64       	ori	r18, 0x40	; 64
 97e:	32 2e       	mov	r3, r18
 980:	19 c0       	rjmp	.+50     	; 0x9b4 <vfprintf+0x10c>
 982:	36 fe       	sbrs	r3, 6
 984:	06 c0       	rjmp	.+12     	; 0x992 <vfprintf+0xea>
 986:	8a e0       	ldi	r24, 0x0A	; 10
 988:	98 9e       	mul	r9, r24
 98a:	20 0d       	add	r18, r0
 98c:	11 24       	eor	r1, r1
 98e:	92 2e       	mov	r9, r18
 990:	11 c0       	rjmp	.+34     	; 0x9b4 <vfprintf+0x10c>
 992:	ea e0       	ldi	r30, 0x0A	; 10
 994:	2e 9e       	mul	r2, r30
 996:	20 0d       	add	r18, r0
 998:	11 24       	eor	r1, r1
 99a:	22 2e       	mov	r2, r18
 99c:	f3 2d       	mov	r31, r3
 99e:	f0 62       	ori	r31, 0x20	; 32
 9a0:	3f 2e       	mov	r3, r31
 9a2:	08 c0       	rjmp	.+16     	; 0x9b4 <vfprintf+0x10c>
 9a4:	8c 36       	cpi	r24, 0x6C	; 108
 9a6:	21 f4       	brne	.+8      	; 0x9b0 <vfprintf+0x108>
 9a8:	83 2d       	mov	r24, r3
 9aa:	80 68       	ori	r24, 0x80	; 128
 9ac:	38 2e       	mov	r3, r24
 9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <vfprintf+0x10c>
 9b0:	88 36       	cpi	r24, 0x68	; 104
 9b2:	41 f4       	brne	.+16     	; 0x9c4 <vfprintf+0x11c>
 9b4:	f7 01       	movw	r30, r14
 9b6:	93 fd       	sbrc	r25, 3
 9b8:	85 91       	lpm	r24, Z+
 9ba:	93 ff       	sbrs	r25, 3
 9bc:	81 91       	ld	r24, Z+
 9be:	7f 01       	movw	r14, r30
 9c0:	81 11       	cpse	r24, r1
 9c2:	b3 cf       	rjmp	.-154    	; 0x92a <vfprintf+0x82>
 9c4:	98 2f       	mov	r25, r24
 9c6:	9f 7d       	andi	r25, 0xDF	; 223
 9c8:	95 54       	subi	r25, 0x45	; 69
 9ca:	93 30       	cpi	r25, 0x03	; 3
 9cc:	28 f4       	brcc	.+10     	; 0x9d8 <vfprintf+0x130>
 9ce:	0c 5f       	subi	r16, 0xFC	; 252
 9d0:	1f 4f       	sbci	r17, 0xFF	; 255
 9d2:	9f e3       	ldi	r25, 0x3F	; 63
 9d4:	99 83       	std	Y+1, r25	; 0x01
 9d6:	0d c0       	rjmp	.+26     	; 0x9f2 <vfprintf+0x14a>
 9d8:	83 36       	cpi	r24, 0x63	; 99
 9da:	31 f0       	breq	.+12     	; 0x9e8 <vfprintf+0x140>
 9dc:	83 37       	cpi	r24, 0x73	; 115
 9de:	71 f0       	breq	.+28     	; 0x9fc <vfprintf+0x154>
 9e0:	83 35       	cpi	r24, 0x53	; 83
 9e2:	09 f0       	breq	.+2      	; 0x9e6 <vfprintf+0x13e>
 9e4:	55 c0       	rjmp	.+170    	; 0xa90 <vfprintf+0x1e8>
 9e6:	20 c0       	rjmp	.+64     	; 0xa28 <vfprintf+0x180>
 9e8:	f8 01       	movw	r30, r16
 9ea:	80 81       	ld	r24, Z
 9ec:	89 83       	std	Y+1, r24	; 0x01
 9ee:	0e 5f       	subi	r16, 0xFE	; 254
 9f0:	1f 4f       	sbci	r17, 0xFF	; 255
 9f2:	88 24       	eor	r8, r8
 9f4:	83 94       	inc	r8
 9f6:	91 2c       	mov	r9, r1
 9f8:	53 01       	movw	r10, r6
 9fa:	12 c0       	rjmp	.+36     	; 0xa20 <vfprintf+0x178>
 9fc:	28 01       	movw	r4, r16
 9fe:	f2 e0       	ldi	r31, 0x02	; 2
 a00:	4f 0e       	add	r4, r31
 a02:	51 1c       	adc	r5, r1
 a04:	f8 01       	movw	r30, r16
 a06:	a0 80       	ld	r10, Z
 a08:	b1 80       	ldd	r11, Z+1	; 0x01
 a0a:	36 fe       	sbrs	r3, 6
 a0c:	03 c0       	rjmp	.+6      	; 0xa14 <vfprintf+0x16c>
 a0e:	69 2d       	mov	r22, r9
 a10:	70 e0       	ldi	r23, 0x00	; 0
 a12:	02 c0       	rjmp	.+4      	; 0xa18 <vfprintf+0x170>
 a14:	6f ef       	ldi	r22, 0xFF	; 255
 a16:	7f ef       	ldi	r23, 0xFF	; 255
 a18:	c5 01       	movw	r24, r10
 a1a:	4e d1       	rcall	.+668    	; 0xcb8 <strnlen>
 a1c:	4c 01       	movw	r8, r24
 a1e:	82 01       	movw	r16, r4
 a20:	f3 2d       	mov	r31, r3
 a22:	ff 77       	andi	r31, 0x7F	; 127
 a24:	3f 2e       	mov	r3, r31
 a26:	15 c0       	rjmp	.+42     	; 0xa52 <vfprintf+0x1aa>
 a28:	28 01       	movw	r4, r16
 a2a:	22 e0       	ldi	r18, 0x02	; 2
 a2c:	42 0e       	add	r4, r18
 a2e:	51 1c       	adc	r5, r1
 a30:	f8 01       	movw	r30, r16
 a32:	a0 80       	ld	r10, Z
 a34:	b1 80       	ldd	r11, Z+1	; 0x01
 a36:	36 fe       	sbrs	r3, 6
 a38:	03 c0       	rjmp	.+6      	; 0xa40 <vfprintf+0x198>
 a3a:	69 2d       	mov	r22, r9
 a3c:	70 e0       	ldi	r23, 0x00	; 0
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <vfprintf+0x19c>
 a40:	6f ef       	ldi	r22, 0xFF	; 255
 a42:	7f ef       	ldi	r23, 0xFF	; 255
 a44:	c5 01       	movw	r24, r10
 a46:	2d d1       	rcall	.+602    	; 0xca2 <strnlen_P>
 a48:	4c 01       	movw	r8, r24
 a4a:	f3 2d       	mov	r31, r3
 a4c:	f0 68       	ori	r31, 0x80	; 128
 a4e:	3f 2e       	mov	r3, r31
 a50:	82 01       	movw	r16, r4
 a52:	33 fc       	sbrc	r3, 3
 a54:	19 c0       	rjmp	.+50     	; 0xa88 <vfprintf+0x1e0>
 a56:	82 2d       	mov	r24, r2
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	88 16       	cp	r8, r24
 a5c:	99 06       	cpc	r9, r25
 a5e:	a0 f4       	brcc	.+40     	; 0xa88 <vfprintf+0x1e0>
 a60:	b6 01       	movw	r22, r12
 a62:	80 e2       	ldi	r24, 0x20	; 32
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	33 d1       	rcall	.+614    	; 0xcce <fputc>
 a68:	2a 94       	dec	r2
 a6a:	f5 cf       	rjmp	.-22     	; 0xa56 <vfprintf+0x1ae>
 a6c:	f5 01       	movw	r30, r10
 a6e:	37 fc       	sbrc	r3, 7
 a70:	85 91       	lpm	r24, Z+
 a72:	37 fe       	sbrs	r3, 7
 a74:	81 91       	ld	r24, Z+
 a76:	5f 01       	movw	r10, r30
 a78:	b6 01       	movw	r22, r12
 a7a:	90 e0       	ldi	r25, 0x00	; 0
 a7c:	28 d1       	rcall	.+592    	; 0xcce <fputc>
 a7e:	21 10       	cpse	r2, r1
 a80:	2a 94       	dec	r2
 a82:	21 e0       	ldi	r18, 0x01	; 1
 a84:	82 1a       	sub	r8, r18
 a86:	91 08       	sbc	r9, r1
 a88:	81 14       	cp	r8, r1
 a8a:	91 04       	cpc	r9, r1
 a8c:	79 f7       	brne	.-34     	; 0xa6c <vfprintf+0x1c4>
 a8e:	e1 c0       	rjmp	.+450    	; 0xc52 <vfprintf+0x3aa>
 a90:	84 36       	cpi	r24, 0x64	; 100
 a92:	11 f0       	breq	.+4      	; 0xa98 <vfprintf+0x1f0>
 a94:	89 36       	cpi	r24, 0x69	; 105
 a96:	39 f5       	brne	.+78     	; 0xae6 <vfprintf+0x23e>
 a98:	f8 01       	movw	r30, r16
 a9a:	37 fe       	sbrs	r3, 7
 a9c:	07 c0       	rjmp	.+14     	; 0xaac <vfprintf+0x204>
 a9e:	60 81       	ld	r22, Z
 aa0:	71 81       	ldd	r23, Z+1	; 0x01
 aa2:	82 81       	ldd	r24, Z+2	; 0x02
 aa4:	93 81       	ldd	r25, Z+3	; 0x03
 aa6:	0c 5f       	subi	r16, 0xFC	; 252
 aa8:	1f 4f       	sbci	r17, 0xFF	; 255
 aaa:	08 c0       	rjmp	.+16     	; 0xabc <vfprintf+0x214>
 aac:	60 81       	ld	r22, Z
 aae:	71 81       	ldd	r23, Z+1	; 0x01
 ab0:	07 2e       	mov	r0, r23
 ab2:	00 0c       	add	r0, r0
 ab4:	88 0b       	sbc	r24, r24
 ab6:	99 0b       	sbc	r25, r25
 ab8:	0e 5f       	subi	r16, 0xFE	; 254
 aba:	1f 4f       	sbci	r17, 0xFF	; 255
 abc:	f3 2d       	mov	r31, r3
 abe:	ff 76       	andi	r31, 0x6F	; 111
 ac0:	3f 2e       	mov	r3, r31
 ac2:	97 ff       	sbrs	r25, 7
 ac4:	09 c0       	rjmp	.+18     	; 0xad8 <vfprintf+0x230>
 ac6:	90 95       	com	r25
 ac8:	80 95       	com	r24
 aca:	70 95       	com	r23
 acc:	61 95       	neg	r22
 ace:	7f 4f       	sbci	r23, 0xFF	; 255
 ad0:	8f 4f       	sbci	r24, 0xFF	; 255
 ad2:	9f 4f       	sbci	r25, 0xFF	; 255
 ad4:	f0 68       	ori	r31, 0x80	; 128
 ad6:	3f 2e       	mov	r3, r31
 ad8:	2a e0       	ldi	r18, 0x0A	; 10
 ada:	30 e0       	ldi	r19, 0x00	; 0
 adc:	a3 01       	movw	r20, r6
 ade:	33 d1       	rcall	.+614    	; 0xd46 <__ultoa_invert>
 ae0:	88 2e       	mov	r8, r24
 ae2:	86 18       	sub	r8, r6
 ae4:	44 c0       	rjmp	.+136    	; 0xb6e <vfprintf+0x2c6>
 ae6:	85 37       	cpi	r24, 0x75	; 117
 ae8:	31 f4       	brne	.+12     	; 0xaf6 <vfprintf+0x24e>
 aea:	23 2d       	mov	r18, r3
 aec:	2f 7e       	andi	r18, 0xEF	; 239
 aee:	b2 2e       	mov	r11, r18
 af0:	2a e0       	ldi	r18, 0x0A	; 10
 af2:	30 e0       	ldi	r19, 0x00	; 0
 af4:	25 c0       	rjmp	.+74     	; 0xb40 <vfprintf+0x298>
 af6:	93 2d       	mov	r25, r3
 af8:	99 7f       	andi	r25, 0xF9	; 249
 afa:	b9 2e       	mov	r11, r25
 afc:	8f 36       	cpi	r24, 0x6F	; 111
 afe:	c1 f0       	breq	.+48     	; 0xb30 <vfprintf+0x288>
 b00:	18 f4       	brcc	.+6      	; 0xb08 <vfprintf+0x260>
 b02:	88 35       	cpi	r24, 0x58	; 88
 b04:	79 f0       	breq	.+30     	; 0xb24 <vfprintf+0x27c>
 b06:	ae c0       	rjmp	.+348    	; 0xc64 <vfprintf+0x3bc>
 b08:	80 37       	cpi	r24, 0x70	; 112
 b0a:	19 f0       	breq	.+6      	; 0xb12 <vfprintf+0x26a>
 b0c:	88 37       	cpi	r24, 0x78	; 120
 b0e:	21 f0       	breq	.+8      	; 0xb18 <vfprintf+0x270>
 b10:	a9 c0       	rjmp	.+338    	; 0xc64 <vfprintf+0x3bc>
 b12:	e9 2f       	mov	r30, r25
 b14:	e0 61       	ori	r30, 0x10	; 16
 b16:	be 2e       	mov	r11, r30
 b18:	b4 fe       	sbrs	r11, 4
 b1a:	0d c0       	rjmp	.+26     	; 0xb36 <vfprintf+0x28e>
 b1c:	fb 2d       	mov	r31, r11
 b1e:	f4 60       	ori	r31, 0x04	; 4
 b20:	bf 2e       	mov	r11, r31
 b22:	09 c0       	rjmp	.+18     	; 0xb36 <vfprintf+0x28e>
 b24:	34 fe       	sbrs	r3, 4
 b26:	0a c0       	rjmp	.+20     	; 0xb3c <vfprintf+0x294>
 b28:	29 2f       	mov	r18, r25
 b2a:	26 60       	ori	r18, 0x06	; 6
 b2c:	b2 2e       	mov	r11, r18
 b2e:	06 c0       	rjmp	.+12     	; 0xb3c <vfprintf+0x294>
 b30:	28 e0       	ldi	r18, 0x08	; 8
 b32:	30 e0       	ldi	r19, 0x00	; 0
 b34:	05 c0       	rjmp	.+10     	; 0xb40 <vfprintf+0x298>
 b36:	20 e1       	ldi	r18, 0x10	; 16
 b38:	30 e0       	ldi	r19, 0x00	; 0
 b3a:	02 c0       	rjmp	.+4      	; 0xb40 <vfprintf+0x298>
 b3c:	20 e1       	ldi	r18, 0x10	; 16
 b3e:	32 e0       	ldi	r19, 0x02	; 2
 b40:	f8 01       	movw	r30, r16
 b42:	b7 fe       	sbrs	r11, 7
 b44:	07 c0       	rjmp	.+14     	; 0xb54 <vfprintf+0x2ac>
 b46:	60 81       	ld	r22, Z
 b48:	71 81       	ldd	r23, Z+1	; 0x01
 b4a:	82 81       	ldd	r24, Z+2	; 0x02
 b4c:	93 81       	ldd	r25, Z+3	; 0x03
 b4e:	0c 5f       	subi	r16, 0xFC	; 252
 b50:	1f 4f       	sbci	r17, 0xFF	; 255
 b52:	06 c0       	rjmp	.+12     	; 0xb60 <vfprintf+0x2b8>
 b54:	60 81       	ld	r22, Z
 b56:	71 81       	ldd	r23, Z+1	; 0x01
 b58:	80 e0       	ldi	r24, 0x00	; 0
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	0e 5f       	subi	r16, 0xFE	; 254
 b5e:	1f 4f       	sbci	r17, 0xFF	; 255
 b60:	a3 01       	movw	r20, r6
 b62:	f1 d0       	rcall	.+482    	; 0xd46 <__ultoa_invert>
 b64:	88 2e       	mov	r8, r24
 b66:	86 18       	sub	r8, r6
 b68:	fb 2d       	mov	r31, r11
 b6a:	ff 77       	andi	r31, 0x7F	; 127
 b6c:	3f 2e       	mov	r3, r31
 b6e:	36 fe       	sbrs	r3, 6
 b70:	0d c0       	rjmp	.+26     	; 0xb8c <vfprintf+0x2e4>
 b72:	23 2d       	mov	r18, r3
 b74:	2e 7f       	andi	r18, 0xFE	; 254
 b76:	a2 2e       	mov	r10, r18
 b78:	89 14       	cp	r8, r9
 b7a:	58 f4       	brcc	.+22     	; 0xb92 <vfprintf+0x2ea>
 b7c:	34 fe       	sbrs	r3, 4
 b7e:	0b c0       	rjmp	.+22     	; 0xb96 <vfprintf+0x2ee>
 b80:	32 fc       	sbrc	r3, 2
 b82:	09 c0       	rjmp	.+18     	; 0xb96 <vfprintf+0x2ee>
 b84:	83 2d       	mov	r24, r3
 b86:	8e 7e       	andi	r24, 0xEE	; 238
 b88:	a8 2e       	mov	r10, r24
 b8a:	05 c0       	rjmp	.+10     	; 0xb96 <vfprintf+0x2ee>
 b8c:	b8 2c       	mov	r11, r8
 b8e:	a3 2c       	mov	r10, r3
 b90:	03 c0       	rjmp	.+6      	; 0xb98 <vfprintf+0x2f0>
 b92:	b8 2c       	mov	r11, r8
 b94:	01 c0       	rjmp	.+2      	; 0xb98 <vfprintf+0x2f0>
 b96:	b9 2c       	mov	r11, r9
 b98:	a4 fe       	sbrs	r10, 4
 b9a:	0f c0       	rjmp	.+30     	; 0xbba <vfprintf+0x312>
 b9c:	fe 01       	movw	r30, r28
 b9e:	e8 0d       	add	r30, r8
 ba0:	f1 1d       	adc	r31, r1
 ba2:	80 81       	ld	r24, Z
 ba4:	80 33       	cpi	r24, 0x30	; 48
 ba6:	21 f4       	brne	.+8      	; 0xbb0 <vfprintf+0x308>
 ba8:	9a 2d       	mov	r25, r10
 baa:	99 7e       	andi	r25, 0xE9	; 233
 bac:	a9 2e       	mov	r10, r25
 bae:	09 c0       	rjmp	.+18     	; 0xbc2 <vfprintf+0x31a>
 bb0:	a2 fe       	sbrs	r10, 2
 bb2:	06 c0       	rjmp	.+12     	; 0xbc0 <vfprintf+0x318>
 bb4:	b3 94       	inc	r11
 bb6:	b3 94       	inc	r11
 bb8:	04 c0       	rjmp	.+8      	; 0xbc2 <vfprintf+0x31a>
 bba:	8a 2d       	mov	r24, r10
 bbc:	86 78       	andi	r24, 0x86	; 134
 bbe:	09 f0       	breq	.+2      	; 0xbc2 <vfprintf+0x31a>
 bc0:	b3 94       	inc	r11
 bc2:	a3 fc       	sbrc	r10, 3
 bc4:	10 c0       	rjmp	.+32     	; 0xbe6 <vfprintf+0x33e>
 bc6:	a0 fe       	sbrs	r10, 0
 bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <vfprintf+0x32e>
 bca:	b2 14       	cp	r11, r2
 bcc:	80 f4       	brcc	.+32     	; 0xbee <vfprintf+0x346>
 bce:	28 0c       	add	r2, r8
 bd0:	92 2c       	mov	r9, r2
 bd2:	9b 18       	sub	r9, r11
 bd4:	0d c0       	rjmp	.+26     	; 0xbf0 <vfprintf+0x348>
 bd6:	b2 14       	cp	r11, r2
 bd8:	58 f4       	brcc	.+22     	; 0xbf0 <vfprintf+0x348>
 bda:	b6 01       	movw	r22, r12
 bdc:	80 e2       	ldi	r24, 0x20	; 32
 bde:	90 e0       	ldi	r25, 0x00	; 0
 be0:	76 d0       	rcall	.+236    	; 0xcce <fputc>
 be2:	b3 94       	inc	r11
 be4:	f8 cf       	rjmp	.-16     	; 0xbd6 <vfprintf+0x32e>
 be6:	b2 14       	cp	r11, r2
 be8:	18 f4       	brcc	.+6      	; 0xbf0 <vfprintf+0x348>
 bea:	2b 18       	sub	r2, r11
 bec:	02 c0       	rjmp	.+4      	; 0xbf2 <vfprintf+0x34a>
 bee:	98 2c       	mov	r9, r8
 bf0:	21 2c       	mov	r2, r1
 bf2:	a4 fe       	sbrs	r10, 4
 bf4:	0f c0       	rjmp	.+30     	; 0xc14 <vfprintf+0x36c>
 bf6:	b6 01       	movw	r22, r12
 bf8:	80 e3       	ldi	r24, 0x30	; 48
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	68 d0       	rcall	.+208    	; 0xcce <fputc>
 bfe:	a2 fe       	sbrs	r10, 2
 c00:	16 c0       	rjmp	.+44     	; 0xc2e <vfprintf+0x386>
 c02:	a1 fc       	sbrc	r10, 1
 c04:	03 c0       	rjmp	.+6      	; 0xc0c <vfprintf+0x364>
 c06:	88 e7       	ldi	r24, 0x78	; 120
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	02 c0       	rjmp	.+4      	; 0xc10 <vfprintf+0x368>
 c0c:	88 e5       	ldi	r24, 0x58	; 88
 c0e:	90 e0       	ldi	r25, 0x00	; 0
 c10:	b6 01       	movw	r22, r12
 c12:	0c c0       	rjmp	.+24     	; 0xc2c <vfprintf+0x384>
 c14:	8a 2d       	mov	r24, r10
 c16:	86 78       	andi	r24, 0x86	; 134
 c18:	51 f0       	breq	.+20     	; 0xc2e <vfprintf+0x386>
 c1a:	a1 fe       	sbrs	r10, 1
 c1c:	02 c0       	rjmp	.+4      	; 0xc22 <vfprintf+0x37a>
 c1e:	8b e2       	ldi	r24, 0x2B	; 43
 c20:	01 c0       	rjmp	.+2      	; 0xc24 <vfprintf+0x37c>
 c22:	80 e2       	ldi	r24, 0x20	; 32
 c24:	a7 fc       	sbrc	r10, 7
 c26:	8d e2       	ldi	r24, 0x2D	; 45
 c28:	b6 01       	movw	r22, r12
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	50 d0       	rcall	.+160    	; 0xcce <fputc>
 c2e:	89 14       	cp	r8, r9
 c30:	30 f4       	brcc	.+12     	; 0xc3e <vfprintf+0x396>
 c32:	b6 01       	movw	r22, r12
 c34:	80 e3       	ldi	r24, 0x30	; 48
 c36:	90 e0       	ldi	r25, 0x00	; 0
 c38:	4a d0       	rcall	.+148    	; 0xcce <fputc>
 c3a:	9a 94       	dec	r9
 c3c:	f8 cf       	rjmp	.-16     	; 0xc2e <vfprintf+0x386>
 c3e:	8a 94       	dec	r8
 c40:	f3 01       	movw	r30, r6
 c42:	e8 0d       	add	r30, r8
 c44:	f1 1d       	adc	r31, r1
 c46:	80 81       	ld	r24, Z
 c48:	b6 01       	movw	r22, r12
 c4a:	90 e0       	ldi	r25, 0x00	; 0
 c4c:	40 d0       	rcall	.+128    	; 0xcce <fputc>
 c4e:	81 10       	cpse	r8, r1
 c50:	f6 cf       	rjmp	.-20     	; 0xc3e <vfprintf+0x396>
 c52:	22 20       	and	r2, r2
 c54:	09 f4       	brne	.+2      	; 0xc58 <vfprintf+0x3b0>
 c56:	4e ce       	rjmp	.-868    	; 0x8f4 <vfprintf+0x4c>
 c58:	b6 01       	movw	r22, r12
 c5a:	80 e2       	ldi	r24, 0x20	; 32
 c5c:	90 e0       	ldi	r25, 0x00	; 0
 c5e:	37 d0       	rcall	.+110    	; 0xcce <fputc>
 c60:	2a 94       	dec	r2
 c62:	f7 cf       	rjmp	.-18     	; 0xc52 <vfprintf+0x3aa>
 c64:	f6 01       	movw	r30, r12
 c66:	86 81       	ldd	r24, Z+6	; 0x06
 c68:	97 81       	ldd	r25, Z+7	; 0x07
 c6a:	02 c0       	rjmp	.+4      	; 0xc70 <vfprintf+0x3c8>
 c6c:	8f ef       	ldi	r24, 0xFF	; 255
 c6e:	9f ef       	ldi	r25, 0xFF	; 255
 c70:	2b 96       	adiw	r28, 0x0b	; 11
 c72:	0f b6       	in	r0, 0x3f	; 63
 c74:	f8 94       	cli
 c76:	de bf       	out	0x3e, r29	; 62
 c78:	0f be       	out	0x3f, r0	; 63
 c7a:	cd bf       	out	0x3d, r28	; 61
 c7c:	df 91       	pop	r29
 c7e:	cf 91       	pop	r28
 c80:	1f 91       	pop	r17
 c82:	0f 91       	pop	r16
 c84:	ff 90       	pop	r15
 c86:	ef 90       	pop	r14
 c88:	df 90       	pop	r13
 c8a:	cf 90       	pop	r12
 c8c:	bf 90       	pop	r11
 c8e:	af 90       	pop	r10
 c90:	9f 90       	pop	r9
 c92:	8f 90       	pop	r8
 c94:	7f 90       	pop	r7
 c96:	6f 90       	pop	r6
 c98:	5f 90       	pop	r5
 c9a:	4f 90       	pop	r4
 c9c:	3f 90       	pop	r3
 c9e:	2f 90       	pop	r2
 ca0:	08 95       	ret

00000ca2 <strnlen_P>:
 ca2:	fc 01       	movw	r30, r24
 ca4:	05 90       	lpm	r0, Z+
 ca6:	61 50       	subi	r22, 0x01	; 1
 ca8:	70 40       	sbci	r23, 0x00	; 0
 caa:	01 10       	cpse	r0, r1
 cac:	d8 f7       	brcc	.-10     	; 0xca4 <strnlen_P+0x2>
 cae:	80 95       	com	r24
 cb0:	90 95       	com	r25
 cb2:	8e 0f       	add	r24, r30
 cb4:	9f 1f       	adc	r25, r31
 cb6:	08 95       	ret

00000cb8 <strnlen>:
 cb8:	fc 01       	movw	r30, r24
 cba:	61 50       	subi	r22, 0x01	; 1
 cbc:	70 40       	sbci	r23, 0x00	; 0
 cbe:	01 90       	ld	r0, Z+
 cc0:	01 10       	cpse	r0, r1
 cc2:	d8 f7       	brcc	.-10     	; 0xcba <strnlen+0x2>
 cc4:	80 95       	com	r24
 cc6:	90 95       	com	r25
 cc8:	8e 0f       	add	r24, r30
 cca:	9f 1f       	adc	r25, r31
 ccc:	08 95       	ret

00000cce <fputc>:
 cce:	0f 93       	push	r16
 cd0:	1f 93       	push	r17
 cd2:	cf 93       	push	r28
 cd4:	df 93       	push	r29
 cd6:	fb 01       	movw	r30, r22
 cd8:	23 81       	ldd	r18, Z+3	; 0x03
 cda:	21 fd       	sbrc	r18, 1
 cdc:	03 c0       	rjmp	.+6      	; 0xce4 <fputc+0x16>
 cde:	8f ef       	ldi	r24, 0xFF	; 255
 ce0:	9f ef       	ldi	r25, 0xFF	; 255
 ce2:	2c c0       	rjmp	.+88     	; 0xd3c <fputc+0x6e>
 ce4:	22 ff       	sbrs	r18, 2
 ce6:	16 c0       	rjmp	.+44     	; 0xd14 <fputc+0x46>
 ce8:	46 81       	ldd	r20, Z+6	; 0x06
 cea:	57 81       	ldd	r21, Z+7	; 0x07
 cec:	24 81       	ldd	r18, Z+4	; 0x04
 cee:	35 81       	ldd	r19, Z+5	; 0x05
 cf0:	42 17       	cp	r20, r18
 cf2:	53 07       	cpc	r21, r19
 cf4:	44 f4       	brge	.+16     	; 0xd06 <fputc+0x38>
 cf6:	a0 81       	ld	r26, Z
 cf8:	b1 81       	ldd	r27, Z+1	; 0x01
 cfa:	9d 01       	movw	r18, r26
 cfc:	2f 5f       	subi	r18, 0xFF	; 255
 cfe:	3f 4f       	sbci	r19, 0xFF	; 255
 d00:	31 83       	std	Z+1, r19	; 0x01
 d02:	20 83       	st	Z, r18
 d04:	8c 93       	st	X, r24
 d06:	26 81       	ldd	r18, Z+6	; 0x06
 d08:	37 81       	ldd	r19, Z+7	; 0x07
 d0a:	2f 5f       	subi	r18, 0xFF	; 255
 d0c:	3f 4f       	sbci	r19, 0xFF	; 255
 d0e:	37 83       	std	Z+7, r19	; 0x07
 d10:	26 83       	std	Z+6, r18	; 0x06
 d12:	14 c0       	rjmp	.+40     	; 0xd3c <fputc+0x6e>
 d14:	8b 01       	movw	r16, r22
 d16:	ec 01       	movw	r28, r24
 d18:	fb 01       	movw	r30, r22
 d1a:	00 84       	ldd	r0, Z+8	; 0x08
 d1c:	f1 85       	ldd	r31, Z+9	; 0x09
 d1e:	e0 2d       	mov	r30, r0
 d20:	19 95       	eicall
 d22:	89 2b       	or	r24, r25
 d24:	e1 f6       	brne	.-72     	; 0xcde <fputc+0x10>
 d26:	d8 01       	movw	r26, r16
 d28:	16 96       	adiw	r26, 0x06	; 6
 d2a:	8d 91       	ld	r24, X+
 d2c:	9c 91       	ld	r25, X
 d2e:	17 97       	sbiw	r26, 0x07	; 7
 d30:	01 96       	adiw	r24, 0x01	; 1
 d32:	17 96       	adiw	r26, 0x07	; 7
 d34:	9c 93       	st	X, r25
 d36:	8e 93       	st	-X, r24
 d38:	16 97       	sbiw	r26, 0x06	; 6
 d3a:	ce 01       	movw	r24, r28
 d3c:	df 91       	pop	r29
 d3e:	cf 91       	pop	r28
 d40:	1f 91       	pop	r17
 d42:	0f 91       	pop	r16
 d44:	08 95       	ret

00000d46 <__ultoa_invert>:
 d46:	fa 01       	movw	r30, r20
 d48:	aa 27       	eor	r26, r26
 d4a:	28 30       	cpi	r18, 0x08	; 8
 d4c:	51 f1       	breq	.+84     	; 0xda2 <__ultoa_invert+0x5c>
 d4e:	20 31       	cpi	r18, 0x10	; 16
 d50:	81 f1       	breq	.+96     	; 0xdb2 <__ultoa_invert+0x6c>
 d52:	e8 94       	clt
 d54:	6f 93       	push	r22
 d56:	6e 7f       	andi	r22, 0xFE	; 254
 d58:	6e 5f       	subi	r22, 0xFE	; 254
 d5a:	7f 4f       	sbci	r23, 0xFF	; 255
 d5c:	8f 4f       	sbci	r24, 0xFF	; 255
 d5e:	9f 4f       	sbci	r25, 0xFF	; 255
 d60:	af 4f       	sbci	r26, 0xFF	; 255
 d62:	b1 e0       	ldi	r27, 0x01	; 1
 d64:	3e d0       	rcall	.+124    	; 0xde2 <__ultoa_invert+0x9c>
 d66:	b4 e0       	ldi	r27, 0x04	; 4
 d68:	3c d0       	rcall	.+120    	; 0xde2 <__ultoa_invert+0x9c>
 d6a:	67 0f       	add	r22, r23
 d6c:	78 1f       	adc	r23, r24
 d6e:	89 1f       	adc	r24, r25
 d70:	9a 1f       	adc	r25, r26
 d72:	a1 1d       	adc	r26, r1
 d74:	68 0f       	add	r22, r24
 d76:	79 1f       	adc	r23, r25
 d78:	8a 1f       	adc	r24, r26
 d7a:	91 1d       	adc	r25, r1
 d7c:	a1 1d       	adc	r26, r1
 d7e:	6a 0f       	add	r22, r26
 d80:	71 1d       	adc	r23, r1
 d82:	81 1d       	adc	r24, r1
 d84:	91 1d       	adc	r25, r1
 d86:	a1 1d       	adc	r26, r1
 d88:	20 d0       	rcall	.+64     	; 0xdca <__ultoa_invert+0x84>
 d8a:	09 f4       	brne	.+2      	; 0xd8e <__ultoa_invert+0x48>
 d8c:	68 94       	set
 d8e:	3f 91       	pop	r19
 d90:	2a e0       	ldi	r18, 0x0A	; 10
 d92:	26 9f       	mul	r18, r22
 d94:	11 24       	eor	r1, r1
 d96:	30 19       	sub	r19, r0
 d98:	30 5d       	subi	r19, 0xD0	; 208
 d9a:	31 93       	st	Z+, r19
 d9c:	de f6       	brtc	.-74     	; 0xd54 <__ultoa_invert+0xe>
 d9e:	cf 01       	movw	r24, r30
 da0:	08 95       	ret
 da2:	46 2f       	mov	r20, r22
 da4:	47 70       	andi	r20, 0x07	; 7
 da6:	40 5d       	subi	r20, 0xD0	; 208
 da8:	41 93       	st	Z+, r20
 daa:	b3 e0       	ldi	r27, 0x03	; 3
 dac:	0f d0       	rcall	.+30     	; 0xdcc <__ultoa_invert+0x86>
 dae:	c9 f7       	brne	.-14     	; 0xda2 <__ultoa_invert+0x5c>
 db0:	f6 cf       	rjmp	.-20     	; 0xd9e <__ultoa_invert+0x58>
 db2:	46 2f       	mov	r20, r22
 db4:	4f 70       	andi	r20, 0x0F	; 15
 db6:	40 5d       	subi	r20, 0xD0	; 208
 db8:	4a 33       	cpi	r20, 0x3A	; 58
 dba:	18 f0       	brcs	.+6      	; 0xdc2 <__ultoa_invert+0x7c>
 dbc:	49 5d       	subi	r20, 0xD9	; 217
 dbe:	31 fd       	sbrc	r19, 1
 dc0:	40 52       	subi	r20, 0x20	; 32
 dc2:	41 93       	st	Z+, r20
 dc4:	02 d0       	rcall	.+4      	; 0xdca <__ultoa_invert+0x84>
 dc6:	a9 f7       	brne	.-22     	; 0xdb2 <__ultoa_invert+0x6c>
 dc8:	ea cf       	rjmp	.-44     	; 0xd9e <__ultoa_invert+0x58>
 dca:	b4 e0       	ldi	r27, 0x04	; 4
 dcc:	a6 95       	lsr	r26
 dce:	97 95       	ror	r25
 dd0:	87 95       	ror	r24
 dd2:	77 95       	ror	r23
 dd4:	67 95       	ror	r22
 dd6:	ba 95       	dec	r27
 dd8:	c9 f7       	brne	.-14     	; 0xdcc <__ultoa_invert+0x86>
 dda:	00 97       	sbiw	r24, 0x00	; 0
 ddc:	61 05       	cpc	r22, r1
 dde:	71 05       	cpc	r23, r1
 de0:	08 95       	ret
 de2:	9b 01       	movw	r18, r22
 de4:	ac 01       	movw	r20, r24
 de6:	0a 2e       	mov	r0, r26
 de8:	06 94       	lsr	r0
 dea:	57 95       	ror	r21
 dec:	47 95       	ror	r20
 dee:	37 95       	ror	r19
 df0:	27 95       	ror	r18
 df2:	ba 95       	dec	r27
 df4:	c9 f7       	brne	.-14     	; 0xde8 <__ultoa_invert+0xa2>
 df6:	62 0f       	add	r22, r18
 df8:	73 1f       	adc	r23, r19
 dfa:	84 1f       	adc	r24, r20
 dfc:	95 1f       	adc	r25, r21
 dfe:	a0 1d       	adc	r26, r0
 e00:	08 95       	ret

00000e02 <_exit>:
 e02:	f8 94       	cli

00000e04 <__stop_program>:
 e04:	ff cf       	rjmp	.-2      	; 0xe04 <__stop_program>
