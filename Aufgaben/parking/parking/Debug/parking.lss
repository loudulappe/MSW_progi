
parking.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000e7a  00000f0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e7a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000f82  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fe0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001020  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000267f  00000000  00000000  00001210  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fa4  00000000  00000000  0000388f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016f1  00000000  00000000  00004833  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  00005f24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d45  00000000  00000000  000065a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ec4  00000000  00000000  000072ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  000091b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	cf c3       	rjmp	.+1950   	; 0x7fc <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e7       	ldi	r30, 0x7A	; 122
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	aa c6       	rjmp	.+3412   	; 0xe76 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    uint8_t flightin=0;
    uint8_t flightout=0;
    uint8_t ledout=0;
    uint16_t blinktimer=0;
    
    initBoard(0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	04 d2       	rcall	.+1032   	; 0x530 <initBoard>
    uint8_t reqin=0;
    uint8_t reqout=0;
    uint8_t flightin=0;
    uint8_t flightout=0;
    uint8_t ledout=0;
    uint16_t blinktimer=0;
 128:	e1 2c       	mov	r14, r1
 12a:	f1 2c       	mov	r15, r1
    uint8_t lightout=0;
    uint8_t reqin=0;
    uint8_t reqout=0;
    uint8_t flightin=0;
    uint8_t flightout=0;
    uint8_t ledout=0;
 12c:	10 e0       	ldi	r17, 0x00	; 0
    typedef enum zustand_t {aus, betrieb, raus, rein}
        zustand_t;
    zustand_t zustand=aus;
    uint8_t besucheranzahl=0;
    uint8_t flagerr=0;
    uint8_t butin=0;
 12e:	c0 e0       	ldi	r28, 0x00	; 0
{
    typedef enum zustand_t {aus, betrieb, raus, rein}
        zustand_t;
    zustand_t zustand=aus;
    uint8_t besucheranzahl=0;
    uint8_t flagerr=0;
 130:	c1 2c       	mov	r12, r1
int main(void)
{
    typedef enum zustand_t {aus, betrieb, raus, rein}
        zustand_t;
    zustand_t zustand=aus;
    uint8_t besucheranzahl=0;
 132:	b1 2c       	mov	r11, r1
    
    initBoard(0);
    while (1) 
    {
        altbutin=butin;
        butin=buttonReadAllPL();
 134:	d1 2c       	mov	r13, r1
 136:	8a d0       	rcall	.+276    	; 0x24c <buttonReadAllPL>
 138:	d8 2f       	mov	r29, r24
        flank=altbutin^butin;
 13a:	8c 2f       	mov	r24, r28
 13c:	8d 27       	eor	r24, r29
        posflank=flank&butin;
 13e:	0d 2f       	mov	r16, r29
        negflank=flank&altbutin;
 140:	08 23       	and	r16, r24
        power=switchReadAll()&MASKPOWER;
 142:	c8 23       	and	r28, r24
 144:	81 d0       	rcall	.+258    	; 0x248 <switchReadAll>
        lightin=butin&MASKLIGHTIN;
 146:	2d 2f       	mov	r18, r29
 148:	22 70       	andi	r18, 0x02	; 2
        flightin=negflank&MASKLIGHTIN;
 14a:	9c 2f       	mov	r25, r28
 14c:	92 70       	andi	r25, 0x02	; 2
        lightout=butin&MASKLIGHTOUT;
 14e:	4d 2f       	mov	r20, r29
 150:	40 78       	andi	r20, 0x80	; 128
        flightout=negflank&MASKLIGHTOUT;
 152:	c0 78       	andi	r28, 0x80	; 128
        reqin=posflank&MASKREQIN;
 154:	50 2f       	mov	r21, r16
 156:	51 70       	andi	r21, 0x01	; 1
        reqout=posflank&MASKREQOUT;
 158:	00 74       	andi	r16, 0x40	; 64
        
        if (power)
 15a:	38 2f       	mov	r19, r24
 15c:	31 70       	andi	r19, 0x01	; 1
 15e:	80 ff       	sbrs	r24, 0
 160:	02 c0       	rjmp	.+4      	; 0x166 <main+0x42>
        {
            ledout=ledout|MASKPOWER;
 162:	11 60       	ori	r17, 0x01	; 1
 164:	02 c0       	rjmp	.+4      	; 0x16a <main+0x46>
        } 
        else
        {
            ledout=ledout&~MASKPOWER;
 166:	1e 7f       	andi	r17, 0xFE	; 254
            zustand=aus;
 168:	d1 2c       	mov	r13, r1
        }
        switch (zustand)
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	d8 16       	cp	r13, r24
 16e:	69 f0       	breq	.+26     	; 0x18a <main+0x66>
 170:	d8 16       	cp	r13, r24
 172:	38 f0       	brcs	.+14     	; 0x182 <main+0x5e>
 174:	82 e0       	ldi	r24, 0x02	; 2
 176:	d8 16       	cp	r13, r24
 178:	41 f1       	breq	.+80     	; 0x1ca <main+0xa6>
 17a:	83 e0       	ldi	r24, 0x03	; 3
 17c:	d8 16       	cp	r13, r24
 17e:	71 f1       	breq	.+92     	; 0x1dc <main+0xb8>
 180:	41 c0       	rjmp	.+130    	; 0x204 <main+0xe0>
        {
            case aus:
            ledout=0;
            if (power)
 182:	31 11       	cpse	r19, r1
 184:	32 c0       	rjmp	.+100    	; 0x1ea <main+0xc6>
            zustand=aus;
        }
        switch (zustand)
        {
            case aus:
            ledout=0;
 186:	10 e0       	ldi	r17, 0x00	; 0
 188:	3d c0       	rjmp	.+122    	; 0x204 <main+0xe0>
                flagerr=1;
            }
            break;
            
            case betrieb:
            if (!lightin&&!lightout)
 18a:	21 11       	cpse	r18, r1
 18c:	03 c0       	rjmp	.+6      	; 0x194 <main+0x70>
 18e:	41 11       	cpse	r20, r1
 190:	01 c0       	rjmp	.+2      	; 0x194 <main+0x70>
            {
                flagerr=0;
 192:	c1 2c       	mov	r12, r1
            }
            if (!flagerr)
 194:	c1 10       	cpse	r12, r1
 196:	36 c0       	rjmp	.+108    	; 0x204 <main+0xe0>
            {
                ledout=ledout|MASKGATEOUT|MASKGATEIN;
                if (besucheranzahl==10)
 198:	9a e0       	ldi	r25, 0x0A	; 10
 19a:	b9 12       	cpse	r11, r25
 19c:	03 c0       	rjmp	.+6      	; 0x1a4 <main+0x80>
 19e:	1f 7c       	andi	r17, 0xCF	; 207
                {
                    ledout=ledout|MASKRED;
                    ledout=ledout&~MASKYELLOW;
                    ledout=ledout&~MASKGREEN;
 1a0:	1c 64       	ori	r17, 0x4C	; 76
 1a2:	08 c0       	rjmp	.+16     	; 0x1b4 <main+0x90>
                }
                else
                {
                    if (besucheranzahl>8)
 1a4:	88 e0       	ldi	r24, 0x08	; 8
 1a6:	8b 15       	cp	r24, r11
 1a8:	18 f4       	brcc	.+6      	; 0x1b0 <main+0x8c>
 1aa:	1f 7a       	andi	r17, 0xAF	; 175
                    {
                        ledout=ledout&~MASKRED;
                        ledout=ledout|MASKYELLOW;
                        ledout=ledout&~MASKGREEN;
 1ac:	1c 62       	ori	r17, 0x2C	; 44
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <main+0x90>
 1b0:	1f 79       	andi	r17, 0x9F	; 159
                    }
                    else
                    {
                        ledout=ledout&~MASKRED;
                        ledout=ledout&~MASKYELLOW;
                        ledout=ledout|MASKGREEN;
 1b2:	1c 61       	ori	r17, 0x1C	; 28
                    }                     
                }
                if (reqout)
 1b4:	00 23       	and	r16, r16
 1b6:	19 f0       	breq	.+6      	; 0x1be <main+0x9a>
                {
                    zustand=raus;
 1b8:	68 94       	set
 1ba:	dd 24       	eor	r13, r13
 1bc:	d1 f8       	bld	r13, 1
                }
                if ((besucheranzahl<10)&&reqin)
 1be:	99 e0       	ldi	r25, 0x09	; 9
 1c0:	9b 15       	cp	r25, r11
 1c2:	00 f1       	brcs	.+64     	; 0x204 <main+0xe0>
 1c4:	51 11       	cpse	r21, r1
 1c6:	17 c0       	rjmp	.+46     	; 0x1f6 <main+0xd2>
 1c8:	1d c0       	rjmp	.+58     	; 0x204 <main+0xe0>
                }
            }
            break;
            
            case raus:
            ledout=ledout&~MASKGATEOUT;
 1ca:	17 7f       	andi	r17, 0xF7	; 247
            if (flightout)
 1cc:	cc 23       	and	r28, r28
 1ce:	d1 f0       	breq	.+52     	; 0x204 <main+0xe0>
            {
                zustand=betrieb;
                if (besucheranzahl)
 1d0:	bb 20       	and	r11, r11
 1d2:	b1 f0       	breq	.+44     	; 0x200 <main+0xdc>
                {
                    besucheranzahl=besucheranzahl-1;
 1d4:	ba 94       	dec	r11
            
            case raus:
            ledout=ledout&~MASKGATEOUT;
            if (flightout)
            {
                zustand=betrieb;
 1d6:	dd 24       	eor	r13, r13
 1d8:	d3 94       	inc	r13
 1da:	14 c0       	rjmp	.+40     	; 0x204 <main+0xe0>
                }
            }
            break;
            
            case rein:
            ledout=ledout&~MASKGATEIN;
 1dc:	1b 7f       	andi	r17, 0xFB	; 251
            if (flightin)
 1de:	99 23       	and	r25, r25
 1e0:	89 f0       	breq	.+34     	; 0x204 <main+0xe0>
            {
                zustand=betrieb;
                besucheranzahl=besucheranzahl+1;
 1e2:	b3 94       	inc	r11
            
            case rein:
            ledout=ledout&~MASKGATEIN;
            if (flightin)
            {
                zustand=betrieb;
 1e4:	dd 24       	eor	r13, r13
 1e6:	d3 94       	inc	r13
 1e8:	0d c0       	rjmp	.+26     	; 0x204 <main+0xe0>
            zustand=aus;
        }
        switch (zustand)
        {
            case aus:
            ledout=0;
 1ea:	10 e0       	ldi	r17, 0x00	; 0
            if (power)
            {
                zustand=betrieb;
                flagerr=1;
 1ec:	cc 24       	eor	r12, r12
 1ee:	c3 94       	inc	r12
        {
            case aus:
            ledout=0;
            if (power)
            {
                zustand=betrieb;
 1f0:	dd 24       	eor	r13, r13
 1f2:	d3 94       	inc	r13
 1f4:	07 c0       	rjmp	.+14     	; 0x204 <main+0xe0>
                {
                    zustand=raus;
                }
                if ((besucheranzahl<10)&&reqin)
                {
                    zustand=rein;
 1f6:	0f 2e       	mov	r0, r31
 1f8:	f3 e0       	ldi	r31, 0x03	; 3
 1fa:	df 2e       	mov	r13, r31
 1fc:	f0 2d       	mov	r31, r0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <main+0xe0>
            
            case raus:
            ledout=ledout&~MASKGATEOUT;
            if (flightout)
            {
                zustand=betrieb;
 200:	dd 24       	eor	r13, r13
 202:	d3 94       	inc	r13
                zustand=betrieb;
                besucheranzahl=besucheranzahl+1;
            }
            break;
        }
        if (flagerr)
 204:	cc 20       	and	r12, r12
 206:	69 f0       	breq	.+26     	; 0x222 <main+0xfe>
        {
            if (blinktimer>BLINKPERIODE)
 208:	89 ee       	ldi	r24, 0xE9	; 233
 20a:	e8 16       	cp	r14, r24
 20c:	83 e0       	ldi	r24, 0x03	; 3
 20e:	f8 06       	cpc	r15, r24
 210:	10 f0       	brcs	.+4      	; 0x216 <main+0xf2>
            {
                blinktimer=0;
 212:	e1 2c       	mov	r14, r1
 214:	f1 2c       	mov	r15, r1
            }
            if (blinktimer>(BLINKPERIODE/4))
 216:	9b ef       	ldi	r25, 0xFB	; 251
 218:	e9 16       	cp	r14, r25
 21a:	f1 04       	cpc	r15, r1
 21c:	20 f0       	brcs	.+8      	; 0x226 <main+0x102>
            {
                ledout=ledout&~MASKPOWER;
 21e:	1e 7f       	andi	r17, 0xFE	; 254
 220:	02 c0       	rjmp	.+4      	; 0x226 <main+0x102>
            }
        }
        else
        {
            blinktimer=0;
 222:	e1 2c       	mov	r14, r1
        }
        ledWriteAll(ledout);
 224:	f1 2c       	mov	r15, r1
 226:	81 2f       	mov	r24, r17
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	0b d0       	rcall	.+22     	; 0x242 <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 22c:	8f e3       	ldi	r24, 0x3F	; 63
 22e:	9c e9       	ldi	r25, 0x9C	; 156
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <main+0x10c>
 234:	00 c0       	rjmp	.+0      	; 0x236 <main+0x112>
 236:	00 00       	nop
        _delay_ms(SYSTEMTAKT);
        blinktimer=blinktimer+SYSTEMTAKT;
 238:	9a e0       	ldi	r25, 0x0A	; 10
 23a:	e9 0e       	add	r14, r25
 23c:	f1 1c       	adc	r15, r1
    
    initBoard(0);
    while (1) 
    {
        altbutin=butin;
        butin=buttonReadAllPL();
 23e:	cd 2f       	mov	r28, r29
            blinktimer=0;
        }
        ledWriteAll(ledout);
        _delay_ms(SYSTEMTAKT);
        blinktimer=blinktimer+SYSTEMTAKT;
    }
 240:	7a cf       	rjmp	.-268    	; 0x136 <main+0x12>

00000242 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 242:	82 b9       	out	0x02, r24	; 2
 244:	95 b9       	out	0x05, r25	; 5
 246:	08 95       	ret

00000248 <switchReadAll>:
 248:	86 b1       	in	r24, 0x06	; 6
 24a:	08 95       	ret

0000024c <buttonReadAllPL>:
 24c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 250:	08 95       	ret

00000252 <startSystemTimeMs>:
 252:	83 e0       	ldi	r24, 0x03	; 3
 254:	84 bd       	out	0x24, r24	; 36
 256:	8b e0       	ldi	r24, 0x0B	; 11
 258:	85 bd       	out	0x25, r24	; 37
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 260:	89 ef       	ldi	r24, 0xF9	; 249
 262:	87 bd       	out	0x27, r24	; 39
 264:	08 95       	ret

00000266 <initAdc>:
 266:	11 ba       	out	0x11, r1	; 17
 268:	10 ba       	out	0x10, r1	; 16
 26a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 26e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 272:	80 e4       	ldi	r24, 0x40	; 64
 274:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 278:	8f e0       	ldi	r24, 0x0F	; 15
 27a:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 284:	ea e7       	ldi	r30, 0x7A	; 122
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	87 ea       	ldi	r24, 0xA7	; 167
 28a:	80 83       	st	Z, r24
 28c:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 290:	80 81       	ld	r24, Z
 292:	80 64       	ori	r24, 0x40	; 64
 294:	80 83       	st	Z, r24
 296:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 29a:	84 ff       	sbrs	r24, 4
 29c:	fc cf       	rjmp	.-8      	; 0x296 <initAdc+0x30>
 29e:	ea e7       	ldi	r30, 0x7A	; 122
 2a0:	f0 e0       	ldi	r31, 0x00	; 0
 2a2:	80 81       	ld	r24, Z
 2a4:	8f 7e       	andi	r24, 0xEF	; 239
 2a6:	80 83       	st	Z, r24
 2a8:	08 95       	ret

000002aa <rgbWrite>:
 2aa:	2f ef       	ldi	r18, 0xFF	; 255
 2ac:	33 e0       	ldi	r19, 0x03	; 3
 2ae:	f9 01       	movw	r30, r18
 2b0:	e8 1b       	sub	r30, r24
 2b2:	f9 0b       	sbc	r31, r25
 2b4:	c9 01       	movw	r24, r18
 2b6:	86 1b       	sub	r24, r22
 2b8:	97 0b       	sbc	r25, r23
 2ba:	24 1b       	sub	r18, r20
 2bc:	35 0b       	sbc	r19, r21
 2be:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 2c2:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 2c6:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 2ca:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 2ce:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 2d2:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 2d6:	08 95       	ret

000002d8 <initRgb>:
 2d8:	8e ef       	ldi	r24, 0xFE	; 254
 2da:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 2de:	8b e1       	ldi	r24, 0x1B	; 27
 2e0:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 2e4:	83 e0       	ldi	r24, 0x03	; 3
 2e6:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 2ea:	8f ef       	ldi	r24, 0xFF	; 255
 2ec:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 2f0:	40 e0       	ldi	r20, 0x00	; 0
 2f2:	50 e0       	ldi	r21, 0x00	; 0
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	d6 cf       	rjmp	.-84     	; 0x2aa <rgbWrite>
 2fe:	08 95       	ret

00000300 <lcdSid>:
 300:	88 23       	and	r24, r24
 302:	21 f0       	breq	.+8      	; 0x30c <lcdSid+0xc>
 304:	84 b3       	in	r24, 0x14	; 20
 306:	81 60       	ori	r24, 0x01	; 1
 308:	84 bb       	out	0x14, r24	; 20
 30a:	08 95       	ret
 30c:	84 b3       	in	r24, 0x14	; 20
 30e:	8e 7f       	andi	r24, 0xFE	; 254
 310:	84 bb       	out	0x14, r24	; 20
 312:	08 95       	ret

00000314 <lcdSclk>:
 314:	88 23       	and	r24, r24
 316:	21 f0       	breq	.+8      	; 0x320 <lcdSclk+0xc>
 318:	84 b3       	in	r24, 0x14	; 20
 31a:	82 60       	ori	r24, 0x02	; 2
 31c:	84 bb       	out	0x14, r24	; 20
 31e:	08 95       	ret
 320:	84 b3       	in	r24, 0x14	; 20
 322:	8d 7f       	andi	r24, 0xFD	; 253
 324:	84 bb       	out	0x14, r24	; 20
 326:	08 95       	ret

00000328 <lcdLight>:
 328:	81 11       	cpse	r24, r1
 32a:	04 c0       	rjmp	.+8      	; 0x334 <lcdLight+0xc>
 32c:	84 b5       	in	r24, 0x24	; 36
 32e:	8f 7d       	andi	r24, 0xDF	; 223
 330:	84 bd       	out	0x24, r24	; 36
 332:	08 95       	ret
 334:	94 b5       	in	r25, 0x24	; 36
 336:	90 62       	ori	r25, 0x20	; 32
 338:	94 bd       	out	0x24, r25	; 36
 33a:	88 bd       	out	0x28, r24	; 40
 33c:	08 95       	ret

0000033e <writeLcdF>:
 33e:	ef 92       	push	r14
 340:	ff 92       	push	r15
 342:	0f 93       	push	r16
 344:	1f 93       	push	r17
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	7c 01       	movw	r14, r24
 34c:	eb 01       	movw	r28, r22
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	d7 df       	rcall	.-82     	; 0x300 <lcdSid>
 352:	00 e0       	ldi	r16, 0x00	; 0
 354:	10 e0       	ldi	r17, 0x00	; 0
 356:	06 c0       	rjmp	.+12     	; 0x364 <writeLcdF+0x26>
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	dc df       	rcall	.-72     	; 0x314 <lcdSclk>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	da df       	rcall	.-76     	; 0x314 <lcdSclk>
 360:	0f 5f       	subi	r16, 0xFF	; 255
 362:	1f 4f       	sbci	r17, 0xFF	; 255
 364:	05 30       	cpi	r16, 0x05	; 5
 366:	11 05       	cpc	r17, r1
 368:	b8 f3       	brcs	.-18     	; 0x358 <writeLcdF+0x1a>
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	c9 df       	rcall	.-110    	; 0x300 <lcdSid>
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	d1 df       	rcall	.-94     	; 0x314 <lcdSclk>
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	cf df       	rcall	.-98     	; 0x314 <lcdSclk>
 376:	83 e4       	ldi	r24, 0x43	; 67
 378:	e8 16       	cp	r14, r24
 37a:	f1 04       	cpc	r15, r1
 37c:	19 f4       	brne	.+6      	; 0x384 <writeLcdF+0x46>
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	bf df       	rcall	.-130    	; 0x300 <lcdSid>
 382:	02 c0       	rjmp	.+4      	; 0x388 <writeLcdF+0x4a>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	bc df       	rcall	.-136    	; 0x300 <lcdSid>
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	c4 df       	rcall	.-120    	; 0x314 <lcdSclk>
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	c2 df       	rcall	.-124    	; 0x314 <lcdSclk>
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	b6 df       	rcall	.-148    	; 0x300 <lcdSid>
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	be df       	rcall	.-132    	; 0x314 <lcdSclk>
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	bc df       	rcall	.-136    	; 0x314 <lcdSclk>
 39c:	00 e0       	ldi	r16, 0x00	; 0
 39e:	10 e0       	ldi	r17, 0x00	; 0
 3a0:	11 c0       	rjmp	.+34     	; 0x3c4 <writeLcdF+0x86>
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	b7 df       	rcall	.-146    	; 0x314 <lcdSclk>
 3a6:	c0 ff       	sbrs	r28, 0
 3a8:	03 c0       	rjmp	.+6      	; 0x3b0 <writeLcdF+0x72>
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	a9 df       	rcall	.-174    	; 0x300 <lcdSid>
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <writeLcdF+0x76>
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	a6 df       	rcall	.-180    	; 0x300 <lcdSid>
 3b4:	d6 95       	lsr	r29
 3b6:	c7 95       	ror	r28
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	ac df       	rcall	.-168    	; 0x314 <lcdSclk>
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	aa df       	rcall	.-172    	; 0x314 <lcdSclk>
 3c0:	0f 5f       	subi	r16, 0xFF	; 255
 3c2:	1f 4f       	sbci	r17, 0xFF	; 255
 3c4:	04 30       	cpi	r16, 0x04	; 4
 3c6:	11 05       	cpc	r17, r1
 3c8:	60 f3       	brcs	.-40     	; 0x3a2 <writeLcdF+0x64>
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	99 df       	rcall	.-206    	; 0x300 <lcdSid>
 3ce:	00 e0       	ldi	r16, 0x00	; 0
 3d0:	10 e0       	ldi	r17, 0x00	; 0
 3d2:	06 c0       	rjmp	.+12     	; 0x3e0 <writeLcdF+0xa2>
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	9e df       	rcall	.-196    	; 0x314 <lcdSclk>
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	9c df       	rcall	.-200    	; 0x314 <lcdSclk>
 3dc:	0f 5f       	subi	r16, 0xFF	; 255
 3de:	1f 4f       	sbci	r17, 0xFF	; 255
 3e0:	04 30       	cpi	r16, 0x04	; 4
 3e2:	11 05       	cpc	r17, r1
 3e4:	b8 f3       	brcs	.-18     	; 0x3d4 <writeLcdF+0x96>
 3e6:	00 e0       	ldi	r16, 0x00	; 0
 3e8:	10 e0       	ldi	r17, 0x00	; 0
 3ea:	11 c0       	rjmp	.+34     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	92 df       	rcall	.-220    	; 0x314 <lcdSclk>
 3f0:	c0 ff       	sbrs	r28, 0
 3f2:	03 c0       	rjmp	.+6      	; 0x3fa <writeLcdF+0xbc>
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	84 df       	rcall	.-248    	; 0x300 <lcdSid>
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <writeLcdF+0xc0>
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	81 df       	rcall	.-254    	; 0x300 <lcdSid>
 3fe:	d6 95       	lsr	r29
 400:	c7 95       	ror	r28
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	87 df       	rcall	.-242    	; 0x314 <lcdSclk>
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	85 df       	rcall	.-246    	; 0x314 <lcdSclk>
 40a:	0f 5f       	subi	r16, 0xFF	; 255
 40c:	1f 4f       	sbci	r17, 0xFF	; 255
 40e:	04 30       	cpi	r16, 0x04	; 4
 410:	11 05       	cpc	r17, r1
 412:	60 f3       	brcs	.-40     	; 0x3ec <writeLcdF+0xae>
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	74 df       	rcall	.-280    	; 0x300 <lcdSid>
 418:	c0 e0       	ldi	r28, 0x00	; 0
 41a:	d0 e0       	ldi	r29, 0x00	; 0
 41c:	05 c0       	rjmp	.+10     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	79 df       	rcall	.-270    	; 0x314 <lcdSclk>
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	77 df       	rcall	.-274    	; 0x314 <lcdSclk>
 426:	21 96       	adiw	r28, 0x01	; 1
 428:	c4 30       	cpi	r28, 0x04	; 4
 42a:	d1 05       	cpc	r29, r1
 42c:	c0 f3       	brcs	.-16     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	67 df       	rcall	.-306    	; 0x300 <lcdSid>
 432:	87 ec       	ldi	r24, 0xC7	; 199
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	01 97       	sbiw	r24, 0x01	; 1
 438:	f1 f7       	brne	.-4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 43c:	00 00       	nop
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	1f 91       	pop	r17
 444:	0f 91       	pop	r16
 446:	ff 90       	pop	r15
 448:	ef 90       	pop	r14
 44a:	08 95       	ret

0000044c <lcdWriteText>:
 44c:	1f 93       	push	r17
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	cd b7       	in	r28, 0x3d	; 61
 454:	de b7       	in	r29, 0x3e	; 62
 456:	65 97       	sbiw	r28, 0x15	; 21
 458:	0f b6       	in	r0, 0x3f	; 63
 45a:	f8 94       	cli
 45c:	de bf       	out	0x3e, r29	; 62
 45e:	0f be       	out	0x3f, r0	; 63
 460:	cd bf       	out	0x3d, r28	; 61
 462:	9e 01       	movw	r18, r28
 464:	20 5e       	subi	r18, 0xE0	; 224
 466:	3f 4f       	sbci	r19, 0xFF	; 255
 468:	4e 8d       	ldd	r20, Y+30	; 0x1e
 46a:	5f 8d       	ldd	r21, Y+31	; 0x1f
 46c:	65 e1       	ldi	r22, 0x15	; 21
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	ce 01       	movw	r24, r28
 472:	01 96       	adiw	r24, 0x01	; 1
 474:	1b d2       	rcall	.+1078   	; 0x8ac <vsnprintf>
 476:	6d 8d       	ldd	r22, Y+29	; 0x1d
 478:	8c 8d       	ldd	r24, Y+28	; 0x1c
 47a:	90 e2       	ldi	r25, 0x20	; 32
 47c:	89 9f       	mul	r24, r25
 47e:	60 0d       	add	r22, r0
 480:	11 24       	eor	r1, r1
 482:	60 68       	ori	r22, 0x80	; 128
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	83 e4       	ldi	r24, 0x43	; 67
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	59 df       	rcall	.-334    	; 0x33e <writeLcdF>
 48c:	10 e0       	ldi	r17, 0x00	; 0
 48e:	05 c0       	rjmp	.+10     	; 0x49a <lcdWriteText+0x4e>
 490:	1f 5f       	subi	r17, 0xFF	; 255
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	84 e4       	ldi	r24, 0x44	; 68
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	52 df       	rcall	.-348    	; 0x33e <writeLcdF>
 49a:	e1 e0       	ldi	r30, 0x01	; 1
 49c:	f0 e0       	ldi	r31, 0x00	; 0
 49e:	ec 0f       	add	r30, r28
 4a0:	fd 1f       	adc	r31, r29
 4a2:	e1 0f       	add	r30, r17
 4a4:	f1 1d       	adc	r31, r1
 4a6:	60 81       	ld	r22, Z
 4a8:	61 11       	cpse	r22, r1
 4aa:	f2 cf       	rjmp	.-28     	; 0x490 <lcdWriteText+0x44>
 4ac:	65 96       	adiw	r28, 0x15	; 21
 4ae:	0f b6       	in	r0, 0x3f	; 63
 4b0:	f8 94       	cli
 4b2:	de bf       	out	0x3e, r29	; 62
 4b4:	0f be       	out	0x3f, r0	; 63
 4b6:	cd bf       	out	0x3d, r28	; 61
 4b8:	df 91       	pop	r29
 4ba:	cf 91       	pop	r28
 4bc:	1f 91       	pop	r17
 4be:	08 95       	ret

000004c0 <lcdClear>:
 4c0:	61 e0       	ldi	r22, 0x01	; 1
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	83 e4       	ldi	r24, 0x43	; 67
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	3a df       	rcall	.-396    	; 0x33e <writeLcdF>
 4ca:	8f e3       	ldi	r24, 0x3F	; 63
 4cc:	9f e1       	ldi	r25, 0x1F	; 31
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <lcdClear+0xe>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <lcdClear+0x14>
 4d4:	00 00       	nop
 4d6:	80 e3       	ldi	r24, 0x30	; 48
 4d8:	92 e0       	ldi	r25, 0x02	; 2
 4da:	9f 93       	push	r25
 4dc:	8f 93       	push	r24
 4de:	1f 92       	push	r1
 4e0:	1f 92       	push	r1
 4e2:	b4 df       	rcall	.-152    	; 0x44c <lcdWriteText>
 4e4:	0f 90       	pop	r0
 4e6:	0f 90       	pop	r0
 4e8:	0f 90       	pop	r0
 4ea:	0f 90       	pop	r0
 4ec:	08 95       	ret

000004ee <initLcd>:
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	11 df       	rcall	.-478    	; 0x314 <lcdSclk>
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	05 df       	rcall	.-502    	; 0x300 <lcdSid>
 4f6:	64 e3       	ldi	r22, 0x34	; 52
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	83 e4       	ldi	r24, 0x43	; 67
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	1f df       	rcall	.-450    	; 0x33e <writeLcdF>
 500:	69 e0       	ldi	r22, 0x09	; 9
 502:	70 e0       	ldi	r23, 0x00	; 0
 504:	83 e4       	ldi	r24, 0x43	; 67
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	1a df       	rcall	.-460    	; 0x33e <writeLcdF>
 50a:	60 e3       	ldi	r22, 0x30	; 48
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	83 e4       	ldi	r24, 0x43	; 67
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	15 df       	rcall	.-470    	; 0x33e <writeLcdF>
 514:	6c e0       	ldi	r22, 0x0C	; 12
 516:	70 e0       	ldi	r23, 0x00	; 0
 518:	83 e4       	ldi	r24, 0x43	; 67
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	10 df       	rcall	.-480    	; 0x33e <writeLcdF>
 51e:	d0 df       	rcall	.-96     	; 0x4c0 <lcdClear>
 520:	67 e0       	ldi	r22, 0x07	; 7
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	83 e4       	ldi	r24, 0x43	; 67
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	0a df       	rcall	.-492    	; 0x33e <writeLcdF>
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	fd ce       	rjmp	.-518    	; 0x328 <lcdLight>
 52e:	08 95       	ret

00000530 <initBoard>:
 530:	ff 92       	push	r15
 532:	0f 93       	push	r16
 534:	1f 93       	push	r17
 536:	cf 93       	push	r28
 538:	df 93       	push	r29
 53a:	c8 2f       	mov	r28, r24
 53c:	85 b7       	in	r24, 0x35	; 53
 53e:	85 bf       	out	0x35, r24	; 53
 540:	12 b8       	out	0x02, r1	; 2
 542:	8f ef       	ldi	r24, 0xFF	; 255
 544:	81 b9       	out	0x01, r24	; 1
 546:	15 b8       	out	0x05, r1	; 5
 548:	84 b9       	out	0x04, r24	; 4
 54a:	88 b9       	out	0x08, r24	; 8
 54c:	17 b8       	out	0x07, r1	; 7
 54e:	8b b9       	out	0x0b, r24	; 11
 550:	1a b8       	out	0x0a, r1	; 10
 552:	8e b9       	out	0x0e, r24	; 14
 554:	1d b8       	out	0x0d, r1	; 13
 556:	9e b1       	in	r25, 0x0e	; 14
 558:	9b 7f       	andi	r25, 0xFB	; 251
 55a:	9e b9       	out	0x0e, r25	; 14
 55c:	11 ba       	out	0x11, r1	; 17
 55e:	10 ba       	out	0x10, r1	; 16
 560:	94 e0       	ldi	r25, 0x04	; 4
 562:	94 bb       	out	0x14, r25	; 20
 564:	93 b3       	in	r25, 0x13	; 19
 566:	93 60       	ori	r25, 0x03	; 3
 568:	93 bb       	out	0x13, r25	; 19
 56a:	93 b3       	in	r25, 0x13	; 19
 56c:	90 62       	ori	r25, 0x20	; 32
 56e:	93 bb       	out	0x13, r25	; 19
 570:	97 ec       	ldi	r25, 0xC7	; 199
 572:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 576:	98 e3       	ldi	r25, 0x38	; 56
 578:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 57c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 580:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 584:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 588:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 58c:	8c e3       	ldi	r24, 0x3C	; 60
 58e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 592:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 596:	78 94       	sei
 598:	5c de       	rcall	.-840    	; 0x252 <startSystemTimeMs>
 59a:	a9 df       	rcall	.-174    	; 0x4ee <initLcd>
 59c:	64 de       	rcall	.-824    	; 0x266 <initAdc>
 59e:	9c de       	rcall	.-712    	; 0x2d8 <initRgb>
 5a0:	cc 23       	and	r28, r28
 5a2:	09 f4       	brne	.+2      	; 0x5a6 <initBoard+0x76>
 5a4:	a3 c0       	rjmp	.+326    	; 0x6ec <initBoard+0x1bc>
 5a6:	8f ef       	ldi	r24, 0xFF	; 255
 5a8:	bf de       	rcall	.-642    	; 0x328 <lcdLight>
 5aa:	40 e0       	ldi	r20, 0x00	; 0
 5ac:	50 e0       	ldi	r21, 0x00	; 0
 5ae:	6f ef       	ldi	r22, 0xFF	; 255
 5b0:	73 e0       	ldi	r23, 0x03	; 3
 5b2:	80 e0       	ldi	r24, 0x00	; 0
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	79 de       	rcall	.-782    	; 0x2aa <rgbWrite>
 5b8:	8d e1       	ldi	r24, 0x1D	; 29
 5ba:	92 e0       	ldi	r25, 0x02	; 2
 5bc:	9f 93       	push	r25
 5be:	8f 93       	push	r24
 5c0:	1f 92       	push	r1
 5c2:	1f 92       	push	r1
 5c4:	43 df       	rcall	.-378    	; 0x44c <lcdWriteText>
 5c6:	82 e3       	ldi	r24, 0x32	; 50
 5c8:	92 e0       	ldi	r25, 0x02	; 2
 5ca:	9f 93       	push	r25
 5cc:	8f 93       	push	r24
 5ce:	1f 92       	push	r1
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	8f 93       	push	r24
 5d4:	3b df       	rcall	.-394    	; 0x44c <lcdWriteText>
 5d6:	88 e0       	ldi	r24, 0x08	; 8
 5d8:	92 e0       	ldi	r25, 0x02	; 2
 5da:	9f 93       	push	r25
 5dc:	8f 93       	push	r24
 5de:	1f 92       	push	r1
 5e0:	82 e0       	ldi	r24, 0x02	; 2
 5e2:	8f 93       	push	r24
 5e4:	33 df       	rcall	.-410    	; 0x44c <lcdWriteText>
 5e6:	87 e4       	ldi	r24, 0x47	; 71
 5e8:	92 e0       	ldi	r25, 0x02	; 2
 5ea:	9f 93       	push	r25
 5ec:	8f 93       	push	r24
 5ee:	1f 92       	push	r1
 5f0:	83 e0       	ldi	r24, 0x03	; 3
 5f2:	8f 93       	push	r24
 5f4:	2b df       	rcall	.-426    	; 0x44c <lcdWriteText>
 5f6:	8d b7       	in	r24, 0x3d	; 61
 5f8:	9e b7       	in	r25, 0x3e	; 62
 5fa:	40 96       	adiw	r24, 0x10	; 16
 5fc:	0f b6       	in	r0, 0x3f	; 63
 5fe:	f8 94       	cli
 600:	9e bf       	out	0x3e, r25	; 62
 602:	0f be       	out	0x3f, r0	; 63
 604:	8d bf       	out	0x3d, r24	; 61
 606:	ff 24       	eor	r15, r15
 608:	f3 94       	inc	r15
 60a:	c0 e0       	ldi	r28, 0x00	; 0
 60c:	10 e0       	ldi	r17, 0x00	; 0
 60e:	01 e0       	ldi	r16, 0x01	; 1
 610:	d0 e0       	ldi	r29, 0x00	; 0
 612:	00 23       	and	r16, r16
 614:	51 f0       	breq	.+20     	; 0x62a <initBoard+0xfa>
 616:	80 e0       	ldi	r24, 0x00	; 0
 618:	90 e8       	ldi	r25, 0x80	; 128
 61a:	0d 2e       	mov	r0, r29
 61c:	02 c0       	rjmp	.+4      	; 0x622 <initBoard+0xf2>
 61e:	96 95       	lsr	r25
 620:	87 95       	ror	r24
 622:	0a 94       	dec	r0
 624:	e2 f7       	brpl	.-8      	; 0x61e <initBoard+0xee>
 626:	0d de       	rcall	.-998    	; 0x242 <ledWriteAll>
 628:	09 c0       	rjmp	.+18     	; 0x63c <initBoard+0x10c>
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0d 2e       	mov	r0, r29
 630:	02 c0       	rjmp	.+4      	; 0x636 <initBoard+0x106>
 632:	88 0f       	add	r24, r24
 634:	99 1f       	adc	r25, r25
 636:	0a 94       	dec	r0
 638:	e2 f7       	brpl	.-8      	; 0x632 <initBoard+0x102>
 63a:	03 de       	rcall	.-1018   	; 0x242 <ledWriteAll>
 63c:	df 5f       	subi	r29, 0xFF	; 255
 63e:	d1 31       	cpi	r29, 0x11	; 17
 640:	28 f0       	brcs	.+10     	; 0x64c <initBoard+0x11c>
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	01 11       	cpse	r16, r1
 646:	80 e0       	ldi	r24, 0x00	; 0
 648:	08 2f       	mov	r16, r24
 64a:	d0 e0       	ldi	r29, 0x00	; 0
 64c:	ff 20       	and	r15, r15
 64e:	11 f0       	breq	.+4      	; 0x654 <initBoard+0x124>
 650:	ce 5f       	subi	r28, 0xFE	; 254
 652:	01 c0       	rjmp	.+2      	; 0x656 <initBoard+0x126>
 654:	c2 50       	subi	r28, 0x02	; 2
 656:	8c 2f       	mov	r24, r28
 658:	67 de       	rcall	.-818    	; 0x328 <lcdLight>
 65a:	ce 3f       	cpi	r28, 0xFE	; 254
 65c:	09 f4       	brne	.+2      	; 0x660 <initBoard+0x130>
 65e:	f1 2c       	mov	r15, r1
 660:	c8 37       	cpi	r28, 0x78	; 120
 662:	11 f4       	brne	.+4      	; 0x668 <initBoard+0x138>
 664:	ff 24       	eor	r15, r15
 666:	f3 94       	inc	r15
 668:	11 11       	cpse	r17, r1
 66a:	17 c0       	rjmp	.+46     	; 0x69a <initBoard+0x16a>
 66c:	ef dd       	rcall	.-1058   	; 0x24c <buttonReadAllPL>
 66e:	83 7c       	andi	r24, 0xC3	; 195
 670:	a1 f0       	breq	.+40     	; 0x69a <initBoard+0x16a>
 672:	40 e0       	ldi	r20, 0x00	; 0
 674:	50 e0       	ldi	r21, 0x00	; 0
 676:	66 e2       	ldi	r22, 0x26	; 38
 678:	72 e0       	ldi	r23, 0x02	; 2
 67a:	8f ef       	ldi	r24, 0xFF	; 255
 67c:	93 e0       	ldi	r25, 0x03	; 3
 67e:	15 de       	rcall	.-982    	; 0x2aa <rgbWrite>
 680:	8c e5       	ldi	r24, 0x5C	; 92
 682:	92 e0       	ldi	r25, 0x02	; 2
 684:	9f 93       	push	r25
 686:	8f 93       	push	r24
 688:	1f 92       	push	r1
 68a:	83 e0       	ldi	r24, 0x03	; 3
 68c:	8f 93       	push	r24
 68e:	de de       	rcall	.-580    	; 0x44c <lcdWriteText>
 690:	0f 90       	pop	r0
 692:	0f 90       	pop	r0
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	11 e0       	ldi	r17, 0x01	; 1
 69a:	11 23       	and	r17, r17
 69c:	19 f0       	breq	.+6      	; 0x6a4 <initBoard+0x174>
 69e:	d6 dd       	rcall	.-1108   	; 0x24c <buttonReadAllPL>
 6a0:	83 7c       	andi	r24, 0xC3	; 195
 6a2:	39 f0       	breq	.+14     	; 0x6b2 <initBoard+0x182>
 6a4:	8f ef       	ldi	r24, 0xFF	; 255
 6a6:	9c e7       	ldi	r25, 0x7C	; 124
 6a8:	01 97       	sbiw	r24, 0x01	; 1
 6aa:	f1 f7       	brne	.-4      	; 0x6a8 <initBoard+0x178>
 6ac:	00 c0       	rjmp	.+0      	; 0x6ae <initBoard+0x17e>
 6ae:	00 00       	nop
 6b0:	b0 cf       	rjmp	.-160    	; 0x612 <initBoard+0xe2>
 6b2:	06 df       	rcall	.-500    	; 0x4c0 <lcdClear>
 6b4:	80 e0       	ldi	r24, 0x00	; 0
 6b6:	38 de       	rcall	.-912    	; 0x328 <lcdLight>
 6b8:	80 e0       	ldi	r24, 0x00	; 0
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	c2 dd       	rcall	.-1148   	; 0x242 <ledWriteAll>
 6be:	40 e0       	ldi	r20, 0x00	; 0
 6c0:	50 e0       	ldi	r21, 0x00	; 0
 6c2:	60 e0       	ldi	r22, 0x00	; 0
 6c4:	70 e0       	ldi	r23, 0x00	; 0
 6c6:	80 e0       	ldi	r24, 0x00	; 0
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	ef dd       	rcall	.-1058   	; 0x2aa <rgbWrite>
 6cc:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 6d0:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 6d4:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 6d8:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 6dc:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 6e0:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 6e4:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 6e8:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 6ec:	df 91       	pop	r29
 6ee:	cf 91       	pop	r28
 6f0:	1f 91       	pop	r17
 6f2:	0f 91       	pop	r16
 6f4:	ff 90       	pop	r15
 6f6:	08 95       	ret

000006f8 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 6f8:	cf 93       	push	r28
 6fa:	df 93       	push	r29
 6fc:	cd b7       	in	r28, 0x3d	; 61
 6fe:	de b7       	in	r29, 0x3e	; 62
 700:	28 97       	sbiw	r28, 0x08	; 8
 702:	0f b6       	in	r0, 0x3f	; 63
 704:	f8 94       	cli
 706:	de bf       	out	0x3e, r29	; 62
 708:	0f be       	out	0x3f, r0	; 63
 70a:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 70c:	88 e0       	ldi	r24, 0x08	; 8
 70e:	e0 e0       	ldi	r30, 0x00	; 0
 710:	f2 e0       	ldi	r31, 0x02	; 2
 712:	de 01       	movw	r26, r28
 714:	11 96       	adiw	r26, 0x01	; 1
 716:	01 90       	ld	r0, Z+
 718:	0d 92       	st	X+, r0
 71a:	8a 95       	dec	r24
 71c:	e1 f7       	brne	.-8      	; 0x716 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 71e:	e5 e0       	ldi	r30, 0x05	; 5
 720:	f1 e0       	ldi	r31, 0x01	; 1
 722:	80 81       	ld	r24, Z
 724:	8f 7b       	andi	r24, 0xBF	; 191
 726:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 728:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 72c:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 730:	81 e0       	ldi	r24, 0x01	; 1
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	8c 0f       	add	r24, r28
 736:	9d 1f       	adc	r25, r29
 738:	e8 0f       	add	r30, r24
 73a:	f9 1f       	adc	r31, r25
 73c:	80 81       	ld	r24, Z
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 744:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 748:	80 e0       	ldi	r24, 0x00	; 0
 74a:	26 c0       	rjmp	.+76     	; 0x798 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 74c:	e7 e3       	ldi	r30, 0x37	; 55
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	e8 1b       	sub	r30, r24
 752:	f1 09       	sbc	r31, r1
 754:	ee 0f       	add	r30, r30
 756:	ff 1f       	adc	r31, r31
 758:	ee 57       	subi	r30, 0x7E	; 126
 75a:	fd 4f       	sbci	r31, 0xFD	; 253
 75c:	40 81       	ld	r20, Z
 75e:	51 81       	ldd	r21, Z+1	; 0x01
 760:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 764:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 768:	24 23       	and	r18, r20
 76a:	35 23       	and	r19, r21
 76c:	23 2b       	or	r18, r19
 76e:	31 f0       	breq	.+12     	; 0x77c <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 770:	e5 e0       	ldi	r30, 0x05	; 5
 772:	f1 e0       	ldi	r31, 0x01	; 1
 774:	90 81       	ld	r25, Z
 776:	90 62       	ori	r25, 0x20	; 32
 778:	90 83       	st	Z, r25
 77a:	05 c0       	rjmp	.+10     	; 0x786 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 77c:	e5 e0       	ldi	r30, 0x05	; 5
 77e:	f1 e0       	ldi	r31, 0x01	; 1
 780:	90 81       	ld	r25, Z
 782:	9f 7d       	andi	r25, 0xDF	; 223
 784:	90 83       	st	Z, r25
        }
        CLOCK_1;
 786:	e5 e0       	ldi	r30, 0x05	; 5
 788:	f1 e0       	ldi	r31, 0x01	; 1
 78a:	90 81       	ld	r25, Z
 78c:	90 61       	ori	r25, 0x10	; 16
 78e:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 790:	90 81       	ld	r25, Z
 792:	9f 7e       	andi	r25, 0xEF	; 239
 794:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 796:	8f 5f       	subi	r24, 0xFF	; 255
 798:	88 33       	cpi	r24, 0x38	; 56
 79a:	c0 f2       	brcs	.-80     	; 0x74c <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 79c:	e5 e0       	ldi	r30, 0x05	; 5
 79e:	f1 e0       	ldi	r31, 0x01	; 1
 7a0:	80 81       	ld	r24, Z
 7a2:	87 7f       	andi	r24, 0xF7	; 247
 7a4:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 7a6:	80 81       	ld	r24, Z
 7a8:	88 7f       	andi	r24, 0xF8	; 248
 7aa:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 7ac:	90 81       	ld	r25, Z
 7ae:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 7b2:	89 2b       	or	r24, r25
 7b4:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 7b6:	80 81       	ld	r24, Z
 7b8:	80 64       	ori	r24, 0x40	; 64
 7ba:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 7bc:	80 81       	ld	r24, Z
 7be:	88 60       	ori	r24, 0x08	; 8
 7c0:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 7c2:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 7c6:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 7ca:	87 30       	cpi	r24, 0x07	; 7
 7cc:	91 05       	cpc	r25, r1
 7ce:	30 f4       	brcc	.+12     	; 0x7dc <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 7d0:	01 96       	adiw	r24, 0x01	; 1
 7d2:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 7d6:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 7da:	07 c0       	rjmp	.+14     	; 0x7ea <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 7dc:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 7e0:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 7e4:	81 e0       	ldi	r24, 0x01	; 1
 7e6:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 7ea:	28 96       	adiw	r28, 0x08	; 8
 7ec:	0f b6       	in	r0, 0x3f	; 63
 7ee:	f8 94       	cli
 7f0:	de bf       	out	0x3e, r29	; 62
 7f2:	0f be       	out	0x3f, r0	; 63
 7f4:	cd bf       	out	0x3d, r28	; 61
 7f6:	df 91       	pop	r29
 7f8:	cf 91       	pop	r28
 7fa:	08 95       	ret

000007fc <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 7fc:	1f 92       	push	r1
 7fe:	0f 92       	push	r0
 800:	0f b6       	in	r0, 0x3f	; 63
 802:	0f 92       	push	r0
 804:	11 24       	eor	r1, r1
 806:	0b b6       	in	r0, 0x3b	; 59
 808:	0f 92       	push	r0
 80a:	2f 93       	push	r18
 80c:	3f 93       	push	r19
 80e:	4f 93       	push	r20
 810:	5f 93       	push	r21
 812:	6f 93       	push	r22
 814:	7f 93       	push	r23
 816:	8f 93       	push	r24
 818:	9f 93       	push	r25
 81a:	af 93       	push	r26
 81c:	bf 93       	push	r27
 81e:	ef 93       	push	r30
 820:	ff 93       	push	r31
    systemTimeMs += 1;
 822:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 826:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 82a:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 82e:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 832:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 836:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 83a:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 83e:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 842:	a1 e0       	ldi	r26, 0x01	; 1
 844:	27 d0       	rcall	.+78     	; 0x894 <__adddi3_s8>
 846:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 84a:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 84e:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 852:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 856:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 85a:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 85e:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 862:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 866:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 86a:	81 11       	cpse	r24, r1
 86c:	45 df       	rcall	.-374    	; 0x6f8 <matrixWriteNextLine>
}
 86e:	ff 91       	pop	r31
 870:	ef 91       	pop	r30
 872:	bf 91       	pop	r27
 874:	af 91       	pop	r26
 876:	9f 91       	pop	r25
 878:	8f 91       	pop	r24
 87a:	7f 91       	pop	r23
 87c:	6f 91       	pop	r22
 87e:	5f 91       	pop	r21
 880:	4f 91       	pop	r20
 882:	3f 91       	pop	r19
 884:	2f 91       	pop	r18
 886:	0f 90       	pop	r0
 888:	0b be       	out	0x3b, r0	; 59
 88a:	0f 90       	pop	r0
 88c:	0f be       	out	0x3f, r0	; 63
 88e:	0f 90       	pop	r0
 890:	1f 90       	pop	r1
 892:	18 95       	reti

00000894 <__adddi3_s8>:
 894:	00 24       	eor	r0, r0
 896:	a7 fd       	sbrc	r26, 7
 898:	00 94       	com	r0
 89a:	2a 0f       	add	r18, r26
 89c:	30 1d       	adc	r19, r0
 89e:	40 1d       	adc	r20, r0
 8a0:	50 1d       	adc	r21, r0
 8a2:	60 1d       	adc	r22, r0
 8a4:	70 1d       	adc	r23, r0
 8a6:	80 1d       	adc	r24, r0
 8a8:	90 1d       	adc	r25, r0
 8aa:	08 95       	ret

000008ac <vsnprintf>:
 8ac:	0f 93       	push	r16
 8ae:	1f 93       	push	r17
 8b0:	cf 93       	push	r28
 8b2:	df 93       	push	r29
 8b4:	cd b7       	in	r28, 0x3d	; 61
 8b6:	de b7       	in	r29, 0x3e	; 62
 8b8:	2e 97       	sbiw	r28, 0x0e	; 14
 8ba:	0f b6       	in	r0, 0x3f	; 63
 8bc:	f8 94       	cli
 8be:	de bf       	out	0x3e, r29	; 62
 8c0:	0f be       	out	0x3f, r0	; 63
 8c2:	cd bf       	out	0x3d, r28	; 61
 8c4:	8c 01       	movw	r16, r24
 8c6:	fa 01       	movw	r30, r20
 8c8:	86 e0       	ldi	r24, 0x06	; 6
 8ca:	8c 83       	std	Y+4, r24	; 0x04
 8cc:	1a 83       	std	Y+2, r17	; 0x02
 8ce:	09 83       	std	Y+1, r16	; 0x01
 8d0:	77 ff       	sbrs	r23, 7
 8d2:	02 c0       	rjmp	.+4      	; 0x8d8 <vsnprintf+0x2c>
 8d4:	60 e0       	ldi	r22, 0x00	; 0
 8d6:	70 e8       	ldi	r23, 0x80	; 128
 8d8:	cb 01       	movw	r24, r22
 8da:	01 97       	sbiw	r24, 0x01	; 1
 8dc:	9e 83       	std	Y+6, r25	; 0x06
 8de:	8d 83       	std	Y+5, r24	; 0x05
 8e0:	a9 01       	movw	r20, r18
 8e2:	bf 01       	movw	r22, r30
 8e4:	ce 01       	movw	r24, r28
 8e6:	01 96       	adiw	r24, 0x01	; 1
 8e8:	19 d0       	rcall	.+50     	; 0x91c <vfprintf>
 8ea:	4d 81       	ldd	r20, Y+5	; 0x05
 8ec:	5e 81       	ldd	r21, Y+6	; 0x06
 8ee:	57 fd       	sbrc	r21, 7
 8f0:	0a c0       	rjmp	.+20     	; 0x906 <vsnprintf+0x5a>
 8f2:	2f 81       	ldd	r18, Y+7	; 0x07
 8f4:	38 85       	ldd	r19, Y+8	; 0x08
 8f6:	42 17       	cp	r20, r18
 8f8:	53 07       	cpc	r21, r19
 8fa:	0c f4       	brge	.+2      	; 0x8fe <vsnprintf+0x52>
 8fc:	9a 01       	movw	r18, r20
 8fe:	f8 01       	movw	r30, r16
 900:	e2 0f       	add	r30, r18
 902:	f3 1f       	adc	r31, r19
 904:	10 82       	st	Z, r1
 906:	2e 96       	adiw	r28, 0x0e	; 14
 908:	0f b6       	in	r0, 0x3f	; 63
 90a:	f8 94       	cli
 90c:	de bf       	out	0x3e, r29	; 62
 90e:	0f be       	out	0x3f, r0	; 63
 910:	cd bf       	out	0x3d, r28	; 61
 912:	df 91       	pop	r29
 914:	cf 91       	pop	r28
 916:	1f 91       	pop	r17
 918:	0f 91       	pop	r16
 91a:	08 95       	ret

0000091c <vfprintf>:
 91c:	2f 92       	push	r2
 91e:	3f 92       	push	r3
 920:	4f 92       	push	r4
 922:	5f 92       	push	r5
 924:	6f 92       	push	r6
 926:	7f 92       	push	r7
 928:	8f 92       	push	r8
 92a:	9f 92       	push	r9
 92c:	af 92       	push	r10
 92e:	bf 92       	push	r11
 930:	cf 92       	push	r12
 932:	df 92       	push	r13
 934:	ef 92       	push	r14
 936:	ff 92       	push	r15
 938:	0f 93       	push	r16
 93a:	1f 93       	push	r17
 93c:	cf 93       	push	r28
 93e:	df 93       	push	r29
 940:	cd b7       	in	r28, 0x3d	; 61
 942:	de b7       	in	r29, 0x3e	; 62
 944:	2b 97       	sbiw	r28, 0x0b	; 11
 946:	0f b6       	in	r0, 0x3f	; 63
 948:	f8 94       	cli
 94a:	de bf       	out	0x3e, r29	; 62
 94c:	0f be       	out	0x3f, r0	; 63
 94e:	cd bf       	out	0x3d, r28	; 61
 950:	6c 01       	movw	r12, r24
 952:	7b 01       	movw	r14, r22
 954:	8a 01       	movw	r16, r20
 956:	fc 01       	movw	r30, r24
 958:	17 82       	std	Z+7, r1	; 0x07
 95a:	16 82       	std	Z+6, r1	; 0x06
 95c:	83 81       	ldd	r24, Z+3	; 0x03
 95e:	81 ff       	sbrs	r24, 1
 960:	bf c1       	rjmp	.+894    	; 0xce0 <vfprintf+0x3c4>
 962:	ce 01       	movw	r24, r28
 964:	01 96       	adiw	r24, 0x01	; 1
 966:	3c 01       	movw	r6, r24
 968:	f6 01       	movw	r30, r12
 96a:	93 81       	ldd	r25, Z+3	; 0x03
 96c:	f7 01       	movw	r30, r14
 96e:	93 fd       	sbrc	r25, 3
 970:	85 91       	lpm	r24, Z+
 972:	93 ff       	sbrs	r25, 3
 974:	81 91       	ld	r24, Z+
 976:	7f 01       	movw	r14, r30
 978:	88 23       	and	r24, r24
 97a:	09 f4       	brne	.+2      	; 0x97e <vfprintf+0x62>
 97c:	ad c1       	rjmp	.+858    	; 0xcd8 <vfprintf+0x3bc>
 97e:	85 32       	cpi	r24, 0x25	; 37
 980:	39 f4       	brne	.+14     	; 0x990 <vfprintf+0x74>
 982:	93 fd       	sbrc	r25, 3
 984:	85 91       	lpm	r24, Z+
 986:	93 ff       	sbrs	r25, 3
 988:	81 91       	ld	r24, Z+
 98a:	7f 01       	movw	r14, r30
 98c:	85 32       	cpi	r24, 0x25	; 37
 98e:	21 f4       	brne	.+8      	; 0x998 <vfprintf+0x7c>
 990:	b6 01       	movw	r22, r12
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	d6 d1       	rcall	.+940    	; 0xd42 <fputc>
 996:	e8 cf       	rjmp	.-48     	; 0x968 <vfprintf+0x4c>
 998:	91 2c       	mov	r9, r1
 99a:	21 2c       	mov	r2, r1
 99c:	31 2c       	mov	r3, r1
 99e:	ff e1       	ldi	r31, 0x1F	; 31
 9a0:	f3 15       	cp	r31, r3
 9a2:	d8 f0       	brcs	.+54     	; 0x9da <vfprintf+0xbe>
 9a4:	8b 32       	cpi	r24, 0x2B	; 43
 9a6:	79 f0       	breq	.+30     	; 0x9c6 <vfprintf+0xaa>
 9a8:	38 f4       	brcc	.+14     	; 0x9b8 <vfprintf+0x9c>
 9aa:	80 32       	cpi	r24, 0x20	; 32
 9ac:	79 f0       	breq	.+30     	; 0x9cc <vfprintf+0xb0>
 9ae:	83 32       	cpi	r24, 0x23	; 35
 9b0:	a1 f4       	brne	.+40     	; 0x9da <vfprintf+0xbe>
 9b2:	23 2d       	mov	r18, r3
 9b4:	20 61       	ori	r18, 0x10	; 16
 9b6:	1d c0       	rjmp	.+58     	; 0x9f2 <vfprintf+0xd6>
 9b8:	8d 32       	cpi	r24, 0x2D	; 45
 9ba:	61 f0       	breq	.+24     	; 0x9d4 <vfprintf+0xb8>
 9bc:	80 33       	cpi	r24, 0x30	; 48
 9be:	69 f4       	brne	.+26     	; 0x9da <vfprintf+0xbe>
 9c0:	23 2d       	mov	r18, r3
 9c2:	21 60       	ori	r18, 0x01	; 1
 9c4:	16 c0       	rjmp	.+44     	; 0x9f2 <vfprintf+0xd6>
 9c6:	83 2d       	mov	r24, r3
 9c8:	82 60       	ori	r24, 0x02	; 2
 9ca:	38 2e       	mov	r3, r24
 9cc:	e3 2d       	mov	r30, r3
 9ce:	e4 60       	ori	r30, 0x04	; 4
 9d0:	3e 2e       	mov	r3, r30
 9d2:	2a c0       	rjmp	.+84     	; 0xa28 <vfprintf+0x10c>
 9d4:	f3 2d       	mov	r31, r3
 9d6:	f8 60       	ori	r31, 0x08	; 8
 9d8:	1d c0       	rjmp	.+58     	; 0xa14 <vfprintf+0xf8>
 9da:	37 fc       	sbrc	r3, 7
 9dc:	2d c0       	rjmp	.+90     	; 0xa38 <vfprintf+0x11c>
 9de:	20 ed       	ldi	r18, 0xD0	; 208
 9e0:	28 0f       	add	r18, r24
 9e2:	2a 30       	cpi	r18, 0x0A	; 10
 9e4:	40 f0       	brcs	.+16     	; 0x9f6 <vfprintf+0xda>
 9e6:	8e 32       	cpi	r24, 0x2E	; 46
 9e8:	b9 f4       	brne	.+46     	; 0xa18 <vfprintf+0xfc>
 9ea:	36 fc       	sbrc	r3, 6
 9ec:	75 c1       	rjmp	.+746    	; 0xcd8 <vfprintf+0x3bc>
 9ee:	23 2d       	mov	r18, r3
 9f0:	20 64       	ori	r18, 0x40	; 64
 9f2:	32 2e       	mov	r3, r18
 9f4:	19 c0       	rjmp	.+50     	; 0xa28 <vfprintf+0x10c>
 9f6:	36 fe       	sbrs	r3, 6
 9f8:	06 c0       	rjmp	.+12     	; 0xa06 <vfprintf+0xea>
 9fa:	8a e0       	ldi	r24, 0x0A	; 10
 9fc:	98 9e       	mul	r9, r24
 9fe:	20 0d       	add	r18, r0
 a00:	11 24       	eor	r1, r1
 a02:	92 2e       	mov	r9, r18
 a04:	11 c0       	rjmp	.+34     	; 0xa28 <vfprintf+0x10c>
 a06:	ea e0       	ldi	r30, 0x0A	; 10
 a08:	2e 9e       	mul	r2, r30
 a0a:	20 0d       	add	r18, r0
 a0c:	11 24       	eor	r1, r1
 a0e:	22 2e       	mov	r2, r18
 a10:	f3 2d       	mov	r31, r3
 a12:	f0 62       	ori	r31, 0x20	; 32
 a14:	3f 2e       	mov	r3, r31
 a16:	08 c0       	rjmp	.+16     	; 0xa28 <vfprintf+0x10c>
 a18:	8c 36       	cpi	r24, 0x6C	; 108
 a1a:	21 f4       	brne	.+8      	; 0xa24 <vfprintf+0x108>
 a1c:	83 2d       	mov	r24, r3
 a1e:	80 68       	ori	r24, 0x80	; 128
 a20:	38 2e       	mov	r3, r24
 a22:	02 c0       	rjmp	.+4      	; 0xa28 <vfprintf+0x10c>
 a24:	88 36       	cpi	r24, 0x68	; 104
 a26:	41 f4       	brne	.+16     	; 0xa38 <vfprintf+0x11c>
 a28:	f7 01       	movw	r30, r14
 a2a:	93 fd       	sbrc	r25, 3
 a2c:	85 91       	lpm	r24, Z+
 a2e:	93 ff       	sbrs	r25, 3
 a30:	81 91       	ld	r24, Z+
 a32:	7f 01       	movw	r14, r30
 a34:	81 11       	cpse	r24, r1
 a36:	b3 cf       	rjmp	.-154    	; 0x99e <vfprintf+0x82>
 a38:	98 2f       	mov	r25, r24
 a3a:	9f 7d       	andi	r25, 0xDF	; 223
 a3c:	95 54       	subi	r25, 0x45	; 69
 a3e:	93 30       	cpi	r25, 0x03	; 3
 a40:	28 f4       	brcc	.+10     	; 0xa4c <vfprintf+0x130>
 a42:	0c 5f       	subi	r16, 0xFC	; 252
 a44:	1f 4f       	sbci	r17, 0xFF	; 255
 a46:	9f e3       	ldi	r25, 0x3F	; 63
 a48:	99 83       	std	Y+1, r25	; 0x01
 a4a:	0d c0       	rjmp	.+26     	; 0xa66 <vfprintf+0x14a>
 a4c:	83 36       	cpi	r24, 0x63	; 99
 a4e:	31 f0       	breq	.+12     	; 0xa5c <vfprintf+0x140>
 a50:	83 37       	cpi	r24, 0x73	; 115
 a52:	71 f0       	breq	.+28     	; 0xa70 <vfprintf+0x154>
 a54:	83 35       	cpi	r24, 0x53	; 83
 a56:	09 f0       	breq	.+2      	; 0xa5a <vfprintf+0x13e>
 a58:	55 c0       	rjmp	.+170    	; 0xb04 <vfprintf+0x1e8>
 a5a:	20 c0       	rjmp	.+64     	; 0xa9c <vfprintf+0x180>
 a5c:	f8 01       	movw	r30, r16
 a5e:	80 81       	ld	r24, Z
 a60:	89 83       	std	Y+1, r24	; 0x01
 a62:	0e 5f       	subi	r16, 0xFE	; 254
 a64:	1f 4f       	sbci	r17, 0xFF	; 255
 a66:	88 24       	eor	r8, r8
 a68:	83 94       	inc	r8
 a6a:	91 2c       	mov	r9, r1
 a6c:	53 01       	movw	r10, r6
 a6e:	12 c0       	rjmp	.+36     	; 0xa94 <vfprintf+0x178>
 a70:	28 01       	movw	r4, r16
 a72:	f2 e0       	ldi	r31, 0x02	; 2
 a74:	4f 0e       	add	r4, r31
 a76:	51 1c       	adc	r5, r1
 a78:	f8 01       	movw	r30, r16
 a7a:	a0 80       	ld	r10, Z
 a7c:	b1 80       	ldd	r11, Z+1	; 0x01
 a7e:	36 fe       	sbrs	r3, 6
 a80:	03 c0       	rjmp	.+6      	; 0xa88 <vfprintf+0x16c>
 a82:	69 2d       	mov	r22, r9
 a84:	70 e0       	ldi	r23, 0x00	; 0
 a86:	02 c0       	rjmp	.+4      	; 0xa8c <vfprintf+0x170>
 a88:	6f ef       	ldi	r22, 0xFF	; 255
 a8a:	7f ef       	ldi	r23, 0xFF	; 255
 a8c:	c5 01       	movw	r24, r10
 a8e:	4e d1       	rcall	.+668    	; 0xd2c <strnlen>
 a90:	4c 01       	movw	r8, r24
 a92:	82 01       	movw	r16, r4
 a94:	f3 2d       	mov	r31, r3
 a96:	ff 77       	andi	r31, 0x7F	; 127
 a98:	3f 2e       	mov	r3, r31
 a9a:	15 c0       	rjmp	.+42     	; 0xac6 <vfprintf+0x1aa>
 a9c:	28 01       	movw	r4, r16
 a9e:	22 e0       	ldi	r18, 0x02	; 2
 aa0:	42 0e       	add	r4, r18
 aa2:	51 1c       	adc	r5, r1
 aa4:	f8 01       	movw	r30, r16
 aa6:	a0 80       	ld	r10, Z
 aa8:	b1 80       	ldd	r11, Z+1	; 0x01
 aaa:	36 fe       	sbrs	r3, 6
 aac:	03 c0       	rjmp	.+6      	; 0xab4 <vfprintf+0x198>
 aae:	69 2d       	mov	r22, r9
 ab0:	70 e0       	ldi	r23, 0x00	; 0
 ab2:	02 c0       	rjmp	.+4      	; 0xab8 <vfprintf+0x19c>
 ab4:	6f ef       	ldi	r22, 0xFF	; 255
 ab6:	7f ef       	ldi	r23, 0xFF	; 255
 ab8:	c5 01       	movw	r24, r10
 aba:	2d d1       	rcall	.+602    	; 0xd16 <strnlen_P>
 abc:	4c 01       	movw	r8, r24
 abe:	f3 2d       	mov	r31, r3
 ac0:	f0 68       	ori	r31, 0x80	; 128
 ac2:	3f 2e       	mov	r3, r31
 ac4:	82 01       	movw	r16, r4
 ac6:	33 fc       	sbrc	r3, 3
 ac8:	19 c0       	rjmp	.+50     	; 0xafc <vfprintf+0x1e0>
 aca:	82 2d       	mov	r24, r2
 acc:	90 e0       	ldi	r25, 0x00	; 0
 ace:	88 16       	cp	r8, r24
 ad0:	99 06       	cpc	r9, r25
 ad2:	a0 f4       	brcc	.+40     	; 0xafc <vfprintf+0x1e0>
 ad4:	b6 01       	movw	r22, r12
 ad6:	80 e2       	ldi	r24, 0x20	; 32
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	33 d1       	rcall	.+614    	; 0xd42 <fputc>
 adc:	2a 94       	dec	r2
 ade:	f5 cf       	rjmp	.-22     	; 0xaca <vfprintf+0x1ae>
 ae0:	f5 01       	movw	r30, r10
 ae2:	37 fc       	sbrc	r3, 7
 ae4:	85 91       	lpm	r24, Z+
 ae6:	37 fe       	sbrs	r3, 7
 ae8:	81 91       	ld	r24, Z+
 aea:	5f 01       	movw	r10, r30
 aec:	b6 01       	movw	r22, r12
 aee:	90 e0       	ldi	r25, 0x00	; 0
 af0:	28 d1       	rcall	.+592    	; 0xd42 <fputc>
 af2:	21 10       	cpse	r2, r1
 af4:	2a 94       	dec	r2
 af6:	21 e0       	ldi	r18, 0x01	; 1
 af8:	82 1a       	sub	r8, r18
 afa:	91 08       	sbc	r9, r1
 afc:	81 14       	cp	r8, r1
 afe:	91 04       	cpc	r9, r1
 b00:	79 f7       	brne	.-34     	; 0xae0 <vfprintf+0x1c4>
 b02:	e1 c0       	rjmp	.+450    	; 0xcc6 <vfprintf+0x3aa>
 b04:	84 36       	cpi	r24, 0x64	; 100
 b06:	11 f0       	breq	.+4      	; 0xb0c <vfprintf+0x1f0>
 b08:	89 36       	cpi	r24, 0x69	; 105
 b0a:	39 f5       	brne	.+78     	; 0xb5a <vfprintf+0x23e>
 b0c:	f8 01       	movw	r30, r16
 b0e:	37 fe       	sbrs	r3, 7
 b10:	07 c0       	rjmp	.+14     	; 0xb20 <vfprintf+0x204>
 b12:	60 81       	ld	r22, Z
 b14:	71 81       	ldd	r23, Z+1	; 0x01
 b16:	82 81       	ldd	r24, Z+2	; 0x02
 b18:	93 81       	ldd	r25, Z+3	; 0x03
 b1a:	0c 5f       	subi	r16, 0xFC	; 252
 b1c:	1f 4f       	sbci	r17, 0xFF	; 255
 b1e:	08 c0       	rjmp	.+16     	; 0xb30 <vfprintf+0x214>
 b20:	60 81       	ld	r22, Z
 b22:	71 81       	ldd	r23, Z+1	; 0x01
 b24:	07 2e       	mov	r0, r23
 b26:	00 0c       	add	r0, r0
 b28:	88 0b       	sbc	r24, r24
 b2a:	99 0b       	sbc	r25, r25
 b2c:	0e 5f       	subi	r16, 0xFE	; 254
 b2e:	1f 4f       	sbci	r17, 0xFF	; 255
 b30:	f3 2d       	mov	r31, r3
 b32:	ff 76       	andi	r31, 0x6F	; 111
 b34:	3f 2e       	mov	r3, r31
 b36:	97 ff       	sbrs	r25, 7
 b38:	09 c0       	rjmp	.+18     	; 0xb4c <vfprintf+0x230>
 b3a:	90 95       	com	r25
 b3c:	80 95       	com	r24
 b3e:	70 95       	com	r23
 b40:	61 95       	neg	r22
 b42:	7f 4f       	sbci	r23, 0xFF	; 255
 b44:	8f 4f       	sbci	r24, 0xFF	; 255
 b46:	9f 4f       	sbci	r25, 0xFF	; 255
 b48:	f0 68       	ori	r31, 0x80	; 128
 b4a:	3f 2e       	mov	r3, r31
 b4c:	2a e0       	ldi	r18, 0x0A	; 10
 b4e:	30 e0       	ldi	r19, 0x00	; 0
 b50:	a3 01       	movw	r20, r6
 b52:	33 d1       	rcall	.+614    	; 0xdba <__ultoa_invert>
 b54:	88 2e       	mov	r8, r24
 b56:	86 18       	sub	r8, r6
 b58:	44 c0       	rjmp	.+136    	; 0xbe2 <vfprintf+0x2c6>
 b5a:	85 37       	cpi	r24, 0x75	; 117
 b5c:	31 f4       	brne	.+12     	; 0xb6a <vfprintf+0x24e>
 b5e:	23 2d       	mov	r18, r3
 b60:	2f 7e       	andi	r18, 0xEF	; 239
 b62:	b2 2e       	mov	r11, r18
 b64:	2a e0       	ldi	r18, 0x0A	; 10
 b66:	30 e0       	ldi	r19, 0x00	; 0
 b68:	25 c0       	rjmp	.+74     	; 0xbb4 <vfprintf+0x298>
 b6a:	93 2d       	mov	r25, r3
 b6c:	99 7f       	andi	r25, 0xF9	; 249
 b6e:	b9 2e       	mov	r11, r25
 b70:	8f 36       	cpi	r24, 0x6F	; 111
 b72:	c1 f0       	breq	.+48     	; 0xba4 <vfprintf+0x288>
 b74:	18 f4       	brcc	.+6      	; 0xb7c <vfprintf+0x260>
 b76:	88 35       	cpi	r24, 0x58	; 88
 b78:	79 f0       	breq	.+30     	; 0xb98 <vfprintf+0x27c>
 b7a:	ae c0       	rjmp	.+348    	; 0xcd8 <vfprintf+0x3bc>
 b7c:	80 37       	cpi	r24, 0x70	; 112
 b7e:	19 f0       	breq	.+6      	; 0xb86 <vfprintf+0x26a>
 b80:	88 37       	cpi	r24, 0x78	; 120
 b82:	21 f0       	breq	.+8      	; 0xb8c <vfprintf+0x270>
 b84:	a9 c0       	rjmp	.+338    	; 0xcd8 <vfprintf+0x3bc>
 b86:	e9 2f       	mov	r30, r25
 b88:	e0 61       	ori	r30, 0x10	; 16
 b8a:	be 2e       	mov	r11, r30
 b8c:	b4 fe       	sbrs	r11, 4
 b8e:	0d c0       	rjmp	.+26     	; 0xbaa <vfprintf+0x28e>
 b90:	fb 2d       	mov	r31, r11
 b92:	f4 60       	ori	r31, 0x04	; 4
 b94:	bf 2e       	mov	r11, r31
 b96:	09 c0       	rjmp	.+18     	; 0xbaa <vfprintf+0x28e>
 b98:	34 fe       	sbrs	r3, 4
 b9a:	0a c0       	rjmp	.+20     	; 0xbb0 <vfprintf+0x294>
 b9c:	29 2f       	mov	r18, r25
 b9e:	26 60       	ori	r18, 0x06	; 6
 ba0:	b2 2e       	mov	r11, r18
 ba2:	06 c0       	rjmp	.+12     	; 0xbb0 <vfprintf+0x294>
 ba4:	28 e0       	ldi	r18, 0x08	; 8
 ba6:	30 e0       	ldi	r19, 0x00	; 0
 ba8:	05 c0       	rjmp	.+10     	; 0xbb4 <vfprintf+0x298>
 baa:	20 e1       	ldi	r18, 0x10	; 16
 bac:	30 e0       	ldi	r19, 0x00	; 0
 bae:	02 c0       	rjmp	.+4      	; 0xbb4 <vfprintf+0x298>
 bb0:	20 e1       	ldi	r18, 0x10	; 16
 bb2:	32 e0       	ldi	r19, 0x02	; 2
 bb4:	f8 01       	movw	r30, r16
 bb6:	b7 fe       	sbrs	r11, 7
 bb8:	07 c0       	rjmp	.+14     	; 0xbc8 <vfprintf+0x2ac>
 bba:	60 81       	ld	r22, Z
 bbc:	71 81       	ldd	r23, Z+1	; 0x01
 bbe:	82 81       	ldd	r24, Z+2	; 0x02
 bc0:	93 81       	ldd	r25, Z+3	; 0x03
 bc2:	0c 5f       	subi	r16, 0xFC	; 252
 bc4:	1f 4f       	sbci	r17, 0xFF	; 255
 bc6:	06 c0       	rjmp	.+12     	; 0xbd4 <vfprintf+0x2b8>
 bc8:	60 81       	ld	r22, Z
 bca:	71 81       	ldd	r23, Z+1	; 0x01
 bcc:	80 e0       	ldi	r24, 0x00	; 0
 bce:	90 e0       	ldi	r25, 0x00	; 0
 bd0:	0e 5f       	subi	r16, 0xFE	; 254
 bd2:	1f 4f       	sbci	r17, 0xFF	; 255
 bd4:	a3 01       	movw	r20, r6
 bd6:	f1 d0       	rcall	.+482    	; 0xdba <__ultoa_invert>
 bd8:	88 2e       	mov	r8, r24
 bda:	86 18       	sub	r8, r6
 bdc:	fb 2d       	mov	r31, r11
 bde:	ff 77       	andi	r31, 0x7F	; 127
 be0:	3f 2e       	mov	r3, r31
 be2:	36 fe       	sbrs	r3, 6
 be4:	0d c0       	rjmp	.+26     	; 0xc00 <vfprintf+0x2e4>
 be6:	23 2d       	mov	r18, r3
 be8:	2e 7f       	andi	r18, 0xFE	; 254
 bea:	a2 2e       	mov	r10, r18
 bec:	89 14       	cp	r8, r9
 bee:	58 f4       	brcc	.+22     	; 0xc06 <vfprintf+0x2ea>
 bf0:	34 fe       	sbrs	r3, 4
 bf2:	0b c0       	rjmp	.+22     	; 0xc0a <vfprintf+0x2ee>
 bf4:	32 fc       	sbrc	r3, 2
 bf6:	09 c0       	rjmp	.+18     	; 0xc0a <vfprintf+0x2ee>
 bf8:	83 2d       	mov	r24, r3
 bfa:	8e 7e       	andi	r24, 0xEE	; 238
 bfc:	a8 2e       	mov	r10, r24
 bfe:	05 c0       	rjmp	.+10     	; 0xc0a <vfprintf+0x2ee>
 c00:	b8 2c       	mov	r11, r8
 c02:	a3 2c       	mov	r10, r3
 c04:	03 c0       	rjmp	.+6      	; 0xc0c <vfprintf+0x2f0>
 c06:	b8 2c       	mov	r11, r8
 c08:	01 c0       	rjmp	.+2      	; 0xc0c <vfprintf+0x2f0>
 c0a:	b9 2c       	mov	r11, r9
 c0c:	a4 fe       	sbrs	r10, 4
 c0e:	0f c0       	rjmp	.+30     	; 0xc2e <vfprintf+0x312>
 c10:	fe 01       	movw	r30, r28
 c12:	e8 0d       	add	r30, r8
 c14:	f1 1d       	adc	r31, r1
 c16:	80 81       	ld	r24, Z
 c18:	80 33       	cpi	r24, 0x30	; 48
 c1a:	21 f4       	brne	.+8      	; 0xc24 <vfprintf+0x308>
 c1c:	9a 2d       	mov	r25, r10
 c1e:	99 7e       	andi	r25, 0xE9	; 233
 c20:	a9 2e       	mov	r10, r25
 c22:	09 c0       	rjmp	.+18     	; 0xc36 <vfprintf+0x31a>
 c24:	a2 fe       	sbrs	r10, 2
 c26:	06 c0       	rjmp	.+12     	; 0xc34 <vfprintf+0x318>
 c28:	b3 94       	inc	r11
 c2a:	b3 94       	inc	r11
 c2c:	04 c0       	rjmp	.+8      	; 0xc36 <vfprintf+0x31a>
 c2e:	8a 2d       	mov	r24, r10
 c30:	86 78       	andi	r24, 0x86	; 134
 c32:	09 f0       	breq	.+2      	; 0xc36 <vfprintf+0x31a>
 c34:	b3 94       	inc	r11
 c36:	a3 fc       	sbrc	r10, 3
 c38:	10 c0       	rjmp	.+32     	; 0xc5a <vfprintf+0x33e>
 c3a:	a0 fe       	sbrs	r10, 0
 c3c:	06 c0       	rjmp	.+12     	; 0xc4a <vfprintf+0x32e>
 c3e:	b2 14       	cp	r11, r2
 c40:	80 f4       	brcc	.+32     	; 0xc62 <vfprintf+0x346>
 c42:	28 0c       	add	r2, r8
 c44:	92 2c       	mov	r9, r2
 c46:	9b 18       	sub	r9, r11
 c48:	0d c0       	rjmp	.+26     	; 0xc64 <vfprintf+0x348>
 c4a:	b2 14       	cp	r11, r2
 c4c:	58 f4       	brcc	.+22     	; 0xc64 <vfprintf+0x348>
 c4e:	b6 01       	movw	r22, r12
 c50:	80 e2       	ldi	r24, 0x20	; 32
 c52:	90 e0       	ldi	r25, 0x00	; 0
 c54:	76 d0       	rcall	.+236    	; 0xd42 <fputc>
 c56:	b3 94       	inc	r11
 c58:	f8 cf       	rjmp	.-16     	; 0xc4a <vfprintf+0x32e>
 c5a:	b2 14       	cp	r11, r2
 c5c:	18 f4       	brcc	.+6      	; 0xc64 <vfprintf+0x348>
 c5e:	2b 18       	sub	r2, r11
 c60:	02 c0       	rjmp	.+4      	; 0xc66 <vfprintf+0x34a>
 c62:	98 2c       	mov	r9, r8
 c64:	21 2c       	mov	r2, r1
 c66:	a4 fe       	sbrs	r10, 4
 c68:	0f c0       	rjmp	.+30     	; 0xc88 <vfprintf+0x36c>
 c6a:	b6 01       	movw	r22, r12
 c6c:	80 e3       	ldi	r24, 0x30	; 48
 c6e:	90 e0       	ldi	r25, 0x00	; 0
 c70:	68 d0       	rcall	.+208    	; 0xd42 <fputc>
 c72:	a2 fe       	sbrs	r10, 2
 c74:	16 c0       	rjmp	.+44     	; 0xca2 <vfprintf+0x386>
 c76:	a1 fc       	sbrc	r10, 1
 c78:	03 c0       	rjmp	.+6      	; 0xc80 <vfprintf+0x364>
 c7a:	88 e7       	ldi	r24, 0x78	; 120
 c7c:	90 e0       	ldi	r25, 0x00	; 0
 c7e:	02 c0       	rjmp	.+4      	; 0xc84 <vfprintf+0x368>
 c80:	88 e5       	ldi	r24, 0x58	; 88
 c82:	90 e0       	ldi	r25, 0x00	; 0
 c84:	b6 01       	movw	r22, r12
 c86:	0c c0       	rjmp	.+24     	; 0xca0 <vfprintf+0x384>
 c88:	8a 2d       	mov	r24, r10
 c8a:	86 78       	andi	r24, 0x86	; 134
 c8c:	51 f0       	breq	.+20     	; 0xca2 <vfprintf+0x386>
 c8e:	a1 fe       	sbrs	r10, 1
 c90:	02 c0       	rjmp	.+4      	; 0xc96 <vfprintf+0x37a>
 c92:	8b e2       	ldi	r24, 0x2B	; 43
 c94:	01 c0       	rjmp	.+2      	; 0xc98 <vfprintf+0x37c>
 c96:	80 e2       	ldi	r24, 0x20	; 32
 c98:	a7 fc       	sbrc	r10, 7
 c9a:	8d e2       	ldi	r24, 0x2D	; 45
 c9c:	b6 01       	movw	r22, r12
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	50 d0       	rcall	.+160    	; 0xd42 <fputc>
 ca2:	89 14       	cp	r8, r9
 ca4:	30 f4       	brcc	.+12     	; 0xcb2 <vfprintf+0x396>
 ca6:	b6 01       	movw	r22, r12
 ca8:	80 e3       	ldi	r24, 0x30	; 48
 caa:	90 e0       	ldi	r25, 0x00	; 0
 cac:	4a d0       	rcall	.+148    	; 0xd42 <fputc>
 cae:	9a 94       	dec	r9
 cb0:	f8 cf       	rjmp	.-16     	; 0xca2 <vfprintf+0x386>
 cb2:	8a 94       	dec	r8
 cb4:	f3 01       	movw	r30, r6
 cb6:	e8 0d       	add	r30, r8
 cb8:	f1 1d       	adc	r31, r1
 cba:	80 81       	ld	r24, Z
 cbc:	b6 01       	movw	r22, r12
 cbe:	90 e0       	ldi	r25, 0x00	; 0
 cc0:	40 d0       	rcall	.+128    	; 0xd42 <fputc>
 cc2:	81 10       	cpse	r8, r1
 cc4:	f6 cf       	rjmp	.-20     	; 0xcb2 <vfprintf+0x396>
 cc6:	22 20       	and	r2, r2
 cc8:	09 f4       	brne	.+2      	; 0xccc <vfprintf+0x3b0>
 cca:	4e ce       	rjmp	.-868    	; 0x968 <vfprintf+0x4c>
 ccc:	b6 01       	movw	r22, r12
 cce:	80 e2       	ldi	r24, 0x20	; 32
 cd0:	90 e0       	ldi	r25, 0x00	; 0
 cd2:	37 d0       	rcall	.+110    	; 0xd42 <fputc>
 cd4:	2a 94       	dec	r2
 cd6:	f7 cf       	rjmp	.-18     	; 0xcc6 <vfprintf+0x3aa>
 cd8:	f6 01       	movw	r30, r12
 cda:	86 81       	ldd	r24, Z+6	; 0x06
 cdc:	97 81       	ldd	r25, Z+7	; 0x07
 cde:	02 c0       	rjmp	.+4      	; 0xce4 <vfprintf+0x3c8>
 ce0:	8f ef       	ldi	r24, 0xFF	; 255
 ce2:	9f ef       	ldi	r25, 0xFF	; 255
 ce4:	2b 96       	adiw	r28, 0x0b	; 11
 ce6:	0f b6       	in	r0, 0x3f	; 63
 ce8:	f8 94       	cli
 cea:	de bf       	out	0x3e, r29	; 62
 cec:	0f be       	out	0x3f, r0	; 63
 cee:	cd bf       	out	0x3d, r28	; 61
 cf0:	df 91       	pop	r29
 cf2:	cf 91       	pop	r28
 cf4:	1f 91       	pop	r17
 cf6:	0f 91       	pop	r16
 cf8:	ff 90       	pop	r15
 cfa:	ef 90       	pop	r14
 cfc:	df 90       	pop	r13
 cfe:	cf 90       	pop	r12
 d00:	bf 90       	pop	r11
 d02:	af 90       	pop	r10
 d04:	9f 90       	pop	r9
 d06:	8f 90       	pop	r8
 d08:	7f 90       	pop	r7
 d0a:	6f 90       	pop	r6
 d0c:	5f 90       	pop	r5
 d0e:	4f 90       	pop	r4
 d10:	3f 90       	pop	r3
 d12:	2f 90       	pop	r2
 d14:	08 95       	ret

00000d16 <strnlen_P>:
 d16:	fc 01       	movw	r30, r24
 d18:	05 90       	lpm	r0, Z+
 d1a:	61 50       	subi	r22, 0x01	; 1
 d1c:	70 40       	sbci	r23, 0x00	; 0
 d1e:	01 10       	cpse	r0, r1
 d20:	d8 f7       	brcc	.-10     	; 0xd18 <strnlen_P+0x2>
 d22:	80 95       	com	r24
 d24:	90 95       	com	r25
 d26:	8e 0f       	add	r24, r30
 d28:	9f 1f       	adc	r25, r31
 d2a:	08 95       	ret

00000d2c <strnlen>:
 d2c:	fc 01       	movw	r30, r24
 d2e:	61 50       	subi	r22, 0x01	; 1
 d30:	70 40       	sbci	r23, 0x00	; 0
 d32:	01 90       	ld	r0, Z+
 d34:	01 10       	cpse	r0, r1
 d36:	d8 f7       	brcc	.-10     	; 0xd2e <strnlen+0x2>
 d38:	80 95       	com	r24
 d3a:	90 95       	com	r25
 d3c:	8e 0f       	add	r24, r30
 d3e:	9f 1f       	adc	r25, r31
 d40:	08 95       	ret

00000d42 <fputc>:
 d42:	0f 93       	push	r16
 d44:	1f 93       	push	r17
 d46:	cf 93       	push	r28
 d48:	df 93       	push	r29
 d4a:	fb 01       	movw	r30, r22
 d4c:	23 81       	ldd	r18, Z+3	; 0x03
 d4e:	21 fd       	sbrc	r18, 1
 d50:	03 c0       	rjmp	.+6      	; 0xd58 <fputc+0x16>
 d52:	8f ef       	ldi	r24, 0xFF	; 255
 d54:	9f ef       	ldi	r25, 0xFF	; 255
 d56:	2c c0       	rjmp	.+88     	; 0xdb0 <fputc+0x6e>
 d58:	22 ff       	sbrs	r18, 2
 d5a:	16 c0       	rjmp	.+44     	; 0xd88 <fputc+0x46>
 d5c:	46 81       	ldd	r20, Z+6	; 0x06
 d5e:	57 81       	ldd	r21, Z+7	; 0x07
 d60:	24 81       	ldd	r18, Z+4	; 0x04
 d62:	35 81       	ldd	r19, Z+5	; 0x05
 d64:	42 17       	cp	r20, r18
 d66:	53 07       	cpc	r21, r19
 d68:	44 f4       	brge	.+16     	; 0xd7a <fputc+0x38>
 d6a:	a0 81       	ld	r26, Z
 d6c:	b1 81       	ldd	r27, Z+1	; 0x01
 d6e:	9d 01       	movw	r18, r26
 d70:	2f 5f       	subi	r18, 0xFF	; 255
 d72:	3f 4f       	sbci	r19, 0xFF	; 255
 d74:	31 83       	std	Z+1, r19	; 0x01
 d76:	20 83       	st	Z, r18
 d78:	8c 93       	st	X, r24
 d7a:	26 81       	ldd	r18, Z+6	; 0x06
 d7c:	37 81       	ldd	r19, Z+7	; 0x07
 d7e:	2f 5f       	subi	r18, 0xFF	; 255
 d80:	3f 4f       	sbci	r19, 0xFF	; 255
 d82:	37 83       	std	Z+7, r19	; 0x07
 d84:	26 83       	std	Z+6, r18	; 0x06
 d86:	14 c0       	rjmp	.+40     	; 0xdb0 <fputc+0x6e>
 d88:	8b 01       	movw	r16, r22
 d8a:	ec 01       	movw	r28, r24
 d8c:	fb 01       	movw	r30, r22
 d8e:	00 84       	ldd	r0, Z+8	; 0x08
 d90:	f1 85       	ldd	r31, Z+9	; 0x09
 d92:	e0 2d       	mov	r30, r0
 d94:	19 95       	eicall
 d96:	89 2b       	or	r24, r25
 d98:	e1 f6       	brne	.-72     	; 0xd52 <fputc+0x10>
 d9a:	d8 01       	movw	r26, r16
 d9c:	16 96       	adiw	r26, 0x06	; 6
 d9e:	8d 91       	ld	r24, X+
 da0:	9c 91       	ld	r25, X
 da2:	17 97       	sbiw	r26, 0x07	; 7
 da4:	01 96       	adiw	r24, 0x01	; 1
 da6:	17 96       	adiw	r26, 0x07	; 7
 da8:	9c 93       	st	X, r25
 daa:	8e 93       	st	-X, r24
 dac:	16 97       	sbiw	r26, 0x06	; 6
 dae:	ce 01       	movw	r24, r28
 db0:	df 91       	pop	r29
 db2:	cf 91       	pop	r28
 db4:	1f 91       	pop	r17
 db6:	0f 91       	pop	r16
 db8:	08 95       	ret

00000dba <__ultoa_invert>:
 dba:	fa 01       	movw	r30, r20
 dbc:	aa 27       	eor	r26, r26
 dbe:	28 30       	cpi	r18, 0x08	; 8
 dc0:	51 f1       	breq	.+84     	; 0xe16 <__ultoa_invert+0x5c>
 dc2:	20 31       	cpi	r18, 0x10	; 16
 dc4:	81 f1       	breq	.+96     	; 0xe26 <__ultoa_invert+0x6c>
 dc6:	e8 94       	clt
 dc8:	6f 93       	push	r22
 dca:	6e 7f       	andi	r22, 0xFE	; 254
 dcc:	6e 5f       	subi	r22, 0xFE	; 254
 dce:	7f 4f       	sbci	r23, 0xFF	; 255
 dd0:	8f 4f       	sbci	r24, 0xFF	; 255
 dd2:	9f 4f       	sbci	r25, 0xFF	; 255
 dd4:	af 4f       	sbci	r26, 0xFF	; 255
 dd6:	b1 e0       	ldi	r27, 0x01	; 1
 dd8:	3e d0       	rcall	.+124    	; 0xe56 <__ultoa_invert+0x9c>
 dda:	b4 e0       	ldi	r27, 0x04	; 4
 ddc:	3c d0       	rcall	.+120    	; 0xe56 <__ultoa_invert+0x9c>
 dde:	67 0f       	add	r22, r23
 de0:	78 1f       	adc	r23, r24
 de2:	89 1f       	adc	r24, r25
 de4:	9a 1f       	adc	r25, r26
 de6:	a1 1d       	adc	r26, r1
 de8:	68 0f       	add	r22, r24
 dea:	79 1f       	adc	r23, r25
 dec:	8a 1f       	adc	r24, r26
 dee:	91 1d       	adc	r25, r1
 df0:	a1 1d       	adc	r26, r1
 df2:	6a 0f       	add	r22, r26
 df4:	71 1d       	adc	r23, r1
 df6:	81 1d       	adc	r24, r1
 df8:	91 1d       	adc	r25, r1
 dfa:	a1 1d       	adc	r26, r1
 dfc:	20 d0       	rcall	.+64     	; 0xe3e <__ultoa_invert+0x84>
 dfe:	09 f4       	brne	.+2      	; 0xe02 <__ultoa_invert+0x48>
 e00:	68 94       	set
 e02:	3f 91       	pop	r19
 e04:	2a e0       	ldi	r18, 0x0A	; 10
 e06:	26 9f       	mul	r18, r22
 e08:	11 24       	eor	r1, r1
 e0a:	30 19       	sub	r19, r0
 e0c:	30 5d       	subi	r19, 0xD0	; 208
 e0e:	31 93       	st	Z+, r19
 e10:	de f6       	brtc	.-74     	; 0xdc8 <__ultoa_invert+0xe>
 e12:	cf 01       	movw	r24, r30
 e14:	08 95       	ret
 e16:	46 2f       	mov	r20, r22
 e18:	47 70       	andi	r20, 0x07	; 7
 e1a:	40 5d       	subi	r20, 0xD0	; 208
 e1c:	41 93       	st	Z+, r20
 e1e:	b3 e0       	ldi	r27, 0x03	; 3
 e20:	0f d0       	rcall	.+30     	; 0xe40 <__ultoa_invert+0x86>
 e22:	c9 f7       	brne	.-14     	; 0xe16 <__ultoa_invert+0x5c>
 e24:	f6 cf       	rjmp	.-20     	; 0xe12 <__ultoa_invert+0x58>
 e26:	46 2f       	mov	r20, r22
 e28:	4f 70       	andi	r20, 0x0F	; 15
 e2a:	40 5d       	subi	r20, 0xD0	; 208
 e2c:	4a 33       	cpi	r20, 0x3A	; 58
 e2e:	18 f0       	brcs	.+6      	; 0xe36 <__ultoa_invert+0x7c>
 e30:	49 5d       	subi	r20, 0xD9	; 217
 e32:	31 fd       	sbrc	r19, 1
 e34:	40 52       	subi	r20, 0x20	; 32
 e36:	41 93       	st	Z+, r20
 e38:	02 d0       	rcall	.+4      	; 0xe3e <__ultoa_invert+0x84>
 e3a:	a9 f7       	brne	.-22     	; 0xe26 <__ultoa_invert+0x6c>
 e3c:	ea cf       	rjmp	.-44     	; 0xe12 <__ultoa_invert+0x58>
 e3e:	b4 e0       	ldi	r27, 0x04	; 4
 e40:	a6 95       	lsr	r26
 e42:	97 95       	ror	r25
 e44:	87 95       	ror	r24
 e46:	77 95       	ror	r23
 e48:	67 95       	ror	r22
 e4a:	ba 95       	dec	r27
 e4c:	c9 f7       	brne	.-14     	; 0xe40 <__ultoa_invert+0x86>
 e4e:	00 97       	sbiw	r24, 0x00	; 0
 e50:	61 05       	cpc	r22, r1
 e52:	71 05       	cpc	r23, r1
 e54:	08 95       	ret
 e56:	9b 01       	movw	r18, r22
 e58:	ac 01       	movw	r20, r24
 e5a:	0a 2e       	mov	r0, r26
 e5c:	06 94       	lsr	r0
 e5e:	57 95       	ror	r21
 e60:	47 95       	ror	r20
 e62:	37 95       	ror	r19
 e64:	27 95       	ror	r18
 e66:	ba 95       	dec	r27
 e68:	c9 f7       	brne	.-14     	; 0xe5c <__ultoa_invert+0xa2>
 e6a:	62 0f       	add	r22, r18
 e6c:	73 1f       	adc	r23, r19
 e6e:	84 1f       	adc	r24, r20
 e70:	95 1f       	adc	r25, r21
 e72:	a0 1d       	adc	r26, r0
 e74:	08 95       	ret

00000e76 <_exit>:
 e76:	f8 94       	cli

00000e78 <__stop_program>:
 e78:	ff cf       	rjmp	.-2      	; 0xe78 <__stop_program>
