
Hohensteuerung.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007c  00800200  00000f6c  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  0080027c  0080027c  0000107c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000107c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001118  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026ab  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fd4  00000000  00000000  000039b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001800  00000000  00000000  00004987  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000694  00000000  00000000  00006188  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d6f  00000000  00000000  0000681c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002183  00000000  00000000  0000758b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000970e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	48 c4       	rjmp	.+2192   	; 0x8ee <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e6       	ldi	r30, 0x6C	; 108
  fc:	ff e0       	ldi	r31, 0x0F	; 15
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 37       	cpi	r26, 0x7C	; 124
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ac e7       	ldi	r26, 0x7C	; 124
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 3f       	cpi	r26, 0xFA	; 250
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	23 c7       	rjmp	.+3654   	; 0xf68 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#define LOWPERIOD               1000
#define LOCKPERIOD              2000
#define LOCKONTIME              200

int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	29 97       	sbiw	r28, 0x09	; 9
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
    uint32_t blinktimer=0;
    uint8_t anzeige=0;
    uint8_t cardsensin=0;
    uint8_t control=0;
    
    uint8_t hex_to_display[]= {
 138:	89 e0       	ldi	r24, 0x09	; 9
 13a:	e0 e0       	ldi	r30, 0x00	; 0
 13c:	f2 e0       	ldi	r31, 0x02	; 2
 13e:	de 01       	movw	r26, r28
 140:	11 96       	adiw	r26, 0x01	; 1
 142:	01 90       	ld	r0, Z+
 144:	0d 92       	st	X+, r0
 146:	8a 95       	dec	r24
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0x1e>
        4,
        12,
        8
    };
    
    initBoard(0);
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	6a d2       	rcall	.+1236   	; 0x622 <initBoard>
    uint8_t flagcontrol=0;
    uint8_t flagdanger=0;
    uint8_t flaglock=0;
    uint8_t flughohe=0;
    uint32_t blinktimer=0;
    uint8_t anzeige=0;
 14e:	00 e0       	ldi	r16, 0x00	; 0
    uint8_t flaglow=0;
    uint8_t flagcontrol=0;
    uint8_t flagdanger=0;
    uint8_t flaglock=0;
    uint8_t flughohe=0;
    uint32_t blinktimer=0;
 150:	c1 2c       	mov	r12, r1
 152:	d1 2c       	mov	r13, r1
 154:	76 01       	movw	r14, r12
    uint8_t downin=0;
    uint8_t flaglow=0;
    uint8_t flagcontrol=0;
    uint8_t flagdanger=0;
    uint8_t flaglock=0;
    uint8_t flughohe=0;
 156:	91 2c       	mov	r9, r1
    uint8_t upin=0;
    uint8_t downin=0;
    uint8_t flaglow=0;
    uint8_t flagcontrol=0;
    uint8_t flagdanger=0;
    uint8_t flaglock=0;
 158:	71 2c       	mov	r7, r1
    uint8_t posflank=0;
    uint8_t upin=0;
    uint8_t downin=0;
    uint8_t flaglow=0;
    uint8_t flagcontrol=0;
    uint8_t flagdanger=0;
 15a:	61 2c       	mov	r6, r1
    uint8_t altbuttonin=0;
    uint8_t posflank=0;
    uint8_t upin=0;
    uint8_t downin=0;
    uint8_t flaglow=0;
    uint8_t flagcontrol=0;
 15c:	81 2c       	mov	r8, r1
    uint8_t buttonin=0;
    uint8_t altbuttonin=0;
    uint8_t posflank=0;
    uint8_t upin=0;
    uint8_t downin=0;
    uint8_t flaglow=0;
 15e:	51 2c       	mov	r5, r1
    zustand_t zustand=AUS;
    
    uint8_t switchin=0;
    uint8_t powerin=0;
    uint8_t fahrwerkin=0;
    uint8_t buttonin=0;
 160:	b1 2c       	mov	r11, r1

    while (1) 
    {
        altbuttonin=buttonin;
        
        switchin=switchReadAll();
 162:	10 e0       	ldi	r17, 0x00	; 0
 164:	ea d0       	rcall	.+468    	; 0x33a <switchReadAll>
        buttonin=buttonReadAllPL();
 166:	48 2e       	mov	r4, r24
 168:	ea d0       	rcall	.+468    	; 0x33e <buttonReadAllPL>
 16a:	a8 2e       	mov	r10, r24
        powerin= switchin&INMASKPOWER;
 16c:	44 2d       	mov	r20, r4
 16e:	41 70       	andi	r20, 0x01	; 1
        fahrwerkin= switchin&INMASKFAHRWERK;
 170:	84 2d       	mov	r24, r4
 172:	82 70       	andi	r24, 0x02	; 2
        
        posflank=(altbuttonin^buttonin)&buttonin;
 174:	9b 2d       	mov	r25, r11
 176:	90 95       	com	r25
 178:	9a 21       	and	r25, r10
        upin=posflank&INMASKUP;
 17a:	39 2f       	mov	r19, r25
 17c:	31 70       	andi	r19, 0x01	; 1
        downin=posflank&INMASKDOWN;
 17e:	29 2f       	mov	r18, r25
 180:	22 70       	andi	r18, 0x02	; 2
        cardsensin=posflank&INMASKCARDSENS;
 182:	90 74       	andi	r25, 0x40	; 64
        
        if (flagcontrol)
 184:	88 20       	and	r8, r8
 186:	51 f0       	breq	.+20     	; 0x19c <main+0x78>
        {
            if (upin&&(flughohe<8))
 188:	33 23       	and	r19, r19
 18a:	21 f0       	breq	.+8      	; 0x194 <main+0x70>
 18c:	37 e0       	ldi	r19, 0x07	; 7
 18e:	39 15       	cp	r19, r9
 190:	08 f0       	brcs	.+2      	; 0x194 <main+0x70>
            {
                flughohe=flughohe+1;
 192:	93 94       	inc	r9
            }
            if (downin&&flughohe)
 194:	22 23       	and	r18, r18
 196:	11 f0       	breq	.+4      	; 0x19c <main+0x78>
 198:	91 10       	cpse	r9, r1
            {
                flughohe=flughohe-1;
 19a:	9a 94       	dec	r9
            }
        }
        switch (zustand)
 19c:	12 30       	cpi	r17, 0x02	; 2
 19e:	99 f1       	breq	.+102    	; 0x206 <main+0xe2>
 1a0:	28 f4       	brcc	.+10     	; 0x1ac <main+0x88>
 1a2:	11 23       	and	r17, r17
 1a4:	41 f0       	breq	.+16     	; 0x1b6 <main+0x92>
 1a6:	11 30       	cpi	r17, 0x01	; 1
 1a8:	61 f0       	breq	.+24     	; 0x1c2 <main+0x9e>
 1aa:	6f c0       	rjmp	.+222    	; 0x28a <main+0x166>
 1ac:	13 30       	cpi	r17, 0x03	; 3
 1ae:	99 f1       	breq	.+102    	; 0x216 <main+0xf2>
 1b0:	14 30       	cpi	r17, 0x04	; 4
 1b2:	e1 f1       	breq	.+120    	; 0x22c <main+0x108>
 1b4:	6a c0       	rjmp	.+212    	; 0x28a <main+0x166>
        {
            case AUS: 
            anzeige=0;
            flagcontrol=0;
            flughohe=0;
            if (powerin)
 1b6:	41 11       	cpse	r20, r1
 1b8:	4a c0       	rjmp	.+148    	; 0x24e <main+0x12a>
            }
        }
        switch (zustand)
        {
            case AUS: 
            anzeige=0;
 1ba:	00 e0       	ldi	r16, 0x00	; 0
            flagcontrol=0;
            flughohe=0;
 1bc:	91 2c       	mov	r9, r1
        }
        switch (zustand)
        {
            case AUS: 
            anzeige=0;
            flagcontrol=0;
 1be:	81 2c       	mov	r8, r1
 1c0:	64 c0       	rjmp	.+200    	; 0x28a <main+0x166>
            control=1;
        	break;
            
            case STARTLANDEN:
            flaglow=1;
            anzeige=anzeige|OUTMASKFAHRWERK;
 1c2:	00 68       	ori	r16, 0x80	; 128
            flagcontrol=1;
            if (fahrwerkin)
 1c4:	88 23       	and	r24, r24
 1c6:	41 f0       	breq	.+16     	; 0x1d8 <main+0xb4>
            {
                if (flughohe)
 1c8:	99 20       	and	r9, r9
 1ca:	49 f0       	breq	.+18     	; 0x1de <main+0xba>
                else
                {
                    zustand=SPERRUNG;
                }
                flaglow=0;
                blinktimer=0;
 1cc:	c1 2c       	mov	r12, r1
 1ce:	d1 2c       	mov	r13, r1
 1d0:	76 01       	movw	r14, r12
                } 
                else
                {
                    zustand=SPERRUNG;
                }
                flaglow=0;
 1d2:	51 2c       	mov	r5, r1
            flagcontrol=1;
            if (fahrwerkin)
            {
                if (flughohe)
                {
                    zustand=ABSTURZGEFAHR;
 1d4:	13 e0       	ldi	r17, 0x03	; 3
 1d6:	08 c0       	rjmp	.+16     	; 0x1e8 <main+0xc4>
            }
            control=1;
        	break;
            
            case STARTLANDEN:
            flaglow=1;
 1d8:	55 24       	eor	r5, r5
 1da:	53 94       	inc	r5
 1dc:	05 c0       	rjmp	.+10     	; 0x1e8 <main+0xc4>
                else
                {
                    zustand=SPERRUNG;
                }
                flaglow=0;
                blinktimer=0;
 1de:	c1 2c       	mov	r12, r1
 1e0:	d1 2c       	mov	r13, r1
 1e2:	76 01       	movw	r14, r12
                } 
                else
                {
                    zustand=SPERRUNG;
                }
                flaglow=0;
 1e4:	51 2c       	mov	r5, r1
                {
                    zustand=ABSTURZGEFAHR;
                } 
                else
                {
                    zustand=SPERRUNG;
 1e6:	12 e0       	ldi	r17, 0x02	; 2
                }
                flaglow=0;
                blinktimer=0;
            }
            if (!powerin&&!flughohe)
 1e8:	41 11       	cpse	r20, r1
 1ea:	07 c0       	rjmp	.+14     	; 0x1fa <main+0xd6>
 1ec:	91 10       	cpse	r9, r1
 1ee:	05 c0       	rjmp	.+10     	; 0x1fa <main+0xd6>
            {
                zustand=AUS;
                flaglow=0;
                blinktimer=0;
 1f0:	c1 2c       	mov	r12, r1
 1f2:	d1 2c       	mov	r13, r1
 1f4:	76 01       	movw	r14, r12
                blinktimer=0;
            }
            if (!powerin&&!flughohe)
            {
                zustand=AUS;
                flaglow=0;
 1f6:	51 2c       	mov	r5, r1
                flaglow=0;
                blinktimer=0;
            }
            if (!powerin&&!flughohe)
            {
                zustand=AUS;
 1f8:	10 e0       	ldi	r17, 0x00	; 0
                flaglow=0;
                blinktimer=0;
            }
            if (flughohe>1)
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	89 15       	cp	r24, r9
 1fe:	60 f1       	brcs	.+88     	; 0x258 <main+0x134>
        	break;
            
            case STARTLANDEN:
            flaglow=1;
            anzeige=anzeige|OUTMASKFAHRWERK;
            flagcontrol=1;
 200:	88 24       	eor	r8, r8
 202:	83 94       	inc	r8
 204:	42 c0       	rjmp	.+132    	; 0x28a <main+0x166>
            break;
            
            case SPERRUNG:
            flaglock=1;
            flagcontrol=0;
            if (cardsensin&&!fahrwerkin)
 206:	99 23       	and	r25, r25
 208:	79 f1       	breq	.+94     	; 0x268 <main+0x144>
 20a:	88 23       	and	r24, r24
 20c:	89 f1       	breq	.+98     	; 0x270 <main+0x14c>
            }
            control=2;
            break;
            
            case SPERRUNG:
            flaglock=1;
 20e:	77 24       	eor	r7, r7
 210:	73 94       	inc	r7
            flagcontrol=0;
 212:	81 2c       	mov	r8, r1
 214:	3a c0       	rjmp	.+116    	; 0x28a <main+0x166>
            }
            control=4;
            break;
            
            case ABSTURZGEFAHR:
            if (fahrwerkin)
 216:	88 23       	and	r24, r24
 218:	11 f0       	breq	.+4      	; 0x21e <main+0xfa>
            {
                anzeige=anzeige&~OUTMASKFAHRWERK;
 21a:	0f 77       	andi	r16, 0x7F	; 127
 21c:	01 c0       	rjmp	.+2      	; 0x220 <main+0xfc>
            }
            else
            {
                anzeige=anzeige|OUTMASKFAHRWERK;
 21e:	00 68       	ori	r16, 0x80	; 128
            }
            flagdanger=1;
            if (flughohe>1)
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	99 15       	cp	r25, r9
 224:	68 f1       	brcs	.+90     	; 0x280 <main+0x15c>
            }
            else
            {
                anzeige=anzeige|OUTMASKFAHRWERK;
            }
            flagdanger=1;
 226:	66 24       	eor	r6, r6
 228:	63 94       	inc	r6
 22a:	2f c0       	rjmp	.+94     	; 0x28a <main+0x166>
            }
            control=8;
            break;
            
            case FLUG:
            anzeige=anzeige|hex_to_display[flughohe];
 22c:	e1 e0       	ldi	r30, 0x01	; 1
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	ec 0f       	add	r30, r28
 232:	fd 1f       	adc	r31, r29
 234:	e9 0d       	add	r30, r9
 236:	f1 1d       	adc	r31, r1
 238:	00 81       	ld	r16, Z
            anzeige=anzeige&(hex_to_display[flughohe]&OUTMASKHOHE);
 23a:	0f 70       	andi	r16, 0x0F	; 15
            if (fahrwerkin)
 23c:	81 11       	cpse	r24, r1
 23e:	01 c0       	rjmp	.+2      	; 0x242 <main+0x11e>
            {
                anzeige=anzeige&~(OUTMASKFAHRWERK|OUTMASKWARNUNG);
            } 
            else
            {
                anzeige=anzeige|(OUTMASKFAHRWERK|OUTMASKWARNUNG);
 240:	00 6a       	ori	r16, 0xA0	; 160
            }
            if (flughohe<2)
 242:	31 e0       	ldi	r19, 0x01	; 1
 244:	39 15       	cp	r19, r9
 246:	08 f1       	brcs	.+66     	; 0x28a <main+0x166>
            {
                anzeige=anzeige&~OUTMASKWARNUNG;
 248:	0f 7d       	andi	r16, 0xDF	; 223
                zustand=STARTLANDEN;
 24a:	11 e0       	ldi	r17, 0x01	; 1
 24c:	1e c0       	rjmp	.+60     	; 0x28a <main+0x166>
            }
        }
        switch (zustand)
        {
            case AUS: 
            anzeige=0;
 24e:	00 e0       	ldi	r16, 0x00	; 0
            flagcontrol=0;
            flughohe=0;
 250:	91 2c       	mov	r9, r1
        }
        switch (zustand)
        {
            case AUS: 
            anzeige=0;
            flagcontrol=0;
 252:	81 2c       	mov	r8, r1
            flughohe=0;
            if (powerin)
            {
                zustand=STARTLANDEN;
 254:	11 e0       	ldi	r17, 0x01	; 1
 256:	19 c0       	rjmp	.+50     	; 0x28a <main+0x166>
            }
            if (flughohe>1)
            {
                zustand=FLUG;
                flaglow=0;
                blinktimer=0;
 258:	c1 2c       	mov	r12, r1
 25a:	d1 2c       	mov	r13, r1
 25c:	76 01       	movw	r14, r12
        	break;
            
            case STARTLANDEN:
            flaglow=1;
            anzeige=anzeige|OUTMASKFAHRWERK;
            flagcontrol=1;
 25e:	88 24       	eor	r8, r8
 260:	83 94       	inc	r8
                blinktimer=0;
            }
            if (flughohe>1)
            {
                zustand=FLUG;
                flaglow=0;
 262:	51 2c       	mov	r5, r1
                flaglow=0;
                blinktimer=0;
            }
            if (flughohe>1)
            {
                zustand=FLUG;
 264:	14 e0       	ldi	r17, 0x04	; 4
 266:	11 c0       	rjmp	.+34     	; 0x28a <main+0x166>
            }
            control=2;
            break;
            
            case SPERRUNG:
            flaglock=1;
 268:	77 24       	eor	r7, r7
 26a:	73 94       	inc	r7
            flagcontrol=0;
 26c:	81 2c       	mov	r8, r1
 26e:	0d c0       	rjmp	.+26     	; 0x28a <main+0x166>
            if (cardsensin&&!fahrwerkin)
            {
                zustand=STARTLANDEN;
                flaglock=0;
                blinktimer=0;
                anzeige=0;
 270:	00 e0       	ldi	r16, 0x00	; 0
            flagcontrol=0;
            if (cardsensin&&!fahrwerkin)
            {
                zustand=STARTLANDEN;
                flaglock=0;
                blinktimer=0;
 272:	c1 2c       	mov	r12, r1
 274:	d1 2c       	mov	r13, r1
 276:	76 01       	movw	r14, r12
            flaglock=1;
            flagcontrol=0;
            if (cardsensin&&!fahrwerkin)
            {
                zustand=STARTLANDEN;
                flaglock=0;
 278:	71 2c       	mov	r7, r1
            control=2;
            break;
            
            case SPERRUNG:
            flaglock=1;
            flagcontrol=0;
 27a:	81 2c       	mov	r8, r1
            if (cardsensin&&!fahrwerkin)
            {
                zustand=STARTLANDEN;
 27c:	11 e0       	ldi	r17, 0x01	; 1
 27e:	05 c0       	rjmp	.+10     	; 0x28a <main+0x166>
            flagdanger=1;
            if (flughohe>1)
            {
                zustand=FLUG;
                flagdanger=0;
                blinktimer=0;
 280:	c1 2c       	mov	r12, r1
 282:	d1 2c       	mov	r13, r1
 284:	76 01       	movw	r14, r12
            }
            flagdanger=1;
            if (flughohe>1)
            {
                zustand=FLUG;
                flagdanger=0;
 286:	61 2c       	mov	r6, r1
                anzeige=anzeige|OUTMASKFAHRWERK;
            }
            flagdanger=1;
            if (flughohe>1)
            {
                zustand=FLUG;
 288:	14 e0       	ldi	r17, 0x04	; 4
                zustand=STARTLANDEN;
            }
            control=16;
            break;
        }
        if (flaglock)
 28a:	77 20       	and	r7, r7
 28c:	91 f0       	breq	.+36     	; 0x2b2 <main+0x18e>
        {
            if (blinktimer>LOCKPERIOD)
 28e:	81 ed       	ldi	r24, 0xD1	; 209
 290:	c8 16       	cp	r12, r24
 292:	87 e0       	ldi	r24, 0x07	; 7
 294:	d8 06       	cpc	r13, r24
 296:	e1 04       	cpc	r14, r1
 298:	f1 04       	cpc	r15, r1
 29a:	18 f0       	brcs	.+6      	; 0x2a2 <main+0x17e>
            {
                blinktimer=0;
 29c:	c1 2c       	mov	r12, r1
 29e:	d1 2c       	mov	r13, r1
 2a0:	76 01       	movw	r14, r12
            }
            if (blinktimer>LOCKONTIME)
 2a2:	99 ec       	ldi	r25, 0xC9	; 201
 2a4:	c9 16       	cp	r12, r25
 2a6:	d1 04       	cpc	r13, r1
 2a8:	e1 04       	cpc	r14, r1
 2aa:	f1 04       	cpc	r15, r1
 2ac:	70 f1       	brcs	.+92     	; 0x30a <main+0x1e6>
            {
                anzeige=0;
 2ae:	00 e0       	ldi	r16, 0x00	; 0
 2b0:	31 c0       	rjmp	.+98     	; 0x314 <main+0x1f0>
                anzeige=OUTMASKHOHE|OUTMASKFAHRWERK|OUTMASKWARNUNG;
            }
        } 
        else
        {
            if (flagdanger)
 2b2:	66 20       	and	r6, r6
 2b4:	99 f0       	breq	.+38     	; 0x2dc <main+0x1b8>
            {
                if (blinktimer>DANGERPERIOD)
 2b6:	39 ec       	ldi	r19, 0xC9	; 201
 2b8:	c3 16       	cp	r12, r19
 2ba:	d1 04       	cpc	r13, r1
 2bc:	e1 04       	cpc	r14, r1
 2be:	f1 04       	cpc	r15, r1
 2c0:	18 f0       	brcs	.+6      	; 0x2c8 <main+0x1a4>
                {
                    blinktimer=0;
 2c2:	c1 2c       	mov	r12, r1
 2c4:	d1 2c       	mov	r13, r1
 2c6:	76 01       	movw	r14, r12
                }
                if (blinktimer>(DANGERPERIOD/2))
 2c8:	85 e6       	ldi	r24, 0x65	; 101
 2ca:	c8 16       	cp	r12, r24
 2cc:	d1 04       	cpc	r13, r1
 2ce:	e1 04       	cpc	r14, r1
 2d0:	f1 04       	cpc	r15, r1
 2d2:	10 f0       	brcs	.+4      	; 0x2d8 <main+0x1b4>
                {
                    anzeige=anzeige&~OUTMASKHOHE;
 2d4:	00 7f       	andi	r16, 0xF0	; 240
 2d6:	1e c0       	rjmp	.+60     	; 0x314 <main+0x1f0>
                } 
                else
                {
                    anzeige=anzeige|OUTMASKHOHE;
 2d8:	0f 60       	ori	r16, 0x0F	; 15
 2da:	1c c0       	rjmp	.+56     	; 0x314 <main+0x1f0>
                }
            } 
            else
            {
                if (flaglow)
 2dc:	55 20       	and	r5, r5
 2de:	b9 f0       	breq	.+46     	; 0x30e <main+0x1ea>
                {
                    if (blinktimer>LOWPERIOD)
 2e0:	99 ee       	ldi	r25, 0xE9	; 233
 2e2:	c9 16       	cp	r12, r25
 2e4:	93 e0       	ldi	r25, 0x03	; 3
 2e6:	d9 06       	cpc	r13, r25
 2e8:	e1 04       	cpc	r14, r1
 2ea:	f1 04       	cpc	r15, r1
 2ec:	18 f0       	brcs	.+6      	; 0x2f4 <main+0x1d0>
                    {
                        blinktimer=0;
 2ee:	c1 2c       	mov	r12, r1
 2f0:	d1 2c       	mov	r13, r1
 2f2:	76 01       	movw	r14, r12
                    }
                    if (blinktimer>(LOWPERIOD/2))
 2f4:	35 ef       	ldi	r19, 0xF5	; 245
 2f6:	c3 16       	cp	r12, r19
 2f8:	31 e0       	ldi	r19, 0x01	; 1
 2fa:	d3 06       	cpc	r13, r19
 2fc:	e1 04       	cpc	r14, r1
 2fe:	f1 04       	cpc	r15, r1
 300:	10 f0       	brcs	.+4      	; 0x306 <main+0x1e2>
                    {
                        anzeige=anzeige&~OUTMASKLOW;
 302:	0e 7f       	andi	r16, 0xFE	; 254
 304:	07 c0       	rjmp	.+14     	; 0x314 <main+0x1f0>
                    } 
                    else
                    {
                        anzeige=anzeige|OUTMASKLOW;
 306:	01 60       	ori	r16, 0x01	; 1
 308:	05 c0       	rjmp	.+10     	; 0x314 <main+0x1f0>
            {
                anzeige=0;
            } 
            else
            {
                anzeige=OUTMASKHOHE|OUTMASKFAHRWERK|OUTMASKWARNUNG;
 30a:	0f ea       	ldi	r16, 0xAF	; 175
 30c:	03 c0       	rjmp	.+6      	; 0x314 <main+0x1f0>
                        anzeige=anzeige|OUTMASKLOW;
                    }
                } 
                else
                {
                    blinktimer=0;
 30e:	c1 2c       	mov	r12, r1
 310:	d1 2c       	mov	r13, r1
                }
            }
        }
        ledWriteAll(anzeige);
 312:	76 01       	movw	r14, r12
 314:	80 2f       	mov	r24, r16
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	0d d0       	rcall	.+26     	; 0x334 <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 31a:	8f e3       	ldi	r24, 0x3F	; 63
 31c:	9c e9       	ldi	r25, 0x9C	; 156
 31e:	01 97       	sbiw	r24, 0x01	; 1
 320:	f1 f7       	brne	.-4      	; 0x31e <main+0x1fa>
 322:	00 c0       	rjmp	.+0      	; 0x324 <main+0x200>
 324:	00 00       	nop
        
        _delay_ms(BLINKTAKT);
        blinktimer=blinktimer+BLINKTAKT;
 326:	9a e0       	ldi	r25, 0x0A	; 10
 328:	c9 0e       	add	r12, r25
 32a:	d1 1c       	adc	r13, r1
 32c:	e1 1c       	adc	r14, r1
 32e:	f1 1c       	adc	r15, r1
    while (1) 
    {
        altbuttonin=buttonin;
        
        switchin=switchReadAll();
        buttonin=buttonReadAllPL();
 330:	ba 2c       	mov	r11, r10
        }
        ledWriteAll(anzeige);
        
        _delay_ms(BLINKTAKT);
        blinktimer=blinktimer+BLINKTAKT;
    }
 332:	18 cf       	rjmp	.-464    	; 0x164 <main+0x40>

00000334 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 334:	82 b9       	out	0x02, r24	; 2
 336:	95 b9       	out	0x05, r25	; 5
 338:	08 95       	ret

0000033a <switchReadAll>:
 33a:	86 b1       	in	r24, 0x06	; 6
 33c:	08 95       	ret

0000033e <buttonReadAllPL>:
 33e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 342:	08 95       	ret

00000344 <startSystemTimeMs>:
 344:	83 e0       	ldi	r24, 0x03	; 3
 346:	84 bd       	out	0x24, r24	; 36
 348:	8b e0       	ldi	r24, 0x0B	; 11
 34a:	85 bd       	out	0x25, r24	; 37
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 352:	89 ef       	ldi	r24, 0xF9	; 249
 354:	87 bd       	out	0x27, r24	; 39
 356:	08 95       	ret

00000358 <initAdc>:
 358:	11 ba       	out	0x11, r1	; 17
 35a:	10 ba       	out	0x10, r1	; 16
 35c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 360:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 364:	80 e4       	ldi	r24, 0x40	; 64
 366:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 36a:	8f e0       	ldi	r24, 0x0F	; 15
 36c:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 370:	8f ef       	ldi	r24, 0xFF	; 255
 372:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 376:	ea e7       	ldi	r30, 0x7A	; 122
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	87 ea       	ldi	r24, 0xA7	; 167
 37c:	80 83       	st	Z, r24
 37e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 382:	80 81       	ld	r24, Z
 384:	80 64       	ori	r24, 0x40	; 64
 386:	80 83       	st	Z, r24
 388:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 38c:	84 ff       	sbrs	r24, 4
 38e:	fc cf       	rjmp	.-8      	; 0x388 <initAdc+0x30>
 390:	ea e7       	ldi	r30, 0x7A	; 122
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	80 81       	ld	r24, Z
 396:	8f 7e       	andi	r24, 0xEF	; 239
 398:	80 83       	st	Z, r24
 39a:	08 95       	ret

0000039c <rgbWrite>:
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	33 e0       	ldi	r19, 0x03	; 3
 3a0:	f9 01       	movw	r30, r18
 3a2:	e8 1b       	sub	r30, r24
 3a4:	f9 0b       	sbc	r31, r25
 3a6:	c9 01       	movw	r24, r18
 3a8:	86 1b       	sub	r24, r22
 3aa:	97 0b       	sbc	r25, r23
 3ac:	24 1b       	sub	r18, r20
 3ae:	35 0b       	sbc	r19, r21
 3b0:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 3b4:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 3b8:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 3bc:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 3c0:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 3c4:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 3c8:	08 95       	ret

000003ca <initRgb>:
 3ca:	8e ef       	ldi	r24, 0xFE	; 254
 3cc:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 3d0:	8b e1       	ldi	r24, 0x1B	; 27
 3d2:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 3d6:	83 e0       	ldi	r24, 0x03	; 3
 3d8:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 3dc:	8f ef       	ldi	r24, 0xFF	; 255
 3de:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 3e2:	40 e0       	ldi	r20, 0x00	; 0
 3e4:	50 e0       	ldi	r21, 0x00	; 0
 3e6:	60 e0       	ldi	r22, 0x00	; 0
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	d6 cf       	rjmp	.-84     	; 0x39c <rgbWrite>
 3f0:	08 95       	ret

000003f2 <lcdSid>:
 3f2:	88 23       	and	r24, r24
 3f4:	21 f0       	breq	.+8      	; 0x3fe <lcdSid+0xc>
 3f6:	84 b3       	in	r24, 0x14	; 20
 3f8:	81 60       	ori	r24, 0x01	; 1
 3fa:	84 bb       	out	0x14, r24	; 20
 3fc:	08 95       	ret
 3fe:	84 b3       	in	r24, 0x14	; 20
 400:	8e 7f       	andi	r24, 0xFE	; 254
 402:	84 bb       	out	0x14, r24	; 20
 404:	08 95       	ret

00000406 <lcdSclk>:
 406:	88 23       	and	r24, r24
 408:	21 f0       	breq	.+8      	; 0x412 <lcdSclk+0xc>
 40a:	84 b3       	in	r24, 0x14	; 20
 40c:	82 60       	ori	r24, 0x02	; 2
 40e:	84 bb       	out	0x14, r24	; 20
 410:	08 95       	ret
 412:	84 b3       	in	r24, 0x14	; 20
 414:	8d 7f       	andi	r24, 0xFD	; 253
 416:	84 bb       	out	0x14, r24	; 20
 418:	08 95       	ret

0000041a <lcdLight>:
 41a:	81 11       	cpse	r24, r1
 41c:	04 c0       	rjmp	.+8      	; 0x426 <lcdLight+0xc>
 41e:	84 b5       	in	r24, 0x24	; 36
 420:	8f 7d       	andi	r24, 0xDF	; 223
 422:	84 bd       	out	0x24, r24	; 36
 424:	08 95       	ret
 426:	94 b5       	in	r25, 0x24	; 36
 428:	90 62       	ori	r25, 0x20	; 32
 42a:	94 bd       	out	0x24, r25	; 36
 42c:	88 bd       	out	0x28, r24	; 40
 42e:	08 95       	ret

00000430 <writeLcdF>:
 430:	ef 92       	push	r14
 432:	ff 92       	push	r15
 434:	0f 93       	push	r16
 436:	1f 93       	push	r17
 438:	cf 93       	push	r28
 43a:	df 93       	push	r29
 43c:	7c 01       	movw	r14, r24
 43e:	eb 01       	movw	r28, r22
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	d7 df       	rcall	.-82     	; 0x3f2 <lcdSid>
 444:	00 e0       	ldi	r16, 0x00	; 0
 446:	10 e0       	ldi	r17, 0x00	; 0
 448:	06 c0       	rjmp	.+12     	; 0x456 <writeLcdF+0x26>
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	dc df       	rcall	.-72     	; 0x406 <lcdSclk>
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	da df       	rcall	.-76     	; 0x406 <lcdSclk>
 452:	0f 5f       	subi	r16, 0xFF	; 255
 454:	1f 4f       	sbci	r17, 0xFF	; 255
 456:	05 30       	cpi	r16, 0x05	; 5
 458:	11 05       	cpc	r17, r1
 45a:	b8 f3       	brcs	.-18     	; 0x44a <writeLcdF+0x1a>
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	c9 df       	rcall	.-110    	; 0x3f2 <lcdSid>
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	d1 df       	rcall	.-94     	; 0x406 <lcdSclk>
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	cf df       	rcall	.-98     	; 0x406 <lcdSclk>
 468:	83 e4       	ldi	r24, 0x43	; 67
 46a:	e8 16       	cp	r14, r24
 46c:	f1 04       	cpc	r15, r1
 46e:	19 f4       	brne	.+6      	; 0x476 <writeLcdF+0x46>
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	bf df       	rcall	.-130    	; 0x3f2 <lcdSid>
 474:	02 c0       	rjmp	.+4      	; 0x47a <writeLcdF+0x4a>
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	bc df       	rcall	.-136    	; 0x3f2 <lcdSid>
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	c4 df       	rcall	.-120    	; 0x406 <lcdSclk>
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	c2 df       	rcall	.-124    	; 0x406 <lcdSclk>
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	b6 df       	rcall	.-148    	; 0x3f2 <lcdSid>
 486:	80 e0       	ldi	r24, 0x00	; 0
 488:	be df       	rcall	.-132    	; 0x406 <lcdSclk>
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	bc df       	rcall	.-136    	; 0x406 <lcdSclk>
 48e:	00 e0       	ldi	r16, 0x00	; 0
 490:	10 e0       	ldi	r17, 0x00	; 0
 492:	11 c0       	rjmp	.+34     	; 0x4b6 <writeLcdF+0x86>
 494:	80 e0       	ldi	r24, 0x00	; 0
 496:	b7 df       	rcall	.-146    	; 0x406 <lcdSclk>
 498:	c0 ff       	sbrs	r28, 0
 49a:	03 c0       	rjmp	.+6      	; 0x4a2 <writeLcdF+0x72>
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	a9 df       	rcall	.-174    	; 0x3f2 <lcdSid>
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <writeLcdF+0x76>
 4a2:	80 e0       	ldi	r24, 0x00	; 0
 4a4:	a6 df       	rcall	.-180    	; 0x3f2 <lcdSid>
 4a6:	d6 95       	lsr	r29
 4a8:	c7 95       	ror	r28
 4aa:	80 e0       	ldi	r24, 0x00	; 0
 4ac:	ac df       	rcall	.-168    	; 0x406 <lcdSclk>
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	aa df       	rcall	.-172    	; 0x406 <lcdSclk>
 4b2:	0f 5f       	subi	r16, 0xFF	; 255
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	04 30       	cpi	r16, 0x04	; 4
 4b8:	11 05       	cpc	r17, r1
 4ba:	60 f3       	brcs	.-40     	; 0x494 <writeLcdF+0x64>
 4bc:	80 e0       	ldi	r24, 0x00	; 0
 4be:	99 df       	rcall	.-206    	; 0x3f2 <lcdSid>
 4c0:	00 e0       	ldi	r16, 0x00	; 0
 4c2:	10 e0       	ldi	r17, 0x00	; 0
 4c4:	06 c0       	rjmp	.+12     	; 0x4d2 <writeLcdF+0xa2>
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	9e df       	rcall	.-196    	; 0x406 <lcdSclk>
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	9c df       	rcall	.-200    	; 0x406 <lcdSclk>
 4ce:	0f 5f       	subi	r16, 0xFF	; 255
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	04 30       	cpi	r16, 0x04	; 4
 4d4:	11 05       	cpc	r17, r1
 4d6:	b8 f3       	brcs	.-18     	; 0x4c6 <writeLcdF+0x96>
 4d8:	00 e0       	ldi	r16, 0x00	; 0
 4da:	10 e0       	ldi	r17, 0x00	; 0
 4dc:	11 c0       	rjmp	.+34     	; 0x500 <writeLcdF+0xd0>
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	92 df       	rcall	.-220    	; 0x406 <lcdSclk>
 4e2:	c0 ff       	sbrs	r28, 0
 4e4:	03 c0       	rjmp	.+6      	; 0x4ec <writeLcdF+0xbc>
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	84 df       	rcall	.-248    	; 0x3f2 <lcdSid>
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <writeLcdF+0xc0>
 4ec:	80 e0       	ldi	r24, 0x00	; 0
 4ee:	81 df       	rcall	.-254    	; 0x3f2 <lcdSid>
 4f0:	d6 95       	lsr	r29
 4f2:	c7 95       	ror	r28
 4f4:	80 e0       	ldi	r24, 0x00	; 0
 4f6:	87 df       	rcall	.-242    	; 0x406 <lcdSclk>
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	85 df       	rcall	.-246    	; 0x406 <lcdSclk>
 4fc:	0f 5f       	subi	r16, 0xFF	; 255
 4fe:	1f 4f       	sbci	r17, 0xFF	; 255
 500:	04 30       	cpi	r16, 0x04	; 4
 502:	11 05       	cpc	r17, r1
 504:	60 f3       	brcs	.-40     	; 0x4de <writeLcdF+0xae>
 506:	80 e0       	ldi	r24, 0x00	; 0
 508:	74 df       	rcall	.-280    	; 0x3f2 <lcdSid>
 50a:	c0 e0       	ldi	r28, 0x00	; 0
 50c:	d0 e0       	ldi	r29, 0x00	; 0
 50e:	05 c0       	rjmp	.+10     	; 0x51a <writeLcdF+0xea>
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	79 df       	rcall	.-270    	; 0x406 <lcdSclk>
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	77 df       	rcall	.-274    	; 0x406 <lcdSclk>
 518:	21 96       	adiw	r28, 0x01	; 1
 51a:	c4 30       	cpi	r28, 0x04	; 4
 51c:	d1 05       	cpc	r29, r1
 51e:	c0 f3       	brcs	.-16     	; 0x510 <writeLcdF+0xe0>
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	67 df       	rcall	.-306    	; 0x3f2 <lcdSid>
 524:	87 ec       	ldi	r24, 0xC7	; 199
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	01 97       	sbiw	r24, 0x01	; 1
 52a:	f1 f7       	brne	.-4      	; 0x528 <writeLcdF+0xf8>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <writeLcdF+0xfe>
 52e:	00 00       	nop
 530:	df 91       	pop	r29
 532:	cf 91       	pop	r28
 534:	1f 91       	pop	r17
 536:	0f 91       	pop	r16
 538:	ff 90       	pop	r15
 53a:	ef 90       	pop	r14
 53c:	08 95       	ret

0000053e <lcdWriteText>:
 53e:	1f 93       	push	r17
 540:	cf 93       	push	r28
 542:	df 93       	push	r29
 544:	cd b7       	in	r28, 0x3d	; 61
 546:	de b7       	in	r29, 0x3e	; 62
 548:	65 97       	sbiw	r28, 0x15	; 21
 54a:	0f b6       	in	r0, 0x3f	; 63
 54c:	f8 94       	cli
 54e:	de bf       	out	0x3e, r29	; 62
 550:	0f be       	out	0x3f, r0	; 63
 552:	cd bf       	out	0x3d, r28	; 61
 554:	9e 01       	movw	r18, r28
 556:	20 5e       	subi	r18, 0xE0	; 224
 558:	3f 4f       	sbci	r19, 0xFF	; 255
 55a:	4e 8d       	ldd	r20, Y+30	; 0x1e
 55c:	5f 8d       	ldd	r21, Y+31	; 0x1f
 55e:	65 e1       	ldi	r22, 0x15	; 21
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	ce 01       	movw	r24, r28
 564:	01 96       	adiw	r24, 0x01	; 1
 566:	1b d2       	rcall	.+1078   	; 0x99e <vsnprintf>
 568:	6d 8d       	ldd	r22, Y+29	; 0x1d
 56a:	8c 8d       	ldd	r24, Y+28	; 0x1c
 56c:	90 e2       	ldi	r25, 0x20	; 32
 56e:	89 9f       	mul	r24, r25
 570:	60 0d       	add	r22, r0
 572:	11 24       	eor	r1, r1
 574:	60 68       	ori	r22, 0x80	; 128
 576:	70 e0       	ldi	r23, 0x00	; 0
 578:	83 e4       	ldi	r24, 0x43	; 67
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	59 df       	rcall	.-334    	; 0x430 <writeLcdF>
 57e:	10 e0       	ldi	r17, 0x00	; 0
 580:	05 c0       	rjmp	.+10     	; 0x58c <lcdWriteText+0x4e>
 582:	1f 5f       	subi	r17, 0xFF	; 255
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	84 e4       	ldi	r24, 0x44	; 68
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	52 df       	rcall	.-348    	; 0x430 <writeLcdF>
 58c:	e1 e0       	ldi	r30, 0x01	; 1
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	ec 0f       	add	r30, r28
 592:	fd 1f       	adc	r31, r29
 594:	e1 0f       	add	r30, r17
 596:	f1 1d       	adc	r31, r1
 598:	60 81       	ld	r22, Z
 59a:	61 11       	cpse	r22, r1
 59c:	f2 cf       	rjmp	.-28     	; 0x582 <lcdWriteText+0x44>
 59e:	65 96       	adiw	r28, 0x15	; 21
 5a0:	0f b6       	in	r0, 0x3f	; 63
 5a2:	f8 94       	cli
 5a4:	de bf       	out	0x3e, r29	; 62
 5a6:	0f be       	out	0x3f, r0	; 63
 5a8:	cd bf       	out	0x3d, r28	; 61
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	1f 91       	pop	r17
 5b0:	08 95       	ret

000005b2 <lcdClear>:
 5b2:	61 e0       	ldi	r22, 0x01	; 1
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	83 e4       	ldi	r24, 0x43	; 67
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	3a df       	rcall	.-396    	; 0x430 <writeLcdF>
 5bc:	8f e3       	ldi	r24, 0x3F	; 63
 5be:	9f e1       	ldi	r25, 0x1F	; 31
 5c0:	01 97       	sbiw	r24, 0x01	; 1
 5c2:	f1 f7       	brne	.-4      	; 0x5c0 <lcdClear+0xe>
 5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <lcdClear+0x14>
 5c6:	00 00       	nop
 5c8:	89 e3       	ldi	r24, 0x39	; 57
 5ca:	92 e0       	ldi	r25, 0x02	; 2
 5cc:	9f 93       	push	r25
 5ce:	8f 93       	push	r24
 5d0:	1f 92       	push	r1
 5d2:	1f 92       	push	r1
 5d4:	b4 df       	rcall	.-152    	; 0x53e <lcdWriteText>
 5d6:	0f 90       	pop	r0
 5d8:	0f 90       	pop	r0
 5da:	0f 90       	pop	r0
 5dc:	0f 90       	pop	r0
 5de:	08 95       	ret

000005e0 <initLcd>:
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	11 df       	rcall	.-478    	; 0x406 <lcdSclk>
 5e4:	80 e0       	ldi	r24, 0x00	; 0
 5e6:	05 df       	rcall	.-502    	; 0x3f2 <lcdSid>
 5e8:	64 e3       	ldi	r22, 0x34	; 52
 5ea:	70 e0       	ldi	r23, 0x00	; 0
 5ec:	83 e4       	ldi	r24, 0x43	; 67
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	1f df       	rcall	.-450    	; 0x430 <writeLcdF>
 5f2:	69 e0       	ldi	r22, 0x09	; 9
 5f4:	70 e0       	ldi	r23, 0x00	; 0
 5f6:	83 e4       	ldi	r24, 0x43	; 67
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	1a df       	rcall	.-460    	; 0x430 <writeLcdF>
 5fc:	60 e3       	ldi	r22, 0x30	; 48
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	83 e4       	ldi	r24, 0x43	; 67
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	15 df       	rcall	.-470    	; 0x430 <writeLcdF>
 606:	6c e0       	ldi	r22, 0x0C	; 12
 608:	70 e0       	ldi	r23, 0x00	; 0
 60a:	83 e4       	ldi	r24, 0x43	; 67
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	10 df       	rcall	.-480    	; 0x430 <writeLcdF>
 610:	d0 df       	rcall	.-96     	; 0x5b2 <lcdClear>
 612:	67 e0       	ldi	r22, 0x07	; 7
 614:	70 e0       	ldi	r23, 0x00	; 0
 616:	83 e4       	ldi	r24, 0x43	; 67
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0a df       	rcall	.-492    	; 0x430 <writeLcdF>
 61c:	80 e0       	ldi	r24, 0x00	; 0
 61e:	fd ce       	rjmp	.-518    	; 0x41a <lcdLight>
 620:	08 95       	ret

00000622 <initBoard>:
 622:	ff 92       	push	r15
 624:	0f 93       	push	r16
 626:	1f 93       	push	r17
 628:	cf 93       	push	r28
 62a:	df 93       	push	r29
 62c:	c8 2f       	mov	r28, r24
 62e:	85 b7       	in	r24, 0x35	; 53
 630:	85 bf       	out	0x35, r24	; 53
 632:	12 b8       	out	0x02, r1	; 2
 634:	8f ef       	ldi	r24, 0xFF	; 255
 636:	81 b9       	out	0x01, r24	; 1
 638:	15 b8       	out	0x05, r1	; 5
 63a:	84 b9       	out	0x04, r24	; 4
 63c:	88 b9       	out	0x08, r24	; 8
 63e:	17 b8       	out	0x07, r1	; 7
 640:	8b b9       	out	0x0b, r24	; 11
 642:	1a b8       	out	0x0a, r1	; 10
 644:	8e b9       	out	0x0e, r24	; 14
 646:	1d b8       	out	0x0d, r1	; 13
 648:	9e b1       	in	r25, 0x0e	; 14
 64a:	9b 7f       	andi	r25, 0xFB	; 251
 64c:	9e b9       	out	0x0e, r25	; 14
 64e:	11 ba       	out	0x11, r1	; 17
 650:	10 ba       	out	0x10, r1	; 16
 652:	94 e0       	ldi	r25, 0x04	; 4
 654:	94 bb       	out	0x14, r25	; 20
 656:	93 b3       	in	r25, 0x13	; 19
 658:	93 60       	ori	r25, 0x03	; 3
 65a:	93 bb       	out	0x13, r25	; 19
 65c:	93 b3       	in	r25, 0x13	; 19
 65e:	90 62       	ori	r25, 0x20	; 32
 660:	93 bb       	out	0x13, r25	; 19
 662:	97 ec       	ldi	r25, 0xC7	; 199
 664:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 668:	98 e3       	ldi	r25, 0x38	; 56
 66a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 66e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 672:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 676:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 67a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 67e:	8c e3       	ldi	r24, 0x3C	; 60
 680:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 684:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 688:	78 94       	sei
 68a:	5c de       	rcall	.-840    	; 0x344 <startSystemTimeMs>
 68c:	a9 df       	rcall	.-174    	; 0x5e0 <initLcd>
 68e:	64 de       	rcall	.-824    	; 0x358 <initAdc>
 690:	9c de       	rcall	.-712    	; 0x3ca <initRgb>
 692:	cc 23       	and	r28, r28
 694:	09 f4       	brne	.+2      	; 0x698 <initBoard+0x76>
 696:	a3 c0       	rjmp	.+326    	; 0x7de <initBoard+0x1bc>
 698:	8f ef       	ldi	r24, 0xFF	; 255
 69a:	bf de       	rcall	.-642    	; 0x41a <lcdLight>
 69c:	40 e0       	ldi	r20, 0x00	; 0
 69e:	50 e0       	ldi	r21, 0x00	; 0
 6a0:	6f ef       	ldi	r22, 0xFF	; 255
 6a2:	73 e0       	ldi	r23, 0x03	; 3
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	79 de       	rcall	.-782    	; 0x39c <rgbWrite>
 6aa:	86 e2       	ldi	r24, 0x26	; 38
 6ac:	92 e0       	ldi	r25, 0x02	; 2
 6ae:	9f 93       	push	r25
 6b0:	8f 93       	push	r24
 6b2:	1f 92       	push	r1
 6b4:	1f 92       	push	r1
 6b6:	43 df       	rcall	.-378    	; 0x53e <lcdWriteText>
 6b8:	8b e3       	ldi	r24, 0x3B	; 59
 6ba:	92 e0       	ldi	r25, 0x02	; 2
 6bc:	9f 93       	push	r25
 6be:	8f 93       	push	r24
 6c0:	1f 92       	push	r1
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	8f 93       	push	r24
 6c6:	3b df       	rcall	.-394    	; 0x53e <lcdWriteText>
 6c8:	81 e1       	ldi	r24, 0x11	; 17
 6ca:	92 e0       	ldi	r25, 0x02	; 2
 6cc:	9f 93       	push	r25
 6ce:	8f 93       	push	r24
 6d0:	1f 92       	push	r1
 6d2:	82 e0       	ldi	r24, 0x02	; 2
 6d4:	8f 93       	push	r24
 6d6:	33 df       	rcall	.-410    	; 0x53e <lcdWriteText>
 6d8:	80 e5       	ldi	r24, 0x50	; 80
 6da:	92 e0       	ldi	r25, 0x02	; 2
 6dc:	9f 93       	push	r25
 6de:	8f 93       	push	r24
 6e0:	1f 92       	push	r1
 6e2:	83 e0       	ldi	r24, 0x03	; 3
 6e4:	8f 93       	push	r24
 6e6:	2b df       	rcall	.-426    	; 0x53e <lcdWriteText>
 6e8:	8d b7       	in	r24, 0x3d	; 61
 6ea:	9e b7       	in	r25, 0x3e	; 62
 6ec:	40 96       	adiw	r24, 0x10	; 16
 6ee:	0f b6       	in	r0, 0x3f	; 63
 6f0:	f8 94       	cli
 6f2:	9e bf       	out	0x3e, r25	; 62
 6f4:	0f be       	out	0x3f, r0	; 63
 6f6:	8d bf       	out	0x3d, r24	; 61
 6f8:	ff 24       	eor	r15, r15
 6fa:	f3 94       	inc	r15
 6fc:	c0 e0       	ldi	r28, 0x00	; 0
 6fe:	10 e0       	ldi	r17, 0x00	; 0
 700:	01 e0       	ldi	r16, 0x01	; 1
 702:	d0 e0       	ldi	r29, 0x00	; 0
 704:	00 23       	and	r16, r16
 706:	51 f0       	breq	.+20     	; 0x71c <initBoard+0xfa>
 708:	80 e0       	ldi	r24, 0x00	; 0
 70a:	90 e8       	ldi	r25, 0x80	; 128
 70c:	0d 2e       	mov	r0, r29
 70e:	02 c0       	rjmp	.+4      	; 0x714 <initBoard+0xf2>
 710:	96 95       	lsr	r25
 712:	87 95       	ror	r24
 714:	0a 94       	dec	r0
 716:	e2 f7       	brpl	.-8      	; 0x710 <initBoard+0xee>
 718:	0d de       	rcall	.-998    	; 0x334 <ledWriteAll>
 71a:	09 c0       	rjmp	.+18     	; 0x72e <initBoard+0x10c>
 71c:	81 e0       	ldi	r24, 0x01	; 1
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	0d 2e       	mov	r0, r29
 722:	02 c0       	rjmp	.+4      	; 0x728 <initBoard+0x106>
 724:	88 0f       	add	r24, r24
 726:	99 1f       	adc	r25, r25
 728:	0a 94       	dec	r0
 72a:	e2 f7       	brpl	.-8      	; 0x724 <initBoard+0x102>
 72c:	03 de       	rcall	.-1018   	; 0x334 <ledWriteAll>
 72e:	df 5f       	subi	r29, 0xFF	; 255
 730:	d1 31       	cpi	r29, 0x11	; 17
 732:	28 f0       	brcs	.+10     	; 0x73e <initBoard+0x11c>
 734:	81 e0       	ldi	r24, 0x01	; 1
 736:	01 11       	cpse	r16, r1
 738:	80 e0       	ldi	r24, 0x00	; 0
 73a:	08 2f       	mov	r16, r24
 73c:	d0 e0       	ldi	r29, 0x00	; 0
 73e:	ff 20       	and	r15, r15
 740:	11 f0       	breq	.+4      	; 0x746 <initBoard+0x124>
 742:	ce 5f       	subi	r28, 0xFE	; 254
 744:	01 c0       	rjmp	.+2      	; 0x748 <initBoard+0x126>
 746:	c2 50       	subi	r28, 0x02	; 2
 748:	8c 2f       	mov	r24, r28
 74a:	67 de       	rcall	.-818    	; 0x41a <lcdLight>
 74c:	ce 3f       	cpi	r28, 0xFE	; 254
 74e:	09 f4       	brne	.+2      	; 0x752 <initBoard+0x130>
 750:	f1 2c       	mov	r15, r1
 752:	c8 37       	cpi	r28, 0x78	; 120
 754:	11 f4       	brne	.+4      	; 0x75a <initBoard+0x138>
 756:	ff 24       	eor	r15, r15
 758:	f3 94       	inc	r15
 75a:	11 11       	cpse	r17, r1
 75c:	17 c0       	rjmp	.+46     	; 0x78c <initBoard+0x16a>
 75e:	ef dd       	rcall	.-1058   	; 0x33e <buttonReadAllPL>
 760:	83 7c       	andi	r24, 0xC3	; 195
 762:	a1 f0       	breq	.+40     	; 0x78c <initBoard+0x16a>
 764:	40 e0       	ldi	r20, 0x00	; 0
 766:	50 e0       	ldi	r21, 0x00	; 0
 768:	66 e2       	ldi	r22, 0x26	; 38
 76a:	72 e0       	ldi	r23, 0x02	; 2
 76c:	8f ef       	ldi	r24, 0xFF	; 255
 76e:	93 e0       	ldi	r25, 0x03	; 3
 770:	15 de       	rcall	.-982    	; 0x39c <rgbWrite>
 772:	85 e6       	ldi	r24, 0x65	; 101
 774:	92 e0       	ldi	r25, 0x02	; 2
 776:	9f 93       	push	r25
 778:	8f 93       	push	r24
 77a:	1f 92       	push	r1
 77c:	83 e0       	ldi	r24, 0x03	; 3
 77e:	8f 93       	push	r24
 780:	de de       	rcall	.-580    	; 0x53e <lcdWriteText>
 782:	0f 90       	pop	r0
 784:	0f 90       	pop	r0
 786:	0f 90       	pop	r0
 788:	0f 90       	pop	r0
 78a:	11 e0       	ldi	r17, 0x01	; 1
 78c:	11 23       	and	r17, r17
 78e:	19 f0       	breq	.+6      	; 0x796 <initBoard+0x174>
 790:	d6 dd       	rcall	.-1108   	; 0x33e <buttonReadAllPL>
 792:	83 7c       	andi	r24, 0xC3	; 195
 794:	39 f0       	breq	.+14     	; 0x7a4 <initBoard+0x182>
 796:	8f ef       	ldi	r24, 0xFF	; 255
 798:	9c e7       	ldi	r25, 0x7C	; 124
 79a:	01 97       	sbiw	r24, 0x01	; 1
 79c:	f1 f7       	brne	.-4      	; 0x79a <initBoard+0x178>
 79e:	00 c0       	rjmp	.+0      	; 0x7a0 <initBoard+0x17e>
 7a0:	00 00       	nop
 7a2:	b0 cf       	rjmp	.-160    	; 0x704 <initBoard+0xe2>
 7a4:	06 df       	rcall	.-500    	; 0x5b2 <lcdClear>
 7a6:	80 e0       	ldi	r24, 0x00	; 0
 7a8:	38 de       	rcall	.-912    	; 0x41a <lcdLight>
 7aa:	80 e0       	ldi	r24, 0x00	; 0
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	c2 dd       	rcall	.-1148   	; 0x334 <ledWriteAll>
 7b0:	40 e0       	ldi	r20, 0x00	; 0
 7b2:	50 e0       	ldi	r21, 0x00	; 0
 7b4:	60 e0       	ldi	r22, 0x00	; 0
 7b6:	70 e0       	ldi	r23, 0x00	; 0
 7b8:	80 e0       	ldi	r24, 0x00	; 0
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	ef dd       	rcall	.-1058   	; 0x39c <rgbWrite>
 7be:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <systemTimeMs>
 7c2:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <systemTimeMs+0x1>
 7c6:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <systemTimeMs+0x2>
 7ca:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <systemTimeMs+0x3>
 7ce:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <systemTimeMs+0x4>
 7d2:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <systemTimeMs+0x5>
 7d6:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <systemTimeMs+0x6>
 7da:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <systemTimeMs+0x7>
 7de:	df 91       	pop	r29
 7e0:	cf 91       	pop	r28
 7e2:	1f 91       	pop	r17
 7e4:	0f 91       	pop	r16
 7e6:	ff 90       	pop	r15
 7e8:	08 95       	ret

000007ea <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 7ea:	cf 93       	push	r28
 7ec:	df 93       	push	r29
 7ee:	cd b7       	in	r28, 0x3d	; 61
 7f0:	de b7       	in	r29, 0x3e	; 62
 7f2:	28 97       	sbiw	r28, 0x08	; 8
 7f4:	0f b6       	in	r0, 0x3f	; 63
 7f6:	f8 94       	cli
 7f8:	de bf       	out	0x3e, r29	; 62
 7fa:	0f be       	out	0x3f, r0	; 63
 7fc:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 7fe:	88 e0       	ldi	r24, 0x08	; 8
 800:	e9 e0       	ldi	r30, 0x09	; 9
 802:	f2 e0       	ldi	r31, 0x02	; 2
 804:	de 01       	movw	r26, r28
 806:	11 96       	adiw	r26, 0x01	; 1
 808:	01 90       	ld	r0, Z+
 80a:	0d 92       	st	X+, r0
 80c:	8a 95       	dec	r24
 80e:	e1 f7       	brne	.-8      	; 0x808 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 810:	e5 e0       	ldi	r30, 0x05	; 5
 812:	f1 e0       	ldi	r31, 0x01	; 1
 814:	80 81       	ld	r24, Z
 816:	8f 7b       	andi	r24, 0xBF	; 191
 818:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 81a:	e0 91 7e 02 	lds	r30, 0x027E	; 0x80027e <Zeilen_Nr.2743>
 81e:	f0 91 7f 02 	lds	r31, 0x027F	; 0x80027f <Zeilen_Nr.2743+0x1>
 822:	81 e0       	ldi	r24, 0x01	; 1
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	8c 0f       	add	r24, r28
 828:	9d 1f       	adc	r25, r29
 82a:	e8 0f       	add	r30, r24
 82c:	f9 1f       	adc	r31, r25
 82e:	80 81       	ld	r24, Z
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <__data_end+0x1>
 836:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 83a:	80 e0       	ldi	r24, 0x00	; 0
 83c:	26 c0       	rjmp	.+76     	; 0x88a <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 83e:	e7 e3       	ldi	r30, 0x37	; 55
 840:	f0 e0       	ldi	r31, 0x00	; 0
 842:	e8 1b       	sub	r30, r24
 844:	f1 09       	sbc	r31, r1
 846:	ee 0f       	add	r30, r30
 848:	ff 1f       	adc	r31, r31
 84a:	e6 57       	subi	r30, 0x76	; 118
 84c:	fd 4f       	sbci	r31, 0xFD	; 253
 84e:	40 81       	ld	r20, Z
 850:	51 81       	ldd	r21, Z+1	; 0x01
 852:	20 91 7c 02 	lds	r18, 0x027C	; 0x80027c <__data_end>
 856:	30 91 7d 02 	lds	r19, 0x027D	; 0x80027d <__data_end+0x1>
 85a:	24 23       	and	r18, r20
 85c:	35 23       	and	r19, r21
 85e:	23 2b       	or	r18, r19
 860:	31 f0       	breq	.+12     	; 0x86e <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 862:	e5 e0       	ldi	r30, 0x05	; 5
 864:	f1 e0       	ldi	r31, 0x01	; 1
 866:	90 81       	ld	r25, Z
 868:	90 62       	ori	r25, 0x20	; 32
 86a:	90 83       	st	Z, r25
 86c:	05 c0       	rjmp	.+10     	; 0x878 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 86e:	e5 e0       	ldi	r30, 0x05	; 5
 870:	f1 e0       	ldi	r31, 0x01	; 1
 872:	90 81       	ld	r25, Z
 874:	9f 7d       	andi	r25, 0xDF	; 223
 876:	90 83       	st	Z, r25
        }
        CLOCK_1;
 878:	e5 e0       	ldi	r30, 0x05	; 5
 87a:	f1 e0       	ldi	r31, 0x01	; 1
 87c:	90 81       	ld	r25, Z
 87e:	90 61       	ori	r25, 0x10	; 16
 880:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 882:	90 81       	ld	r25, Z
 884:	9f 7e       	andi	r25, 0xEF	; 239
 886:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 888:	8f 5f       	subi	r24, 0xFF	; 255
 88a:	88 33       	cpi	r24, 0x38	; 56
 88c:	c0 f2       	brcs	.-80     	; 0x83e <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 88e:	e5 e0       	ldi	r30, 0x05	; 5
 890:	f1 e0       	ldi	r31, 0x01	; 1
 892:	80 81       	ld	r24, Z
 894:	87 7f       	andi	r24, 0xF7	; 247
 896:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 898:	80 81       	ld	r24, Z
 89a:	88 7f       	andi	r24, 0xF8	; 248
 89c:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 89e:	90 81       	ld	r25, Z
 8a0:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <Zeilen_Nr.2743>
 8a4:	89 2b       	or	r24, r25
 8a6:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 8a8:	80 81       	ld	r24, Z
 8aa:	80 64       	ori	r24, 0x40	; 64
 8ac:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 8ae:	80 81       	ld	r24, Z
 8b0:	88 60       	ori	r24, 0x08	; 8
 8b2:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 8b4:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <Zeilen_Nr.2743>
 8b8:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <Zeilen_Nr.2743+0x1>
 8bc:	87 30       	cpi	r24, 0x07	; 7
 8be:	91 05       	cpc	r25, r1
 8c0:	30 f4       	brcc	.+12     	; 0x8ce <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 8c2:	01 96       	adiw	r24, 0x01	; 1
 8c4:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <Zeilen_Nr.2743+0x1>
 8c8:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <Zeilen_Nr.2743>
 8cc:	07 c0       	rjmp	.+14     	; 0x8dc <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 8ce:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <Zeilen_Nr.2743+0x1>
 8d2:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <Zeilen_Nr.2743>
        writeTextFinished = 1;
 8d6:	81 e0       	ldi	r24, 0x01	; 1
 8d8:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <writeTextFinished>
    }
    
 8dc:	28 96       	adiw	r28, 0x08	; 8
 8de:	0f b6       	in	r0, 0x3f	; 63
 8e0:	f8 94       	cli
 8e2:	de bf       	out	0x3e, r29	; 62
 8e4:	0f be       	out	0x3f, r0	; 63
 8e6:	cd bf       	out	0x3d, r28	; 61
 8e8:	df 91       	pop	r29
 8ea:	cf 91       	pop	r28
 8ec:	08 95       	ret

000008ee <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 8ee:	1f 92       	push	r1
 8f0:	0f 92       	push	r0
 8f2:	0f b6       	in	r0, 0x3f	; 63
 8f4:	0f 92       	push	r0
 8f6:	11 24       	eor	r1, r1
 8f8:	0b b6       	in	r0, 0x3b	; 59
 8fa:	0f 92       	push	r0
 8fc:	2f 93       	push	r18
 8fe:	3f 93       	push	r19
 900:	4f 93       	push	r20
 902:	5f 93       	push	r21
 904:	6f 93       	push	r22
 906:	7f 93       	push	r23
 908:	8f 93       	push	r24
 90a:	9f 93       	push	r25
 90c:	af 93       	push	r26
 90e:	bf 93       	push	r27
 910:	ef 93       	push	r30
 912:	ff 93       	push	r31
    systemTimeMs += 1;
 914:	20 91 81 02 	lds	r18, 0x0281	; 0x800281 <systemTimeMs>
 918:	30 91 82 02 	lds	r19, 0x0282	; 0x800282 <systemTimeMs+0x1>
 91c:	40 91 83 02 	lds	r20, 0x0283	; 0x800283 <systemTimeMs+0x2>
 920:	50 91 84 02 	lds	r21, 0x0284	; 0x800284 <systemTimeMs+0x3>
 924:	60 91 85 02 	lds	r22, 0x0285	; 0x800285 <systemTimeMs+0x4>
 928:	70 91 86 02 	lds	r23, 0x0286	; 0x800286 <systemTimeMs+0x5>
 92c:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <systemTimeMs+0x6>
 930:	90 91 88 02 	lds	r25, 0x0288	; 0x800288 <systemTimeMs+0x7>
 934:	a1 e0       	ldi	r26, 0x01	; 1
 936:	27 d0       	rcall	.+78     	; 0x986 <__adddi3_s8>
 938:	20 93 81 02 	sts	0x0281, r18	; 0x800281 <systemTimeMs>
 93c:	30 93 82 02 	sts	0x0282, r19	; 0x800282 <systemTimeMs+0x1>
 940:	40 93 83 02 	sts	0x0283, r20	; 0x800283 <systemTimeMs+0x2>
 944:	50 93 84 02 	sts	0x0284, r21	; 0x800284 <systemTimeMs+0x3>
 948:	60 93 85 02 	sts	0x0285, r22	; 0x800285 <systemTimeMs+0x4>
 94c:	70 93 86 02 	sts	0x0286, r23	; 0x800286 <systemTimeMs+0x5>
 950:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <systemTimeMs+0x6>
 954:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 958:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <matrixRunning>
 95c:	81 11       	cpse	r24, r1
 95e:	45 df       	rcall	.-374    	; 0x7ea <matrixWriteNextLine>
}
 960:	ff 91       	pop	r31
 962:	ef 91       	pop	r30
 964:	bf 91       	pop	r27
 966:	af 91       	pop	r26
 968:	9f 91       	pop	r25
 96a:	8f 91       	pop	r24
 96c:	7f 91       	pop	r23
 96e:	6f 91       	pop	r22
 970:	5f 91       	pop	r21
 972:	4f 91       	pop	r20
 974:	3f 91       	pop	r19
 976:	2f 91       	pop	r18
 978:	0f 90       	pop	r0
 97a:	0b be       	out	0x3b, r0	; 59
 97c:	0f 90       	pop	r0
 97e:	0f be       	out	0x3f, r0	; 63
 980:	0f 90       	pop	r0
 982:	1f 90       	pop	r1
 984:	18 95       	reti

00000986 <__adddi3_s8>:
 986:	00 24       	eor	r0, r0
 988:	a7 fd       	sbrc	r26, 7
 98a:	00 94       	com	r0
 98c:	2a 0f       	add	r18, r26
 98e:	30 1d       	adc	r19, r0
 990:	40 1d       	adc	r20, r0
 992:	50 1d       	adc	r21, r0
 994:	60 1d       	adc	r22, r0
 996:	70 1d       	adc	r23, r0
 998:	80 1d       	adc	r24, r0
 99a:	90 1d       	adc	r25, r0
 99c:	08 95       	ret

0000099e <vsnprintf>:
 99e:	0f 93       	push	r16
 9a0:	1f 93       	push	r17
 9a2:	cf 93       	push	r28
 9a4:	df 93       	push	r29
 9a6:	cd b7       	in	r28, 0x3d	; 61
 9a8:	de b7       	in	r29, 0x3e	; 62
 9aa:	2e 97       	sbiw	r28, 0x0e	; 14
 9ac:	0f b6       	in	r0, 0x3f	; 63
 9ae:	f8 94       	cli
 9b0:	de bf       	out	0x3e, r29	; 62
 9b2:	0f be       	out	0x3f, r0	; 63
 9b4:	cd bf       	out	0x3d, r28	; 61
 9b6:	8c 01       	movw	r16, r24
 9b8:	fa 01       	movw	r30, r20
 9ba:	86 e0       	ldi	r24, 0x06	; 6
 9bc:	8c 83       	std	Y+4, r24	; 0x04
 9be:	1a 83       	std	Y+2, r17	; 0x02
 9c0:	09 83       	std	Y+1, r16	; 0x01
 9c2:	77 ff       	sbrs	r23, 7
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <vsnprintf+0x2c>
 9c6:	60 e0       	ldi	r22, 0x00	; 0
 9c8:	70 e8       	ldi	r23, 0x80	; 128
 9ca:	cb 01       	movw	r24, r22
 9cc:	01 97       	sbiw	r24, 0x01	; 1
 9ce:	9e 83       	std	Y+6, r25	; 0x06
 9d0:	8d 83       	std	Y+5, r24	; 0x05
 9d2:	a9 01       	movw	r20, r18
 9d4:	bf 01       	movw	r22, r30
 9d6:	ce 01       	movw	r24, r28
 9d8:	01 96       	adiw	r24, 0x01	; 1
 9da:	19 d0       	rcall	.+50     	; 0xa0e <vfprintf>
 9dc:	4d 81       	ldd	r20, Y+5	; 0x05
 9de:	5e 81       	ldd	r21, Y+6	; 0x06
 9e0:	57 fd       	sbrc	r21, 7
 9e2:	0a c0       	rjmp	.+20     	; 0x9f8 <vsnprintf+0x5a>
 9e4:	2f 81       	ldd	r18, Y+7	; 0x07
 9e6:	38 85       	ldd	r19, Y+8	; 0x08
 9e8:	42 17       	cp	r20, r18
 9ea:	53 07       	cpc	r21, r19
 9ec:	0c f4       	brge	.+2      	; 0x9f0 <vsnprintf+0x52>
 9ee:	9a 01       	movw	r18, r20
 9f0:	f8 01       	movw	r30, r16
 9f2:	e2 0f       	add	r30, r18
 9f4:	f3 1f       	adc	r31, r19
 9f6:	10 82       	st	Z, r1
 9f8:	2e 96       	adiw	r28, 0x0e	; 14
 9fa:	0f b6       	in	r0, 0x3f	; 63
 9fc:	f8 94       	cli
 9fe:	de bf       	out	0x3e, r29	; 62
 a00:	0f be       	out	0x3f, r0	; 63
 a02:	cd bf       	out	0x3d, r28	; 61
 a04:	df 91       	pop	r29
 a06:	cf 91       	pop	r28
 a08:	1f 91       	pop	r17
 a0a:	0f 91       	pop	r16
 a0c:	08 95       	ret

00000a0e <vfprintf>:
 a0e:	2f 92       	push	r2
 a10:	3f 92       	push	r3
 a12:	4f 92       	push	r4
 a14:	5f 92       	push	r5
 a16:	6f 92       	push	r6
 a18:	7f 92       	push	r7
 a1a:	8f 92       	push	r8
 a1c:	9f 92       	push	r9
 a1e:	af 92       	push	r10
 a20:	bf 92       	push	r11
 a22:	cf 92       	push	r12
 a24:	df 92       	push	r13
 a26:	ef 92       	push	r14
 a28:	ff 92       	push	r15
 a2a:	0f 93       	push	r16
 a2c:	1f 93       	push	r17
 a2e:	cf 93       	push	r28
 a30:	df 93       	push	r29
 a32:	cd b7       	in	r28, 0x3d	; 61
 a34:	de b7       	in	r29, 0x3e	; 62
 a36:	2b 97       	sbiw	r28, 0x0b	; 11
 a38:	0f b6       	in	r0, 0x3f	; 63
 a3a:	f8 94       	cli
 a3c:	de bf       	out	0x3e, r29	; 62
 a3e:	0f be       	out	0x3f, r0	; 63
 a40:	cd bf       	out	0x3d, r28	; 61
 a42:	6c 01       	movw	r12, r24
 a44:	7b 01       	movw	r14, r22
 a46:	8a 01       	movw	r16, r20
 a48:	fc 01       	movw	r30, r24
 a4a:	17 82       	std	Z+7, r1	; 0x07
 a4c:	16 82       	std	Z+6, r1	; 0x06
 a4e:	83 81       	ldd	r24, Z+3	; 0x03
 a50:	81 ff       	sbrs	r24, 1
 a52:	bf c1       	rjmp	.+894    	; 0xdd2 <vfprintf+0x3c4>
 a54:	ce 01       	movw	r24, r28
 a56:	01 96       	adiw	r24, 0x01	; 1
 a58:	3c 01       	movw	r6, r24
 a5a:	f6 01       	movw	r30, r12
 a5c:	93 81       	ldd	r25, Z+3	; 0x03
 a5e:	f7 01       	movw	r30, r14
 a60:	93 fd       	sbrc	r25, 3
 a62:	85 91       	lpm	r24, Z+
 a64:	93 ff       	sbrs	r25, 3
 a66:	81 91       	ld	r24, Z+
 a68:	7f 01       	movw	r14, r30
 a6a:	88 23       	and	r24, r24
 a6c:	09 f4       	brne	.+2      	; 0xa70 <vfprintf+0x62>
 a6e:	ad c1       	rjmp	.+858    	; 0xdca <vfprintf+0x3bc>
 a70:	85 32       	cpi	r24, 0x25	; 37
 a72:	39 f4       	brne	.+14     	; 0xa82 <vfprintf+0x74>
 a74:	93 fd       	sbrc	r25, 3
 a76:	85 91       	lpm	r24, Z+
 a78:	93 ff       	sbrs	r25, 3
 a7a:	81 91       	ld	r24, Z+
 a7c:	7f 01       	movw	r14, r30
 a7e:	85 32       	cpi	r24, 0x25	; 37
 a80:	21 f4       	brne	.+8      	; 0xa8a <vfprintf+0x7c>
 a82:	b6 01       	movw	r22, r12
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	d6 d1       	rcall	.+940    	; 0xe34 <fputc>
 a88:	e8 cf       	rjmp	.-48     	; 0xa5a <vfprintf+0x4c>
 a8a:	91 2c       	mov	r9, r1
 a8c:	21 2c       	mov	r2, r1
 a8e:	31 2c       	mov	r3, r1
 a90:	ff e1       	ldi	r31, 0x1F	; 31
 a92:	f3 15       	cp	r31, r3
 a94:	d8 f0       	brcs	.+54     	; 0xacc <vfprintf+0xbe>
 a96:	8b 32       	cpi	r24, 0x2B	; 43
 a98:	79 f0       	breq	.+30     	; 0xab8 <vfprintf+0xaa>
 a9a:	38 f4       	brcc	.+14     	; 0xaaa <vfprintf+0x9c>
 a9c:	80 32       	cpi	r24, 0x20	; 32
 a9e:	79 f0       	breq	.+30     	; 0xabe <vfprintf+0xb0>
 aa0:	83 32       	cpi	r24, 0x23	; 35
 aa2:	a1 f4       	brne	.+40     	; 0xacc <vfprintf+0xbe>
 aa4:	23 2d       	mov	r18, r3
 aa6:	20 61       	ori	r18, 0x10	; 16
 aa8:	1d c0       	rjmp	.+58     	; 0xae4 <vfprintf+0xd6>
 aaa:	8d 32       	cpi	r24, 0x2D	; 45
 aac:	61 f0       	breq	.+24     	; 0xac6 <vfprintf+0xb8>
 aae:	80 33       	cpi	r24, 0x30	; 48
 ab0:	69 f4       	brne	.+26     	; 0xacc <vfprintf+0xbe>
 ab2:	23 2d       	mov	r18, r3
 ab4:	21 60       	ori	r18, 0x01	; 1
 ab6:	16 c0       	rjmp	.+44     	; 0xae4 <vfprintf+0xd6>
 ab8:	83 2d       	mov	r24, r3
 aba:	82 60       	ori	r24, 0x02	; 2
 abc:	38 2e       	mov	r3, r24
 abe:	e3 2d       	mov	r30, r3
 ac0:	e4 60       	ori	r30, 0x04	; 4
 ac2:	3e 2e       	mov	r3, r30
 ac4:	2a c0       	rjmp	.+84     	; 0xb1a <vfprintf+0x10c>
 ac6:	f3 2d       	mov	r31, r3
 ac8:	f8 60       	ori	r31, 0x08	; 8
 aca:	1d c0       	rjmp	.+58     	; 0xb06 <vfprintf+0xf8>
 acc:	37 fc       	sbrc	r3, 7
 ace:	2d c0       	rjmp	.+90     	; 0xb2a <vfprintf+0x11c>
 ad0:	20 ed       	ldi	r18, 0xD0	; 208
 ad2:	28 0f       	add	r18, r24
 ad4:	2a 30       	cpi	r18, 0x0A	; 10
 ad6:	40 f0       	brcs	.+16     	; 0xae8 <vfprintf+0xda>
 ad8:	8e 32       	cpi	r24, 0x2E	; 46
 ada:	b9 f4       	brne	.+46     	; 0xb0a <vfprintf+0xfc>
 adc:	36 fc       	sbrc	r3, 6
 ade:	75 c1       	rjmp	.+746    	; 0xdca <vfprintf+0x3bc>
 ae0:	23 2d       	mov	r18, r3
 ae2:	20 64       	ori	r18, 0x40	; 64
 ae4:	32 2e       	mov	r3, r18
 ae6:	19 c0       	rjmp	.+50     	; 0xb1a <vfprintf+0x10c>
 ae8:	36 fe       	sbrs	r3, 6
 aea:	06 c0       	rjmp	.+12     	; 0xaf8 <vfprintf+0xea>
 aec:	8a e0       	ldi	r24, 0x0A	; 10
 aee:	98 9e       	mul	r9, r24
 af0:	20 0d       	add	r18, r0
 af2:	11 24       	eor	r1, r1
 af4:	92 2e       	mov	r9, r18
 af6:	11 c0       	rjmp	.+34     	; 0xb1a <vfprintf+0x10c>
 af8:	ea e0       	ldi	r30, 0x0A	; 10
 afa:	2e 9e       	mul	r2, r30
 afc:	20 0d       	add	r18, r0
 afe:	11 24       	eor	r1, r1
 b00:	22 2e       	mov	r2, r18
 b02:	f3 2d       	mov	r31, r3
 b04:	f0 62       	ori	r31, 0x20	; 32
 b06:	3f 2e       	mov	r3, r31
 b08:	08 c0       	rjmp	.+16     	; 0xb1a <vfprintf+0x10c>
 b0a:	8c 36       	cpi	r24, 0x6C	; 108
 b0c:	21 f4       	brne	.+8      	; 0xb16 <vfprintf+0x108>
 b0e:	83 2d       	mov	r24, r3
 b10:	80 68       	ori	r24, 0x80	; 128
 b12:	38 2e       	mov	r3, r24
 b14:	02 c0       	rjmp	.+4      	; 0xb1a <vfprintf+0x10c>
 b16:	88 36       	cpi	r24, 0x68	; 104
 b18:	41 f4       	brne	.+16     	; 0xb2a <vfprintf+0x11c>
 b1a:	f7 01       	movw	r30, r14
 b1c:	93 fd       	sbrc	r25, 3
 b1e:	85 91       	lpm	r24, Z+
 b20:	93 ff       	sbrs	r25, 3
 b22:	81 91       	ld	r24, Z+
 b24:	7f 01       	movw	r14, r30
 b26:	81 11       	cpse	r24, r1
 b28:	b3 cf       	rjmp	.-154    	; 0xa90 <vfprintf+0x82>
 b2a:	98 2f       	mov	r25, r24
 b2c:	9f 7d       	andi	r25, 0xDF	; 223
 b2e:	95 54       	subi	r25, 0x45	; 69
 b30:	93 30       	cpi	r25, 0x03	; 3
 b32:	28 f4       	brcc	.+10     	; 0xb3e <vfprintf+0x130>
 b34:	0c 5f       	subi	r16, 0xFC	; 252
 b36:	1f 4f       	sbci	r17, 0xFF	; 255
 b38:	9f e3       	ldi	r25, 0x3F	; 63
 b3a:	99 83       	std	Y+1, r25	; 0x01
 b3c:	0d c0       	rjmp	.+26     	; 0xb58 <vfprintf+0x14a>
 b3e:	83 36       	cpi	r24, 0x63	; 99
 b40:	31 f0       	breq	.+12     	; 0xb4e <vfprintf+0x140>
 b42:	83 37       	cpi	r24, 0x73	; 115
 b44:	71 f0       	breq	.+28     	; 0xb62 <vfprintf+0x154>
 b46:	83 35       	cpi	r24, 0x53	; 83
 b48:	09 f0       	breq	.+2      	; 0xb4c <vfprintf+0x13e>
 b4a:	55 c0       	rjmp	.+170    	; 0xbf6 <vfprintf+0x1e8>
 b4c:	20 c0       	rjmp	.+64     	; 0xb8e <vfprintf+0x180>
 b4e:	f8 01       	movw	r30, r16
 b50:	80 81       	ld	r24, Z
 b52:	89 83       	std	Y+1, r24	; 0x01
 b54:	0e 5f       	subi	r16, 0xFE	; 254
 b56:	1f 4f       	sbci	r17, 0xFF	; 255
 b58:	88 24       	eor	r8, r8
 b5a:	83 94       	inc	r8
 b5c:	91 2c       	mov	r9, r1
 b5e:	53 01       	movw	r10, r6
 b60:	12 c0       	rjmp	.+36     	; 0xb86 <vfprintf+0x178>
 b62:	28 01       	movw	r4, r16
 b64:	f2 e0       	ldi	r31, 0x02	; 2
 b66:	4f 0e       	add	r4, r31
 b68:	51 1c       	adc	r5, r1
 b6a:	f8 01       	movw	r30, r16
 b6c:	a0 80       	ld	r10, Z
 b6e:	b1 80       	ldd	r11, Z+1	; 0x01
 b70:	36 fe       	sbrs	r3, 6
 b72:	03 c0       	rjmp	.+6      	; 0xb7a <vfprintf+0x16c>
 b74:	69 2d       	mov	r22, r9
 b76:	70 e0       	ldi	r23, 0x00	; 0
 b78:	02 c0       	rjmp	.+4      	; 0xb7e <vfprintf+0x170>
 b7a:	6f ef       	ldi	r22, 0xFF	; 255
 b7c:	7f ef       	ldi	r23, 0xFF	; 255
 b7e:	c5 01       	movw	r24, r10
 b80:	4e d1       	rcall	.+668    	; 0xe1e <strnlen>
 b82:	4c 01       	movw	r8, r24
 b84:	82 01       	movw	r16, r4
 b86:	f3 2d       	mov	r31, r3
 b88:	ff 77       	andi	r31, 0x7F	; 127
 b8a:	3f 2e       	mov	r3, r31
 b8c:	15 c0       	rjmp	.+42     	; 0xbb8 <vfprintf+0x1aa>
 b8e:	28 01       	movw	r4, r16
 b90:	22 e0       	ldi	r18, 0x02	; 2
 b92:	42 0e       	add	r4, r18
 b94:	51 1c       	adc	r5, r1
 b96:	f8 01       	movw	r30, r16
 b98:	a0 80       	ld	r10, Z
 b9a:	b1 80       	ldd	r11, Z+1	; 0x01
 b9c:	36 fe       	sbrs	r3, 6
 b9e:	03 c0       	rjmp	.+6      	; 0xba6 <vfprintf+0x198>
 ba0:	69 2d       	mov	r22, r9
 ba2:	70 e0       	ldi	r23, 0x00	; 0
 ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x19c>
 ba6:	6f ef       	ldi	r22, 0xFF	; 255
 ba8:	7f ef       	ldi	r23, 0xFF	; 255
 baa:	c5 01       	movw	r24, r10
 bac:	2d d1       	rcall	.+602    	; 0xe08 <strnlen_P>
 bae:	4c 01       	movw	r8, r24
 bb0:	f3 2d       	mov	r31, r3
 bb2:	f0 68       	ori	r31, 0x80	; 128
 bb4:	3f 2e       	mov	r3, r31
 bb6:	82 01       	movw	r16, r4
 bb8:	33 fc       	sbrc	r3, 3
 bba:	19 c0       	rjmp	.+50     	; 0xbee <vfprintf+0x1e0>
 bbc:	82 2d       	mov	r24, r2
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	88 16       	cp	r8, r24
 bc2:	99 06       	cpc	r9, r25
 bc4:	a0 f4       	brcc	.+40     	; 0xbee <vfprintf+0x1e0>
 bc6:	b6 01       	movw	r22, r12
 bc8:	80 e2       	ldi	r24, 0x20	; 32
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	33 d1       	rcall	.+614    	; 0xe34 <fputc>
 bce:	2a 94       	dec	r2
 bd0:	f5 cf       	rjmp	.-22     	; 0xbbc <vfprintf+0x1ae>
 bd2:	f5 01       	movw	r30, r10
 bd4:	37 fc       	sbrc	r3, 7
 bd6:	85 91       	lpm	r24, Z+
 bd8:	37 fe       	sbrs	r3, 7
 bda:	81 91       	ld	r24, Z+
 bdc:	5f 01       	movw	r10, r30
 bde:	b6 01       	movw	r22, r12
 be0:	90 e0       	ldi	r25, 0x00	; 0
 be2:	28 d1       	rcall	.+592    	; 0xe34 <fputc>
 be4:	21 10       	cpse	r2, r1
 be6:	2a 94       	dec	r2
 be8:	21 e0       	ldi	r18, 0x01	; 1
 bea:	82 1a       	sub	r8, r18
 bec:	91 08       	sbc	r9, r1
 bee:	81 14       	cp	r8, r1
 bf0:	91 04       	cpc	r9, r1
 bf2:	79 f7       	brne	.-34     	; 0xbd2 <vfprintf+0x1c4>
 bf4:	e1 c0       	rjmp	.+450    	; 0xdb8 <vfprintf+0x3aa>
 bf6:	84 36       	cpi	r24, 0x64	; 100
 bf8:	11 f0       	breq	.+4      	; 0xbfe <vfprintf+0x1f0>
 bfa:	89 36       	cpi	r24, 0x69	; 105
 bfc:	39 f5       	brne	.+78     	; 0xc4c <vfprintf+0x23e>
 bfe:	f8 01       	movw	r30, r16
 c00:	37 fe       	sbrs	r3, 7
 c02:	07 c0       	rjmp	.+14     	; 0xc12 <vfprintf+0x204>
 c04:	60 81       	ld	r22, Z
 c06:	71 81       	ldd	r23, Z+1	; 0x01
 c08:	82 81       	ldd	r24, Z+2	; 0x02
 c0a:	93 81       	ldd	r25, Z+3	; 0x03
 c0c:	0c 5f       	subi	r16, 0xFC	; 252
 c0e:	1f 4f       	sbci	r17, 0xFF	; 255
 c10:	08 c0       	rjmp	.+16     	; 0xc22 <vfprintf+0x214>
 c12:	60 81       	ld	r22, Z
 c14:	71 81       	ldd	r23, Z+1	; 0x01
 c16:	07 2e       	mov	r0, r23
 c18:	00 0c       	add	r0, r0
 c1a:	88 0b       	sbc	r24, r24
 c1c:	99 0b       	sbc	r25, r25
 c1e:	0e 5f       	subi	r16, 0xFE	; 254
 c20:	1f 4f       	sbci	r17, 0xFF	; 255
 c22:	f3 2d       	mov	r31, r3
 c24:	ff 76       	andi	r31, 0x6F	; 111
 c26:	3f 2e       	mov	r3, r31
 c28:	97 ff       	sbrs	r25, 7
 c2a:	09 c0       	rjmp	.+18     	; 0xc3e <vfprintf+0x230>
 c2c:	90 95       	com	r25
 c2e:	80 95       	com	r24
 c30:	70 95       	com	r23
 c32:	61 95       	neg	r22
 c34:	7f 4f       	sbci	r23, 0xFF	; 255
 c36:	8f 4f       	sbci	r24, 0xFF	; 255
 c38:	9f 4f       	sbci	r25, 0xFF	; 255
 c3a:	f0 68       	ori	r31, 0x80	; 128
 c3c:	3f 2e       	mov	r3, r31
 c3e:	2a e0       	ldi	r18, 0x0A	; 10
 c40:	30 e0       	ldi	r19, 0x00	; 0
 c42:	a3 01       	movw	r20, r6
 c44:	33 d1       	rcall	.+614    	; 0xeac <__ultoa_invert>
 c46:	88 2e       	mov	r8, r24
 c48:	86 18       	sub	r8, r6
 c4a:	44 c0       	rjmp	.+136    	; 0xcd4 <vfprintf+0x2c6>
 c4c:	85 37       	cpi	r24, 0x75	; 117
 c4e:	31 f4       	brne	.+12     	; 0xc5c <vfprintf+0x24e>
 c50:	23 2d       	mov	r18, r3
 c52:	2f 7e       	andi	r18, 0xEF	; 239
 c54:	b2 2e       	mov	r11, r18
 c56:	2a e0       	ldi	r18, 0x0A	; 10
 c58:	30 e0       	ldi	r19, 0x00	; 0
 c5a:	25 c0       	rjmp	.+74     	; 0xca6 <vfprintf+0x298>
 c5c:	93 2d       	mov	r25, r3
 c5e:	99 7f       	andi	r25, 0xF9	; 249
 c60:	b9 2e       	mov	r11, r25
 c62:	8f 36       	cpi	r24, 0x6F	; 111
 c64:	c1 f0       	breq	.+48     	; 0xc96 <vfprintf+0x288>
 c66:	18 f4       	brcc	.+6      	; 0xc6e <vfprintf+0x260>
 c68:	88 35       	cpi	r24, 0x58	; 88
 c6a:	79 f0       	breq	.+30     	; 0xc8a <vfprintf+0x27c>
 c6c:	ae c0       	rjmp	.+348    	; 0xdca <vfprintf+0x3bc>
 c6e:	80 37       	cpi	r24, 0x70	; 112
 c70:	19 f0       	breq	.+6      	; 0xc78 <vfprintf+0x26a>
 c72:	88 37       	cpi	r24, 0x78	; 120
 c74:	21 f0       	breq	.+8      	; 0xc7e <vfprintf+0x270>
 c76:	a9 c0       	rjmp	.+338    	; 0xdca <vfprintf+0x3bc>
 c78:	e9 2f       	mov	r30, r25
 c7a:	e0 61       	ori	r30, 0x10	; 16
 c7c:	be 2e       	mov	r11, r30
 c7e:	b4 fe       	sbrs	r11, 4
 c80:	0d c0       	rjmp	.+26     	; 0xc9c <vfprintf+0x28e>
 c82:	fb 2d       	mov	r31, r11
 c84:	f4 60       	ori	r31, 0x04	; 4
 c86:	bf 2e       	mov	r11, r31
 c88:	09 c0       	rjmp	.+18     	; 0xc9c <vfprintf+0x28e>
 c8a:	34 fe       	sbrs	r3, 4
 c8c:	0a c0       	rjmp	.+20     	; 0xca2 <vfprintf+0x294>
 c8e:	29 2f       	mov	r18, r25
 c90:	26 60       	ori	r18, 0x06	; 6
 c92:	b2 2e       	mov	r11, r18
 c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0x294>
 c96:	28 e0       	ldi	r18, 0x08	; 8
 c98:	30 e0       	ldi	r19, 0x00	; 0
 c9a:	05 c0       	rjmp	.+10     	; 0xca6 <vfprintf+0x298>
 c9c:	20 e1       	ldi	r18, 0x10	; 16
 c9e:	30 e0       	ldi	r19, 0x00	; 0
 ca0:	02 c0       	rjmp	.+4      	; 0xca6 <vfprintf+0x298>
 ca2:	20 e1       	ldi	r18, 0x10	; 16
 ca4:	32 e0       	ldi	r19, 0x02	; 2
 ca6:	f8 01       	movw	r30, r16
 ca8:	b7 fe       	sbrs	r11, 7
 caa:	07 c0       	rjmp	.+14     	; 0xcba <vfprintf+0x2ac>
 cac:	60 81       	ld	r22, Z
 cae:	71 81       	ldd	r23, Z+1	; 0x01
 cb0:	82 81       	ldd	r24, Z+2	; 0x02
 cb2:	93 81       	ldd	r25, Z+3	; 0x03
 cb4:	0c 5f       	subi	r16, 0xFC	; 252
 cb6:	1f 4f       	sbci	r17, 0xFF	; 255
 cb8:	06 c0       	rjmp	.+12     	; 0xcc6 <vfprintf+0x2b8>
 cba:	60 81       	ld	r22, Z
 cbc:	71 81       	ldd	r23, Z+1	; 0x01
 cbe:	80 e0       	ldi	r24, 0x00	; 0
 cc0:	90 e0       	ldi	r25, 0x00	; 0
 cc2:	0e 5f       	subi	r16, 0xFE	; 254
 cc4:	1f 4f       	sbci	r17, 0xFF	; 255
 cc6:	a3 01       	movw	r20, r6
 cc8:	f1 d0       	rcall	.+482    	; 0xeac <__ultoa_invert>
 cca:	88 2e       	mov	r8, r24
 ccc:	86 18       	sub	r8, r6
 cce:	fb 2d       	mov	r31, r11
 cd0:	ff 77       	andi	r31, 0x7F	; 127
 cd2:	3f 2e       	mov	r3, r31
 cd4:	36 fe       	sbrs	r3, 6
 cd6:	0d c0       	rjmp	.+26     	; 0xcf2 <vfprintf+0x2e4>
 cd8:	23 2d       	mov	r18, r3
 cda:	2e 7f       	andi	r18, 0xFE	; 254
 cdc:	a2 2e       	mov	r10, r18
 cde:	89 14       	cp	r8, r9
 ce0:	58 f4       	brcc	.+22     	; 0xcf8 <vfprintf+0x2ea>
 ce2:	34 fe       	sbrs	r3, 4
 ce4:	0b c0       	rjmp	.+22     	; 0xcfc <vfprintf+0x2ee>
 ce6:	32 fc       	sbrc	r3, 2
 ce8:	09 c0       	rjmp	.+18     	; 0xcfc <vfprintf+0x2ee>
 cea:	83 2d       	mov	r24, r3
 cec:	8e 7e       	andi	r24, 0xEE	; 238
 cee:	a8 2e       	mov	r10, r24
 cf0:	05 c0       	rjmp	.+10     	; 0xcfc <vfprintf+0x2ee>
 cf2:	b8 2c       	mov	r11, r8
 cf4:	a3 2c       	mov	r10, r3
 cf6:	03 c0       	rjmp	.+6      	; 0xcfe <vfprintf+0x2f0>
 cf8:	b8 2c       	mov	r11, r8
 cfa:	01 c0       	rjmp	.+2      	; 0xcfe <vfprintf+0x2f0>
 cfc:	b9 2c       	mov	r11, r9
 cfe:	a4 fe       	sbrs	r10, 4
 d00:	0f c0       	rjmp	.+30     	; 0xd20 <vfprintf+0x312>
 d02:	fe 01       	movw	r30, r28
 d04:	e8 0d       	add	r30, r8
 d06:	f1 1d       	adc	r31, r1
 d08:	80 81       	ld	r24, Z
 d0a:	80 33       	cpi	r24, 0x30	; 48
 d0c:	21 f4       	brne	.+8      	; 0xd16 <vfprintf+0x308>
 d0e:	9a 2d       	mov	r25, r10
 d10:	99 7e       	andi	r25, 0xE9	; 233
 d12:	a9 2e       	mov	r10, r25
 d14:	09 c0       	rjmp	.+18     	; 0xd28 <vfprintf+0x31a>
 d16:	a2 fe       	sbrs	r10, 2
 d18:	06 c0       	rjmp	.+12     	; 0xd26 <vfprintf+0x318>
 d1a:	b3 94       	inc	r11
 d1c:	b3 94       	inc	r11
 d1e:	04 c0       	rjmp	.+8      	; 0xd28 <vfprintf+0x31a>
 d20:	8a 2d       	mov	r24, r10
 d22:	86 78       	andi	r24, 0x86	; 134
 d24:	09 f0       	breq	.+2      	; 0xd28 <vfprintf+0x31a>
 d26:	b3 94       	inc	r11
 d28:	a3 fc       	sbrc	r10, 3
 d2a:	10 c0       	rjmp	.+32     	; 0xd4c <vfprintf+0x33e>
 d2c:	a0 fe       	sbrs	r10, 0
 d2e:	06 c0       	rjmp	.+12     	; 0xd3c <vfprintf+0x32e>
 d30:	b2 14       	cp	r11, r2
 d32:	80 f4       	brcc	.+32     	; 0xd54 <vfprintf+0x346>
 d34:	28 0c       	add	r2, r8
 d36:	92 2c       	mov	r9, r2
 d38:	9b 18       	sub	r9, r11
 d3a:	0d c0       	rjmp	.+26     	; 0xd56 <vfprintf+0x348>
 d3c:	b2 14       	cp	r11, r2
 d3e:	58 f4       	brcc	.+22     	; 0xd56 <vfprintf+0x348>
 d40:	b6 01       	movw	r22, r12
 d42:	80 e2       	ldi	r24, 0x20	; 32
 d44:	90 e0       	ldi	r25, 0x00	; 0
 d46:	76 d0       	rcall	.+236    	; 0xe34 <fputc>
 d48:	b3 94       	inc	r11
 d4a:	f8 cf       	rjmp	.-16     	; 0xd3c <vfprintf+0x32e>
 d4c:	b2 14       	cp	r11, r2
 d4e:	18 f4       	brcc	.+6      	; 0xd56 <vfprintf+0x348>
 d50:	2b 18       	sub	r2, r11
 d52:	02 c0       	rjmp	.+4      	; 0xd58 <vfprintf+0x34a>
 d54:	98 2c       	mov	r9, r8
 d56:	21 2c       	mov	r2, r1
 d58:	a4 fe       	sbrs	r10, 4
 d5a:	0f c0       	rjmp	.+30     	; 0xd7a <vfprintf+0x36c>
 d5c:	b6 01       	movw	r22, r12
 d5e:	80 e3       	ldi	r24, 0x30	; 48
 d60:	90 e0       	ldi	r25, 0x00	; 0
 d62:	68 d0       	rcall	.+208    	; 0xe34 <fputc>
 d64:	a2 fe       	sbrs	r10, 2
 d66:	16 c0       	rjmp	.+44     	; 0xd94 <vfprintf+0x386>
 d68:	a1 fc       	sbrc	r10, 1
 d6a:	03 c0       	rjmp	.+6      	; 0xd72 <vfprintf+0x364>
 d6c:	88 e7       	ldi	r24, 0x78	; 120
 d6e:	90 e0       	ldi	r25, 0x00	; 0
 d70:	02 c0       	rjmp	.+4      	; 0xd76 <vfprintf+0x368>
 d72:	88 e5       	ldi	r24, 0x58	; 88
 d74:	90 e0       	ldi	r25, 0x00	; 0
 d76:	b6 01       	movw	r22, r12
 d78:	0c c0       	rjmp	.+24     	; 0xd92 <vfprintf+0x384>
 d7a:	8a 2d       	mov	r24, r10
 d7c:	86 78       	andi	r24, 0x86	; 134
 d7e:	51 f0       	breq	.+20     	; 0xd94 <vfprintf+0x386>
 d80:	a1 fe       	sbrs	r10, 1
 d82:	02 c0       	rjmp	.+4      	; 0xd88 <vfprintf+0x37a>
 d84:	8b e2       	ldi	r24, 0x2B	; 43
 d86:	01 c0       	rjmp	.+2      	; 0xd8a <vfprintf+0x37c>
 d88:	80 e2       	ldi	r24, 0x20	; 32
 d8a:	a7 fc       	sbrc	r10, 7
 d8c:	8d e2       	ldi	r24, 0x2D	; 45
 d8e:	b6 01       	movw	r22, r12
 d90:	90 e0       	ldi	r25, 0x00	; 0
 d92:	50 d0       	rcall	.+160    	; 0xe34 <fputc>
 d94:	89 14       	cp	r8, r9
 d96:	30 f4       	brcc	.+12     	; 0xda4 <vfprintf+0x396>
 d98:	b6 01       	movw	r22, r12
 d9a:	80 e3       	ldi	r24, 0x30	; 48
 d9c:	90 e0       	ldi	r25, 0x00	; 0
 d9e:	4a d0       	rcall	.+148    	; 0xe34 <fputc>
 da0:	9a 94       	dec	r9
 da2:	f8 cf       	rjmp	.-16     	; 0xd94 <vfprintf+0x386>
 da4:	8a 94       	dec	r8
 da6:	f3 01       	movw	r30, r6
 da8:	e8 0d       	add	r30, r8
 daa:	f1 1d       	adc	r31, r1
 dac:	80 81       	ld	r24, Z
 dae:	b6 01       	movw	r22, r12
 db0:	90 e0       	ldi	r25, 0x00	; 0
 db2:	40 d0       	rcall	.+128    	; 0xe34 <fputc>
 db4:	81 10       	cpse	r8, r1
 db6:	f6 cf       	rjmp	.-20     	; 0xda4 <vfprintf+0x396>
 db8:	22 20       	and	r2, r2
 dba:	09 f4       	brne	.+2      	; 0xdbe <vfprintf+0x3b0>
 dbc:	4e ce       	rjmp	.-868    	; 0xa5a <vfprintf+0x4c>
 dbe:	b6 01       	movw	r22, r12
 dc0:	80 e2       	ldi	r24, 0x20	; 32
 dc2:	90 e0       	ldi	r25, 0x00	; 0
 dc4:	37 d0       	rcall	.+110    	; 0xe34 <fputc>
 dc6:	2a 94       	dec	r2
 dc8:	f7 cf       	rjmp	.-18     	; 0xdb8 <vfprintf+0x3aa>
 dca:	f6 01       	movw	r30, r12
 dcc:	86 81       	ldd	r24, Z+6	; 0x06
 dce:	97 81       	ldd	r25, Z+7	; 0x07
 dd0:	02 c0       	rjmp	.+4      	; 0xdd6 <vfprintf+0x3c8>
 dd2:	8f ef       	ldi	r24, 0xFF	; 255
 dd4:	9f ef       	ldi	r25, 0xFF	; 255
 dd6:	2b 96       	adiw	r28, 0x0b	; 11
 dd8:	0f b6       	in	r0, 0x3f	; 63
 dda:	f8 94       	cli
 ddc:	de bf       	out	0x3e, r29	; 62
 dde:	0f be       	out	0x3f, r0	; 63
 de0:	cd bf       	out	0x3d, r28	; 61
 de2:	df 91       	pop	r29
 de4:	cf 91       	pop	r28
 de6:	1f 91       	pop	r17
 de8:	0f 91       	pop	r16
 dea:	ff 90       	pop	r15
 dec:	ef 90       	pop	r14
 dee:	df 90       	pop	r13
 df0:	cf 90       	pop	r12
 df2:	bf 90       	pop	r11
 df4:	af 90       	pop	r10
 df6:	9f 90       	pop	r9
 df8:	8f 90       	pop	r8
 dfa:	7f 90       	pop	r7
 dfc:	6f 90       	pop	r6
 dfe:	5f 90       	pop	r5
 e00:	4f 90       	pop	r4
 e02:	3f 90       	pop	r3
 e04:	2f 90       	pop	r2
 e06:	08 95       	ret

00000e08 <strnlen_P>:
 e08:	fc 01       	movw	r30, r24
 e0a:	05 90       	lpm	r0, Z+
 e0c:	61 50       	subi	r22, 0x01	; 1
 e0e:	70 40       	sbci	r23, 0x00	; 0
 e10:	01 10       	cpse	r0, r1
 e12:	d8 f7       	brcc	.-10     	; 0xe0a <strnlen_P+0x2>
 e14:	80 95       	com	r24
 e16:	90 95       	com	r25
 e18:	8e 0f       	add	r24, r30
 e1a:	9f 1f       	adc	r25, r31
 e1c:	08 95       	ret

00000e1e <strnlen>:
 e1e:	fc 01       	movw	r30, r24
 e20:	61 50       	subi	r22, 0x01	; 1
 e22:	70 40       	sbci	r23, 0x00	; 0
 e24:	01 90       	ld	r0, Z+
 e26:	01 10       	cpse	r0, r1
 e28:	d8 f7       	brcc	.-10     	; 0xe20 <strnlen+0x2>
 e2a:	80 95       	com	r24
 e2c:	90 95       	com	r25
 e2e:	8e 0f       	add	r24, r30
 e30:	9f 1f       	adc	r25, r31
 e32:	08 95       	ret

00000e34 <fputc>:
 e34:	0f 93       	push	r16
 e36:	1f 93       	push	r17
 e38:	cf 93       	push	r28
 e3a:	df 93       	push	r29
 e3c:	fb 01       	movw	r30, r22
 e3e:	23 81       	ldd	r18, Z+3	; 0x03
 e40:	21 fd       	sbrc	r18, 1
 e42:	03 c0       	rjmp	.+6      	; 0xe4a <fputc+0x16>
 e44:	8f ef       	ldi	r24, 0xFF	; 255
 e46:	9f ef       	ldi	r25, 0xFF	; 255
 e48:	2c c0       	rjmp	.+88     	; 0xea2 <fputc+0x6e>
 e4a:	22 ff       	sbrs	r18, 2
 e4c:	16 c0       	rjmp	.+44     	; 0xe7a <fputc+0x46>
 e4e:	46 81       	ldd	r20, Z+6	; 0x06
 e50:	57 81       	ldd	r21, Z+7	; 0x07
 e52:	24 81       	ldd	r18, Z+4	; 0x04
 e54:	35 81       	ldd	r19, Z+5	; 0x05
 e56:	42 17       	cp	r20, r18
 e58:	53 07       	cpc	r21, r19
 e5a:	44 f4       	brge	.+16     	; 0xe6c <fputc+0x38>
 e5c:	a0 81       	ld	r26, Z
 e5e:	b1 81       	ldd	r27, Z+1	; 0x01
 e60:	9d 01       	movw	r18, r26
 e62:	2f 5f       	subi	r18, 0xFF	; 255
 e64:	3f 4f       	sbci	r19, 0xFF	; 255
 e66:	31 83       	std	Z+1, r19	; 0x01
 e68:	20 83       	st	Z, r18
 e6a:	8c 93       	st	X, r24
 e6c:	26 81       	ldd	r18, Z+6	; 0x06
 e6e:	37 81       	ldd	r19, Z+7	; 0x07
 e70:	2f 5f       	subi	r18, 0xFF	; 255
 e72:	3f 4f       	sbci	r19, 0xFF	; 255
 e74:	37 83       	std	Z+7, r19	; 0x07
 e76:	26 83       	std	Z+6, r18	; 0x06
 e78:	14 c0       	rjmp	.+40     	; 0xea2 <fputc+0x6e>
 e7a:	8b 01       	movw	r16, r22
 e7c:	ec 01       	movw	r28, r24
 e7e:	fb 01       	movw	r30, r22
 e80:	00 84       	ldd	r0, Z+8	; 0x08
 e82:	f1 85       	ldd	r31, Z+9	; 0x09
 e84:	e0 2d       	mov	r30, r0
 e86:	19 95       	eicall
 e88:	89 2b       	or	r24, r25
 e8a:	e1 f6       	brne	.-72     	; 0xe44 <fputc+0x10>
 e8c:	d8 01       	movw	r26, r16
 e8e:	16 96       	adiw	r26, 0x06	; 6
 e90:	8d 91       	ld	r24, X+
 e92:	9c 91       	ld	r25, X
 e94:	17 97       	sbiw	r26, 0x07	; 7
 e96:	01 96       	adiw	r24, 0x01	; 1
 e98:	17 96       	adiw	r26, 0x07	; 7
 e9a:	9c 93       	st	X, r25
 e9c:	8e 93       	st	-X, r24
 e9e:	16 97       	sbiw	r26, 0x06	; 6
 ea0:	ce 01       	movw	r24, r28
 ea2:	df 91       	pop	r29
 ea4:	cf 91       	pop	r28
 ea6:	1f 91       	pop	r17
 ea8:	0f 91       	pop	r16
 eaa:	08 95       	ret

00000eac <__ultoa_invert>:
 eac:	fa 01       	movw	r30, r20
 eae:	aa 27       	eor	r26, r26
 eb0:	28 30       	cpi	r18, 0x08	; 8
 eb2:	51 f1       	breq	.+84     	; 0xf08 <__ultoa_invert+0x5c>
 eb4:	20 31       	cpi	r18, 0x10	; 16
 eb6:	81 f1       	breq	.+96     	; 0xf18 <__ultoa_invert+0x6c>
 eb8:	e8 94       	clt
 eba:	6f 93       	push	r22
 ebc:	6e 7f       	andi	r22, 0xFE	; 254
 ebe:	6e 5f       	subi	r22, 0xFE	; 254
 ec0:	7f 4f       	sbci	r23, 0xFF	; 255
 ec2:	8f 4f       	sbci	r24, 0xFF	; 255
 ec4:	9f 4f       	sbci	r25, 0xFF	; 255
 ec6:	af 4f       	sbci	r26, 0xFF	; 255
 ec8:	b1 e0       	ldi	r27, 0x01	; 1
 eca:	3e d0       	rcall	.+124    	; 0xf48 <__ultoa_invert+0x9c>
 ecc:	b4 e0       	ldi	r27, 0x04	; 4
 ece:	3c d0       	rcall	.+120    	; 0xf48 <__ultoa_invert+0x9c>
 ed0:	67 0f       	add	r22, r23
 ed2:	78 1f       	adc	r23, r24
 ed4:	89 1f       	adc	r24, r25
 ed6:	9a 1f       	adc	r25, r26
 ed8:	a1 1d       	adc	r26, r1
 eda:	68 0f       	add	r22, r24
 edc:	79 1f       	adc	r23, r25
 ede:	8a 1f       	adc	r24, r26
 ee0:	91 1d       	adc	r25, r1
 ee2:	a1 1d       	adc	r26, r1
 ee4:	6a 0f       	add	r22, r26
 ee6:	71 1d       	adc	r23, r1
 ee8:	81 1d       	adc	r24, r1
 eea:	91 1d       	adc	r25, r1
 eec:	a1 1d       	adc	r26, r1
 eee:	20 d0       	rcall	.+64     	; 0xf30 <__ultoa_invert+0x84>
 ef0:	09 f4       	brne	.+2      	; 0xef4 <__ultoa_invert+0x48>
 ef2:	68 94       	set
 ef4:	3f 91       	pop	r19
 ef6:	2a e0       	ldi	r18, 0x0A	; 10
 ef8:	26 9f       	mul	r18, r22
 efa:	11 24       	eor	r1, r1
 efc:	30 19       	sub	r19, r0
 efe:	30 5d       	subi	r19, 0xD0	; 208
 f00:	31 93       	st	Z+, r19
 f02:	de f6       	brtc	.-74     	; 0xeba <__ultoa_invert+0xe>
 f04:	cf 01       	movw	r24, r30
 f06:	08 95       	ret
 f08:	46 2f       	mov	r20, r22
 f0a:	47 70       	andi	r20, 0x07	; 7
 f0c:	40 5d       	subi	r20, 0xD0	; 208
 f0e:	41 93       	st	Z+, r20
 f10:	b3 e0       	ldi	r27, 0x03	; 3
 f12:	0f d0       	rcall	.+30     	; 0xf32 <__ultoa_invert+0x86>
 f14:	c9 f7       	brne	.-14     	; 0xf08 <__ultoa_invert+0x5c>
 f16:	f6 cf       	rjmp	.-20     	; 0xf04 <__ultoa_invert+0x58>
 f18:	46 2f       	mov	r20, r22
 f1a:	4f 70       	andi	r20, 0x0F	; 15
 f1c:	40 5d       	subi	r20, 0xD0	; 208
 f1e:	4a 33       	cpi	r20, 0x3A	; 58
 f20:	18 f0       	brcs	.+6      	; 0xf28 <__ultoa_invert+0x7c>
 f22:	49 5d       	subi	r20, 0xD9	; 217
 f24:	31 fd       	sbrc	r19, 1
 f26:	40 52       	subi	r20, 0x20	; 32
 f28:	41 93       	st	Z+, r20
 f2a:	02 d0       	rcall	.+4      	; 0xf30 <__ultoa_invert+0x84>
 f2c:	a9 f7       	brne	.-22     	; 0xf18 <__ultoa_invert+0x6c>
 f2e:	ea cf       	rjmp	.-44     	; 0xf04 <__ultoa_invert+0x58>
 f30:	b4 e0       	ldi	r27, 0x04	; 4
 f32:	a6 95       	lsr	r26
 f34:	97 95       	ror	r25
 f36:	87 95       	ror	r24
 f38:	77 95       	ror	r23
 f3a:	67 95       	ror	r22
 f3c:	ba 95       	dec	r27
 f3e:	c9 f7       	brne	.-14     	; 0xf32 <__ultoa_invert+0x86>
 f40:	00 97       	sbiw	r24, 0x00	; 0
 f42:	61 05       	cpc	r22, r1
 f44:	71 05       	cpc	r23, r1
 f46:	08 95       	ret
 f48:	9b 01       	movw	r18, r22
 f4a:	ac 01       	movw	r20, r24
 f4c:	0a 2e       	mov	r0, r26
 f4e:	06 94       	lsr	r0
 f50:	57 95       	ror	r21
 f52:	47 95       	ror	r20
 f54:	37 95       	ror	r19
 f56:	27 95       	ror	r18
 f58:	ba 95       	dec	r27
 f5a:	c9 f7       	brne	.-14     	; 0xf4e <__ultoa_invert+0xa2>
 f5c:	62 0f       	add	r22, r18
 f5e:	73 1f       	adc	r23, r19
 f60:	84 1f       	adc	r24, r20
 f62:	95 1f       	adc	r25, r21
 f64:	a0 1d       	adc	r26, r0
 f66:	08 95       	ret

00000f68 <_exit>:
 f68:	f8 94       	cli

00000f6a <__stop_program>:
 f6a:	ff cf       	rjmp	.-2      	; 0xf6a <__stop_program>
