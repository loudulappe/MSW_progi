
binary_counting_array.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000e48  00000edc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000f50  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000fec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002571  00000000  00000000  000011dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fc3  00000000  00000000  0000374d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015f0  00000000  00000000  00004710  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000694  00000000  00000000  00005d00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cbf  00000000  00000000  00006394  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c56  00000000  00000000  00007053  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008ca9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	b6 c3       	rjmp	.+1900   	; 0x7ca <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e4       	ldi	r30, 0x48	; 72
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	91 c6       	rjmp	.+3362   	; 0xe44 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:

#include "ucBoardDriver.h"


int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	29 97       	sbiw	r28, 0x09	; 9
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
    initBoard(0);
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	e1 d1       	rcall	.+962    	; 0x4fe <initBoard>
    uint8_t Binarray [9] = {0};
 13c:	fe 01       	movw	r30, r28
 13e:	31 96       	adiw	r30, 0x01	; 1
 140:	89 e0       	ldi	r24, 0x09	; 9
 142:	df 01       	movw	r26, r30
 144:	1d 92       	st	X+, r1
 146:	8a 95       	dec	r24
 148:	e9 f7       	brne	.-6      	; 0x144 <main+0x20>
    uint8_t readout=0;
    uint8_t index=0;
 14a:	10 e0       	ldi	r17, 0x00	; 0
    while (1) 
    {
        if (index==9)
 14c:	19 30       	cpi	r17, 0x09	; 9
 14e:	61 f4       	brne	.+24     	; 0x168 <main+0x44>
 150:	08 c0       	rjmp	.+16     	; 0x162 <main+0x3e>
        {
            index=0;
            for (uint8_t i=0; i=i+1; 1<9)
            {
                Binarray[i]=0;
 152:	e1 e0       	ldi	r30, 0x01	; 1
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	ec 0f       	add	r30, r28
 158:	fd 1f       	adc	r31, r29
 15a:	e8 0f       	add	r30, r24
 15c:	f1 1d       	adc	r31, r1
 15e:	10 82       	st	Z, r1
 160:	01 c0       	rjmp	.+2      	; 0x164 <main+0x40>
 162:	80 e0       	ldi	r24, 0x00	; 0
    while (1) 
    {
        if (index==9)
        {
            index=0;
            for (uint8_t i=0; i=i+1; 1<9)
 164:	8f 5f       	subi	r24, 0xFF	; 255
 166:	a9 f7       	brne	.-22     	; 0x152 <main+0x2e>
 168:	10 e0       	ldi	r17, 0x00	; 0
 16a:	22 c0       	rjmp	.+68     	; 0x1b0 <main+0x8c>
            }
        }
        index=0;
        while (index<9)
        {
            if (Binarray[index])
 16c:	81 2f       	mov	r24, r17
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	e1 e0       	ldi	r30, 0x01	; 1
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	ec 0f       	add	r30, r28
 176:	fd 1f       	adc	r31, r29
 178:	e8 0f       	add	r30, r24
 17a:	f9 1f       	adc	r31, r25
 17c:	20 81       	ld	r18, Z
 17e:	22 23       	and	r18, r18
 180:	61 f0       	breq	.+24     	; 0x19a <main+0x76>
            {
                Binarray[index]=!Binarray[index];
 182:	31 e0       	ldi	r19, 0x01	; 1
 184:	21 11       	cpse	r18, r1
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	e1 e0       	ldi	r30, 0x01	; 1
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	ec 0f       	add	r30, r28
 18e:	fd 1f       	adc	r31, r29
 190:	e8 0f       	add	r30, r24
 192:	f9 1f       	adc	r31, r25
 194:	30 83       	st	Z, r19
                index=index+1;
 196:	1f 5f       	subi	r17, 0xFF	; 255
 198:	0b c0       	rjmp	.+22     	; 0x1b0 <main+0x8c>
            }
            else
            {
                Binarray[index]=!Binarray[index];
 19a:	31 e0       	ldi	r19, 0x01	; 1
 19c:	21 11       	cpse	r18, r1
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	e1 e0       	ldi	r30, 0x01	; 1
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	ec 0f       	add	r30, r28
 1a6:	fd 1f       	adc	r31, r29
 1a8:	e8 0f       	add	r30, r24
 1aa:	f9 1f       	adc	r31, r25
 1ac:	30 83       	st	Z, r19
                break;
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <main+0x90>
            {
                Binarray[i]=0;
            }
        }
        index=0;
        while (index<9)
 1b0:	19 30       	cpi	r17, 0x09	; 9
 1b2:	e0 f2       	brcs	.-72     	; 0x16c <main+0x48>
        readout=0;
//         for (uint8_t o=0; o=+1; o<2)
//         {
//             readout=readout+(Binarray[o]<<o);
//         }
        readout=readout+Binarray[0];
 1b4:	39 81       	ldd	r19, Y+1	; 0x01
        readout=readout+(Binarray[1]<<1);
 1b6:	2a 81       	ldd	r18, Y+2	; 0x02
 1b8:	22 0f       	add	r18, r18
 1ba:	92 2f       	mov	r25, r18
 1bc:	93 0f       	add	r25, r19
        readout=readout+(Binarray[2]<<2);
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	88 0f       	add	r24, r24
 1c2:	88 0f       	add	r24, r24
 1c4:	28 2f       	mov	r18, r24
 1c6:	29 0f       	add	r18, r25
        readout=readout+(Binarray[3]<<3);
 1c8:	8c 81       	ldd	r24, Y+4	; 0x04
 1ca:	88 0f       	add	r24, r24
 1cc:	88 0f       	add	r24, r24
 1ce:	88 0f       	add	r24, r24
 1d0:	82 0f       	add	r24, r18
        readout=readout+(Binarray[4]<<4);
 1d2:	9d 81       	ldd	r25, Y+5	; 0x05
 1d4:	b0 e1       	ldi	r27, 0x10	; 16
 1d6:	9b 9f       	mul	r25, r27
 1d8:	80 0d       	add	r24, r0
 1da:	11 24       	eor	r1, r1
        readout=readout+(Binarray[5]<<5);
 1dc:	9e 81       	ldd	r25, Y+6	; 0x06
 1de:	20 e2       	ldi	r18, 0x20	; 32
 1e0:	92 9f       	mul	r25, r18
 1e2:	80 0d       	add	r24, r0
 1e4:	11 24       	eor	r1, r1
        readout=readout+(Binarray[6]<<6);
 1e6:	9f 81       	ldd	r25, Y+7	; 0x07
 1e8:	a0 e4       	ldi	r26, 0x40	; 64
 1ea:	9a 9f       	mul	r25, r26
 1ec:	80 0d       	add	r24, r0
 1ee:	11 24       	eor	r1, r1
 1f0:	98 2f       	mov	r25, r24
        readout=readout+(Binarray[7]<<7);
 1f2:	88 85       	ldd	r24, Y+8	; 0x08
 1f4:	87 95       	ror	r24
 1f6:	88 27       	eor	r24, r24
 1f8:	87 95       	ror	r24
 1fa:	89 0f       	add	r24, r25
        ledWriteAll(readout);
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0a d0       	rcall	.+20     	; 0x214 <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 200:	bf ef       	ldi	r27, 0xFF	; 255
 202:	21 ee       	ldi	r18, 0xE1	; 225
 204:	84 e0       	ldi	r24, 0x04	; 4
 206:	b1 50       	subi	r27, 0x01	; 1
 208:	20 40       	sbci	r18, 0x00	; 0
 20a:	80 40       	sbci	r24, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0xe2>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0xec>
 210:	00 00       	nop
 212:	9c cf       	rjmp	.-200    	; 0x14c <main+0x28>

00000214 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 214:	82 b9       	out	0x02, r24	; 2
 216:	95 b9       	out	0x05, r25	; 5
 218:	08 95       	ret

0000021a <buttonReadAllPL>:
 21a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 21e:	08 95       	ret

00000220 <startSystemTimeMs>:
 220:	83 e0       	ldi	r24, 0x03	; 3
 222:	84 bd       	out	0x24, r24	; 36
 224:	8b e0       	ldi	r24, 0x0B	; 11
 226:	85 bd       	out	0x25, r24	; 37
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 22e:	89 ef       	ldi	r24, 0xF9	; 249
 230:	87 bd       	out	0x27, r24	; 39
 232:	08 95       	ret

00000234 <initAdc>:
 234:	11 ba       	out	0x11, r1	; 17
 236:	10 ba       	out	0x10, r1	; 16
 238:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 23c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 240:	80 e4       	ldi	r24, 0x40	; 64
 242:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 246:	8f e0       	ldi	r24, 0x0F	; 15
 248:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 24c:	8f ef       	ldi	r24, 0xFF	; 255
 24e:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 252:	ea e7       	ldi	r30, 0x7A	; 122
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	87 ea       	ldi	r24, 0xA7	; 167
 258:	80 83       	st	Z, r24
 25a:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 25e:	80 81       	ld	r24, Z
 260:	80 64       	ori	r24, 0x40	; 64
 262:	80 83       	st	Z, r24
 264:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 268:	84 ff       	sbrs	r24, 4
 26a:	fc cf       	rjmp	.-8      	; 0x264 <initAdc+0x30>
 26c:	ea e7       	ldi	r30, 0x7A	; 122
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	80 81       	ld	r24, Z
 272:	8f 7e       	andi	r24, 0xEF	; 239
 274:	80 83       	st	Z, r24
 276:	08 95       	ret

00000278 <rgbWrite>:
 278:	2f ef       	ldi	r18, 0xFF	; 255
 27a:	33 e0       	ldi	r19, 0x03	; 3
 27c:	f9 01       	movw	r30, r18
 27e:	e8 1b       	sub	r30, r24
 280:	f9 0b       	sbc	r31, r25
 282:	c9 01       	movw	r24, r18
 284:	86 1b       	sub	r24, r22
 286:	97 0b       	sbc	r25, r23
 288:	24 1b       	sub	r18, r20
 28a:	35 0b       	sbc	r19, r21
 28c:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 290:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 294:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 298:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 29c:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 2a0:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 2a4:	08 95       	ret

000002a6 <initRgb>:
 2a6:	8e ef       	ldi	r24, 0xFE	; 254
 2a8:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 2ac:	8b e1       	ldi	r24, 0x1B	; 27
 2ae:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 2b2:	83 e0       	ldi	r24, 0x03	; 3
 2b4:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 2b8:	8f ef       	ldi	r24, 0xFF	; 255
 2ba:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 2be:	40 e0       	ldi	r20, 0x00	; 0
 2c0:	50 e0       	ldi	r21, 0x00	; 0
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	d6 cf       	rjmp	.-84     	; 0x278 <rgbWrite>
 2cc:	08 95       	ret

000002ce <lcdSid>:
 2ce:	88 23       	and	r24, r24
 2d0:	21 f0       	breq	.+8      	; 0x2da <lcdSid+0xc>
 2d2:	84 b3       	in	r24, 0x14	; 20
 2d4:	81 60       	ori	r24, 0x01	; 1
 2d6:	84 bb       	out	0x14, r24	; 20
 2d8:	08 95       	ret
 2da:	84 b3       	in	r24, 0x14	; 20
 2dc:	8e 7f       	andi	r24, 0xFE	; 254
 2de:	84 bb       	out	0x14, r24	; 20
 2e0:	08 95       	ret

000002e2 <lcdSclk>:
 2e2:	88 23       	and	r24, r24
 2e4:	21 f0       	breq	.+8      	; 0x2ee <lcdSclk+0xc>
 2e6:	84 b3       	in	r24, 0x14	; 20
 2e8:	82 60       	ori	r24, 0x02	; 2
 2ea:	84 bb       	out	0x14, r24	; 20
 2ec:	08 95       	ret
 2ee:	84 b3       	in	r24, 0x14	; 20
 2f0:	8d 7f       	andi	r24, 0xFD	; 253
 2f2:	84 bb       	out	0x14, r24	; 20
 2f4:	08 95       	ret

000002f6 <lcdLight>:
 2f6:	81 11       	cpse	r24, r1
 2f8:	04 c0       	rjmp	.+8      	; 0x302 <lcdLight+0xc>
 2fa:	84 b5       	in	r24, 0x24	; 36
 2fc:	8f 7d       	andi	r24, 0xDF	; 223
 2fe:	84 bd       	out	0x24, r24	; 36
 300:	08 95       	ret
 302:	94 b5       	in	r25, 0x24	; 36
 304:	90 62       	ori	r25, 0x20	; 32
 306:	94 bd       	out	0x24, r25	; 36
 308:	88 bd       	out	0x28, r24	; 40
 30a:	08 95       	ret

0000030c <writeLcdF>:
 30c:	ef 92       	push	r14
 30e:	ff 92       	push	r15
 310:	0f 93       	push	r16
 312:	1f 93       	push	r17
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	7c 01       	movw	r14, r24
 31a:	eb 01       	movw	r28, r22
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	d7 df       	rcall	.-82     	; 0x2ce <lcdSid>
 320:	00 e0       	ldi	r16, 0x00	; 0
 322:	10 e0       	ldi	r17, 0x00	; 0
 324:	06 c0       	rjmp	.+12     	; 0x332 <writeLcdF+0x26>
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	dc df       	rcall	.-72     	; 0x2e2 <lcdSclk>
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	da df       	rcall	.-76     	; 0x2e2 <lcdSclk>
 32e:	0f 5f       	subi	r16, 0xFF	; 255
 330:	1f 4f       	sbci	r17, 0xFF	; 255
 332:	05 30       	cpi	r16, 0x05	; 5
 334:	11 05       	cpc	r17, r1
 336:	b8 f3       	brcs	.-18     	; 0x326 <writeLcdF+0x1a>
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	c9 df       	rcall	.-110    	; 0x2ce <lcdSid>
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	d1 df       	rcall	.-94     	; 0x2e2 <lcdSclk>
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	cf df       	rcall	.-98     	; 0x2e2 <lcdSclk>
 344:	83 e4       	ldi	r24, 0x43	; 67
 346:	e8 16       	cp	r14, r24
 348:	f1 04       	cpc	r15, r1
 34a:	19 f4       	brne	.+6      	; 0x352 <writeLcdF+0x46>
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	bf df       	rcall	.-130    	; 0x2ce <lcdSid>
 350:	02 c0       	rjmp	.+4      	; 0x356 <writeLcdF+0x4a>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	bc df       	rcall	.-136    	; 0x2ce <lcdSid>
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	c4 df       	rcall	.-120    	; 0x2e2 <lcdSclk>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	c2 df       	rcall	.-124    	; 0x2e2 <lcdSclk>
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	b6 df       	rcall	.-148    	; 0x2ce <lcdSid>
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	be df       	rcall	.-132    	; 0x2e2 <lcdSclk>
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	bc df       	rcall	.-136    	; 0x2e2 <lcdSclk>
 36a:	00 e0       	ldi	r16, 0x00	; 0
 36c:	10 e0       	ldi	r17, 0x00	; 0
 36e:	11 c0       	rjmp	.+34     	; 0x392 <writeLcdF+0x86>
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	b7 df       	rcall	.-146    	; 0x2e2 <lcdSclk>
 374:	c0 ff       	sbrs	r28, 0
 376:	03 c0       	rjmp	.+6      	; 0x37e <writeLcdF+0x72>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	a9 df       	rcall	.-174    	; 0x2ce <lcdSid>
 37c:	02 c0       	rjmp	.+4      	; 0x382 <writeLcdF+0x76>
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	a6 df       	rcall	.-180    	; 0x2ce <lcdSid>
 382:	d6 95       	lsr	r29
 384:	c7 95       	ror	r28
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	ac df       	rcall	.-168    	; 0x2e2 <lcdSclk>
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	aa df       	rcall	.-172    	; 0x2e2 <lcdSclk>
 38e:	0f 5f       	subi	r16, 0xFF	; 255
 390:	1f 4f       	sbci	r17, 0xFF	; 255
 392:	04 30       	cpi	r16, 0x04	; 4
 394:	11 05       	cpc	r17, r1
 396:	60 f3       	brcs	.-40     	; 0x370 <writeLcdF+0x64>
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	99 df       	rcall	.-206    	; 0x2ce <lcdSid>
 39c:	00 e0       	ldi	r16, 0x00	; 0
 39e:	10 e0       	ldi	r17, 0x00	; 0
 3a0:	06 c0       	rjmp	.+12     	; 0x3ae <writeLcdF+0xa2>
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	9e df       	rcall	.-196    	; 0x2e2 <lcdSclk>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	9c df       	rcall	.-200    	; 0x2e2 <lcdSclk>
 3aa:	0f 5f       	subi	r16, 0xFF	; 255
 3ac:	1f 4f       	sbci	r17, 0xFF	; 255
 3ae:	04 30       	cpi	r16, 0x04	; 4
 3b0:	11 05       	cpc	r17, r1
 3b2:	b8 f3       	brcs	.-18     	; 0x3a2 <writeLcdF+0x96>
 3b4:	00 e0       	ldi	r16, 0x00	; 0
 3b6:	10 e0       	ldi	r17, 0x00	; 0
 3b8:	11 c0       	rjmp	.+34     	; 0x3dc <writeLcdF+0xd0>
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	92 df       	rcall	.-220    	; 0x2e2 <lcdSclk>
 3be:	c0 ff       	sbrs	r28, 0
 3c0:	03 c0       	rjmp	.+6      	; 0x3c8 <writeLcdF+0xbc>
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	84 df       	rcall	.-248    	; 0x2ce <lcdSid>
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <writeLcdF+0xc0>
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	81 df       	rcall	.-254    	; 0x2ce <lcdSid>
 3cc:	d6 95       	lsr	r29
 3ce:	c7 95       	ror	r28
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	87 df       	rcall	.-242    	; 0x2e2 <lcdSclk>
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	85 df       	rcall	.-246    	; 0x2e2 <lcdSclk>
 3d8:	0f 5f       	subi	r16, 0xFF	; 255
 3da:	1f 4f       	sbci	r17, 0xFF	; 255
 3dc:	04 30       	cpi	r16, 0x04	; 4
 3de:	11 05       	cpc	r17, r1
 3e0:	60 f3       	brcs	.-40     	; 0x3ba <writeLcdF+0xae>
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	74 df       	rcall	.-280    	; 0x2ce <lcdSid>
 3e6:	c0 e0       	ldi	r28, 0x00	; 0
 3e8:	d0 e0       	ldi	r29, 0x00	; 0
 3ea:	05 c0       	rjmp	.+10     	; 0x3f6 <writeLcdF+0xea>
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	79 df       	rcall	.-270    	; 0x2e2 <lcdSclk>
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	77 df       	rcall	.-274    	; 0x2e2 <lcdSclk>
 3f4:	21 96       	adiw	r28, 0x01	; 1
 3f6:	c4 30       	cpi	r28, 0x04	; 4
 3f8:	d1 05       	cpc	r29, r1
 3fa:	c0 f3       	brcs	.-16     	; 0x3ec <writeLcdF+0xe0>
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	67 df       	rcall	.-306    	; 0x2ce <lcdSid>
 400:	87 ec       	ldi	r24, 0xC7	; 199
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	01 97       	sbiw	r24, 0x01	; 1
 406:	f1 f7       	brne	.-4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 408:	00 c0       	rjmp	.+0      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 40a:	00 00       	nop
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	1f 91       	pop	r17
 412:	0f 91       	pop	r16
 414:	ff 90       	pop	r15
 416:	ef 90       	pop	r14
 418:	08 95       	ret

0000041a <lcdWriteText>:
 41a:	1f 93       	push	r17
 41c:	cf 93       	push	r28
 41e:	df 93       	push	r29
 420:	cd b7       	in	r28, 0x3d	; 61
 422:	de b7       	in	r29, 0x3e	; 62
 424:	65 97       	sbiw	r28, 0x15	; 21
 426:	0f b6       	in	r0, 0x3f	; 63
 428:	f8 94       	cli
 42a:	de bf       	out	0x3e, r29	; 62
 42c:	0f be       	out	0x3f, r0	; 63
 42e:	cd bf       	out	0x3d, r28	; 61
 430:	9e 01       	movw	r18, r28
 432:	20 5e       	subi	r18, 0xE0	; 224
 434:	3f 4f       	sbci	r19, 0xFF	; 255
 436:	4e 8d       	ldd	r20, Y+30	; 0x1e
 438:	5f 8d       	ldd	r21, Y+31	; 0x1f
 43a:	65 e1       	ldi	r22, 0x15	; 21
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	ce 01       	movw	r24, r28
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	1b d2       	rcall	.+1078   	; 0x87a <vsnprintf>
 444:	6d 8d       	ldd	r22, Y+29	; 0x1d
 446:	8c 8d       	ldd	r24, Y+28	; 0x1c
 448:	90 e2       	ldi	r25, 0x20	; 32
 44a:	89 9f       	mul	r24, r25
 44c:	60 0d       	add	r22, r0
 44e:	11 24       	eor	r1, r1
 450:	60 68       	ori	r22, 0x80	; 128
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	83 e4       	ldi	r24, 0x43	; 67
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	59 df       	rcall	.-334    	; 0x30c <writeLcdF>
 45a:	10 e0       	ldi	r17, 0x00	; 0
 45c:	05 c0       	rjmp	.+10     	; 0x468 <lcdWriteText+0x4e>
 45e:	1f 5f       	subi	r17, 0xFF	; 255
 460:	70 e0       	ldi	r23, 0x00	; 0
 462:	84 e4       	ldi	r24, 0x44	; 68
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	52 df       	rcall	.-348    	; 0x30c <writeLcdF>
 468:	e1 e0       	ldi	r30, 0x01	; 1
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	ec 0f       	add	r30, r28
 46e:	fd 1f       	adc	r31, r29
 470:	e1 0f       	add	r30, r17
 472:	f1 1d       	adc	r31, r1
 474:	60 81       	ld	r22, Z
 476:	61 11       	cpse	r22, r1
 478:	f2 cf       	rjmp	.-28     	; 0x45e <lcdWriteText+0x44>
 47a:	65 96       	adiw	r28, 0x15	; 21
 47c:	0f b6       	in	r0, 0x3f	; 63
 47e:	f8 94       	cli
 480:	de bf       	out	0x3e, r29	; 62
 482:	0f be       	out	0x3f, r0	; 63
 484:	cd bf       	out	0x3d, r28	; 61
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	1f 91       	pop	r17
 48c:	08 95       	ret

0000048e <lcdClear>:
 48e:	61 e0       	ldi	r22, 0x01	; 1
 490:	70 e0       	ldi	r23, 0x00	; 0
 492:	83 e4       	ldi	r24, 0x43	; 67
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	3a df       	rcall	.-396    	; 0x30c <writeLcdF>
 498:	8f e3       	ldi	r24, 0x3F	; 63
 49a:	9f e1       	ldi	r25, 0x1F	; 31
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <lcdClear+0xe>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <lcdClear+0x14>
 4a2:	00 00       	nop
 4a4:	80 e3       	ldi	r24, 0x30	; 48
 4a6:	92 e0       	ldi	r25, 0x02	; 2
 4a8:	9f 93       	push	r25
 4aa:	8f 93       	push	r24
 4ac:	1f 92       	push	r1
 4ae:	1f 92       	push	r1
 4b0:	b4 df       	rcall	.-152    	; 0x41a <lcdWriteText>
 4b2:	0f 90       	pop	r0
 4b4:	0f 90       	pop	r0
 4b6:	0f 90       	pop	r0
 4b8:	0f 90       	pop	r0
 4ba:	08 95       	ret

000004bc <initLcd>:
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	11 df       	rcall	.-478    	; 0x2e2 <lcdSclk>
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	05 df       	rcall	.-502    	; 0x2ce <lcdSid>
 4c4:	64 e3       	ldi	r22, 0x34	; 52
 4c6:	70 e0       	ldi	r23, 0x00	; 0
 4c8:	83 e4       	ldi	r24, 0x43	; 67
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	1f df       	rcall	.-450    	; 0x30c <writeLcdF>
 4ce:	69 e0       	ldi	r22, 0x09	; 9
 4d0:	70 e0       	ldi	r23, 0x00	; 0
 4d2:	83 e4       	ldi	r24, 0x43	; 67
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	1a df       	rcall	.-460    	; 0x30c <writeLcdF>
 4d8:	60 e3       	ldi	r22, 0x30	; 48
 4da:	70 e0       	ldi	r23, 0x00	; 0
 4dc:	83 e4       	ldi	r24, 0x43	; 67
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	15 df       	rcall	.-470    	; 0x30c <writeLcdF>
 4e2:	6c e0       	ldi	r22, 0x0C	; 12
 4e4:	70 e0       	ldi	r23, 0x00	; 0
 4e6:	83 e4       	ldi	r24, 0x43	; 67
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	10 df       	rcall	.-480    	; 0x30c <writeLcdF>
 4ec:	d0 df       	rcall	.-96     	; 0x48e <lcdClear>
 4ee:	67 e0       	ldi	r22, 0x07	; 7
 4f0:	70 e0       	ldi	r23, 0x00	; 0
 4f2:	83 e4       	ldi	r24, 0x43	; 67
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	0a df       	rcall	.-492    	; 0x30c <writeLcdF>
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	fd ce       	rjmp	.-518    	; 0x2f6 <lcdLight>
 4fc:	08 95       	ret

000004fe <initBoard>:
 4fe:	ff 92       	push	r15
 500:	0f 93       	push	r16
 502:	1f 93       	push	r17
 504:	cf 93       	push	r28
 506:	df 93       	push	r29
 508:	c8 2f       	mov	r28, r24
 50a:	85 b7       	in	r24, 0x35	; 53
 50c:	85 bf       	out	0x35, r24	; 53
 50e:	12 b8       	out	0x02, r1	; 2
 510:	8f ef       	ldi	r24, 0xFF	; 255
 512:	81 b9       	out	0x01, r24	; 1
 514:	15 b8       	out	0x05, r1	; 5
 516:	84 b9       	out	0x04, r24	; 4
 518:	88 b9       	out	0x08, r24	; 8
 51a:	17 b8       	out	0x07, r1	; 7
 51c:	8b b9       	out	0x0b, r24	; 11
 51e:	1a b8       	out	0x0a, r1	; 10
 520:	8e b9       	out	0x0e, r24	; 14
 522:	1d b8       	out	0x0d, r1	; 13
 524:	9e b1       	in	r25, 0x0e	; 14
 526:	9b 7f       	andi	r25, 0xFB	; 251
 528:	9e b9       	out	0x0e, r25	; 14
 52a:	11 ba       	out	0x11, r1	; 17
 52c:	10 ba       	out	0x10, r1	; 16
 52e:	94 e0       	ldi	r25, 0x04	; 4
 530:	94 bb       	out	0x14, r25	; 20
 532:	93 b3       	in	r25, 0x13	; 19
 534:	93 60       	ori	r25, 0x03	; 3
 536:	93 bb       	out	0x13, r25	; 19
 538:	93 b3       	in	r25, 0x13	; 19
 53a:	90 62       	ori	r25, 0x20	; 32
 53c:	93 bb       	out	0x13, r25	; 19
 53e:	97 ec       	ldi	r25, 0xC7	; 199
 540:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 544:	98 e3       	ldi	r25, 0x38	; 56
 546:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 54a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 54e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 552:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 556:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 55a:	8c e3       	ldi	r24, 0x3C	; 60
 55c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 560:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 564:	78 94       	sei
 566:	5c de       	rcall	.-840    	; 0x220 <startSystemTimeMs>
 568:	a9 df       	rcall	.-174    	; 0x4bc <initLcd>
 56a:	64 de       	rcall	.-824    	; 0x234 <initAdc>
 56c:	9c de       	rcall	.-712    	; 0x2a6 <initRgb>
 56e:	cc 23       	and	r28, r28
 570:	09 f4       	brne	.+2      	; 0x574 <initBoard+0x76>
 572:	a3 c0       	rjmp	.+326    	; 0x6ba <initBoard+0x1bc>
 574:	8f ef       	ldi	r24, 0xFF	; 255
 576:	bf de       	rcall	.-642    	; 0x2f6 <lcdLight>
 578:	40 e0       	ldi	r20, 0x00	; 0
 57a:	50 e0       	ldi	r21, 0x00	; 0
 57c:	6f ef       	ldi	r22, 0xFF	; 255
 57e:	73 e0       	ldi	r23, 0x03	; 3
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	79 de       	rcall	.-782    	; 0x278 <rgbWrite>
 586:	8d e1       	ldi	r24, 0x1D	; 29
 588:	92 e0       	ldi	r25, 0x02	; 2
 58a:	9f 93       	push	r25
 58c:	8f 93       	push	r24
 58e:	1f 92       	push	r1
 590:	1f 92       	push	r1
 592:	43 df       	rcall	.-378    	; 0x41a <lcdWriteText>
 594:	82 e3       	ldi	r24, 0x32	; 50
 596:	92 e0       	ldi	r25, 0x02	; 2
 598:	9f 93       	push	r25
 59a:	8f 93       	push	r24
 59c:	1f 92       	push	r1
 59e:	81 e0       	ldi	r24, 0x01	; 1
 5a0:	8f 93       	push	r24
 5a2:	3b df       	rcall	.-394    	; 0x41a <lcdWriteText>
 5a4:	88 e0       	ldi	r24, 0x08	; 8
 5a6:	92 e0       	ldi	r25, 0x02	; 2
 5a8:	9f 93       	push	r25
 5aa:	8f 93       	push	r24
 5ac:	1f 92       	push	r1
 5ae:	82 e0       	ldi	r24, 0x02	; 2
 5b0:	8f 93       	push	r24
 5b2:	33 df       	rcall	.-410    	; 0x41a <lcdWriteText>
 5b4:	87 e4       	ldi	r24, 0x47	; 71
 5b6:	92 e0       	ldi	r25, 0x02	; 2
 5b8:	9f 93       	push	r25
 5ba:	8f 93       	push	r24
 5bc:	1f 92       	push	r1
 5be:	83 e0       	ldi	r24, 0x03	; 3
 5c0:	8f 93       	push	r24
 5c2:	2b df       	rcall	.-426    	; 0x41a <lcdWriteText>
 5c4:	8d b7       	in	r24, 0x3d	; 61
 5c6:	9e b7       	in	r25, 0x3e	; 62
 5c8:	40 96       	adiw	r24, 0x10	; 16
 5ca:	0f b6       	in	r0, 0x3f	; 63
 5cc:	f8 94       	cli
 5ce:	9e bf       	out	0x3e, r25	; 62
 5d0:	0f be       	out	0x3f, r0	; 63
 5d2:	8d bf       	out	0x3d, r24	; 61
 5d4:	ff 24       	eor	r15, r15
 5d6:	f3 94       	inc	r15
 5d8:	c0 e0       	ldi	r28, 0x00	; 0
 5da:	10 e0       	ldi	r17, 0x00	; 0
 5dc:	01 e0       	ldi	r16, 0x01	; 1
 5de:	d0 e0       	ldi	r29, 0x00	; 0
 5e0:	00 23       	and	r16, r16
 5e2:	51 f0       	breq	.+20     	; 0x5f8 <initBoard+0xfa>
 5e4:	80 e0       	ldi	r24, 0x00	; 0
 5e6:	90 e8       	ldi	r25, 0x80	; 128
 5e8:	0d 2e       	mov	r0, r29
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <initBoard+0xf2>
 5ec:	96 95       	lsr	r25
 5ee:	87 95       	ror	r24
 5f0:	0a 94       	dec	r0
 5f2:	e2 f7       	brpl	.-8      	; 0x5ec <initBoard+0xee>
 5f4:	0f de       	rcall	.-994    	; 0x214 <ledWriteAll>
 5f6:	09 c0       	rjmp	.+18     	; 0x60a <initBoard+0x10c>
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0d 2e       	mov	r0, r29
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <initBoard+0x106>
 600:	88 0f       	add	r24, r24
 602:	99 1f       	adc	r25, r25
 604:	0a 94       	dec	r0
 606:	e2 f7       	brpl	.-8      	; 0x600 <initBoard+0x102>
 608:	05 de       	rcall	.-1014   	; 0x214 <ledWriteAll>
 60a:	df 5f       	subi	r29, 0xFF	; 255
 60c:	d1 31       	cpi	r29, 0x11	; 17
 60e:	28 f0       	brcs	.+10     	; 0x61a <initBoard+0x11c>
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	01 11       	cpse	r16, r1
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	08 2f       	mov	r16, r24
 618:	d0 e0       	ldi	r29, 0x00	; 0
 61a:	ff 20       	and	r15, r15
 61c:	11 f0       	breq	.+4      	; 0x622 <initBoard+0x124>
 61e:	ce 5f       	subi	r28, 0xFE	; 254
 620:	01 c0       	rjmp	.+2      	; 0x624 <initBoard+0x126>
 622:	c2 50       	subi	r28, 0x02	; 2
 624:	8c 2f       	mov	r24, r28
 626:	67 de       	rcall	.-818    	; 0x2f6 <lcdLight>
 628:	ce 3f       	cpi	r28, 0xFE	; 254
 62a:	09 f4       	brne	.+2      	; 0x62e <initBoard+0x130>
 62c:	f1 2c       	mov	r15, r1
 62e:	c8 37       	cpi	r28, 0x78	; 120
 630:	11 f4       	brne	.+4      	; 0x636 <initBoard+0x138>
 632:	ff 24       	eor	r15, r15
 634:	f3 94       	inc	r15
 636:	11 11       	cpse	r17, r1
 638:	17 c0       	rjmp	.+46     	; 0x668 <initBoard+0x16a>
 63a:	ef dd       	rcall	.-1058   	; 0x21a <buttonReadAllPL>
 63c:	83 7c       	andi	r24, 0xC3	; 195
 63e:	a1 f0       	breq	.+40     	; 0x668 <initBoard+0x16a>
 640:	40 e0       	ldi	r20, 0x00	; 0
 642:	50 e0       	ldi	r21, 0x00	; 0
 644:	66 e2       	ldi	r22, 0x26	; 38
 646:	72 e0       	ldi	r23, 0x02	; 2
 648:	8f ef       	ldi	r24, 0xFF	; 255
 64a:	93 e0       	ldi	r25, 0x03	; 3
 64c:	15 de       	rcall	.-982    	; 0x278 <rgbWrite>
 64e:	8c e5       	ldi	r24, 0x5C	; 92
 650:	92 e0       	ldi	r25, 0x02	; 2
 652:	9f 93       	push	r25
 654:	8f 93       	push	r24
 656:	1f 92       	push	r1
 658:	83 e0       	ldi	r24, 0x03	; 3
 65a:	8f 93       	push	r24
 65c:	de de       	rcall	.-580    	; 0x41a <lcdWriteText>
 65e:	0f 90       	pop	r0
 660:	0f 90       	pop	r0
 662:	0f 90       	pop	r0
 664:	0f 90       	pop	r0
 666:	11 e0       	ldi	r17, 0x01	; 1
 668:	11 23       	and	r17, r17
 66a:	19 f0       	breq	.+6      	; 0x672 <initBoard+0x174>
 66c:	d6 dd       	rcall	.-1108   	; 0x21a <buttonReadAllPL>
 66e:	83 7c       	andi	r24, 0xC3	; 195
 670:	39 f0       	breq	.+14     	; 0x680 <initBoard+0x182>
 672:	8f ef       	ldi	r24, 0xFF	; 255
 674:	9c e7       	ldi	r25, 0x7C	; 124
 676:	01 97       	sbiw	r24, 0x01	; 1
 678:	f1 f7       	brne	.-4      	; 0x676 <initBoard+0x178>
 67a:	00 c0       	rjmp	.+0      	; 0x67c <initBoard+0x17e>
 67c:	00 00       	nop
 67e:	b0 cf       	rjmp	.-160    	; 0x5e0 <initBoard+0xe2>
 680:	06 df       	rcall	.-500    	; 0x48e <lcdClear>
 682:	80 e0       	ldi	r24, 0x00	; 0
 684:	38 de       	rcall	.-912    	; 0x2f6 <lcdLight>
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	c4 dd       	rcall	.-1144   	; 0x214 <ledWriteAll>
 68c:	40 e0       	ldi	r20, 0x00	; 0
 68e:	50 e0       	ldi	r21, 0x00	; 0
 690:	60 e0       	ldi	r22, 0x00	; 0
 692:	70 e0       	ldi	r23, 0x00	; 0
 694:	80 e0       	ldi	r24, 0x00	; 0
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	ef dd       	rcall	.-1058   	; 0x278 <rgbWrite>
 69a:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 69e:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 6a2:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 6a6:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 6aa:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 6ae:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 6b2:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 6b6:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 6ba:	df 91       	pop	r29
 6bc:	cf 91       	pop	r28
 6be:	1f 91       	pop	r17
 6c0:	0f 91       	pop	r16
 6c2:	ff 90       	pop	r15
 6c4:	08 95       	ret

000006c6 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 6c6:	cf 93       	push	r28
 6c8:	df 93       	push	r29
 6ca:	cd b7       	in	r28, 0x3d	; 61
 6cc:	de b7       	in	r29, 0x3e	; 62
 6ce:	28 97       	sbiw	r28, 0x08	; 8
 6d0:	0f b6       	in	r0, 0x3f	; 63
 6d2:	f8 94       	cli
 6d4:	de bf       	out	0x3e, r29	; 62
 6d6:	0f be       	out	0x3f, r0	; 63
 6d8:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 6da:	88 e0       	ldi	r24, 0x08	; 8
 6dc:	e0 e0       	ldi	r30, 0x00	; 0
 6de:	f2 e0       	ldi	r31, 0x02	; 2
 6e0:	de 01       	movw	r26, r28
 6e2:	11 96       	adiw	r26, 0x01	; 1
 6e4:	01 90       	ld	r0, Z+
 6e6:	0d 92       	st	X+, r0
 6e8:	8a 95       	dec	r24
 6ea:	e1 f7       	brne	.-8      	; 0x6e4 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6ec:	e5 e0       	ldi	r30, 0x05	; 5
 6ee:	f1 e0       	ldi	r31, 0x01	; 1
 6f0:	80 81       	ld	r24, Z
 6f2:	8f 7b       	andi	r24, 0xBF	; 191
 6f4:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6f6:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 6fa:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	8c 0f       	add	r24, r28
 704:	9d 1f       	adc	r25, r29
 706:	e8 0f       	add	r30, r24
 708:	f9 1f       	adc	r31, r25
 70a:	80 81       	ld	r24, Z
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 712:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 716:	80 e0       	ldi	r24, 0x00	; 0
 718:	26 c0       	rjmp	.+76     	; 0x766 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 71a:	e7 e3       	ldi	r30, 0x37	; 55
 71c:	f0 e0       	ldi	r31, 0x00	; 0
 71e:	e8 1b       	sub	r30, r24
 720:	f1 09       	sbc	r31, r1
 722:	ee 0f       	add	r30, r30
 724:	ff 1f       	adc	r31, r31
 726:	ee 57       	subi	r30, 0x7E	; 126
 728:	fd 4f       	sbci	r31, 0xFD	; 253
 72a:	40 81       	ld	r20, Z
 72c:	51 81       	ldd	r21, Z+1	; 0x01
 72e:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 732:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 736:	24 23       	and	r18, r20
 738:	35 23       	and	r19, r21
 73a:	23 2b       	or	r18, r19
 73c:	31 f0       	breq	.+12     	; 0x74a <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 73e:	e5 e0       	ldi	r30, 0x05	; 5
 740:	f1 e0       	ldi	r31, 0x01	; 1
 742:	90 81       	ld	r25, Z
 744:	90 62       	ori	r25, 0x20	; 32
 746:	90 83       	st	Z, r25
 748:	05 c0       	rjmp	.+10     	; 0x754 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 74a:	e5 e0       	ldi	r30, 0x05	; 5
 74c:	f1 e0       	ldi	r31, 0x01	; 1
 74e:	90 81       	ld	r25, Z
 750:	9f 7d       	andi	r25, 0xDF	; 223
 752:	90 83       	st	Z, r25
        }
        CLOCK_1;
 754:	e5 e0       	ldi	r30, 0x05	; 5
 756:	f1 e0       	ldi	r31, 0x01	; 1
 758:	90 81       	ld	r25, Z
 75a:	90 61       	ori	r25, 0x10	; 16
 75c:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 75e:	90 81       	ld	r25, Z
 760:	9f 7e       	andi	r25, 0xEF	; 239
 762:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 764:	8f 5f       	subi	r24, 0xFF	; 255
 766:	88 33       	cpi	r24, 0x38	; 56
 768:	c0 f2       	brcs	.-80     	; 0x71a <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 76a:	e5 e0       	ldi	r30, 0x05	; 5
 76c:	f1 e0       	ldi	r31, 0x01	; 1
 76e:	80 81       	ld	r24, Z
 770:	87 7f       	andi	r24, 0xF7	; 247
 772:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 774:	80 81       	ld	r24, Z
 776:	88 7f       	andi	r24, 0xF8	; 248
 778:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 77a:	90 81       	ld	r25, Z
 77c:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 780:	89 2b       	or	r24, r25
 782:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 784:	80 81       	ld	r24, Z
 786:	80 64       	ori	r24, 0x40	; 64
 788:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 78a:	80 81       	ld	r24, Z
 78c:	88 60       	ori	r24, 0x08	; 8
 78e:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 790:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 794:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 798:	87 30       	cpi	r24, 0x07	; 7
 79a:	91 05       	cpc	r25, r1
 79c:	30 f4       	brcc	.+12     	; 0x7aa <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 79e:	01 96       	adiw	r24, 0x01	; 1
 7a0:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 7a4:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 7a8:	07 c0       	rjmp	.+14     	; 0x7b8 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 7aa:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 7ae:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 7b2:	81 e0       	ldi	r24, 0x01	; 1
 7b4:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 7b8:	28 96       	adiw	r28, 0x08	; 8
 7ba:	0f b6       	in	r0, 0x3f	; 63
 7bc:	f8 94       	cli
 7be:	de bf       	out	0x3e, r29	; 62
 7c0:	0f be       	out	0x3f, r0	; 63
 7c2:	cd bf       	out	0x3d, r28	; 61
 7c4:	df 91       	pop	r29
 7c6:	cf 91       	pop	r28
 7c8:	08 95       	ret

000007ca <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 7ca:	1f 92       	push	r1
 7cc:	0f 92       	push	r0
 7ce:	0f b6       	in	r0, 0x3f	; 63
 7d0:	0f 92       	push	r0
 7d2:	11 24       	eor	r1, r1
 7d4:	0b b6       	in	r0, 0x3b	; 59
 7d6:	0f 92       	push	r0
 7d8:	2f 93       	push	r18
 7da:	3f 93       	push	r19
 7dc:	4f 93       	push	r20
 7de:	5f 93       	push	r21
 7e0:	6f 93       	push	r22
 7e2:	7f 93       	push	r23
 7e4:	8f 93       	push	r24
 7e6:	9f 93       	push	r25
 7e8:	af 93       	push	r26
 7ea:	bf 93       	push	r27
 7ec:	ef 93       	push	r30
 7ee:	ff 93       	push	r31
    systemTimeMs += 1;
 7f0:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 7f4:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 7f8:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 7fc:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 800:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 804:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 808:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 80c:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 810:	a1 e0       	ldi	r26, 0x01	; 1
 812:	27 d0       	rcall	.+78     	; 0x862 <__adddi3_s8>
 814:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 818:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 81c:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 820:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 824:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 828:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 82c:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 830:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 834:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 838:	81 11       	cpse	r24, r1
 83a:	45 df       	rcall	.-374    	; 0x6c6 <matrixWriteNextLine>
}
 83c:	ff 91       	pop	r31
 83e:	ef 91       	pop	r30
 840:	bf 91       	pop	r27
 842:	af 91       	pop	r26
 844:	9f 91       	pop	r25
 846:	8f 91       	pop	r24
 848:	7f 91       	pop	r23
 84a:	6f 91       	pop	r22
 84c:	5f 91       	pop	r21
 84e:	4f 91       	pop	r20
 850:	3f 91       	pop	r19
 852:	2f 91       	pop	r18
 854:	0f 90       	pop	r0
 856:	0b be       	out	0x3b, r0	; 59
 858:	0f 90       	pop	r0
 85a:	0f be       	out	0x3f, r0	; 63
 85c:	0f 90       	pop	r0
 85e:	1f 90       	pop	r1
 860:	18 95       	reti

00000862 <__adddi3_s8>:
 862:	00 24       	eor	r0, r0
 864:	a7 fd       	sbrc	r26, 7
 866:	00 94       	com	r0
 868:	2a 0f       	add	r18, r26
 86a:	30 1d       	adc	r19, r0
 86c:	40 1d       	adc	r20, r0
 86e:	50 1d       	adc	r21, r0
 870:	60 1d       	adc	r22, r0
 872:	70 1d       	adc	r23, r0
 874:	80 1d       	adc	r24, r0
 876:	90 1d       	adc	r25, r0
 878:	08 95       	ret

0000087a <vsnprintf>:
 87a:	0f 93       	push	r16
 87c:	1f 93       	push	r17
 87e:	cf 93       	push	r28
 880:	df 93       	push	r29
 882:	cd b7       	in	r28, 0x3d	; 61
 884:	de b7       	in	r29, 0x3e	; 62
 886:	2e 97       	sbiw	r28, 0x0e	; 14
 888:	0f b6       	in	r0, 0x3f	; 63
 88a:	f8 94       	cli
 88c:	de bf       	out	0x3e, r29	; 62
 88e:	0f be       	out	0x3f, r0	; 63
 890:	cd bf       	out	0x3d, r28	; 61
 892:	8c 01       	movw	r16, r24
 894:	fa 01       	movw	r30, r20
 896:	86 e0       	ldi	r24, 0x06	; 6
 898:	8c 83       	std	Y+4, r24	; 0x04
 89a:	1a 83       	std	Y+2, r17	; 0x02
 89c:	09 83       	std	Y+1, r16	; 0x01
 89e:	77 ff       	sbrs	r23, 7
 8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <vsnprintf+0x2c>
 8a2:	60 e0       	ldi	r22, 0x00	; 0
 8a4:	70 e8       	ldi	r23, 0x80	; 128
 8a6:	cb 01       	movw	r24, r22
 8a8:	01 97       	sbiw	r24, 0x01	; 1
 8aa:	9e 83       	std	Y+6, r25	; 0x06
 8ac:	8d 83       	std	Y+5, r24	; 0x05
 8ae:	a9 01       	movw	r20, r18
 8b0:	bf 01       	movw	r22, r30
 8b2:	ce 01       	movw	r24, r28
 8b4:	01 96       	adiw	r24, 0x01	; 1
 8b6:	19 d0       	rcall	.+50     	; 0x8ea <vfprintf>
 8b8:	4d 81       	ldd	r20, Y+5	; 0x05
 8ba:	5e 81       	ldd	r21, Y+6	; 0x06
 8bc:	57 fd       	sbrc	r21, 7
 8be:	0a c0       	rjmp	.+20     	; 0x8d4 <vsnprintf+0x5a>
 8c0:	2f 81       	ldd	r18, Y+7	; 0x07
 8c2:	38 85       	ldd	r19, Y+8	; 0x08
 8c4:	42 17       	cp	r20, r18
 8c6:	53 07       	cpc	r21, r19
 8c8:	0c f4       	brge	.+2      	; 0x8cc <vsnprintf+0x52>
 8ca:	9a 01       	movw	r18, r20
 8cc:	f8 01       	movw	r30, r16
 8ce:	e2 0f       	add	r30, r18
 8d0:	f3 1f       	adc	r31, r19
 8d2:	10 82       	st	Z, r1
 8d4:	2e 96       	adiw	r28, 0x0e	; 14
 8d6:	0f b6       	in	r0, 0x3f	; 63
 8d8:	f8 94       	cli
 8da:	de bf       	out	0x3e, r29	; 62
 8dc:	0f be       	out	0x3f, r0	; 63
 8de:	cd bf       	out	0x3d, r28	; 61
 8e0:	df 91       	pop	r29
 8e2:	cf 91       	pop	r28
 8e4:	1f 91       	pop	r17
 8e6:	0f 91       	pop	r16
 8e8:	08 95       	ret

000008ea <vfprintf>:
 8ea:	2f 92       	push	r2
 8ec:	3f 92       	push	r3
 8ee:	4f 92       	push	r4
 8f0:	5f 92       	push	r5
 8f2:	6f 92       	push	r6
 8f4:	7f 92       	push	r7
 8f6:	8f 92       	push	r8
 8f8:	9f 92       	push	r9
 8fa:	af 92       	push	r10
 8fc:	bf 92       	push	r11
 8fe:	cf 92       	push	r12
 900:	df 92       	push	r13
 902:	ef 92       	push	r14
 904:	ff 92       	push	r15
 906:	0f 93       	push	r16
 908:	1f 93       	push	r17
 90a:	cf 93       	push	r28
 90c:	df 93       	push	r29
 90e:	cd b7       	in	r28, 0x3d	; 61
 910:	de b7       	in	r29, 0x3e	; 62
 912:	2b 97       	sbiw	r28, 0x0b	; 11
 914:	0f b6       	in	r0, 0x3f	; 63
 916:	f8 94       	cli
 918:	de bf       	out	0x3e, r29	; 62
 91a:	0f be       	out	0x3f, r0	; 63
 91c:	cd bf       	out	0x3d, r28	; 61
 91e:	6c 01       	movw	r12, r24
 920:	7b 01       	movw	r14, r22
 922:	8a 01       	movw	r16, r20
 924:	fc 01       	movw	r30, r24
 926:	17 82       	std	Z+7, r1	; 0x07
 928:	16 82       	std	Z+6, r1	; 0x06
 92a:	83 81       	ldd	r24, Z+3	; 0x03
 92c:	81 ff       	sbrs	r24, 1
 92e:	bf c1       	rjmp	.+894    	; 0xcae <vfprintf+0x3c4>
 930:	ce 01       	movw	r24, r28
 932:	01 96       	adiw	r24, 0x01	; 1
 934:	3c 01       	movw	r6, r24
 936:	f6 01       	movw	r30, r12
 938:	93 81       	ldd	r25, Z+3	; 0x03
 93a:	f7 01       	movw	r30, r14
 93c:	93 fd       	sbrc	r25, 3
 93e:	85 91       	lpm	r24, Z+
 940:	93 ff       	sbrs	r25, 3
 942:	81 91       	ld	r24, Z+
 944:	7f 01       	movw	r14, r30
 946:	88 23       	and	r24, r24
 948:	09 f4       	brne	.+2      	; 0x94c <vfprintf+0x62>
 94a:	ad c1       	rjmp	.+858    	; 0xca6 <vfprintf+0x3bc>
 94c:	85 32       	cpi	r24, 0x25	; 37
 94e:	39 f4       	brne	.+14     	; 0x95e <vfprintf+0x74>
 950:	93 fd       	sbrc	r25, 3
 952:	85 91       	lpm	r24, Z+
 954:	93 ff       	sbrs	r25, 3
 956:	81 91       	ld	r24, Z+
 958:	7f 01       	movw	r14, r30
 95a:	85 32       	cpi	r24, 0x25	; 37
 95c:	21 f4       	brne	.+8      	; 0x966 <vfprintf+0x7c>
 95e:	b6 01       	movw	r22, r12
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	d6 d1       	rcall	.+940    	; 0xd10 <fputc>
 964:	e8 cf       	rjmp	.-48     	; 0x936 <vfprintf+0x4c>
 966:	91 2c       	mov	r9, r1
 968:	21 2c       	mov	r2, r1
 96a:	31 2c       	mov	r3, r1
 96c:	ff e1       	ldi	r31, 0x1F	; 31
 96e:	f3 15       	cp	r31, r3
 970:	d8 f0       	brcs	.+54     	; 0x9a8 <vfprintf+0xbe>
 972:	8b 32       	cpi	r24, 0x2B	; 43
 974:	79 f0       	breq	.+30     	; 0x994 <vfprintf+0xaa>
 976:	38 f4       	brcc	.+14     	; 0x986 <vfprintf+0x9c>
 978:	80 32       	cpi	r24, 0x20	; 32
 97a:	79 f0       	breq	.+30     	; 0x99a <vfprintf+0xb0>
 97c:	83 32       	cpi	r24, 0x23	; 35
 97e:	a1 f4       	brne	.+40     	; 0x9a8 <vfprintf+0xbe>
 980:	23 2d       	mov	r18, r3
 982:	20 61       	ori	r18, 0x10	; 16
 984:	1d c0       	rjmp	.+58     	; 0x9c0 <vfprintf+0xd6>
 986:	8d 32       	cpi	r24, 0x2D	; 45
 988:	61 f0       	breq	.+24     	; 0x9a2 <vfprintf+0xb8>
 98a:	80 33       	cpi	r24, 0x30	; 48
 98c:	69 f4       	brne	.+26     	; 0x9a8 <vfprintf+0xbe>
 98e:	23 2d       	mov	r18, r3
 990:	21 60       	ori	r18, 0x01	; 1
 992:	16 c0       	rjmp	.+44     	; 0x9c0 <vfprintf+0xd6>
 994:	83 2d       	mov	r24, r3
 996:	82 60       	ori	r24, 0x02	; 2
 998:	38 2e       	mov	r3, r24
 99a:	e3 2d       	mov	r30, r3
 99c:	e4 60       	ori	r30, 0x04	; 4
 99e:	3e 2e       	mov	r3, r30
 9a0:	2a c0       	rjmp	.+84     	; 0x9f6 <vfprintf+0x10c>
 9a2:	f3 2d       	mov	r31, r3
 9a4:	f8 60       	ori	r31, 0x08	; 8
 9a6:	1d c0       	rjmp	.+58     	; 0x9e2 <vfprintf+0xf8>
 9a8:	37 fc       	sbrc	r3, 7
 9aa:	2d c0       	rjmp	.+90     	; 0xa06 <vfprintf+0x11c>
 9ac:	20 ed       	ldi	r18, 0xD0	; 208
 9ae:	28 0f       	add	r18, r24
 9b0:	2a 30       	cpi	r18, 0x0A	; 10
 9b2:	40 f0       	brcs	.+16     	; 0x9c4 <vfprintf+0xda>
 9b4:	8e 32       	cpi	r24, 0x2E	; 46
 9b6:	b9 f4       	brne	.+46     	; 0x9e6 <vfprintf+0xfc>
 9b8:	36 fc       	sbrc	r3, 6
 9ba:	75 c1       	rjmp	.+746    	; 0xca6 <vfprintf+0x3bc>
 9bc:	23 2d       	mov	r18, r3
 9be:	20 64       	ori	r18, 0x40	; 64
 9c0:	32 2e       	mov	r3, r18
 9c2:	19 c0       	rjmp	.+50     	; 0x9f6 <vfprintf+0x10c>
 9c4:	36 fe       	sbrs	r3, 6
 9c6:	06 c0       	rjmp	.+12     	; 0x9d4 <vfprintf+0xea>
 9c8:	8a e0       	ldi	r24, 0x0A	; 10
 9ca:	98 9e       	mul	r9, r24
 9cc:	20 0d       	add	r18, r0
 9ce:	11 24       	eor	r1, r1
 9d0:	92 2e       	mov	r9, r18
 9d2:	11 c0       	rjmp	.+34     	; 0x9f6 <vfprintf+0x10c>
 9d4:	ea e0       	ldi	r30, 0x0A	; 10
 9d6:	2e 9e       	mul	r2, r30
 9d8:	20 0d       	add	r18, r0
 9da:	11 24       	eor	r1, r1
 9dc:	22 2e       	mov	r2, r18
 9de:	f3 2d       	mov	r31, r3
 9e0:	f0 62       	ori	r31, 0x20	; 32
 9e2:	3f 2e       	mov	r3, r31
 9e4:	08 c0       	rjmp	.+16     	; 0x9f6 <vfprintf+0x10c>
 9e6:	8c 36       	cpi	r24, 0x6C	; 108
 9e8:	21 f4       	brne	.+8      	; 0x9f2 <vfprintf+0x108>
 9ea:	83 2d       	mov	r24, r3
 9ec:	80 68       	ori	r24, 0x80	; 128
 9ee:	38 2e       	mov	r3, r24
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <vfprintf+0x10c>
 9f2:	88 36       	cpi	r24, 0x68	; 104
 9f4:	41 f4       	brne	.+16     	; 0xa06 <vfprintf+0x11c>
 9f6:	f7 01       	movw	r30, r14
 9f8:	93 fd       	sbrc	r25, 3
 9fa:	85 91       	lpm	r24, Z+
 9fc:	93 ff       	sbrs	r25, 3
 9fe:	81 91       	ld	r24, Z+
 a00:	7f 01       	movw	r14, r30
 a02:	81 11       	cpse	r24, r1
 a04:	b3 cf       	rjmp	.-154    	; 0x96c <vfprintf+0x82>
 a06:	98 2f       	mov	r25, r24
 a08:	9f 7d       	andi	r25, 0xDF	; 223
 a0a:	95 54       	subi	r25, 0x45	; 69
 a0c:	93 30       	cpi	r25, 0x03	; 3
 a0e:	28 f4       	brcc	.+10     	; 0xa1a <vfprintf+0x130>
 a10:	0c 5f       	subi	r16, 0xFC	; 252
 a12:	1f 4f       	sbci	r17, 0xFF	; 255
 a14:	9f e3       	ldi	r25, 0x3F	; 63
 a16:	99 83       	std	Y+1, r25	; 0x01
 a18:	0d c0       	rjmp	.+26     	; 0xa34 <vfprintf+0x14a>
 a1a:	83 36       	cpi	r24, 0x63	; 99
 a1c:	31 f0       	breq	.+12     	; 0xa2a <vfprintf+0x140>
 a1e:	83 37       	cpi	r24, 0x73	; 115
 a20:	71 f0       	breq	.+28     	; 0xa3e <vfprintf+0x154>
 a22:	83 35       	cpi	r24, 0x53	; 83
 a24:	09 f0       	breq	.+2      	; 0xa28 <vfprintf+0x13e>
 a26:	55 c0       	rjmp	.+170    	; 0xad2 <vfprintf+0x1e8>
 a28:	20 c0       	rjmp	.+64     	; 0xa6a <vfprintf+0x180>
 a2a:	f8 01       	movw	r30, r16
 a2c:	80 81       	ld	r24, Z
 a2e:	89 83       	std	Y+1, r24	; 0x01
 a30:	0e 5f       	subi	r16, 0xFE	; 254
 a32:	1f 4f       	sbci	r17, 0xFF	; 255
 a34:	88 24       	eor	r8, r8
 a36:	83 94       	inc	r8
 a38:	91 2c       	mov	r9, r1
 a3a:	53 01       	movw	r10, r6
 a3c:	12 c0       	rjmp	.+36     	; 0xa62 <vfprintf+0x178>
 a3e:	28 01       	movw	r4, r16
 a40:	f2 e0       	ldi	r31, 0x02	; 2
 a42:	4f 0e       	add	r4, r31
 a44:	51 1c       	adc	r5, r1
 a46:	f8 01       	movw	r30, r16
 a48:	a0 80       	ld	r10, Z
 a4a:	b1 80       	ldd	r11, Z+1	; 0x01
 a4c:	36 fe       	sbrs	r3, 6
 a4e:	03 c0       	rjmp	.+6      	; 0xa56 <vfprintf+0x16c>
 a50:	69 2d       	mov	r22, r9
 a52:	70 e0       	ldi	r23, 0x00	; 0
 a54:	02 c0       	rjmp	.+4      	; 0xa5a <vfprintf+0x170>
 a56:	6f ef       	ldi	r22, 0xFF	; 255
 a58:	7f ef       	ldi	r23, 0xFF	; 255
 a5a:	c5 01       	movw	r24, r10
 a5c:	4e d1       	rcall	.+668    	; 0xcfa <strnlen>
 a5e:	4c 01       	movw	r8, r24
 a60:	82 01       	movw	r16, r4
 a62:	f3 2d       	mov	r31, r3
 a64:	ff 77       	andi	r31, 0x7F	; 127
 a66:	3f 2e       	mov	r3, r31
 a68:	15 c0       	rjmp	.+42     	; 0xa94 <vfprintf+0x1aa>
 a6a:	28 01       	movw	r4, r16
 a6c:	22 e0       	ldi	r18, 0x02	; 2
 a6e:	42 0e       	add	r4, r18
 a70:	51 1c       	adc	r5, r1
 a72:	f8 01       	movw	r30, r16
 a74:	a0 80       	ld	r10, Z
 a76:	b1 80       	ldd	r11, Z+1	; 0x01
 a78:	36 fe       	sbrs	r3, 6
 a7a:	03 c0       	rjmp	.+6      	; 0xa82 <vfprintf+0x198>
 a7c:	69 2d       	mov	r22, r9
 a7e:	70 e0       	ldi	r23, 0x00	; 0
 a80:	02 c0       	rjmp	.+4      	; 0xa86 <vfprintf+0x19c>
 a82:	6f ef       	ldi	r22, 0xFF	; 255
 a84:	7f ef       	ldi	r23, 0xFF	; 255
 a86:	c5 01       	movw	r24, r10
 a88:	2d d1       	rcall	.+602    	; 0xce4 <strnlen_P>
 a8a:	4c 01       	movw	r8, r24
 a8c:	f3 2d       	mov	r31, r3
 a8e:	f0 68       	ori	r31, 0x80	; 128
 a90:	3f 2e       	mov	r3, r31
 a92:	82 01       	movw	r16, r4
 a94:	33 fc       	sbrc	r3, 3
 a96:	19 c0       	rjmp	.+50     	; 0xaca <vfprintf+0x1e0>
 a98:	82 2d       	mov	r24, r2
 a9a:	90 e0       	ldi	r25, 0x00	; 0
 a9c:	88 16       	cp	r8, r24
 a9e:	99 06       	cpc	r9, r25
 aa0:	a0 f4       	brcc	.+40     	; 0xaca <vfprintf+0x1e0>
 aa2:	b6 01       	movw	r22, r12
 aa4:	80 e2       	ldi	r24, 0x20	; 32
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	33 d1       	rcall	.+614    	; 0xd10 <fputc>
 aaa:	2a 94       	dec	r2
 aac:	f5 cf       	rjmp	.-22     	; 0xa98 <vfprintf+0x1ae>
 aae:	f5 01       	movw	r30, r10
 ab0:	37 fc       	sbrc	r3, 7
 ab2:	85 91       	lpm	r24, Z+
 ab4:	37 fe       	sbrs	r3, 7
 ab6:	81 91       	ld	r24, Z+
 ab8:	5f 01       	movw	r10, r30
 aba:	b6 01       	movw	r22, r12
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	28 d1       	rcall	.+592    	; 0xd10 <fputc>
 ac0:	21 10       	cpse	r2, r1
 ac2:	2a 94       	dec	r2
 ac4:	21 e0       	ldi	r18, 0x01	; 1
 ac6:	82 1a       	sub	r8, r18
 ac8:	91 08       	sbc	r9, r1
 aca:	81 14       	cp	r8, r1
 acc:	91 04       	cpc	r9, r1
 ace:	79 f7       	brne	.-34     	; 0xaae <vfprintf+0x1c4>
 ad0:	e1 c0       	rjmp	.+450    	; 0xc94 <vfprintf+0x3aa>
 ad2:	84 36       	cpi	r24, 0x64	; 100
 ad4:	11 f0       	breq	.+4      	; 0xada <vfprintf+0x1f0>
 ad6:	89 36       	cpi	r24, 0x69	; 105
 ad8:	39 f5       	brne	.+78     	; 0xb28 <vfprintf+0x23e>
 ada:	f8 01       	movw	r30, r16
 adc:	37 fe       	sbrs	r3, 7
 ade:	07 c0       	rjmp	.+14     	; 0xaee <vfprintf+0x204>
 ae0:	60 81       	ld	r22, Z
 ae2:	71 81       	ldd	r23, Z+1	; 0x01
 ae4:	82 81       	ldd	r24, Z+2	; 0x02
 ae6:	93 81       	ldd	r25, Z+3	; 0x03
 ae8:	0c 5f       	subi	r16, 0xFC	; 252
 aea:	1f 4f       	sbci	r17, 0xFF	; 255
 aec:	08 c0       	rjmp	.+16     	; 0xafe <vfprintf+0x214>
 aee:	60 81       	ld	r22, Z
 af0:	71 81       	ldd	r23, Z+1	; 0x01
 af2:	07 2e       	mov	r0, r23
 af4:	00 0c       	add	r0, r0
 af6:	88 0b       	sbc	r24, r24
 af8:	99 0b       	sbc	r25, r25
 afa:	0e 5f       	subi	r16, 0xFE	; 254
 afc:	1f 4f       	sbci	r17, 0xFF	; 255
 afe:	f3 2d       	mov	r31, r3
 b00:	ff 76       	andi	r31, 0x6F	; 111
 b02:	3f 2e       	mov	r3, r31
 b04:	97 ff       	sbrs	r25, 7
 b06:	09 c0       	rjmp	.+18     	; 0xb1a <vfprintf+0x230>
 b08:	90 95       	com	r25
 b0a:	80 95       	com	r24
 b0c:	70 95       	com	r23
 b0e:	61 95       	neg	r22
 b10:	7f 4f       	sbci	r23, 0xFF	; 255
 b12:	8f 4f       	sbci	r24, 0xFF	; 255
 b14:	9f 4f       	sbci	r25, 0xFF	; 255
 b16:	f0 68       	ori	r31, 0x80	; 128
 b18:	3f 2e       	mov	r3, r31
 b1a:	2a e0       	ldi	r18, 0x0A	; 10
 b1c:	30 e0       	ldi	r19, 0x00	; 0
 b1e:	a3 01       	movw	r20, r6
 b20:	33 d1       	rcall	.+614    	; 0xd88 <__ultoa_invert>
 b22:	88 2e       	mov	r8, r24
 b24:	86 18       	sub	r8, r6
 b26:	44 c0       	rjmp	.+136    	; 0xbb0 <vfprintf+0x2c6>
 b28:	85 37       	cpi	r24, 0x75	; 117
 b2a:	31 f4       	brne	.+12     	; 0xb38 <vfprintf+0x24e>
 b2c:	23 2d       	mov	r18, r3
 b2e:	2f 7e       	andi	r18, 0xEF	; 239
 b30:	b2 2e       	mov	r11, r18
 b32:	2a e0       	ldi	r18, 0x0A	; 10
 b34:	30 e0       	ldi	r19, 0x00	; 0
 b36:	25 c0       	rjmp	.+74     	; 0xb82 <vfprintf+0x298>
 b38:	93 2d       	mov	r25, r3
 b3a:	99 7f       	andi	r25, 0xF9	; 249
 b3c:	b9 2e       	mov	r11, r25
 b3e:	8f 36       	cpi	r24, 0x6F	; 111
 b40:	c1 f0       	breq	.+48     	; 0xb72 <vfprintf+0x288>
 b42:	18 f4       	brcc	.+6      	; 0xb4a <vfprintf+0x260>
 b44:	88 35       	cpi	r24, 0x58	; 88
 b46:	79 f0       	breq	.+30     	; 0xb66 <vfprintf+0x27c>
 b48:	ae c0       	rjmp	.+348    	; 0xca6 <vfprintf+0x3bc>
 b4a:	80 37       	cpi	r24, 0x70	; 112
 b4c:	19 f0       	breq	.+6      	; 0xb54 <vfprintf+0x26a>
 b4e:	88 37       	cpi	r24, 0x78	; 120
 b50:	21 f0       	breq	.+8      	; 0xb5a <vfprintf+0x270>
 b52:	a9 c0       	rjmp	.+338    	; 0xca6 <vfprintf+0x3bc>
 b54:	e9 2f       	mov	r30, r25
 b56:	e0 61       	ori	r30, 0x10	; 16
 b58:	be 2e       	mov	r11, r30
 b5a:	b4 fe       	sbrs	r11, 4
 b5c:	0d c0       	rjmp	.+26     	; 0xb78 <vfprintf+0x28e>
 b5e:	fb 2d       	mov	r31, r11
 b60:	f4 60       	ori	r31, 0x04	; 4
 b62:	bf 2e       	mov	r11, r31
 b64:	09 c0       	rjmp	.+18     	; 0xb78 <vfprintf+0x28e>
 b66:	34 fe       	sbrs	r3, 4
 b68:	0a c0       	rjmp	.+20     	; 0xb7e <vfprintf+0x294>
 b6a:	29 2f       	mov	r18, r25
 b6c:	26 60       	ori	r18, 0x06	; 6
 b6e:	b2 2e       	mov	r11, r18
 b70:	06 c0       	rjmp	.+12     	; 0xb7e <vfprintf+0x294>
 b72:	28 e0       	ldi	r18, 0x08	; 8
 b74:	30 e0       	ldi	r19, 0x00	; 0
 b76:	05 c0       	rjmp	.+10     	; 0xb82 <vfprintf+0x298>
 b78:	20 e1       	ldi	r18, 0x10	; 16
 b7a:	30 e0       	ldi	r19, 0x00	; 0
 b7c:	02 c0       	rjmp	.+4      	; 0xb82 <vfprintf+0x298>
 b7e:	20 e1       	ldi	r18, 0x10	; 16
 b80:	32 e0       	ldi	r19, 0x02	; 2
 b82:	f8 01       	movw	r30, r16
 b84:	b7 fe       	sbrs	r11, 7
 b86:	07 c0       	rjmp	.+14     	; 0xb96 <vfprintf+0x2ac>
 b88:	60 81       	ld	r22, Z
 b8a:	71 81       	ldd	r23, Z+1	; 0x01
 b8c:	82 81       	ldd	r24, Z+2	; 0x02
 b8e:	93 81       	ldd	r25, Z+3	; 0x03
 b90:	0c 5f       	subi	r16, 0xFC	; 252
 b92:	1f 4f       	sbci	r17, 0xFF	; 255
 b94:	06 c0       	rjmp	.+12     	; 0xba2 <vfprintf+0x2b8>
 b96:	60 81       	ld	r22, Z
 b98:	71 81       	ldd	r23, Z+1	; 0x01
 b9a:	80 e0       	ldi	r24, 0x00	; 0
 b9c:	90 e0       	ldi	r25, 0x00	; 0
 b9e:	0e 5f       	subi	r16, 0xFE	; 254
 ba0:	1f 4f       	sbci	r17, 0xFF	; 255
 ba2:	a3 01       	movw	r20, r6
 ba4:	f1 d0       	rcall	.+482    	; 0xd88 <__ultoa_invert>
 ba6:	88 2e       	mov	r8, r24
 ba8:	86 18       	sub	r8, r6
 baa:	fb 2d       	mov	r31, r11
 bac:	ff 77       	andi	r31, 0x7F	; 127
 bae:	3f 2e       	mov	r3, r31
 bb0:	36 fe       	sbrs	r3, 6
 bb2:	0d c0       	rjmp	.+26     	; 0xbce <vfprintf+0x2e4>
 bb4:	23 2d       	mov	r18, r3
 bb6:	2e 7f       	andi	r18, 0xFE	; 254
 bb8:	a2 2e       	mov	r10, r18
 bba:	89 14       	cp	r8, r9
 bbc:	58 f4       	brcc	.+22     	; 0xbd4 <vfprintf+0x2ea>
 bbe:	34 fe       	sbrs	r3, 4
 bc0:	0b c0       	rjmp	.+22     	; 0xbd8 <vfprintf+0x2ee>
 bc2:	32 fc       	sbrc	r3, 2
 bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <vfprintf+0x2ee>
 bc6:	83 2d       	mov	r24, r3
 bc8:	8e 7e       	andi	r24, 0xEE	; 238
 bca:	a8 2e       	mov	r10, r24
 bcc:	05 c0       	rjmp	.+10     	; 0xbd8 <vfprintf+0x2ee>
 bce:	b8 2c       	mov	r11, r8
 bd0:	a3 2c       	mov	r10, r3
 bd2:	03 c0       	rjmp	.+6      	; 0xbda <vfprintf+0x2f0>
 bd4:	b8 2c       	mov	r11, r8
 bd6:	01 c0       	rjmp	.+2      	; 0xbda <vfprintf+0x2f0>
 bd8:	b9 2c       	mov	r11, r9
 bda:	a4 fe       	sbrs	r10, 4
 bdc:	0f c0       	rjmp	.+30     	; 0xbfc <vfprintf+0x312>
 bde:	fe 01       	movw	r30, r28
 be0:	e8 0d       	add	r30, r8
 be2:	f1 1d       	adc	r31, r1
 be4:	80 81       	ld	r24, Z
 be6:	80 33       	cpi	r24, 0x30	; 48
 be8:	21 f4       	brne	.+8      	; 0xbf2 <vfprintf+0x308>
 bea:	9a 2d       	mov	r25, r10
 bec:	99 7e       	andi	r25, 0xE9	; 233
 bee:	a9 2e       	mov	r10, r25
 bf0:	09 c0       	rjmp	.+18     	; 0xc04 <vfprintf+0x31a>
 bf2:	a2 fe       	sbrs	r10, 2
 bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0x318>
 bf6:	b3 94       	inc	r11
 bf8:	b3 94       	inc	r11
 bfa:	04 c0       	rjmp	.+8      	; 0xc04 <vfprintf+0x31a>
 bfc:	8a 2d       	mov	r24, r10
 bfe:	86 78       	andi	r24, 0x86	; 134
 c00:	09 f0       	breq	.+2      	; 0xc04 <vfprintf+0x31a>
 c02:	b3 94       	inc	r11
 c04:	a3 fc       	sbrc	r10, 3
 c06:	10 c0       	rjmp	.+32     	; 0xc28 <vfprintf+0x33e>
 c08:	a0 fe       	sbrs	r10, 0
 c0a:	06 c0       	rjmp	.+12     	; 0xc18 <vfprintf+0x32e>
 c0c:	b2 14       	cp	r11, r2
 c0e:	80 f4       	brcc	.+32     	; 0xc30 <vfprintf+0x346>
 c10:	28 0c       	add	r2, r8
 c12:	92 2c       	mov	r9, r2
 c14:	9b 18       	sub	r9, r11
 c16:	0d c0       	rjmp	.+26     	; 0xc32 <vfprintf+0x348>
 c18:	b2 14       	cp	r11, r2
 c1a:	58 f4       	brcc	.+22     	; 0xc32 <vfprintf+0x348>
 c1c:	b6 01       	movw	r22, r12
 c1e:	80 e2       	ldi	r24, 0x20	; 32
 c20:	90 e0       	ldi	r25, 0x00	; 0
 c22:	76 d0       	rcall	.+236    	; 0xd10 <fputc>
 c24:	b3 94       	inc	r11
 c26:	f8 cf       	rjmp	.-16     	; 0xc18 <vfprintf+0x32e>
 c28:	b2 14       	cp	r11, r2
 c2a:	18 f4       	brcc	.+6      	; 0xc32 <vfprintf+0x348>
 c2c:	2b 18       	sub	r2, r11
 c2e:	02 c0       	rjmp	.+4      	; 0xc34 <vfprintf+0x34a>
 c30:	98 2c       	mov	r9, r8
 c32:	21 2c       	mov	r2, r1
 c34:	a4 fe       	sbrs	r10, 4
 c36:	0f c0       	rjmp	.+30     	; 0xc56 <vfprintf+0x36c>
 c38:	b6 01       	movw	r22, r12
 c3a:	80 e3       	ldi	r24, 0x30	; 48
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	68 d0       	rcall	.+208    	; 0xd10 <fputc>
 c40:	a2 fe       	sbrs	r10, 2
 c42:	16 c0       	rjmp	.+44     	; 0xc70 <vfprintf+0x386>
 c44:	a1 fc       	sbrc	r10, 1
 c46:	03 c0       	rjmp	.+6      	; 0xc4e <vfprintf+0x364>
 c48:	88 e7       	ldi	r24, 0x78	; 120
 c4a:	90 e0       	ldi	r25, 0x00	; 0
 c4c:	02 c0       	rjmp	.+4      	; 0xc52 <vfprintf+0x368>
 c4e:	88 e5       	ldi	r24, 0x58	; 88
 c50:	90 e0       	ldi	r25, 0x00	; 0
 c52:	b6 01       	movw	r22, r12
 c54:	0c c0       	rjmp	.+24     	; 0xc6e <vfprintf+0x384>
 c56:	8a 2d       	mov	r24, r10
 c58:	86 78       	andi	r24, 0x86	; 134
 c5a:	51 f0       	breq	.+20     	; 0xc70 <vfprintf+0x386>
 c5c:	a1 fe       	sbrs	r10, 1
 c5e:	02 c0       	rjmp	.+4      	; 0xc64 <vfprintf+0x37a>
 c60:	8b e2       	ldi	r24, 0x2B	; 43
 c62:	01 c0       	rjmp	.+2      	; 0xc66 <vfprintf+0x37c>
 c64:	80 e2       	ldi	r24, 0x20	; 32
 c66:	a7 fc       	sbrc	r10, 7
 c68:	8d e2       	ldi	r24, 0x2D	; 45
 c6a:	b6 01       	movw	r22, r12
 c6c:	90 e0       	ldi	r25, 0x00	; 0
 c6e:	50 d0       	rcall	.+160    	; 0xd10 <fputc>
 c70:	89 14       	cp	r8, r9
 c72:	30 f4       	brcc	.+12     	; 0xc80 <vfprintf+0x396>
 c74:	b6 01       	movw	r22, r12
 c76:	80 e3       	ldi	r24, 0x30	; 48
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	4a d0       	rcall	.+148    	; 0xd10 <fputc>
 c7c:	9a 94       	dec	r9
 c7e:	f8 cf       	rjmp	.-16     	; 0xc70 <vfprintf+0x386>
 c80:	8a 94       	dec	r8
 c82:	f3 01       	movw	r30, r6
 c84:	e8 0d       	add	r30, r8
 c86:	f1 1d       	adc	r31, r1
 c88:	80 81       	ld	r24, Z
 c8a:	b6 01       	movw	r22, r12
 c8c:	90 e0       	ldi	r25, 0x00	; 0
 c8e:	40 d0       	rcall	.+128    	; 0xd10 <fputc>
 c90:	81 10       	cpse	r8, r1
 c92:	f6 cf       	rjmp	.-20     	; 0xc80 <vfprintf+0x396>
 c94:	22 20       	and	r2, r2
 c96:	09 f4       	brne	.+2      	; 0xc9a <vfprintf+0x3b0>
 c98:	4e ce       	rjmp	.-868    	; 0x936 <vfprintf+0x4c>
 c9a:	b6 01       	movw	r22, r12
 c9c:	80 e2       	ldi	r24, 0x20	; 32
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	37 d0       	rcall	.+110    	; 0xd10 <fputc>
 ca2:	2a 94       	dec	r2
 ca4:	f7 cf       	rjmp	.-18     	; 0xc94 <vfprintf+0x3aa>
 ca6:	f6 01       	movw	r30, r12
 ca8:	86 81       	ldd	r24, Z+6	; 0x06
 caa:	97 81       	ldd	r25, Z+7	; 0x07
 cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0x3c8>
 cae:	8f ef       	ldi	r24, 0xFF	; 255
 cb0:	9f ef       	ldi	r25, 0xFF	; 255
 cb2:	2b 96       	adiw	r28, 0x0b	; 11
 cb4:	0f b6       	in	r0, 0x3f	; 63
 cb6:	f8 94       	cli
 cb8:	de bf       	out	0x3e, r29	; 62
 cba:	0f be       	out	0x3f, r0	; 63
 cbc:	cd bf       	out	0x3d, r28	; 61
 cbe:	df 91       	pop	r29
 cc0:	cf 91       	pop	r28
 cc2:	1f 91       	pop	r17
 cc4:	0f 91       	pop	r16
 cc6:	ff 90       	pop	r15
 cc8:	ef 90       	pop	r14
 cca:	df 90       	pop	r13
 ccc:	cf 90       	pop	r12
 cce:	bf 90       	pop	r11
 cd0:	af 90       	pop	r10
 cd2:	9f 90       	pop	r9
 cd4:	8f 90       	pop	r8
 cd6:	7f 90       	pop	r7
 cd8:	6f 90       	pop	r6
 cda:	5f 90       	pop	r5
 cdc:	4f 90       	pop	r4
 cde:	3f 90       	pop	r3
 ce0:	2f 90       	pop	r2
 ce2:	08 95       	ret

00000ce4 <strnlen_P>:
 ce4:	fc 01       	movw	r30, r24
 ce6:	05 90       	lpm	r0, Z+
 ce8:	61 50       	subi	r22, 0x01	; 1
 cea:	70 40       	sbci	r23, 0x00	; 0
 cec:	01 10       	cpse	r0, r1
 cee:	d8 f7       	brcc	.-10     	; 0xce6 <strnlen_P+0x2>
 cf0:	80 95       	com	r24
 cf2:	90 95       	com	r25
 cf4:	8e 0f       	add	r24, r30
 cf6:	9f 1f       	adc	r25, r31
 cf8:	08 95       	ret

00000cfa <strnlen>:
 cfa:	fc 01       	movw	r30, r24
 cfc:	61 50       	subi	r22, 0x01	; 1
 cfe:	70 40       	sbci	r23, 0x00	; 0
 d00:	01 90       	ld	r0, Z+
 d02:	01 10       	cpse	r0, r1
 d04:	d8 f7       	brcc	.-10     	; 0xcfc <strnlen+0x2>
 d06:	80 95       	com	r24
 d08:	90 95       	com	r25
 d0a:	8e 0f       	add	r24, r30
 d0c:	9f 1f       	adc	r25, r31
 d0e:	08 95       	ret

00000d10 <fputc>:
 d10:	0f 93       	push	r16
 d12:	1f 93       	push	r17
 d14:	cf 93       	push	r28
 d16:	df 93       	push	r29
 d18:	fb 01       	movw	r30, r22
 d1a:	23 81       	ldd	r18, Z+3	; 0x03
 d1c:	21 fd       	sbrc	r18, 1
 d1e:	03 c0       	rjmp	.+6      	; 0xd26 <fputc+0x16>
 d20:	8f ef       	ldi	r24, 0xFF	; 255
 d22:	9f ef       	ldi	r25, 0xFF	; 255
 d24:	2c c0       	rjmp	.+88     	; 0xd7e <fputc+0x6e>
 d26:	22 ff       	sbrs	r18, 2
 d28:	16 c0       	rjmp	.+44     	; 0xd56 <fputc+0x46>
 d2a:	46 81       	ldd	r20, Z+6	; 0x06
 d2c:	57 81       	ldd	r21, Z+7	; 0x07
 d2e:	24 81       	ldd	r18, Z+4	; 0x04
 d30:	35 81       	ldd	r19, Z+5	; 0x05
 d32:	42 17       	cp	r20, r18
 d34:	53 07       	cpc	r21, r19
 d36:	44 f4       	brge	.+16     	; 0xd48 <fputc+0x38>
 d38:	a0 81       	ld	r26, Z
 d3a:	b1 81       	ldd	r27, Z+1	; 0x01
 d3c:	9d 01       	movw	r18, r26
 d3e:	2f 5f       	subi	r18, 0xFF	; 255
 d40:	3f 4f       	sbci	r19, 0xFF	; 255
 d42:	31 83       	std	Z+1, r19	; 0x01
 d44:	20 83       	st	Z, r18
 d46:	8c 93       	st	X, r24
 d48:	26 81       	ldd	r18, Z+6	; 0x06
 d4a:	37 81       	ldd	r19, Z+7	; 0x07
 d4c:	2f 5f       	subi	r18, 0xFF	; 255
 d4e:	3f 4f       	sbci	r19, 0xFF	; 255
 d50:	37 83       	std	Z+7, r19	; 0x07
 d52:	26 83       	std	Z+6, r18	; 0x06
 d54:	14 c0       	rjmp	.+40     	; 0xd7e <fputc+0x6e>
 d56:	8b 01       	movw	r16, r22
 d58:	ec 01       	movw	r28, r24
 d5a:	fb 01       	movw	r30, r22
 d5c:	00 84       	ldd	r0, Z+8	; 0x08
 d5e:	f1 85       	ldd	r31, Z+9	; 0x09
 d60:	e0 2d       	mov	r30, r0
 d62:	19 95       	eicall
 d64:	89 2b       	or	r24, r25
 d66:	e1 f6       	brne	.-72     	; 0xd20 <fputc+0x10>
 d68:	d8 01       	movw	r26, r16
 d6a:	16 96       	adiw	r26, 0x06	; 6
 d6c:	8d 91       	ld	r24, X+
 d6e:	9c 91       	ld	r25, X
 d70:	17 97       	sbiw	r26, 0x07	; 7
 d72:	01 96       	adiw	r24, 0x01	; 1
 d74:	17 96       	adiw	r26, 0x07	; 7
 d76:	9c 93       	st	X, r25
 d78:	8e 93       	st	-X, r24
 d7a:	16 97       	sbiw	r26, 0x06	; 6
 d7c:	ce 01       	movw	r24, r28
 d7e:	df 91       	pop	r29
 d80:	cf 91       	pop	r28
 d82:	1f 91       	pop	r17
 d84:	0f 91       	pop	r16
 d86:	08 95       	ret

00000d88 <__ultoa_invert>:
 d88:	fa 01       	movw	r30, r20
 d8a:	aa 27       	eor	r26, r26
 d8c:	28 30       	cpi	r18, 0x08	; 8
 d8e:	51 f1       	breq	.+84     	; 0xde4 <__ultoa_invert+0x5c>
 d90:	20 31       	cpi	r18, 0x10	; 16
 d92:	81 f1       	breq	.+96     	; 0xdf4 <__ultoa_invert+0x6c>
 d94:	e8 94       	clt
 d96:	6f 93       	push	r22
 d98:	6e 7f       	andi	r22, 0xFE	; 254
 d9a:	6e 5f       	subi	r22, 0xFE	; 254
 d9c:	7f 4f       	sbci	r23, 0xFF	; 255
 d9e:	8f 4f       	sbci	r24, 0xFF	; 255
 da0:	9f 4f       	sbci	r25, 0xFF	; 255
 da2:	af 4f       	sbci	r26, 0xFF	; 255
 da4:	b1 e0       	ldi	r27, 0x01	; 1
 da6:	3e d0       	rcall	.+124    	; 0xe24 <__ultoa_invert+0x9c>
 da8:	b4 e0       	ldi	r27, 0x04	; 4
 daa:	3c d0       	rcall	.+120    	; 0xe24 <__ultoa_invert+0x9c>
 dac:	67 0f       	add	r22, r23
 dae:	78 1f       	adc	r23, r24
 db0:	89 1f       	adc	r24, r25
 db2:	9a 1f       	adc	r25, r26
 db4:	a1 1d       	adc	r26, r1
 db6:	68 0f       	add	r22, r24
 db8:	79 1f       	adc	r23, r25
 dba:	8a 1f       	adc	r24, r26
 dbc:	91 1d       	adc	r25, r1
 dbe:	a1 1d       	adc	r26, r1
 dc0:	6a 0f       	add	r22, r26
 dc2:	71 1d       	adc	r23, r1
 dc4:	81 1d       	adc	r24, r1
 dc6:	91 1d       	adc	r25, r1
 dc8:	a1 1d       	adc	r26, r1
 dca:	20 d0       	rcall	.+64     	; 0xe0c <__ultoa_invert+0x84>
 dcc:	09 f4       	brne	.+2      	; 0xdd0 <__ultoa_invert+0x48>
 dce:	68 94       	set
 dd0:	3f 91       	pop	r19
 dd2:	2a e0       	ldi	r18, 0x0A	; 10
 dd4:	26 9f       	mul	r18, r22
 dd6:	11 24       	eor	r1, r1
 dd8:	30 19       	sub	r19, r0
 dda:	30 5d       	subi	r19, 0xD0	; 208
 ddc:	31 93       	st	Z+, r19
 dde:	de f6       	brtc	.-74     	; 0xd96 <__ultoa_invert+0xe>
 de0:	cf 01       	movw	r24, r30
 de2:	08 95       	ret
 de4:	46 2f       	mov	r20, r22
 de6:	47 70       	andi	r20, 0x07	; 7
 de8:	40 5d       	subi	r20, 0xD0	; 208
 dea:	41 93       	st	Z+, r20
 dec:	b3 e0       	ldi	r27, 0x03	; 3
 dee:	0f d0       	rcall	.+30     	; 0xe0e <__ultoa_invert+0x86>
 df0:	c9 f7       	brne	.-14     	; 0xde4 <__ultoa_invert+0x5c>
 df2:	f6 cf       	rjmp	.-20     	; 0xde0 <__ultoa_invert+0x58>
 df4:	46 2f       	mov	r20, r22
 df6:	4f 70       	andi	r20, 0x0F	; 15
 df8:	40 5d       	subi	r20, 0xD0	; 208
 dfa:	4a 33       	cpi	r20, 0x3A	; 58
 dfc:	18 f0       	brcs	.+6      	; 0xe04 <__ultoa_invert+0x7c>
 dfe:	49 5d       	subi	r20, 0xD9	; 217
 e00:	31 fd       	sbrc	r19, 1
 e02:	40 52       	subi	r20, 0x20	; 32
 e04:	41 93       	st	Z+, r20
 e06:	02 d0       	rcall	.+4      	; 0xe0c <__ultoa_invert+0x84>
 e08:	a9 f7       	brne	.-22     	; 0xdf4 <__ultoa_invert+0x6c>
 e0a:	ea cf       	rjmp	.-44     	; 0xde0 <__ultoa_invert+0x58>
 e0c:	b4 e0       	ldi	r27, 0x04	; 4
 e0e:	a6 95       	lsr	r26
 e10:	97 95       	ror	r25
 e12:	87 95       	ror	r24
 e14:	77 95       	ror	r23
 e16:	67 95       	ror	r22
 e18:	ba 95       	dec	r27
 e1a:	c9 f7       	brne	.-14     	; 0xe0e <__ultoa_invert+0x86>
 e1c:	00 97       	sbiw	r24, 0x00	; 0
 e1e:	61 05       	cpc	r22, r1
 e20:	71 05       	cpc	r23, r1
 e22:	08 95       	ret
 e24:	9b 01       	movw	r18, r22
 e26:	ac 01       	movw	r20, r24
 e28:	0a 2e       	mov	r0, r26
 e2a:	06 94       	lsr	r0
 e2c:	57 95       	ror	r21
 e2e:	47 95       	ror	r20
 e30:	37 95       	ror	r19
 e32:	27 95       	ror	r18
 e34:	ba 95       	dec	r27
 e36:	c9 f7       	brne	.-14     	; 0xe2a <__ultoa_invert+0xa2>
 e38:	62 0f       	add	r22, r18
 e3a:	73 1f       	adc	r23, r19
 e3c:	84 1f       	adc	r24, r20
 e3e:	95 1f       	adc	r25, r21
 e40:	a0 1d       	adc	r26, r0
 e42:	08 95       	ret

00000e44 <_exit>:
 e44:	f8 94       	cli

00000e46 <__stop_program>:
 e46:	ff cf       	rjmp	.-2      	; 0xe46 <__stop_program>
