
voltageregulator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000e22  00000eb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000f2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024bd  00000000  00000000  000011b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f28  00000000  00000000  00003675  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001523  00000000  00000000  0000459d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  00005ac0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c9e  00000000  00000000  00006144  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b13  00000000  00000000  00006de2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  000088f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	94 c3       	rjmp	.+1832   	; 0x786 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e2       	ldi	r30, 0x22	; 34
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	7e c6       	rjmp	.+3324   	; 0xe1e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:

int main(void)
{
    uint32_t messwert=0;
    uint8_t out=0;
    initBoard(0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	c9 d1       	rcall	.+914    	; 0x4ba <initBoard>
    DDRL=DDRL|4;
 128:	ea e0       	ldi	r30, 0x0A	; 10
 12a:	f1 e0       	ldi	r31, 0x01	; 1
 12c:	80 81       	ld	r24, Z
 12e:	84 60       	ori	r24, 0x04	; 4
 130:	80 83       	st	Z, r24
    
    while (1) 
    {
        //messwert=adcRead(0);
        messwert=(uint32_t)adcRead(0)*5000/1023;
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	47 d0       	rcall	.+142    	; 0x1c4 <adcRead>
 136:	9c 01       	movw	r18, r24
 138:	a8 e8       	ldi	r26, 0x88	; 136
 13a:	b3 e1       	ldi	r27, 0x13	; 19
 13c:	70 d3       	rcall	.+1760   	; 0x81e <__umulhisi3>

        if (messwert>3300)
 13e:	6b 31       	cpi	r22, 0x1B	; 27
 140:	77 48       	sbci	r23, 0x87	; 135
 142:	83 43       	sbci	r24, 0x33	; 51
 144:	91 05       	cpc	r25, r1
 146:	30 f0       	brcs	.+12     	; 0x154 <main+0x30>
        {
            PORTL=PORTL|4;
 148:	eb e0       	ldi	r30, 0x0B	; 11
 14a:	f1 e0       	ldi	r31, 0x01	; 1
 14c:	80 81       	ld	r24, Z
 14e:	84 60       	ori	r24, 0x04	; 4
 150:	80 83       	st	Z, r24
 152:	ef cf       	rjmp	.-34     	; 0x132 <main+0xe>
        }
        else
        {
            PORTL=PORTL|~4;
 154:	eb e0       	ldi	r30, 0x0B	; 11
 156:	f1 e0       	ldi	r31, 0x01	; 1
 158:	80 81       	ld	r24, Z
 15a:	8b 6f       	ori	r24, 0xFB	; 251
 15c:	80 83       	st	Z, r24
 15e:	e9 cf       	rjmp	.-46     	; 0x132 <main+0xe>

00000160 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 160:	82 b9       	out	0x02, r24	; 2
 162:	95 b9       	out	0x05, r25	; 5
 164:	08 95       	ret

00000166 <buttonReadAllPL>:
 166:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 16a:	08 95       	ret

0000016c <startSystemTimeMs>:
 16c:	83 e0       	ldi	r24, 0x03	; 3
 16e:	84 bd       	out	0x24, r24	; 36
 170:	8b e0       	ldi	r24, 0x0B	; 11
 172:	85 bd       	out	0x25, r24	; 37
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 17a:	89 ef       	ldi	r24, 0xF9	; 249
 17c:	87 bd       	out	0x27, r24	; 39
 17e:	08 95       	ret

00000180 <initAdc>:
 180:	11 ba       	out	0x11, r1	; 17
 182:	10 ba       	out	0x10, r1	; 16
 184:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 188:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 18c:	80 e4       	ldi	r24, 0x40	; 64
 18e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 192:	8f e0       	ldi	r24, 0x0F	; 15
 194:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 198:	8f ef       	ldi	r24, 0xFF	; 255
 19a:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 19e:	ea e7       	ldi	r30, 0x7A	; 122
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	87 ea       	ldi	r24, 0xA7	; 167
 1a4:	80 83       	st	Z, r24
 1a6:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 1aa:	80 81       	ld	r24, Z
 1ac:	80 64       	ori	r24, 0x40	; 64
 1ae:	80 83       	st	Z, r24
 1b0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 1b4:	84 ff       	sbrs	r24, 4
 1b6:	fc cf       	rjmp	.-8      	; 0x1b0 <initAdc+0x30>
 1b8:	ea e7       	ldi	r30, 0x7A	; 122
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	8f 7e       	andi	r24, 0xEF	; 239
 1c0:	80 83       	st	Z, r24
 1c2:	08 95       	ret

000001c4 <adcRead>:
 1c4:	90 e4       	ldi	r25, 0x40	; 64
 1c6:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 1ca:	88 30       	cpi	r24, 0x08	; 8
 1cc:	60 f0       	brcs	.+24     	; 0x1e6 <adcRead+0x22>
 1ce:	ec e7       	ldi	r30, 0x7C	; 124
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	90 81       	ld	r25, Z
 1d4:	88 50       	subi	r24, 0x08	; 8
 1d6:	89 2b       	or	r24, r25
 1d8:	80 83       	st	Z, r24
 1da:	eb e7       	ldi	r30, 0x7B	; 123
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	88 61       	ori	r24, 0x18	; 24
 1e2:	80 83       	st	Z, r24
 1e4:	0a c0       	rjmp	.+20     	; 0x1fa <adcRead+0x36>
 1e6:	ec e7       	ldi	r30, 0x7C	; 124
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	90 81       	ld	r25, Z
 1ec:	89 2b       	or	r24, r25
 1ee:	80 83       	st	Z, r24
 1f0:	eb e7       	ldi	r30, 0x7B	; 123
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	87 7e       	andi	r24, 0xE7	; 231
 1f8:	80 83       	st	Z, r24
 1fa:	ea e7       	ldi	r30, 0x7A	; 122
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	80 64       	ori	r24, 0x40	; 64
 202:	80 83       	st	Z, r24
 204:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 208:	84 ff       	sbrs	r24, 4
 20a:	fc cf       	rjmp	.-8      	; 0x204 <adcRead+0x40>
 20c:	8f ea       	ldi	r24, 0xAF	; 175
 20e:	94 e0       	ldi	r25, 0x04	; 4
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <adcRead+0x4c>
 214:	00 c0       	rjmp	.+0      	; 0x216 <adcRead+0x52>
 216:	00 00       	nop
 218:	30 91 78 00 	lds	r19, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 21c:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	98 2f       	mov	r25, r24
 224:	88 27       	eor	r24, r24
 226:	ea e7       	ldi	r30, 0x7A	; 122
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	20 81       	ld	r18, Z
 22c:	2f 7e       	andi	r18, 0xEF	; 239
 22e:	20 83       	st	Z, r18
 230:	83 2b       	or	r24, r19
 232:	08 95       	ret

00000234 <rgbWrite>:
 234:	2f ef       	ldi	r18, 0xFF	; 255
 236:	33 e0       	ldi	r19, 0x03	; 3
 238:	f9 01       	movw	r30, r18
 23a:	e8 1b       	sub	r30, r24
 23c:	f9 0b       	sbc	r31, r25
 23e:	c9 01       	movw	r24, r18
 240:	86 1b       	sub	r24, r22
 242:	97 0b       	sbc	r25, r23
 244:	24 1b       	sub	r18, r20
 246:	35 0b       	sbc	r19, r21
 248:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 24c:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 250:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 254:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 258:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 25c:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 260:	08 95       	ret

00000262 <initRgb>:
 262:	8e ef       	ldi	r24, 0xFE	; 254
 264:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 268:	8b e1       	ldi	r24, 0x1B	; 27
 26a:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 26e:	83 e0       	ldi	r24, 0x03	; 3
 270:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 27a:	40 e0       	ldi	r20, 0x00	; 0
 27c:	50 e0       	ldi	r21, 0x00	; 0
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	70 e0       	ldi	r23, 0x00	; 0
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	d6 cf       	rjmp	.-84     	; 0x234 <rgbWrite>
 288:	08 95       	ret

0000028a <lcdSid>:
 28a:	88 23       	and	r24, r24
 28c:	21 f0       	breq	.+8      	; 0x296 <lcdSid+0xc>
 28e:	84 b3       	in	r24, 0x14	; 20
 290:	81 60       	ori	r24, 0x01	; 1
 292:	84 bb       	out	0x14, r24	; 20
 294:	08 95       	ret
 296:	84 b3       	in	r24, 0x14	; 20
 298:	8e 7f       	andi	r24, 0xFE	; 254
 29a:	84 bb       	out	0x14, r24	; 20
 29c:	08 95       	ret

0000029e <lcdSclk>:
 29e:	88 23       	and	r24, r24
 2a0:	21 f0       	breq	.+8      	; 0x2aa <lcdSclk+0xc>
 2a2:	84 b3       	in	r24, 0x14	; 20
 2a4:	82 60       	ori	r24, 0x02	; 2
 2a6:	84 bb       	out	0x14, r24	; 20
 2a8:	08 95       	ret
 2aa:	84 b3       	in	r24, 0x14	; 20
 2ac:	8d 7f       	andi	r24, 0xFD	; 253
 2ae:	84 bb       	out	0x14, r24	; 20
 2b0:	08 95       	ret

000002b2 <lcdLight>:
 2b2:	81 11       	cpse	r24, r1
 2b4:	04 c0       	rjmp	.+8      	; 0x2be <lcdLight+0xc>
 2b6:	84 b5       	in	r24, 0x24	; 36
 2b8:	8f 7d       	andi	r24, 0xDF	; 223
 2ba:	84 bd       	out	0x24, r24	; 36
 2bc:	08 95       	ret
 2be:	94 b5       	in	r25, 0x24	; 36
 2c0:	90 62       	ori	r25, 0x20	; 32
 2c2:	94 bd       	out	0x24, r25	; 36
 2c4:	88 bd       	out	0x28, r24	; 40
 2c6:	08 95       	ret

000002c8 <writeLcdF>:
 2c8:	ef 92       	push	r14
 2ca:	ff 92       	push	r15
 2cc:	0f 93       	push	r16
 2ce:	1f 93       	push	r17
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	7c 01       	movw	r14, r24
 2d6:	eb 01       	movw	r28, r22
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	d7 df       	rcall	.-82     	; 0x28a <lcdSid>
 2dc:	00 e0       	ldi	r16, 0x00	; 0
 2de:	10 e0       	ldi	r17, 0x00	; 0
 2e0:	06 c0       	rjmp	.+12     	; 0x2ee <writeLcdF+0x26>
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	dc df       	rcall	.-72     	; 0x29e <lcdSclk>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	da df       	rcall	.-76     	; 0x29e <lcdSclk>
 2ea:	0f 5f       	subi	r16, 0xFF	; 255
 2ec:	1f 4f       	sbci	r17, 0xFF	; 255
 2ee:	05 30       	cpi	r16, 0x05	; 5
 2f0:	11 05       	cpc	r17, r1
 2f2:	b8 f3       	brcs	.-18     	; 0x2e2 <writeLcdF+0x1a>
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	c9 df       	rcall	.-110    	; 0x28a <lcdSid>
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	d1 df       	rcall	.-94     	; 0x29e <lcdSclk>
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	cf df       	rcall	.-98     	; 0x29e <lcdSclk>
 300:	83 e4       	ldi	r24, 0x43	; 67
 302:	e8 16       	cp	r14, r24
 304:	f1 04       	cpc	r15, r1
 306:	19 f4       	brne	.+6      	; 0x30e <writeLcdF+0x46>
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	bf df       	rcall	.-130    	; 0x28a <lcdSid>
 30c:	02 c0       	rjmp	.+4      	; 0x312 <writeLcdF+0x4a>
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	bc df       	rcall	.-136    	; 0x28a <lcdSid>
 312:	80 e0       	ldi	r24, 0x00	; 0
 314:	c4 df       	rcall	.-120    	; 0x29e <lcdSclk>
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	c2 df       	rcall	.-124    	; 0x29e <lcdSclk>
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	b6 df       	rcall	.-148    	; 0x28a <lcdSid>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	be df       	rcall	.-132    	; 0x29e <lcdSclk>
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	bc df       	rcall	.-136    	; 0x29e <lcdSclk>
 326:	00 e0       	ldi	r16, 0x00	; 0
 328:	10 e0       	ldi	r17, 0x00	; 0
 32a:	11 c0       	rjmp	.+34     	; 0x34e <writeLcdF+0x86>
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	b7 df       	rcall	.-146    	; 0x29e <lcdSclk>
 330:	c0 ff       	sbrs	r28, 0
 332:	03 c0       	rjmp	.+6      	; 0x33a <writeLcdF+0x72>
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	a9 df       	rcall	.-174    	; 0x28a <lcdSid>
 338:	02 c0       	rjmp	.+4      	; 0x33e <writeLcdF+0x76>
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	a6 df       	rcall	.-180    	; 0x28a <lcdSid>
 33e:	d6 95       	lsr	r29
 340:	c7 95       	ror	r28
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	ac df       	rcall	.-168    	; 0x29e <lcdSclk>
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	aa df       	rcall	.-172    	; 0x29e <lcdSclk>
 34a:	0f 5f       	subi	r16, 0xFF	; 255
 34c:	1f 4f       	sbci	r17, 0xFF	; 255
 34e:	04 30       	cpi	r16, 0x04	; 4
 350:	11 05       	cpc	r17, r1
 352:	60 f3       	brcs	.-40     	; 0x32c <writeLcdF+0x64>
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	99 df       	rcall	.-206    	; 0x28a <lcdSid>
 358:	00 e0       	ldi	r16, 0x00	; 0
 35a:	10 e0       	ldi	r17, 0x00	; 0
 35c:	06 c0       	rjmp	.+12     	; 0x36a <writeLcdF+0xa2>
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	9e df       	rcall	.-196    	; 0x29e <lcdSclk>
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	9c df       	rcall	.-200    	; 0x29e <lcdSclk>
 366:	0f 5f       	subi	r16, 0xFF	; 255
 368:	1f 4f       	sbci	r17, 0xFF	; 255
 36a:	04 30       	cpi	r16, 0x04	; 4
 36c:	11 05       	cpc	r17, r1
 36e:	b8 f3       	brcs	.-18     	; 0x35e <writeLcdF+0x96>
 370:	00 e0       	ldi	r16, 0x00	; 0
 372:	10 e0       	ldi	r17, 0x00	; 0
 374:	11 c0       	rjmp	.+34     	; 0x398 <writeLcdF+0xd0>
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	92 df       	rcall	.-220    	; 0x29e <lcdSclk>
 37a:	c0 ff       	sbrs	r28, 0
 37c:	03 c0       	rjmp	.+6      	; 0x384 <writeLcdF+0xbc>
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	84 df       	rcall	.-248    	; 0x28a <lcdSid>
 382:	02 c0       	rjmp	.+4      	; 0x388 <writeLcdF+0xc0>
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	81 df       	rcall	.-254    	; 0x28a <lcdSid>
 388:	d6 95       	lsr	r29
 38a:	c7 95       	ror	r28
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	87 df       	rcall	.-242    	; 0x29e <lcdSclk>
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	85 df       	rcall	.-246    	; 0x29e <lcdSclk>
 394:	0f 5f       	subi	r16, 0xFF	; 255
 396:	1f 4f       	sbci	r17, 0xFF	; 255
 398:	04 30       	cpi	r16, 0x04	; 4
 39a:	11 05       	cpc	r17, r1
 39c:	60 f3       	brcs	.-40     	; 0x376 <writeLcdF+0xae>
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	74 df       	rcall	.-280    	; 0x28a <lcdSid>
 3a2:	c0 e0       	ldi	r28, 0x00	; 0
 3a4:	d0 e0       	ldi	r29, 0x00	; 0
 3a6:	05 c0       	rjmp	.+10     	; 0x3b2 <writeLcdF+0xea>
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	79 df       	rcall	.-270    	; 0x29e <lcdSclk>
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	77 df       	rcall	.-274    	; 0x29e <lcdSclk>
 3b0:	21 96       	adiw	r28, 0x01	; 1
 3b2:	c4 30       	cpi	r28, 0x04	; 4
 3b4:	d1 05       	cpc	r29, r1
 3b6:	c0 f3       	brcs	.-16     	; 0x3a8 <writeLcdF+0xe0>
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	67 df       	rcall	.-306    	; 0x28a <lcdSid>
 3bc:	87 ec       	ldi	r24, 0xC7	; 199
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	01 97       	sbiw	r24, 0x01	; 1
 3c2:	f1 f7       	brne	.-4      	; 0x3c0 <writeLcdF+0xf8>
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <writeLcdF+0xfe>
 3c6:	00 00       	nop
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	1f 91       	pop	r17
 3ce:	0f 91       	pop	r16
 3d0:	ff 90       	pop	r15
 3d2:	ef 90       	pop	r14
 3d4:	08 95       	ret

000003d6 <lcdWriteText>:
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	cd b7       	in	r28, 0x3d	; 61
 3de:	de b7       	in	r29, 0x3e	; 62
 3e0:	65 97       	sbiw	r28, 0x15	; 21
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	f8 94       	cli
 3e6:	de bf       	out	0x3e, r29	; 62
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	cd bf       	out	0x3d, r28	; 61
 3ec:	9e 01       	movw	r18, r28
 3ee:	20 5e       	subi	r18, 0xE0	; 224
 3f0:	3f 4f       	sbci	r19, 0xFF	; 255
 3f2:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3f4:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3f6:	65 e1       	ldi	r22, 0x15	; 21
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	ce 01       	movw	r24, r28
 3fc:	01 96       	adiw	r24, 0x01	; 1
 3fe:	2a d2       	rcall	.+1108   	; 0x854 <vsnprintf>
 400:	6d 8d       	ldd	r22, Y+29	; 0x1d
 402:	8c 8d       	ldd	r24, Y+28	; 0x1c
 404:	90 e2       	ldi	r25, 0x20	; 32
 406:	89 9f       	mul	r24, r25
 408:	60 0d       	add	r22, r0
 40a:	11 24       	eor	r1, r1
 40c:	60 68       	ori	r22, 0x80	; 128
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	83 e4       	ldi	r24, 0x43	; 67
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	59 df       	rcall	.-334    	; 0x2c8 <writeLcdF>
 416:	10 e0       	ldi	r17, 0x00	; 0
 418:	05 c0       	rjmp	.+10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 41a:	1f 5f       	subi	r17, 0xFF	; 255
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	84 e4       	ldi	r24, 0x44	; 68
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	52 df       	rcall	.-348    	; 0x2c8 <writeLcdF>
 424:	e1 e0       	ldi	r30, 0x01	; 1
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	ec 0f       	add	r30, r28
 42a:	fd 1f       	adc	r31, r29
 42c:	e1 0f       	add	r30, r17
 42e:	f1 1d       	adc	r31, r1
 430:	60 81       	ld	r22, Z
 432:	61 11       	cpse	r22, r1
 434:	f2 cf       	rjmp	.-28     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 436:	65 96       	adiw	r28, 0x15	; 21
 438:	0f b6       	in	r0, 0x3f	; 63
 43a:	f8 94       	cli
 43c:	de bf       	out	0x3e, r29	; 62
 43e:	0f be       	out	0x3f, r0	; 63
 440:	cd bf       	out	0x3d, r28	; 61
 442:	df 91       	pop	r29
 444:	cf 91       	pop	r28
 446:	1f 91       	pop	r17
 448:	08 95       	ret

0000044a <lcdClear>:
 44a:	61 e0       	ldi	r22, 0x01	; 1
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	83 e4       	ldi	r24, 0x43	; 67
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	3a df       	rcall	.-396    	; 0x2c8 <writeLcdF>
 454:	8f e3       	ldi	r24, 0x3F	; 63
 456:	9f e1       	ldi	r25, 0x1F	; 31
 458:	01 97       	sbiw	r24, 0x01	; 1
 45a:	f1 f7       	brne	.-4      	; 0x458 <lcdClear+0xe>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <lcdClear+0x14>
 45e:	00 00       	nop
 460:	80 e3       	ldi	r24, 0x30	; 48
 462:	92 e0       	ldi	r25, 0x02	; 2
 464:	9f 93       	push	r25
 466:	8f 93       	push	r24
 468:	1f 92       	push	r1
 46a:	1f 92       	push	r1
 46c:	b4 df       	rcall	.-152    	; 0x3d6 <lcdWriteText>
 46e:	0f 90       	pop	r0
 470:	0f 90       	pop	r0
 472:	0f 90       	pop	r0
 474:	0f 90       	pop	r0
 476:	08 95       	ret

00000478 <initLcd>:
 478:	81 e0       	ldi	r24, 0x01	; 1
 47a:	11 df       	rcall	.-478    	; 0x29e <lcdSclk>
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	05 df       	rcall	.-502    	; 0x28a <lcdSid>
 480:	64 e3       	ldi	r22, 0x34	; 52
 482:	70 e0       	ldi	r23, 0x00	; 0
 484:	83 e4       	ldi	r24, 0x43	; 67
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	1f df       	rcall	.-450    	; 0x2c8 <writeLcdF>
 48a:	69 e0       	ldi	r22, 0x09	; 9
 48c:	70 e0       	ldi	r23, 0x00	; 0
 48e:	83 e4       	ldi	r24, 0x43	; 67
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	1a df       	rcall	.-460    	; 0x2c8 <writeLcdF>
 494:	60 e3       	ldi	r22, 0x30	; 48
 496:	70 e0       	ldi	r23, 0x00	; 0
 498:	83 e4       	ldi	r24, 0x43	; 67
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	15 df       	rcall	.-470    	; 0x2c8 <writeLcdF>
 49e:	6c e0       	ldi	r22, 0x0C	; 12
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	83 e4       	ldi	r24, 0x43	; 67
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	10 df       	rcall	.-480    	; 0x2c8 <writeLcdF>
 4a8:	d0 df       	rcall	.-96     	; 0x44a <lcdClear>
 4aa:	67 e0       	ldi	r22, 0x07	; 7
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	83 e4       	ldi	r24, 0x43	; 67
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0a df       	rcall	.-492    	; 0x2c8 <writeLcdF>
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	fd ce       	rjmp	.-518    	; 0x2b2 <lcdLight>
 4b8:	08 95       	ret

000004ba <initBoard>:
 4ba:	ff 92       	push	r15
 4bc:	0f 93       	push	r16
 4be:	1f 93       	push	r17
 4c0:	cf 93       	push	r28
 4c2:	df 93       	push	r29
 4c4:	c8 2f       	mov	r28, r24
 4c6:	85 b7       	in	r24, 0x35	; 53
 4c8:	85 bf       	out	0x35, r24	; 53
 4ca:	12 b8       	out	0x02, r1	; 2
 4cc:	8f ef       	ldi	r24, 0xFF	; 255
 4ce:	81 b9       	out	0x01, r24	; 1
 4d0:	15 b8       	out	0x05, r1	; 5
 4d2:	84 b9       	out	0x04, r24	; 4
 4d4:	88 b9       	out	0x08, r24	; 8
 4d6:	17 b8       	out	0x07, r1	; 7
 4d8:	8b b9       	out	0x0b, r24	; 11
 4da:	1a b8       	out	0x0a, r1	; 10
 4dc:	8e b9       	out	0x0e, r24	; 14
 4de:	1d b8       	out	0x0d, r1	; 13
 4e0:	9e b1       	in	r25, 0x0e	; 14
 4e2:	9b 7f       	andi	r25, 0xFB	; 251
 4e4:	9e b9       	out	0x0e, r25	; 14
 4e6:	11 ba       	out	0x11, r1	; 17
 4e8:	10 ba       	out	0x10, r1	; 16
 4ea:	94 e0       	ldi	r25, 0x04	; 4
 4ec:	94 bb       	out	0x14, r25	; 20
 4ee:	93 b3       	in	r25, 0x13	; 19
 4f0:	93 60       	ori	r25, 0x03	; 3
 4f2:	93 bb       	out	0x13, r25	; 19
 4f4:	93 b3       	in	r25, 0x13	; 19
 4f6:	90 62       	ori	r25, 0x20	; 32
 4f8:	93 bb       	out	0x13, r25	; 19
 4fa:	97 ec       	ldi	r25, 0xC7	; 199
 4fc:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 500:	98 e3       	ldi	r25, 0x38	; 56
 502:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 506:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 50a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 50e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 512:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 516:	8c e3       	ldi	r24, 0x3C	; 60
 518:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 51c:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 520:	78 94       	sei
 522:	24 de       	rcall	.-952    	; 0x16c <startSystemTimeMs>
 524:	a9 df       	rcall	.-174    	; 0x478 <initLcd>
 526:	2c de       	rcall	.-936    	; 0x180 <initAdc>
 528:	9c de       	rcall	.-712    	; 0x262 <initRgb>
 52a:	cc 23       	and	r28, r28
 52c:	09 f4       	brne	.+2      	; 0x530 <initBoard+0x76>
 52e:	a3 c0       	rjmp	.+326    	; 0x676 <initBoard+0x1bc>
 530:	8f ef       	ldi	r24, 0xFF	; 255
 532:	bf de       	rcall	.-642    	; 0x2b2 <lcdLight>
 534:	40 e0       	ldi	r20, 0x00	; 0
 536:	50 e0       	ldi	r21, 0x00	; 0
 538:	6f ef       	ldi	r22, 0xFF	; 255
 53a:	73 e0       	ldi	r23, 0x03	; 3
 53c:	80 e0       	ldi	r24, 0x00	; 0
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	79 de       	rcall	.-782    	; 0x234 <rgbWrite>
 542:	8d e1       	ldi	r24, 0x1D	; 29
 544:	92 e0       	ldi	r25, 0x02	; 2
 546:	9f 93       	push	r25
 548:	8f 93       	push	r24
 54a:	1f 92       	push	r1
 54c:	1f 92       	push	r1
 54e:	43 df       	rcall	.-378    	; 0x3d6 <lcdWriteText>
 550:	82 e3       	ldi	r24, 0x32	; 50
 552:	92 e0       	ldi	r25, 0x02	; 2
 554:	9f 93       	push	r25
 556:	8f 93       	push	r24
 558:	1f 92       	push	r1
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	8f 93       	push	r24
 55e:	3b df       	rcall	.-394    	; 0x3d6 <lcdWriteText>
 560:	88 e0       	ldi	r24, 0x08	; 8
 562:	92 e0       	ldi	r25, 0x02	; 2
 564:	9f 93       	push	r25
 566:	8f 93       	push	r24
 568:	1f 92       	push	r1
 56a:	82 e0       	ldi	r24, 0x02	; 2
 56c:	8f 93       	push	r24
 56e:	33 df       	rcall	.-410    	; 0x3d6 <lcdWriteText>
 570:	87 e4       	ldi	r24, 0x47	; 71
 572:	92 e0       	ldi	r25, 0x02	; 2
 574:	9f 93       	push	r25
 576:	8f 93       	push	r24
 578:	1f 92       	push	r1
 57a:	83 e0       	ldi	r24, 0x03	; 3
 57c:	8f 93       	push	r24
 57e:	2b df       	rcall	.-426    	; 0x3d6 <lcdWriteText>
 580:	8d b7       	in	r24, 0x3d	; 61
 582:	9e b7       	in	r25, 0x3e	; 62
 584:	40 96       	adiw	r24, 0x10	; 16
 586:	0f b6       	in	r0, 0x3f	; 63
 588:	f8 94       	cli
 58a:	9e bf       	out	0x3e, r25	; 62
 58c:	0f be       	out	0x3f, r0	; 63
 58e:	8d bf       	out	0x3d, r24	; 61
 590:	ff 24       	eor	r15, r15
 592:	f3 94       	inc	r15
 594:	c0 e0       	ldi	r28, 0x00	; 0
 596:	10 e0       	ldi	r17, 0x00	; 0
 598:	01 e0       	ldi	r16, 0x01	; 1
 59a:	d0 e0       	ldi	r29, 0x00	; 0
 59c:	00 23       	and	r16, r16
 59e:	51 f0       	breq	.+20     	; 0x5b4 <initBoard+0xfa>
 5a0:	80 e0       	ldi	r24, 0x00	; 0
 5a2:	90 e8       	ldi	r25, 0x80	; 128
 5a4:	0d 2e       	mov	r0, r29
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <initBoard+0xf2>
 5a8:	96 95       	lsr	r25
 5aa:	87 95       	ror	r24
 5ac:	0a 94       	dec	r0
 5ae:	e2 f7       	brpl	.-8      	; 0x5a8 <initBoard+0xee>
 5b0:	d7 dd       	rcall	.-1106   	; 0x160 <ledWriteAll>
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <initBoard+0x10c>
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0d 2e       	mov	r0, r29
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <initBoard+0x106>
 5bc:	88 0f       	add	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	0a 94       	dec	r0
 5c2:	e2 f7       	brpl	.-8      	; 0x5bc <initBoard+0x102>
 5c4:	cd dd       	rcall	.-1126   	; 0x160 <ledWriteAll>
 5c6:	df 5f       	subi	r29, 0xFF	; 255
 5c8:	d1 31       	cpi	r29, 0x11	; 17
 5ca:	28 f0       	brcs	.+10     	; 0x5d6 <initBoard+0x11c>
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	01 11       	cpse	r16, r1
 5d0:	80 e0       	ldi	r24, 0x00	; 0
 5d2:	08 2f       	mov	r16, r24
 5d4:	d0 e0       	ldi	r29, 0x00	; 0
 5d6:	ff 20       	and	r15, r15
 5d8:	11 f0       	breq	.+4      	; 0x5de <initBoard+0x124>
 5da:	ce 5f       	subi	r28, 0xFE	; 254
 5dc:	01 c0       	rjmp	.+2      	; 0x5e0 <initBoard+0x126>
 5de:	c2 50       	subi	r28, 0x02	; 2
 5e0:	8c 2f       	mov	r24, r28
 5e2:	67 de       	rcall	.-818    	; 0x2b2 <lcdLight>
 5e4:	ce 3f       	cpi	r28, 0xFE	; 254
 5e6:	09 f4       	brne	.+2      	; 0x5ea <initBoard+0x130>
 5e8:	f1 2c       	mov	r15, r1
 5ea:	c8 37       	cpi	r28, 0x78	; 120
 5ec:	11 f4       	brne	.+4      	; 0x5f2 <initBoard+0x138>
 5ee:	ff 24       	eor	r15, r15
 5f0:	f3 94       	inc	r15
 5f2:	11 11       	cpse	r17, r1
 5f4:	17 c0       	rjmp	.+46     	; 0x624 <initBoard+0x16a>
 5f6:	b7 dd       	rcall	.-1170   	; 0x166 <buttonReadAllPL>
 5f8:	83 7c       	andi	r24, 0xC3	; 195
 5fa:	a1 f0       	breq	.+40     	; 0x624 <initBoard+0x16a>
 5fc:	40 e0       	ldi	r20, 0x00	; 0
 5fe:	50 e0       	ldi	r21, 0x00	; 0
 600:	66 e2       	ldi	r22, 0x26	; 38
 602:	72 e0       	ldi	r23, 0x02	; 2
 604:	8f ef       	ldi	r24, 0xFF	; 255
 606:	93 e0       	ldi	r25, 0x03	; 3
 608:	15 de       	rcall	.-982    	; 0x234 <rgbWrite>
 60a:	8c e5       	ldi	r24, 0x5C	; 92
 60c:	92 e0       	ldi	r25, 0x02	; 2
 60e:	9f 93       	push	r25
 610:	8f 93       	push	r24
 612:	1f 92       	push	r1
 614:	83 e0       	ldi	r24, 0x03	; 3
 616:	8f 93       	push	r24
 618:	de de       	rcall	.-580    	; 0x3d6 <lcdWriteText>
 61a:	0f 90       	pop	r0
 61c:	0f 90       	pop	r0
 61e:	0f 90       	pop	r0
 620:	0f 90       	pop	r0
 622:	11 e0       	ldi	r17, 0x01	; 1
 624:	11 23       	and	r17, r17
 626:	19 f0       	breq	.+6      	; 0x62e <initBoard+0x174>
 628:	9e dd       	rcall	.-1220   	; 0x166 <buttonReadAllPL>
 62a:	83 7c       	andi	r24, 0xC3	; 195
 62c:	39 f0       	breq	.+14     	; 0x63c <initBoard+0x182>
 62e:	8f ef       	ldi	r24, 0xFF	; 255
 630:	9c e7       	ldi	r25, 0x7C	; 124
 632:	01 97       	sbiw	r24, 0x01	; 1
 634:	f1 f7       	brne	.-4      	; 0x632 <initBoard+0x178>
 636:	00 c0       	rjmp	.+0      	; 0x638 <initBoard+0x17e>
 638:	00 00       	nop
 63a:	b0 cf       	rjmp	.-160    	; 0x59c <initBoard+0xe2>
 63c:	06 df       	rcall	.-500    	; 0x44a <lcdClear>
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	38 de       	rcall	.-912    	; 0x2b2 <lcdLight>
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	8c dd       	rcall	.-1256   	; 0x160 <ledWriteAll>
 648:	40 e0       	ldi	r20, 0x00	; 0
 64a:	50 e0       	ldi	r21, 0x00	; 0
 64c:	60 e0       	ldi	r22, 0x00	; 0
 64e:	70 e0       	ldi	r23, 0x00	; 0
 650:	80 e0       	ldi	r24, 0x00	; 0
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	ef dd       	rcall	.-1058   	; 0x234 <rgbWrite>
 656:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 65a:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 65e:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 662:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 666:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 66a:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 66e:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 672:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 676:	df 91       	pop	r29
 678:	cf 91       	pop	r28
 67a:	1f 91       	pop	r17
 67c:	0f 91       	pop	r16
 67e:	ff 90       	pop	r15
 680:	08 95       	ret

00000682 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 682:	cf 93       	push	r28
 684:	df 93       	push	r29
 686:	cd b7       	in	r28, 0x3d	; 61
 688:	de b7       	in	r29, 0x3e	; 62
 68a:	28 97       	sbiw	r28, 0x08	; 8
 68c:	0f b6       	in	r0, 0x3f	; 63
 68e:	f8 94       	cli
 690:	de bf       	out	0x3e, r29	; 62
 692:	0f be       	out	0x3f, r0	; 63
 694:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 696:	88 e0       	ldi	r24, 0x08	; 8
 698:	e0 e0       	ldi	r30, 0x00	; 0
 69a:	f2 e0       	ldi	r31, 0x02	; 2
 69c:	de 01       	movw	r26, r28
 69e:	11 96       	adiw	r26, 0x01	; 1
 6a0:	01 90       	ld	r0, Z+
 6a2:	0d 92       	st	X+, r0
 6a4:	8a 95       	dec	r24
 6a6:	e1 f7       	brne	.-8      	; 0x6a0 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6a8:	e5 e0       	ldi	r30, 0x05	; 5
 6aa:	f1 e0       	ldi	r31, 0x01	; 1
 6ac:	80 81       	ld	r24, Z
 6ae:	8f 7b       	andi	r24, 0xBF	; 191
 6b0:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6b2:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 6b6:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	8c 0f       	add	r24, r28
 6c0:	9d 1f       	adc	r25, r29
 6c2:	e8 0f       	add	r30, r24
 6c4:	f9 1f       	adc	r31, r25
 6c6:	80 81       	ld	r24, Z
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 6ce:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	26 c0       	rjmp	.+76     	; 0x722 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 6d6:	e7 e3       	ldi	r30, 0x37	; 55
 6d8:	f0 e0       	ldi	r31, 0x00	; 0
 6da:	e8 1b       	sub	r30, r24
 6dc:	f1 09       	sbc	r31, r1
 6de:	ee 0f       	add	r30, r30
 6e0:	ff 1f       	adc	r31, r31
 6e2:	ee 57       	subi	r30, 0x7E	; 126
 6e4:	fd 4f       	sbci	r31, 0xFD	; 253
 6e6:	40 81       	ld	r20, Z
 6e8:	51 81       	ldd	r21, Z+1	; 0x01
 6ea:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 6ee:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 6f2:	24 23       	and	r18, r20
 6f4:	35 23       	and	r19, r21
 6f6:	23 2b       	or	r18, r19
 6f8:	31 f0       	breq	.+12     	; 0x706 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 6fa:	e5 e0       	ldi	r30, 0x05	; 5
 6fc:	f1 e0       	ldi	r31, 0x01	; 1
 6fe:	90 81       	ld	r25, Z
 700:	90 62       	ori	r25, 0x20	; 32
 702:	90 83       	st	Z, r25
 704:	05 c0       	rjmp	.+10     	; 0x710 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 706:	e5 e0       	ldi	r30, 0x05	; 5
 708:	f1 e0       	ldi	r31, 0x01	; 1
 70a:	90 81       	ld	r25, Z
 70c:	9f 7d       	andi	r25, 0xDF	; 223
 70e:	90 83       	st	Z, r25
        }
        CLOCK_1;
 710:	e5 e0       	ldi	r30, 0x05	; 5
 712:	f1 e0       	ldi	r31, 0x01	; 1
 714:	90 81       	ld	r25, Z
 716:	90 61       	ori	r25, 0x10	; 16
 718:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 71a:	90 81       	ld	r25, Z
 71c:	9f 7e       	andi	r25, 0xEF	; 239
 71e:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 720:	8f 5f       	subi	r24, 0xFF	; 255
 722:	88 33       	cpi	r24, 0x38	; 56
 724:	c0 f2       	brcs	.-80     	; 0x6d6 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 726:	e5 e0       	ldi	r30, 0x05	; 5
 728:	f1 e0       	ldi	r31, 0x01	; 1
 72a:	80 81       	ld	r24, Z
 72c:	87 7f       	andi	r24, 0xF7	; 247
 72e:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 730:	80 81       	ld	r24, Z
 732:	88 7f       	andi	r24, 0xF8	; 248
 734:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 736:	90 81       	ld	r25, Z
 738:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 73c:	89 2b       	or	r24, r25
 73e:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 740:	80 81       	ld	r24, Z
 742:	80 64       	ori	r24, 0x40	; 64
 744:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 746:	80 81       	ld	r24, Z
 748:	88 60       	ori	r24, 0x08	; 8
 74a:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 74c:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 750:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 754:	87 30       	cpi	r24, 0x07	; 7
 756:	91 05       	cpc	r25, r1
 758:	30 f4       	brcc	.+12     	; 0x766 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 75a:	01 96       	adiw	r24, 0x01	; 1
 75c:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 760:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 764:	07 c0       	rjmp	.+14     	; 0x774 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 766:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 76a:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 76e:	81 e0       	ldi	r24, 0x01	; 1
 770:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 774:	28 96       	adiw	r28, 0x08	; 8
 776:	0f b6       	in	r0, 0x3f	; 63
 778:	f8 94       	cli
 77a:	de bf       	out	0x3e, r29	; 62
 77c:	0f be       	out	0x3f, r0	; 63
 77e:	cd bf       	out	0x3d, r28	; 61
 780:	df 91       	pop	r29
 782:	cf 91       	pop	r28
 784:	08 95       	ret

00000786 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 786:	1f 92       	push	r1
 788:	0f 92       	push	r0
 78a:	0f b6       	in	r0, 0x3f	; 63
 78c:	0f 92       	push	r0
 78e:	11 24       	eor	r1, r1
 790:	0b b6       	in	r0, 0x3b	; 59
 792:	0f 92       	push	r0
 794:	2f 93       	push	r18
 796:	3f 93       	push	r19
 798:	4f 93       	push	r20
 79a:	5f 93       	push	r21
 79c:	6f 93       	push	r22
 79e:	7f 93       	push	r23
 7a0:	8f 93       	push	r24
 7a2:	9f 93       	push	r25
 7a4:	af 93       	push	r26
 7a6:	bf 93       	push	r27
 7a8:	ef 93       	push	r30
 7aa:	ff 93       	push	r31
    systemTimeMs += 1;
 7ac:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 7b0:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 7b4:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 7b8:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 7bc:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 7c0:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 7c4:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 7c8:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 7cc:	a1 e0       	ldi	r26, 0x01	; 1
 7ce:	36 d0       	rcall	.+108    	; 0x83c <__adddi3_s8>
 7d0:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 7d4:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 7d8:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 7dc:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 7e0:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 7e4:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 7e8:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 7ec:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 7f0:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 7f4:	81 11       	cpse	r24, r1
 7f6:	45 df       	rcall	.-374    	; 0x682 <matrixWriteNextLine>
}
 7f8:	ff 91       	pop	r31
 7fa:	ef 91       	pop	r30
 7fc:	bf 91       	pop	r27
 7fe:	af 91       	pop	r26
 800:	9f 91       	pop	r25
 802:	8f 91       	pop	r24
 804:	7f 91       	pop	r23
 806:	6f 91       	pop	r22
 808:	5f 91       	pop	r21
 80a:	4f 91       	pop	r20
 80c:	3f 91       	pop	r19
 80e:	2f 91       	pop	r18
 810:	0f 90       	pop	r0
 812:	0b be       	out	0x3b, r0	; 59
 814:	0f 90       	pop	r0
 816:	0f be       	out	0x3f, r0	; 63
 818:	0f 90       	pop	r0
 81a:	1f 90       	pop	r1
 81c:	18 95       	reti

0000081e <__umulhisi3>:
 81e:	a2 9f       	mul	r26, r18
 820:	b0 01       	movw	r22, r0
 822:	b3 9f       	mul	r27, r19
 824:	c0 01       	movw	r24, r0
 826:	a3 9f       	mul	r26, r19
 828:	70 0d       	add	r23, r0
 82a:	81 1d       	adc	r24, r1
 82c:	11 24       	eor	r1, r1
 82e:	91 1d       	adc	r25, r1
 830:	b2 9f       	mul	r27, r18
 832:	70 0d       	add	r23, r0
 834:	81 1d       	adc	r24, r1
 836:	11 24       	eor	r1, r1
 838:	91 1d       	adc	r25, r1
 83a:	08 95       	ret

0000083c <__adddi3_s8>:
 83c:	00 24       	eor	r0, r0
 83e:	a7 fd       	sbrc	r26, 7
 840:	00 94       	com	r0
 842:	2a 0f       	add	r18, r26
 844:	30 1d       	adc	r19, r0
 846:	40 1d       	adc	r20, r0
 848:	50 1d       	adc	r21, r0
 84a:	60 1d       	adc	r22, r0
 84c:	70 1d       	adc	r23, r0
 84e:	80 1d       	adc	r24, r0
 850:	90 1d       	adc	r25, r0
 852:	08 95       	ret

00000854 <vsnprintf>:
 854:	0f 93       	push	r16
 856:	1f 93       	push	r17
 858:	cf 93       	push	r28
 85a:	df 93       	push	r29
 85c:	cd b7       	in	r28, 0x3d	; 61
 85e:	de b7       	in	r29, 0x3e	; 62
 860:	2e 97       	sbiw	r28, 0x0e	; 14
 862:	0f b6       	in	r0, 0x3f	; 63
 864:	f8 94       	cli
 866:	de bf       	out	0x3e, r29	; 62
 868:	0f be       	out	0x3f, r0	; 63
 86a:	cd bf       	out	0x3d, r28	; 61
 86c:	8c 01       	movw	r16, r24
 86e:	fa 01       	movw	r30, r20
 870:	86 e0       	ldi	r24, 0x06	; 6
 872:	8c 83       	std	Y+4, r24	; 0x04
 874:	1a 83       	std	Y+2, r17	; 0x02
 876:	09 83       	std	Y+1, r16	; 0x01
 878:	77 ff       	sbrs	r23, 7
 87a:	02 c0       	rjmp	.+4      	; 0x880 <vsnprintf+0x2c>
 87c:	60 e0       	ldi	r22, 0x00	; 0
 87e:	70 e8       	ldi	r23, 0x80	; 128
 880:	cb 01       	movw	r24, r22
 882:	01 97       	sbiw	r24, 0x01	; 1
 884:	9e 83       	std	Y+6, r25	; 0x06
 886:	8d 83       	std	Y+5, r24	; 0x05
 888:	a9 01       	movw	r20, r18
 88a:	bf 01       	movw	r22, r30
 88c:	ce 01       	movw	r24, r28
 88e:	01 96       	adiw	r24, 0x01	; 1
 890:	19 d0       	rcall	.+50     	; 0x8c4 <vfprintf>
 892:	4d 81       	ldd	r20, Y+5	; 0x05
 894:	5e 81       	ldd	r21, Y+6	; 0x06
 896:	57 fd       	sbrc	r21, 7
 898:	0a c0       	rjmp	.+20     	; 0x8ae <vsnprintf+0x5a>
 89a:	2f 81       	ldd	r18, Y+7	; 0x07
 89c:	38 85       	ldd	r19, Y+8	; 0x08
 89e:	42 17       	cp	r20, r18
 8a0:	53 07       	cpc	r21, r19
 8a2:	0c f4       	brge	.+2      	; 0x8a6 <vsnprintf+0x52>
 8a4:	9a 01       	movw	r18, r20
 8a6:	f8 01       	movw	r30, r16
 8a8:	e2 0f       	add	r30, r18
 8aa:	f3 1f       	adc	r31, r19
 8ac:	10 82       	st	Z, r1
 8ae:	2e 96       	adiw	r28, 0x0e	; 14
 8b0:	0f b6       	in	r0, 0x3f	; 63
 8b2:	f8 94       	cli
 8b4:	de bf       	out	0x3e, r29	; 62
 8b6:	0f be       	out	0x3f, r0	; 63
 8b8:	cd bf       	out	0x3d, r28	; 61
 8ba:	df 91       	pop	r29
 8bc:	cf 91       	pop	r28
 8be:	1f 91       	pop	r17
 8c0:	0f 91       	pop	r16
 8c2:	08 95       	ret

000008c4 <vfprintf>:
 8c4:	2f 92       	push	r2
 8c6:	3f 92       	push	r3
 8c8:	4f 92       	push	r4
 8ca:	5f 92       	push	r5
 8cc:	6f 92       	push	r6
 8ce:	7f 92       	push	r7
 8d0:	8f 92       	push	r8
 8d2:	9f 92       	push	r9
 8d4:	af 92       	push	r10
 8d6:	bf 92       	push	r11
 8d8:	cf 92       	push	r12
 8da:	df 92       	push	r13
 8dc:	ef 92       	push	r14
 8de:	ff 92       	push	r15
 8e0:	0f 93       	push	r16
 8e2:	1f 93       	push	r17
 8e4:	cf 93       	push	r28
 8e6:	df 93       	push	r29
 8e8:	cd b7       	in	r28, 0x3d	; 61
 8ea:	de b7       	in	r29, 0x3e	; 62
 8ec:	2b 97       	sbiw	r28, 0x0b	; 11
 8ee:	0f b6       	in	r0, 0x3f	; 63
 8f0:	f8 94       	cli
 8f2:	de bf       	out	0x3e, r29	; 62
 8f4:	0f be       	out	0x3f, r0	; 63
 8f6:	cd bf       	out	0x3d, r28	; 61
 8f8:	6c 01       	movw	r12, r24
 8fa:	7b 01       	movw	r14, r22
 8fc:	8a 01       	movw	r16, r20
 8fe:	fc 01       	movw	r30, r24
 900:	17 82       	std	Z+7, r1	; 0x07
 902:	16 82       	std	Z+6, r1	; 0x06
 904:	83 81       	ldd	r24, Z+3	; 0x03
 906:	81 ff       	sbrs	r24, 1
 908:	bf c1       	rjmp	.+894    	; 0xc88 <vfprintf+0x3c4>
 90a:	ce 01       	movw	r24, r28
 90c:	01 96       	adiw	r24, 0x01	; 1
 90e:	3c 01       	movw	r6, r24
 910:	f6 01       	movw	r30, r12
 912:	93 81       	ldd	r25, Z+3	; 0x03
 914:	f7 01       	movw	r30, r14
 916:	93 fd       	sbrc	r25, 3
 918:	85 91       	lpm	r24, Z+
 91a:	93 ff       	sbrs	r25, 3
 91c:	81 91       	ld	r24, Z+
 91e:	7f 01       	movw	r14, r30
 920:	88 23       	and	r24, r24
 922:	09 f4       	brne	.+2      	; 0x926 <vfprintf+0x62>
 924:	ad c1       	rjmp	.+858    	; 0xc80 <vfprintf+0x3bc>
 926:	85 32       	cpi	r24, 0x25	; 37
 928:	39 f4       	brne	.+14     	; 0x938 <vfprintf+0x74>
 92a:	93 fd       	sbrc	r25, 3
 92c:	85 91       	lpm	r24, Z+
 92e:	93 ff       	sbrs	r25, 3
 930:	81 91       	ld	r24, Z+
 932:	7f 01       	movw	r14, r30
 934:	85 32       	cpi	r24, 0x25	; 37
 936:	21 f4       	brne	.+8      	; 0x940 <vfprintf+0x7c>
 938:	b6 01       	movw	r22, r12
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	d6 d1       	rcall	.+940    	; 0xcea <fputc>
 93e:	e8 cf       	rjmp	.-48     	; 0x910 <vfprintf+0x4c>
 940:	91 2c       	mov	r9, r1
 942:	21 2c       	mov	r2, r1
 944:	31 2c       	mov	r3, r1
 946:	ff e1       	ldi	r31, 0x1F	; 31
 948:	f3 15       	cp	r31, r3
 94a:	d8 f0       	brcs	.+54     	; 0x982 <vfprintf+0xbe>
 94c:	8b 32       	cpi	r24, 0x2B	; 43
 94e:	79 f0       	breq	.+30     	; 0x96e <vfprintf+0xaa>
 950:	38 f4       	brcc	.+14     	; 0x960 <vfprintf+0x9c>
 952:	80 32       	cpi	r24, 0x20	; 32
 954:	79 f0       	breq	.+30     	; 0x974 <vfprintf+0xb0>
 956:	83 32       	cpi	r24, 0x23	; 35
 958:	a1 f4       	brne	.+40     	; 0x982 <vfprintf+0xbe>
 95a:	23 2d       	mov	r18, r3
 95c:	20 61       	ori	r18, 0x10	; 16
 95e:	1d c0       	rjmp	.+58     	; 0x99a <vfprintf+0xd6>
 960:	8d 32       	cpi	r24, 0x2D	; 45
 962:	61 f0       	breq	.+24     	; 0x97c <vfprintf+0xb8>
 964:	80 33       	cpi	r24, 0x30	; 48
 966:	69 f4       	brne	.+26     	; 0x982 <vfprintf+0xbe>
 968:	23 2d       	mov	r18, r3
 96a:	21 60       	ori	r18, 0x01	; 1
 96c:	16 c0       	rjmp	.+44     	; 0x99a <vfprintf+0xd6>
 96e:	83 2d       	mov	r24, r3
 970:	82 60       	ori	r24, 0x02	; 2
 972:	38 2e       	mov	r3, r24
 974:	e3 2d       	mov	r30, r3
 976:	e4 60       	ori	r30, 0x04	; 4
 978:	3e 2e       	mov	r3, r30
 97a:	2a c0       	rjmp	.+84     	; 0x9d0 <vfprintf+0x10c>
 97c:	f3 2d       	mov	r31, r3
 97e:	f8 60       	ori	r31, 0x08	; 8
 980:	1d c0       	rjmp	.+58     	; 0x9bc <vfprintf+0xf8>
 982:	37 fc       	sbrc	r3, 7
 984:	2d c0       	rjmp	.+90     	; 0x9e0 <vfprintf+0x11c>
 986:	20 ed       	ldi	r18, 0xD0	; 208
 988:	28 0f       	add	r18, r24
 98a:	2a 30       	cpi	r18, 0x0A	; 10
 98c:	40 f0       	brcs	.+16     	; 0x99e <vfprintf+0xda>
 98e:	8e 32       	cpi	r24, 0x2E	; 46
 990:	b9 f4       	brne	.+46     	; 0x9c0 <vfprintf+0xfc>
 992:	36 fc       	sbrc	r3, 6
 994:	75 c1       	rjmp	.+746    	; 0xc80 <vfprintf+0x3bc>
 996:	23 2d       	mov	r18, r3
 998:	20 64       	ori	r18, 0x40	; 64
 99a:	32 2e       	mov	r3, r18
 99c:	19 c0       	rjmp	.+50     	; 0x9d0 <vfprintf+0x10c>
 99e:	36 fe       	sbrs	r3, 6
 9a0:	06 c0       	rjmp	.+12     	; 0x9ae <vfprintf+0xea>
 9a2:	8a e0       	ldi	r24, 0x0A	; 10
 9a4:	98 9e       	mul	r9, r24
 9a6:	20 0d       	add	r18, r0
 9a8:	11 24       	eor	r1, r1
 9aa:	92 2e       	mov	r9, r18
 9ac:	11 c0       	rjmp	.+34     	; 0x9d0 <vfprintf+0x10c>
 9ae:	ea e0       	ldi	r30, 0x0A	; 10
 9b0:	2e 9e       	mul	r2, r30
 9b2:	20 0d       	add	r18, r0
 9b4:	11 24       	eor	r1, r1
 9b6:	22 2e       	mov	r2, r18
 9b8:	f3 2d       	mov	r31, r3
 9ba:	f0 62       	ori	r31, 0x20	; 32
 9bc:	3f 2e       	mov	r3, r31
 9be:	08 c0       	rjmp	.+16     	; 0x9d0 <vfprintf+0x10c>
 9c0:	8c 36       	cpi	r24, 0x6C	; 108
 9c2:	21 f4       	brne	.+8      	; 0x9cc <vfprintf+0x108>
 9c4:	83 2d       	mov	r24, r3
 9c6:	80 68       	ori	r24, 0x80	; 128
 9c8:	38 2e       	mov	r3, r24
 9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <vfprintf+0x10c>
 9cc:	88 36       	cpi	r24, 0x68	; 104
 9ce:	41 f4       	brne	.+16     	; 0x9e0 <vfprintf+0x11c>
 9d0:	f7 01       	movw	r30, r14
 9d2:	93 fd       	sbrc	r25, 3
 9d4:	85 91       	lpm	r24, Z+
 9d6:	93 ff       	sbrs	r25, 3
 9d8:	81 91       	ld	r24, Z+
 9da:	7f 01       	movw	r14, r30
 9dc:	81 11       	cpse	r24, r1
 9de:	b3 cf       	rjmp	.-154    	; 0x946 <vfprintf+0x82>
 9e0:	98 2f       	mov	r25, r24
 9e2:	9f 7d       	andi	r25, 0xDF	; 223
 9e4:	95 54       	subi	r25, 0x45	; 69
 9e6:	93 30       	cpi	r25, 0x03	; 3
 9e8:	28 f4       	brcc	.+10     	; 0x9f4 <vfprintf+0x130>
 9ea:	0c 5f       	subi	r16, 0xFC	; 252
 9ec:	1f 4f       	sbci	r17, 0xFF	; 255
 9ee:	9f e3       	ldi	r25, 0x3F	; 63
 9f0:	99 83       	std	Y+1, r25	; 0x01
 9f2:	0d c0       	rjmp	.+26     	; 0xa0e <vfprintf+0x14a>
 9f4:	83 36       	cpi	r24, 0x63	; 99
 9f6:	31 f0       	breq	.+12     	; 0xa04 <vfprintf+0x140>
 9f8:	83 37       	cpi	r24, 0x73	; 115
 9fa:	71 f0       	breq	.+28     	; 0xa18 <vfprintf+0x154>
 9fc:	83 35       	cpi	r24, 0x53	; 83
 9fe:	09 f0       	breq	.+2      	; 0xa02 <vfprintf+0x13e>
 a00:	55 c0       	rjmp	.+170    	; 0xaac <vfprintf+0x1e8>
 a02:	20 c0       	rjmp	.+64     	; 0xa44 <vfprintf+0x180>
 a04:	f8 01       	movw	r30, r16
 a06:	80 81       	ld	r24, Z
 a08:	89 83       	std	Y+1, r24	; 0x01
 a0a:	0e 5f       	subi	r16, 0xFE	; 254
 a0c:	1f 4f       	sbci	r17, 0xFF	; 255
 a0e:	88 24       	eor	r8, r8
 a10:	83 94       	inc	r8
 a12:	91 2c       	mov	r9, r1
 a14:	53 01       	movw	r10, r6
 a16:	12 c0       	rjmp	.+36     	; 0xa3c <vfprintf+0x178>
 a18:	28 01       	movw	r4, r16
 a1a:	f2 e0       	ldi	r31, 0x02	; 2
 a1c:	4f 0e       	add	r4, r31
 a1e:	51 1c       	adc	r5, r1
 a20:	f8 01       	movw	r30, r16
 a22:	a0 80       	ld	r10, Z
 a24:	b1 80       	ldd	r11, Z+1	; 0x01
 a26:	36 fe       	sbrs	r3, 6
 a28:	03 c0       	rjmp	.+6      	; 0xa30 <vfprintf+0x16c>
 a2a:	69 2d       	mov	r22, r9
 a2c:	70 e0       	ldi	r23, 0x00	; 0
 a2e:	02 c0       	rjmp	.+4      	; 0xa34 <vfprintf+0x170>
 a30:	6f ef       	ldi	r22, 0xFF	; 255
 a32:	7f ef       	ldi	r23, 0xFF	; 255
 a34:	c5 01       	movw	r24, r10
 a36:	4e d1       	rcall	.+668    	; 0xcd4 <strnlen>
 a38:	4c 01       	movw	r8, r24
 a3a:	82 01       	movw	r16, r4
 a3c:	f3 2d       	mov	r31, r3
 a3e:	ff 77       	andi	r31, 0x7F	; 127
 a40:	3f 2e       	mov	r3, r31
 a42:	15 c0       	rjmp	.+42     	; 0xa6e <vfprintf+0x1aa>
 a44:	28 01       	movw	r4, r16
 a46:	22 e0       	ldi	r18, 0x02	; 2
 a48:	42 0e       	add	r4, r18
 a4a:	51 1c       	adc	r5, r1
 a4c:	f8 01       	movw	r30, r16
 a4e:	a0 80       	ld	r10, Z
 a50:	b1 80       	ldd	r11, Z+1	; 0x01
 a52:	36 fe       	sbrs	r3, 6
 a54:	03 c0       	rjmp	.+6      	; 0xa5c <vfprintf+0x198>
 a56:	69 2d       	mov	r22, r9
 a58:	70 e0       	ldi	r23, 0x00	; 0
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <vfprintf+0x19c>
 a5c:	6f ef       	ldi	r22, 0xFF	; 255
 a5e:	7f ef       	ldi	r23, 0xFF	; 255
 a60:	c5 01       	movw	r24, r10
 a62:	2d d1       	rcall	.+602    	; 0xcbe <strnlen_P>
 a64:	4c 01       	movw	r8, r24
 a66:	f3 2d       	mov	r31, r3
 a68:	f0 68       	ori	r31, 0x80	; 128
 a6a:	3f 2e       	mov	r3, r31
 a6c:	82 01       	movw	r16, r4
 a6e:	33 fc       	sbrc	r3, 3
 a70:	19 c0       	rjmp	.+50     	; 0xaa4 <vfprintf+0x1e0>
 a72:	82 2d       	mov	r24, r2
 a74:	90 e0       	ldi	r25, 0x00	; 0
 a76:	88 16       	cp	r8, r24
 a78:	99 06       	cpc	r9, r25
 a7a:	a0 f4       	brcc	.+40     	; 0xaa4 <vfprintf+0x1e0>
 a7c:	b6 01       	movw	r22, r12
 a7e:	80 e2       	ldi	r24, 0x20	; 32
 a80:	90 e0       	ldi	r25, 0x00	; 0
 a82:	33 d1       	rcall	.+614    	; 0xcea <fputc>
 a84:	2a 94       	dec	r2
 a86:	f5 cf       	rjmp	.-22     	; 0xa72 <vfprintf+0x1ae>
 a88:	f5 01       	movw	r30, r10
 a8a:	37 fc       	sbrc	r3, 7
 a8c:	85 91       	lpm	r24, Z+
 a8e:	37 fe       	sbrs	r3, 7
 a90:	81 91       	ld	r24, Z+
 a92:	5f 01       	movw	r10, r30
 a94:	b6 01       	movw	r22, r12
 a96:	90 e0       	ldi	r25, 0x00	; 0
 a98:	28 d1       	rcall	.+592    	; 0xcea <fputc>
 a9a:	21 10       	cpse	r2, r1
 a9c:	2a 94       	dec	r2
 a9e:	21 e0       	ldi	r18, 0x01	; 1
 aa0:	82 1a       	sub	r8, r18
 aa2:	91 08       	sbc	r9, r1
 aa4:	81 14       	cp	r8, r1
 aa6:	91 04       	cpc	r9, r1
 aa8:	79 f7       	brne	.-34     	; 0xa88 <vfprintf+0x1c4>
 aaa:	e1 c0       	rjmp	.+450    	; 0xc6e <vfprintf+0x3aa>
 aac:	84 36       	cpi	r24, 0x64	; 100
 aae:	11 f0       	breq	.+4      	; 0xab4 <vfprintf+0x1f0>
 ab0:	89 36       	cpi	r24, 0x69	; 105
 ab2:	39 f5       	brne	.+78     	; 0xb02 <vfprintf+0x23e>
 ab4:	f8 01       	movw	r30, r16
 ab6:	37 fe       	sbrs	r3, 7
 ab8:	07 c0       	rjmp	.+14     	; 0xac8 <vfprintf+0x204>
 aba:	60 81       	ld	r22, Z
 abc:	71 81       	ldd	r23, Z+1	; 0x01
 abe:	82 81       	ldd	r24, Z+2	; 0x02
 ac0:	93 81       	ldd	r25, Z+3	; 0x03
 ac2:	0c 5f       	subi	r16, 0xFC	; 252
 ac4:	1f 4f       	sbci	r17, 0xFF	; 255
 ac6:	08 c0       	rjmp	.+16     	; 0xad8 <vfprintf+0x214>
 ac8:	60 81       	ld	r22, Z
 aca:	71 81       	ldd	r23, Z+1	; 0x01
 acc:	07 2e       	mov	r0, r23
 ace:	00 0c       	add	r0, r0
 ad0:	88 0b       	sbc	r24, r24
 ad2:	99 0b       	sbc	r25, r25
 ad4:	0e 5f       	subi	r16, 0xFE	; 254
 ad6:	1f 4f       	sbci	r17, 0xFF	; 255
 ad8:	f3 2d       	mov	r31, r3
 ada:	ff 76       	andi	r31, 0x6F	; 111
 adc:	3f 2e       	mov	r3, r31
 ade:	97 ff       	sbrs	r25, 7
 ae0:	09 c0       	rjmp	.+18     	; 0xaf4 <vfprintf+0x230>
 ae2:	90 95       	com	r25
 ae4:	80 95       	com	r24
 ae6:	70 95       	com	r23
 ae8:	61 95       	neg	r22
 aea:	7f 4f       	sbci	r23, 0xFF	; 255
 aec:	8f 4f       	sbci	r24, 0xFF	; 255
 aee:	9f 4f       	sbci	r25, 0xFF	; 255
 af0:	f0 68       	ori	r31, 0x80	; 128
 af2:	3f 2e       	mov	r3, r31
 af4:	2a e0       	ldi	r18, 0x0A	; 10
 af6:	30 e0       	ldi	r19, 0x00	; 0
 af8:	a3 01       	movw	r20, r6
 afa:	33 d1       	rcall	.+614    	; 0xd62 <__ultoa_invert>
 afc:	88 2e       	mov	r8, r24
 afe:	86 18       	sub	r8, r6
 b00:	44 c0       	rjmp	.+136    	; 0xb8a <vfprintf+0x2c6>
 b02:	85 37       	cpi	r24, 0x75	; 117
 b04:	31 f4       	brne	.+12     	; 0xb12 <vfprintf+0x24e>
 b06:	23 2d       	mov	r18, r3
 b08:	2f 7e       	andi	r18, 0xEF	; 239
 b0a:	b2 2e       	mov	r11, r18
 b0c:	2a e0       	ldi	r18, 0x0A	; 10
 b0e:	30 e0       	ldi	r19, 0x00	; 0
 b10:	25 c0       	rjmp	.+74     	; 0xb5c <vfprintf+0x298>
 b12:	93 2d       	mov	r25, r3
 b14:	99 7f       	andi	r25, 0xF9	; 249
 b16:	b9 2e       	mov	r11, r25
 b18:	8f 36       	cpi	r24, 0x6F	; 111
 b1a:	c1 f0       	breq	.+48     	; 0xb4c <vfprintf+0x288>
 b1c:	18 f4       	brcc	.+6      	; 0xb24 <vfprintf+0x260>
 b1e:	88 35       	cpi	r24, 0x58	; 88
 b20:	79 f0       	breq	.+30     	; 0xb40 <vfprintf+0x27c>
 b22:	ae c0       	rjmp	.+348    	; 0xc80 <vfprintf+0x3bc>
 b24:	80 37       	cpi	r24, 0x70	; 112
 b26:	19 f0       	breq	.+6      	; 0xb2e <vfprintf+0x26a>
 b28:	88 37       	cpi	r24, 0x78	; 120
 b2a:	21 f0       	breq	.+8      	; 0xb34 <vfprintf+0x270>
 b2c:	a9 c0       	rjmp	.+338    	; 0xc80 <vfprintf+0x3bc>
 b2e:	e9 2f       	mov	r30, r25
 b30:	e0 61       	ori	r30, 0x10	; 16
 b32:	be 2e       	mov	r11, r30
 b34:	b4 fe       	sbrs	r11, 4
 b36:	0d c0       	rjmp	.+26     	; 0xb52 <vfprintf+0x28e>
 b38:	fb 2d       	mov	r31, r11
 b3a:	f4 60       	ori	r31, 0x04	; 4
 b3c:	bf 2e       	mov	r11, r31
 b3e:	09 c0       	rjmp	.+18     	; 0xb52 <vfprintf+0x28e>
 b40:	34 fe       	sbrs	r3, 4
 b42:	0a c0       	rjmp	.+20     	; 0xb58 <vfprintf+0x294>
 b44:	29 2f       	mov	r18, r25
 b46:	26 60       	ori	r18, 0x06	; 6
 b48:	b2 2e       	mov	r11, r18
 b4a:	06 c0       	rjmp	.+12     	; 0xb58 <vfprintf+0x294>
 b4c:	28 e0       	ldi	r18, 0x08	; 8
 b4e:	30 e0       	ldi	r19, 0x00	; 0
 b50:	05 c0       	rjmp	.+10     	; 0xb5c <vfprintf+0x298>
 b52:	20 e1       	ldi	r18, 0x10	; 16
 b54:	30 e0       	ldi	r19, 0x00	; 0
 b56:	02 c0       	rjmp	.+4      	; 0xb5c <vfprintf+0x298>
 b58:	20 e1       	ldi	r18, 0x10	; 16
 b5a:	32 e0       	ldi	r19, 0x02	; 2
 b5c:	f8 01       	movw	r30, r16
 b5e:	b7 fe       	sbrs	r11, 7
 b60:	07 c0       	rjmp	.+14     	; 0xb70 <vfprintf+0x2ac>
 b62:	60 81       	ld	r22, Z
 b64:	71 81       	ldd	r23, Z+1	; 0x01
 b66:	82 81       	ldd	r24, Z+2	; 0x02
 b68:	93 81       	ldd	r25, Z+3	; 0x03
 b6a:	0c 5f       	subi	r16, 0xFC	; 252
 b6c:	1f 4f       	sbci	r17, 0xFF	; 255
 b6e:	06 c0       	rjmp	.+12     	; 0xb7c <vfprintf+0x2b8>
 b70:	60 81       	ld	r22, Z
 b72:	71 81       	ldd	r23, Z+1	; 0x01
 b74:	80 e0       	ldi	r24, 0x00	; 0
 b76:	90 e0       	ldi	r25, 0x00	; 0
 b78:	0e 5f       	subi	r16, 0xFE	; 254
 b7a:	1f 4f       	sbci	r17, 0xFF	; 255
 b7c:	a3 01       	movw	r20, r6
 b7e:	f1 d0       	rcall	.+482    	; 0xd62 <__ultoa_invert>
 b80:	88 2e       	mov	r8, r24
 b82:	86 18       	sub	r8, r6
 b84:	fb 2d       	mov	r31, r11
 b86:	ff 77       	andi	r31, 0x7F	; 127
 b88:	3f 2e       	mov	r3, r31
 b8a:	36 fe       	sbrs	r3, 6
 b8c:	0d c0       	rjmp	.+26     	; 0xba8 <vfprintf+0x2e4>
 b8e:	23 2d       	mov	r18, r3
 b90:	2e 7f       	andi	r18, 0xFE	; 254
 b92:	a2 2e       	mov	r10, r18
 b94:	89 14       	cp	r8, r9
 b96:	58 f4       	brcc	.+22     	; 0xbae <vfprintf+0x2ea>
 b98:	34 fe       	sbrs	r3, 4
 b9a:	0b c0       	rjmp	.+22     	; 0xbb2 <vfprintf+0x2ee>
 b9c:	32 fc       	sbrc	r3, 2
 b9e:	09 c0       	rjmp	.+18     	; 0xbb2 <vfprintf+0x2ee>
 ba0:	83 2d       	mov	r24, r3
 ba2:	8e 7e       	andi	r24, 0xEE	; 238
 ba4:	a8 2e       	mov	r10, r24
 ba6:	05 c0       	rjmp	.+10     	; 0xbb2 <vfprintf+0x2ee>
 ba8:	b8 2c       	mov	r11, r8
 baa:	a3 2c       	mov	r10, r3
 bac:	03 c0       	rjmp	.+6      	; 0xbb4 <vfprintf+0x2f0>
 bae:	b8 2c       	mov	r11, r8
 bb0:	01 c0       	rjmp	.+2      	; 0xbb4 <vfprintf+0x2f0>
 bb2:	b9 2c       	mov	r11, r9
 bb4:	a4 fe       	sbrs	r10, 4
 bb6:	0f c0       	rjmp	.+30     	; 0xbd6 <vfprintf+0x312>
 bb8:	fe 01       	movw	r30, r28
 bba:	e8 0d       	add	r30, r8
 bbc:	f1 1d       	adc	r31, r1
 bbe:	80 81       	ld	r24, Z
 bc0:	80 33       	cpi	r24, 0x30	; 48
 bc2:	21 f4       	brne	.+8      	; 0xbcc <vfprintf+0x308>
 bc4:	9a 2d       	mov	r25, r10
 bc6:	99 7e       	andi	r25, 0xE9	; 233
 bc8:	a9 2e       	mov	r10, r25
 bca:	09 c0       	rjmp	.+18     	; 0xbde <vfprintf+0x31a>
 bcc:	a2 fe       	sbrs	r10, 2
 bce:	06 c0       	rjmp	.+12     	; 0xbdc <vfprintf+0x318>
 bd0:	b3 94       	inc	r11
 bd2:	b3 94       	inc	r11
 bd4:	04 c0       	rjmp	.+8      	; 0xbde <vfprintf+0x31a>
 bd6:	8a 2d       	mov	r24, r10
 bd8:	86 78       	andi	r24, 0x86	; 134
 bda:	09 f0       	breq	.+2      	; 0xbde <vfprintf+0x31a>
 bdc:	b3 94       	inc	r11
 bde:	a3 fc       	sbrc	r10, 3
 be0:	10 c0       	rjmp	.+32     	; 0xc02 <vfprintf+0x33e>
 be2:	a0 fe       	sbrs	r10, 0
 be4:	06 c0       	rjmp	.+12     	; 0xbf2 <vfprintf+0x32e>
 be6:	b2 14       	cp	r11, r2
 be8:	80 f4       	brcc	.+32     	; 0xc0a <vfprintf+0x346>
 bea:	28 0c       	add	r2, r8
 bec:	92 2c       	mov	r9, r2
 bee:	9b 18       	sub	r9, r11
 bf0:	0d c0       	rjmp	.+26     	; 0xc0c <vfprintf+0x348>
 bf2:	b2 14       	cp	r11, r2
 bf4:	58 f4       	brcc	.+22     	; 0xc0c <vfprintf+0x348>
 bf6:	b6 01       	movw	r22, r12
 bf8:	80 e2       	ldi	r24, 0x20	; 32
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	76 d0       	rcall	.+236    	; 0xcea <fputc>
 bfe:	b3 94       	inc	r11
 c00:	f8 cf       	rjmp	.-16     	; 0xbf2 <vfprintf+0x32e>
 c02:	b2 14       	cp	r11, r2
 c04:	18 f4       	brcc	.+6      	; 0xc0c <vfprintf+0x348>
 c06:	2b 18       	sub	r2, r11
 c08:	02 c0       	rjmp	.+4      	; 0xc0e <vfprintf+0x34a>
 c0a:	98 2c       	mov	r9, r8
 c0c:	21 2c       	mov	r2, r1
 c0e:	a4 fe       	sbrs	r10, 4
 c10:	0f c0       	rjmp	.+30     	; 0xc30 <vfprintf+0x36c>
 c12:	b6 01       	movw	r22, r12
 c14:	80 e3       	ldi	r24, 0x30	; 48
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	68 d0       	rcall	.+208    	; 0xcea <fputc>
 c1a:	a2 fe       	sbrs	r10, 2
 c1c:	16 c0       	rjmp	.+44     	; 0xc4a <vfprintf+0x386>
 c1e:	a1 fc       	sbrc	r10, 1
 c20:	03 c0       	rjmp	.+6      	; 0xc28 <vfprintf+0x364>
 c22:	88 e7       	ldi	r24, 0x78	; 120
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	02 c0       	rjmp	.+4      	; 0xc2c <vfprintf+0x368>
 c28:	88 e5       	ldi	r24, 0x58	; 88
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	b6 01       	movw	r22, r12
 c2e:	0c c0       	rjmp	.+24     	; 0xc48 <vfprintf+0x384>
 c30:	8a 2d       	mov	r24, r10
 c32:	86 78       	andi	r24, 0x86	; 134
 c34:	51 f0       	breq	.+20     	; 0xc4a <vfprintf+0x386>
 c36:	a1 fe       	sbrs	r10, 1
 c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x37a>
 c3a:	8b e2       	ldi	r24, 0x2B	; 43
 c3c:	01 c0       	rjmp	.+2      	; 0xc40 <vfprintf+0x37c>
 c3e:	80 e2       	ldi	r24, 0x20	; 32
 c40:	a7 fc       	sbrc	r10, 7
 c42:	8d e2       	ldi	r24, 0x2D	; 45
 c44:	b6 01       	movw	r22, r12
 c46:	90 e0       	ldi	r25, 0x00	; 0
 c48:	50 d0       	rcall	.+160    	; 0xcea <fputc>
 c4a:	89 14       	cp	r8, r9
 c4c:	30 f4       	brcc	.+12     	; 0xc5a <vfprintf+0x396>
 c4e:	b6 01       	movw	r22, r12
 c50:	80 e3       	ldi	r24, 0x30	; 48
 c52:	90 e0       	ldi	r25, 0x00	; 0
 c54:	4a d0       	rcall	.+148    	; 0xcea <fputc>
 c56:	9a 94       	dec	r9
 c58:	f8 cf       	rjmp	.-16     	; 0xc4a <vfprintf+0x386>
 c5a:	8a 94       	dec	r8
 c5c:	f3 01       	movw	r30, r6
 c5e:	e8 0d       	add	r30, r8
 c60:	f1 1d       	adc	r31, r1
 c62:	80 81       	ld	r24, Z
 c64:	b6 01       	movw	r22, r12
 c66:	90 e0       	ldi	r25, 0x00	; 0
 c68:	40 d0       	rcall	.+128    	; 0xcea <fputc>
 c6a:	81 10       	cpse	r8, r1
 c6c:	f6 cf       	rjmp	.-20     	; 0xc5a <vfprintf+0x396>
 c6e:	22 20       	and	r2, r2
 c70:	09 f4       	brne	.+2      	; 0xc74 <vfprintf+0x3b0>
 c72:	4e ce       	rjmp	.-868    	; 0x910 <vfprintf+0x4c>
 c74:	b6 01       	movw	r22, r12
 c76:	80 e2       	ldi	r24, 0x20	; 32
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	37 d0       	rcall	.+110    	; 0xcea <fputc>
 c7c:	2a 94       	dec	r2
 c7e:	f7 cf       	rjmp	.-18     	; 0xc6e <vfprintf+0x3aa>
 c80:	f6 01       	movw	r30, r12
 c82:	86 81       	ldd	r24, Z+6	; 0x06
 c84:	97 81       	ldd	r25, Z+7	; 0x07
 c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x3c8>
 c88:	8f ef       	ldi	r24, 0xFF	; 255
 c8a:	9f ef       	ldi	r25, 0xFF	; 255
 c8c:	2b 96       	adiw	r28, 0x0b	; 11
 c8e:	0f b6       	in	r0, 0x3f	; 63
 c90:	f8 94       	cli
 c92:	de bf       	out	0x3e, r29	; 62
 c94:	0f be       	out	0x3f, r0	; 63
 c96:	cd bf       	out	0x3d, r28	; 61
 c98:	df 91       	pop	r29
 c9a:	cf 91       	pop	r28
 c9c:	1f 91       	pop	r17
 c9e:	0f 91       	pop	r16
 ca0:	ff 90       	pop	r15
 ca2:	ef 90       	pop	r14
 ca4:	df 90       	pop	r13
 ca6:	cf 90       	pop	r12
 ca8:	bf 90       	pop	r11
 caa:	af 90       	pop	r10
 cac:	9f 90       	pop	r9
 cae:	8f 90       	pop	r8
 cb0:	7f 90       	pop	r7
 cb2:	6f 90       	pop	r6
 cb4:	5f 90       	pop	r5
 cb6:	4f 90       	pop	r4
 cb8:	3f 90       	pop	r3
 cba:	2f 90       	pop	r2
 cbc:	08 95       	ret

00000cbe <strnlen_P>:
 cbe:	fc 01       	movw	r30, r24
 cc0:	05 90       	lpm	r0, Z+
 cc2:	61 50       	subi	r22, 0x01	; 1
 cc4:	70 40       	sbci	r23, 0x00	; 0
 cc6:	01 10       	cpse	r0, r1
 cc8:	d8 f7       	brcc	.-10     	; 0xcc0 <strnlen_P+0x2>
 cca:	80 95       	com	r24
 ccc:	90 95       	com	r25
 cce:	8e 0f       	add	r24, r30
 cd0:	9f 1f       	adc	r25, r31
 cd2:	08 95       	ret

00000cd4 <strnlen>:
 cd4:	fc 01       	movw	r30, r24
 cd6:	61 50       	subi	r22, 0x01	; 1
 cd8:	70 40       	sbci	r23, 0x00	; 0
 cda:	01 90       	ld	r0, Z+
 cdc:	01 10       	cpse	r0, r1
 cde:	d8 f7       	brcc	.-10     	; 0xcd6 <strnlen+0x2>
 ce0:	80 95       	com	r24
 ce2:	90 95       	com	r25
 ce4:	8e 0f       	add	r24, r30
 ce6:	9f 1f       	adc	r25, r31
 ce8:	08 95       	ret

00000cea <fputc>:
 cea:	0f 93       	push	r16
 cec:	1f 93       	push	r17
 cee:	cf 93       	push	r28
 cf0:	df 93       	push	r29
 cf2:	fb 01       	movw	r30, r22
 cf4:	23 81       	ldd	r18, Z+3	; 0x03
 cf6:	21 fd       	sbrc	r18, 1
 cf8:	03 c0       	rjmp	.+6      	; 0xd00 <fputc+0x16>
 cfa:	8f ef       	ldi	r24, 0xFF	; 255
 cfc:	9f ef       	ldi	r25, 0xFF	; 255
 cfe:	2c c0       	rjmp	.+88     	; 0xd58 <fputc+0x6e>
 d00:	22 ff       	sbrs	r18, 2
 d02:	16 c0       	rjmp	.+44     	; 0xd30 <fputc+0x46>
 d04:	46 81       	ldd	r20, Z+6	; 0x06
 d06:	57 81       	ldd	r21, Z+7	; 0x07
 d08:	24 81       	ldd	r18, Z+4	; 0x04
 d0a:	35 81       	ldd	r19, Z+5	; 0x05
 d0c:	42 17       	cp	r20, r18
 d0e:	53 07       	cpc	r21, r19
 d10:	44 f4       	brge	.+16     	; 0xd22 <fputc+0x38>
 d12:	a0 81       	ld	r26, Z
 d14:	b1 81       	ldd	r27, Z+1	; 0x01
 d16:	9d 01       	movw	r18, r26
 d18:	2f 5f       	subi	r18, 0xFF	; 255
 d1a:	3f 4f       	sbci	r19, 0xFF	; 255
 d1c:	31 83       	std	Z+1, r19	; 0x01
 d1e:	20 83       	st	Z, r18
 d20:	8c 93       	st	X, r24
 d22:	26 81       	ldd	r18, Z+6	; 0x06
 d24:	37 81       	ldd	r19, Z+7	; 0x07
 d26:	2f 5f       	subi	r18, 0xFF	; 255
 d28:	3f 4f       	sbci	r19, 0xFF	; 255
 d2a:	37 83       	std	Z+7, r19	; 0x07
 d2c:	26 83       	std	Z+6, r18	; 0x06
 d2e:	14 c0       	rjmp	.+40     	; 0xd58 <fputc+0x6e>
 d30:	8b 01       	movw	r16, r22
 d32:	ec 01       	movw	r28, r24
 d34:	fb 01       	movw	r30, r22
 d36:	00 84       	ldd	r0, Z+8	; 0x08
 d38:	f1 85       	ldd	r31, Z+9	; 0x09
 d3a:	e0 2d       	mov	r30, r0
 d3c:	19 95       	eicall
 d3e:	89 2b       	or	r24, r25
 d40:	e1 f6       	brne	.-72     	; 0xcfa <fputc+0x10>
 d42:	d8 01       	movw	r26, r16
 d44:	16 96       	adiw	r26, 0x06	; 6
 d46:	8d 91       	ld	r24, X+
 d48:	9c 91       	ld	r25, X
 d4a:	17 97       	sbiw	r26, 0x07	; 7
 d4c:	01 96       	adiw	r24, 0x01	; 1
 d4e:	17 96       	adiw	r26, 0x07	; 7
 d50:	9c 93       	st	X, r25
 d52:	8e 93       	st	-X, r24
 d54:	16 97       	sbiw	r26, 0x06	; 6
 d56:	ce 01       	movw	r24, r28
 d58:	df 91       	pop	r29
 d5a:	cf 91       	pop	r28
 d5c:	1f 91       	pop	r17
 d5e:	0f 91       	pop	r16
 d60:	08 95       	ret

00000d62 <__ultoa_invert>:
 d62:	fa 01       	movw	r30, r20
 d64:	aa 27       	eor	r26, r26
 d66:	28 30       	cpi	r18, 0x08	; 8
 d68:	51 f1       	breq	.+84     	; 0xdbe <__ultoa_invert+0x5c>
 d6a:	20 31       	cpi	r18, 0x10	; 16
 d6c:	81 f1       	breq	.+96     	; 0xdce <__ultoa_invert+0x6c>
 d6e:	e8 94       	clt
 d70:	6f 93       	push	r22
 d72:	6e 7f       	andi	r22, 0xFE	; 254
 d74:	6e 5f       	subi	r22, 0xFE	; 254
 d76:	7f 4f       	sbci	r23, 0xFF	; 255
 d78:	8f 4f       	sbci	r24, 0xFF	; 255
 d7a:	9f 4f       	sbci	r25, 0xFF	; 255
 d7c:	af 4f       	sbci	r26, 0xFF	; 255
 d7e:	b1 e0       	ldi	r27, 0x01	; 1
 d80:	3e d0       	rcall	.+124    	; 0xdfe <__ultoa_invert+0x9c>
 d82:	b4 e0       	ldi	r27, 0x04	; 4
 d84:	3c d0       	rcall	.+120    	; 0xdfe <__ultoa_invert+0x9c>
 d86:	67 0f       	add	r22, r23
 d88:	78 1f       	adc	r23, r24
 d8a:	89 1f       	adc	r24, r25
 d8c:	9a 1f       	adc	r25, r26
 d8e:	a1 1d       	adc	r26, r1
 d90:	68 0f       	add	r22, r24
 d92:	79 1f       	adc	r23, r25
 d94:	8a 1f       	adc	r24, r26
 d96:	91 1d       	adc	r25, r1
 d98:	a1 1d       	adc	r26, r1
 d9a:	6a 0f       	add	r22, r26
 d9c:	71 1d       	adc	r23, r1
 d9e:	81 1d       	adc	r24, r1
 da0:	91 1d       	adc	r25, r1
 da2:	a1 1d       	adc	r26, r1
 da4:	20 d0       	rcall	.+64     	; 0xde6 <__ultoa_invert+0x84>
 da6:	09 f4       	brne	.+2      	; 0xdaa <__ultoa_invert+0x48>
 da8:	68 94       	set
 daa:	3f 91       	pop	r19
 dac:	2a e0       	ldi	r18, 0x0A	; 10
 dae:	26 9f       	mul	r18, r22
 db0:	11 24       	eor	r1, r1
 db2:	30 19       	sub	r19, r0
 db4:	30 5d       	subi	r19, 0xD0	; 208
 db6:	31 93       	st	Z+, r19
 db8:	de f6       	brtc	.-74     	; 0xd70 <__ultoa_invert+0xe>
 dba:	cf 01       	movw	r24, r30
 dbc:	08 95       	ret
 dbe:	46 2f       	mov	r20, r22
 dc0:	47 70       	andi	r20, 0x07	; 7
 dc2:	40 5d       	subi	r20, 0xD0	; 208
 dc4:	41 93       	st	Z+, r20
 dc6:	b3 e0       	ldi	r27, 0x03	; 3
 dc8:	0f d0       	rcall	.+30     	; 0xde8 <__ultoa_invert+0x86>
 dca:	c9 f7       	brne	.-14     	; 0xdbe <__ultoa_invert+0x5c>
 dcc:	f6 cf       	rjmp	.-20     	; 0xdba <__ultoa_invert+0x58>
 dce:	46 2f       	mov	r20, r22
 dd0:	4f 70       	andi	r20, 0x0F	; 15
 dd2:	40 5d       	subi	r20, 0xD0	; 208
 dd4:	4a 33       	cpi	r20, 0x3A	; 58
 dd6:	18 f0       	brcs	.+6      	; 0xdde <__ultoa_invert+0x7c>
 dd8:	49 5d       	subi	r20, 0xD9	; 217
 dda:	31 fd       	sbrc	r19, 1
 ddc:	40 52       	subi	r20, 0x20	; 32
 dde:	41 93       	st	Z+, r20
 de0:	02 d0       	rcall	.+4      	; 0xde6 <__ultoa_invert+0x84>
 de2:	a9 f7       	brne	.-22     	; 0xdce <__ultoa_invert+0x6c>
 de4:	ea cf       	rjmp	.-44     	; 0xdba <__ultoa_invert+0x58>
 de6:	b4 e0       	ldi	r27, 0x04	; 4
 de8:	a6 95       	lsr	r26
 dea:	97 95       	ror	r25
 dec:	87 95       	ror	r24
 dee:	77 95       	ror	r23
 df0:	67 95       	ror	r22
 df2:	ba 95       	dec	r27
 df4:	c9 f7       	brne	.-14     	; 0xde8 <__ultoa_invert+0x86>
 df6:	00 97       	sbiw	r24, 0x00	; 0
 df8:	61 05       	cpc	r22, r1
 dfa:	71 05       	cpc	r23, r1
 dfc:	08 95       	ret
 dfe:	9b 01       	movw	r18, r22
 e00:	ac 01       	movw	r20, r24
 e02:	0a 2e       	mov	r0, r26
 e04:	06 94       	lsr	r0
 e06:	57 95       	ror	r21
 e08:	47 95       	ror	r20
 e0a:	37 95       	ror	r19
 e0c:	27 95       	ror	r18
 e0e:	ba 95       	dec	r27
 e10:	c9 f7       	brne	.-14     	; 0xe04 <__ultoa_invert+0xa2>
 e12:	62 0f       	add	r22, r18
 e14:	73 1f       	adc	r23, r19
 e16:	84 1f       	adc	r24, r20
 e18:	95 1f       	adc	r25, r21
 e1a:	a0 1d       	adc	r26, r0
 e1c:	08 95       	ret

00000e1e <_exit>:
 e1e:	f8 94       	cli

00000e20 <__stop_program>:
 e20:	ff cf       	rjmp	.-2      	; 0xe20 <__stop_program>
