
Pruefung_loetstation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008e  00800200  00000f0e  00000fa2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  0080028e  0080028e  00001030  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001030  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000108c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  000010cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002682  00000000  00000000  000012bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fc9  00000000  00000000  0000393e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016de  00000000  00000000  00004907  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000694  00000000  00000000  00005fe8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d23  00000000  00000000  0000667c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e51  00000000  00000000  0000739f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  000091f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	f7 c3       	rjmp	.+2030   	; 0x84c <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e0       	ldi	r30, 0x0E	; 14
  fc:	ff e0       	ldi	r31, 0x0F	; 15
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 38       	cpi	r26, 0x8E	; 142
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ae e8       	ldi	r26, 0x8E	; 142
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 30       	cpi	r26, 0x0C	; 12
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	f4 c6       	rjmp	.+3560   	; 0xf0a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#define     OUTTEMP             0X3F
#define     SYSTEMTAKT          10


int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	6b 97       	sbiw	r28, 0x1b	; 27
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
    initBoard(0);
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	22 d2       	rcall	.+1092   	; 0x580 <initBoard>
    uint8_t ledout=0;
    uint8_t gray_to_hex[16]=
 13c:	80 e1       	ldi	r24, 0x10	; 16
 13e:	e0 e0       	ldi	r30, 0x00	; 0
 140:	f2 e0       	ldi	r31, 0x02	; 2
 142:	de 01       	movw	r26, r28
 144:	11 96       	adiw	r26, 0x01	; 1
 146:	01 90       	ld	r0, Z+
 148:	0d 92       	st	X+, r0
 14a:	8a 95       	dec	r24
 14c:	e1 f7       	brne	.-8      	; 0x146 <main+0x22>
        8,
        9,
        11,
        10
    };
    uint8_t hex_to_LED[11]=
 14e:	8b e0       	ldi	r24, 0x0B	; 11
 150:	e0 e1       	ldi	r30, 0x10	; 16
 152:	f2 e0       	ldi	r31, 0x02	; 2
 154:	de 01       	movw	r26, r28
 156:	51 96       	adiw	r26, 0x11	; 17
 158:	01 90       	ld	r0, Z+
 15a:	0d 92       	st	X+, r0
 15c:	8a 95       	dec	r24
 15e:	e1 f7       	brne	.-8      	; 0x158 <main+0x34>
    uint8_t tindown=0;
    uint8_t alttinup=0;
    uint8_t alttindown=0;
    uint8_t intemp=0;
    uint8_t idealtemp=0;
    uint32_t blinktakt=0;
 160:	81 2c       	mov	r8, r1
 162:	91 2c       	mov	r9, r1
 164:	54 01       	movw	r10, r8
    uint8_t tinup=0;
    uint8_t tindown=0;
    uint8_t alttinup=0;
    uint8_t alttindown=0;
    uint8_t intemp=0;
    uint8_t idealtemp=0;
 166:	c1 2c       	mov	r12, r1
    };
    uint8_t swin=0;
    uint8_t tin=0;
    uint8_t inpow=0;
    uint8_t tinup=0;
    uint8_t tindown=0;
 168:	61 2c       	mov	r6, r1
        0x20,
    };
    uint8_t swin=0;
    uint8_t tin=0;
    uint8_t inpow=0;
    uint8_t tinup=0;
 16a:	71 2c       	mov	r7, r1
        0x30,
        0x20,
    };
    uint8_t swin=0;
    uint8_t tin=0;
    uint8_t inpow=0;
 16c:	d1 2c       	mov	r13, r1
    uint8_t heat=0;
    uint8_t power=0;
    
    while (1) 
    {
        if (blinktakt>BLINKPERIOD)
 16e:	81 ed       	ldi	r24, 0xD1	; 209
 170:	88 16       	cp	r8, r24
 172:	87 e0       	ldi	r24, 0x07	; 7
 174:	98 06       	cpc	r9, r24
 176:	a1 04       	cpc	r10, r1
 178:	b1 04       	cpc	r11, r1
 17a:	18 f0       	brcs	.+6      	; 0x182 <main+0x5e>
        {
            blinktakt=0;
 17c:	81 2c       	mov	r8, r1
 17e:	91 2c       	mov	r9, r1
        }
        alttindown=tindown;
        alttinup=tinup;
        altinpow=inpow;
        swin=switchReadAll();
 180:	54 01       	movw	r10, r8
 182:	8a d0       	rcall	.+276    	; 0x298 <switchReadAll>
        tin=buttonReadAllPL();
 184:	18 2f       	mov	r17, r24
 186:	8a d0       	rcall	.+276    	; 0x29c <buttonReadAllPL>
        tinup=tin&INUP;
 188:	98 2f       	mov	r25, r24
 18a:	91 70       	andi	r25, 0x01	; 1
 18c:	e9 2e       	mov	r14, r25
        tindown=tin&INDOWN;
 18e:	82 70       	andi	r24, 0x02	; 2
 190:	f8 2e       	mov	r15, r24
        inpow=swin&INPOW;
 192:	01 2f       	mov	r16, r17
 194:	00 78       	andi	r16, 0x80	; 128
        intemp=swin&INTEMP;
 196:	1f 70       	andi	r17, 0x0F	; 15
        
        if (inpow>altinpow)
 198:	d0 16       	cp	r13, r16
 19a:	38 f4       	brcc	.+14     	; 0x1aa <main+0x86>
        {
            idealtemp=35;
            blinktakt=0;
 19c:	81 2c       	mov	r8, r1
 19e:	91 2c       	mov	r9, r1
 1a0:	54 01       	movw	r10, r8
        inpow=swin&INPOW;
        intemp=swin&INTEMP;
        
        if (inpow>altinpow)
        {
            idealtemp=35;
 1a2:	0f 2e       	mov	r0, r31
 1a4:	f3 e2       	ldi	r31, 0x23	; 35
 1a6:	cf 2e       	mov	r12, r31
 1a8:	f0 2d       	mov	r31, r0
            blinktakt=0;
        }
        if (inpow)
 1aa:	00 23       	and	r16, r16
 1ac:	09 f4       	brne	.+2      	; 0x1b0 <main+0x8c>
 1ae:	51 c0       	rjmp	.+162    	; 0x252 <main+0x12e>
        {
            intemp=gray_to_hex[intemp];
 1b0:	e1 e0       	ldi	r30, 0x01	; 1
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	ec 0f       	add	r30, r28
 1b6:	fd 1f       	adc	r31, r29
 1b8:	e1 0f       	add	r30, r17
 1ba:	f1 1d       	adc	r31, r1
 1bc:	80 81       	ld	r24, Z
            istemp=intemp+28;
 1be:	9c e1       	ldi	r25, 0x1C	; 28
 1c0:	98 0f       	add	r25, r24
            if (intemp)
 1c2:	88 23       	and	r24, r24
 1c4:	d9 f1       	breq	.+118    	; 0x23c <main+0x118>
            {
                if (idealtemp>31&&(tindown>alttindown))
 1c6:	8f e1       	ldi	r24, 0x1F	; 31
 1c8:	8c 15       	cp	r24, r12
 1ca:	18 f4       	brcc	.+6      	; 0x1d2 <main+0xae>
 1cc:	6f 14       	cp	r6, r15
 1ce:	08 f4       	brcc	.+2      	; 0x1d2 <main+0xae>
                {
                    idealtemp=idealtemp-1;
 1d0:	ca 94       	dec	r12
                } 
                if (idealtemp<41&&(tinup>alttinup))
 1d2:	88 e2       	ldi	r24, 0x28	; 40
 1d4:	8c 15       	cp	r24, r12
 1d6:	18 f0       	brcs	.+6      	; 0x1de <main+0xba>
 1d8:	7e 14       	cp	r7, r14
 1da:	08 f4       	brcc	.+2      	; 0x1de <main+0xba>
                {
                    idealtemp=idealtemp+1;
 1dc:	c3 94       	inc	r12
                }
                if (istemp<idealtemp)
 1de:	9c 15       	cp	r25, r12
 1e0:	10 f4       	brcc	.+4      	; 0x1e6 <main+0xc2>
                {
                    heat=OUTHEAT;
 1e2:	10 e4       	ldi	r17, 0x40	; 64
 1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <main+0xc4>
                }
                else
                {
                    heat=0;
 1e6:	10 e0       	ldi	r17, 0x00	; 0
                }
                if ((idealtemp<42)&&(idealtemp>30))
 1e8:	81 ee       	ldi	r24, 0xE1	; 225
 1ea:	8c 0d       	add	r24, r12
 1ec:	8b 30       	cpi	r24, 0x0B	; 11
 1ee:	a8 f5       	brcc	.+106    	; 0x25a <main+0x136>
                {
                     if (idealtemp==istemp)
 1f0:	c9 12       	cpse	r12, r25
 1f2:	0c c0       	rjmp	.+24     	; 0x20c <main+0xe8>
                     {
                         outtemp=hex_to_LED[idealtemp-31];
 1f4:	ec 2d       	mov	r30, r12
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	7f 97       	sbiw	r30, 0x1f	; 31
 1fa:	81 e1       	ldi	r24, 0x11	; 17
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	8c 0f       	add	r24, r28
 200:	9d 1f       	adc	r25, r29
 202:	e8 0f       	add	r30, r24
 204:	f9 1f       	adc	r31, r25
 206:	80 81       	ld	r24, Z
                {
                    outtemp=0;
                }
                heat=0;
            }
            power=OUTPOW;
 208:	90 e8       	ldi	r25, 0x80	; 128
 20a:	30 c0       	rjmp	.+96     	; 0x26c <main+0x148>
                     {
                         outtemp=hex_to_LED[idealtemp-31];
                     }
                     else
                     {
                         if ((blinktakt%(BLINKPERIOD/4))<BLINKPERIOD/8)
 20c:	c5 01       	movw	r24, r10
 20e:	b4 01       	movw	r22, r8
 210:	24 ef       	ldi	r18, 0xF4	; 244
 212:	31 e0       	ldi	r19, 0x01	; 1
 214:	40 e0       	ldi	r20, 0x00	; 0
 216:	50 e0       	ldi	r21, 0x00	; 0
 218:	65 d3       	rcall	.+1738   	; 0x8e4 <__udivmodsi4>
 21a:	6a 3f       	cpi	r22, 0xFA	; 250
 21c:	71 05       	cpc	r23, r1
 21e:	81 05       	cpc	r24, r1
 220:	91 05       	cpc	r25, r1
 222:	f0 f4       	brcc	.+60     	; 0x260 <main+0x13c>
                         {
                             outtemp=hex_to_LED[idealtemp-31];
 224:	ec 2d       	mov	r30, r12
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	7f 97       	sbiw	r30, 0x1f	; 31
 22a:	81 e1       	ldi	r24, 0x11	; 17
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	8c 0f       	add	r24, r28
 230:	9d 1f       	adc	r25, r29
 232:	e8 0f       	add	r30, r24
 234:	f9 1f       	adc	r31, r25
 236:	80 81       	ld	r24, Z
                {
                    outtemp=0;
                }
                heat=0;
            }
            power=OUTPOW;
 238:	90 e8       	ldi	r25, 0x80	; 128
 23a:	18 c0       	rjmp	.+48     	; 0x26c <main+0x148>
                    outtemp=0x00;
                }
            }            
            else
            {
                if (blinktakt<BLINKPERIOD/2)
 23c:	98 ee       	ldi	r25, 0xE8	; 232
 23e:	89 16       	cp	r8, r25
 240:	93 e0       	ldi	r25, 0x03	; 3
 242:	99 06       	cpc	r9, r25
 244:	a1 04       	cpc	r10, r1
 246:	b1 04       	cpc	r11, r1
 248:	70 f4       	brcc	.+28     	; 0x266 <main+0x142>
                {
                    outtemp=0;
                }
                heat=0;
            }
            power=OUTPOW;
 24a:	90 e8       	ldi	r25, 0x80	; 128
                } 
                else
                {
                    outtemp=0;
                }
                heat=0;
 24c:	10 e0       	ldi	r17, 0x00	; 0
            }            
            else
            {
                if (blinktakt<BLINKPERIOD/2)
                {
                    outtemp=OUTTEMP;
 24e:	8f e3       	ldi	r24, 0x3F	; 63
 250:	0d c0       	rjmp	.+26     	; 0x26c <main+0x148>
        } 
        else
        {
            outtemp=0;
            heat=0;
            power=0;
 252:	90 e0       	ldi	r25, 0x00	; 0
            power=OUTPOW;
        } 
        else
        {
            outtemp=0;
            heat=0;
 254:	10 e0       	ldi	r17, 0x00	; 0
            }
            power=OUTPOW;
        } 
        else
        {
            outtemp=0;
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	09 c0       	rjmp	.+18     	; 0x26c <main+0x148>
                {
                    outtemp=0;
                }
                heat=0;
            }
            power=OUTPOW;
 25a:	90 e8       	ldi	r25, 0x80	; 128
                         }
                     }
                }                 
                else
                {
                    outtemp=0x00;
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	06 c0       	rjmp	.+12     	; 0x26c <main+0x148>
                {
                    outtemp=0;
                }
                heat=0;
            }
            power=OUTPOW;
 260:	90 e8       	ldi	r25, 0x80	; 128
                         {
                             outtemp=hex_to_LED[idealtemp-31];
                         }
                         else
                         {
                             outtemp=0;
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	03 c0       	rjmp	.+6      	; 0x26c <main+0x148>
                {
                    outtemp=0;
                }
                heat=0;
            }
            power=OUTPOW;
 266:	90 e8       	ldi	r25, 0x80	; 128
                } 
                else
                {
                    outtemp=0;
                }
                heat=0;
 268:	10 e0       	ldi	r17, 0x00	; 0
        {
            outtemp=0;
            heat=0;
            power=0;
        }
        ledout= outtemp|power|heat;
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	89 2b       	or	r24, r25
        ledWriteAll(ledout);
 26e:	81 2b       	or	r24, r17
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0f d0       	rcall	.+30     	; 0x292 <ledWriteAll>
        blinktakt=blinktakt+SYSTEMTAKT;
 274:	8a e0       	ldi	r24, 0x0A	; 10
 276:	88 0e       	add	r8, r24
 278:	91 1c       	adc	r9, r1
 27a:	a1 1c       	adc	r10, r1
 27c:	b1 1c       	adc	r11, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 27e:	8f e3       	ldi	r24, 0x3F	; 63
 280:	9c e9       	ldi	r25, 0x9C	; 156
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <main+0x15e>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x164>
 288:	00 00       	nop
        alttinup=tinup;
        altinpow=inpow;
        swin=switchReadAll();
        tin=buttonReadAllPL();
        tinup=tin&INUP;
        tindown=tin&INDOWN;
 28a:	6f 2c       	mov	r6, r15
        alttindown=tindown;
        alttinup=tinup;
        altinpow=inpow;
        swin=switchReadAll();
        tin=buttonReadAllPL();
        tinup=tin&INUP;
 28c:	7e 2c       	mov	r7, r14
        tindown=tin&INDOWN;
        inpow=swin&INPOW;
 28e:	d0 2e       	mov	r13, r16
 290:	6e cf       	rjmp	.-292    	; 0x16e <main+0x4a>

00000292 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 292:	82 b9       	out	0x02, r24	; 2
 294:	95 b9       	out	0x05, r25	; 5
 296:	08 95       	ret

00000298 <switchReadAll>:
 298:	86 b1       	in	r24, 0x06	; 6
 29a:	08 95       	ret

0000029c <buttonReadAllPL>:
 29c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 2a0:	08 95       	ret

000002a2 <startSystemTimeMs>:
 2a2:	83 e0       	ldi	r24, 0x03	; 3
 2a4:	84 bd       	out	0x24, r24	; 36
 2a6:	8b e0       	ldi	r24, 0x0B	; 11
 2a8:	85 bd       	out	0x25, r24	; 37
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 2b0:	89 ef       	ldi	r24, 0xF9	; 249
 2b2:	87 bd       	out	0x27, r24	; 39
 2b4:	08 95       	ret

000002b6 <initAdc>:
 2b6:	11 ba       	out	0x11, r1	; 17
 2b8:	10 ba       	out	0x10, r1	; 16
 2ba:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 2be:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 2c2:	80 e4       	ldi	r24, 0x40	; 64
 2c4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 2c8:	8f e0       	ldi	r24, 0x0F	; 15
 2ca:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 2ce:	8f ef       	ldi	r24, 0xFF	; 255
 2d0:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 2d4:	ea e7       	ldi	r30, 0x7A	; 122
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	87 ea       	ldi	r24, 0xA7	; 167
 2da:	80 83       	st	Z, r24
 2dc:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 2e0:	80 81       	ld	r24, Z
 2e2:	80 64       	ori	r24, 0x40	; 64
 2e4:	80 83       	st	Z, r24
 2e6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 2ea:	84 ff       	sbrs	r24, 4
 2ec:	fc cf       	rjmp	.-8      	; 0x2e6 <initAdc+0x30>
 2ee:	ea e7       	ldi	r30, 0x7A	; 122
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	8f 7e       	andi	r24, 0xEF	; 239
 2f6:	80 83       	st	Z, r24
 2f8:	08 95       	ret

000002fa <rgbWrite>:
 2fa:	2f ef       	ldi	r18, 0xFF	; 255
 2fc:	33 e0       	ldi	r19, 0x03	; 3
 2fe:	f9 01       	movw	r30, r18
 300:	e8 1b       	sub	r30, r24
 302:	f9 0b       	sbc	r31, r25
 304:	c9 01       	movw	r24, r18
 306:	86 1b       	sub	r24, r22
 308:	97 0b       	sbc	r25, r23
 30a:	24 1b       	sub	r18, r20
 30c:	35 0b       	sbc	r19, r21
 30e:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 312:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 316:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 31a:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 31e:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 322:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 326:	08 95       	ret

00000328 <initRgb>:
 328:	8e ef       	ldi	r24, 0xFE	; 254
 32a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 32e:	8b e1       	ldi	r24, 0x1B	; 27
 330:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 334:	83 e0       	ldi	r24, 0x03	; 3
 336:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 33a:	8f ef       	ldi	r24, 0xFF	; 255
 33c:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 340:	40 e0       	ldi	r20, 0x00	; 0
 342:	50 e0       	ldi	r21, 0x00	; 0
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	80 e0       	ldi	r24, 0x00	; 0
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	d6 cf       	rjmp	.-84     	; 0x2fa <rgbWrite>
 34e:	08 95       	ret

00000350 <lcdSid>:
 350:	88 23       	and	r24, r24
 352:	21 f0       	breq	.+8      	; 0x35c <lcdSid+0xc>
 354:	84 b3       	in	r24, 0x14	; 20
 356:	81 60       	ori	r24, 0x01	; 1
 358:	84 bb       	out	0x14, r24	; 20
 35a:	08 95       	ret
 35c:	84 b3       	in	r24, 0x14	; 20
 35e:	8e 7f       	andi	r24, 0xFE	; 254
 360:	84 bb       	out	0x14, r24	; 20
 362:	08 95       	ret

00000364 <lcdSclk>:
 364:	88 23       	and	r24, r24
 366:	21 f0       	breq	.+8      	; 0x370 <lcdSclk+0xc>
 368:	84 b3       	in	r24, 0x14	; 20
 36a:	82 60       	ori	r24, 0x02	; 2
 36c:	84 bb       	out	0x14, r24	; 20
 36e:	08 95       	ret
 370:	84 b3       	in	r24, 0x14	; 20
 372:	8d 7f       	andi	r24, 0xFD	; 253
 374:	84 bb       	out	0x14, r24	; 20
 376:	08 95       	ret

00000378 <lcdLight>:
 378:	81 11       	cpse	r24, r1
 37a:	04 c0       	rjmp	.+8      	; 0x384 <lcdLight+0xc>
 37c:	84 b5       	in	r24, 0x24	; 36
 37e:	8f 7d       	andi	r24, 0xDF	; 223
 380:	84 bd       	out	0x24, r24	; 36
 382:	08 95       	ret
 384:	94 b5       	in	r25, 0x24	; 36
 386:	90 62       	ori	r25, 0x20	; 32
 388:	94 bd       	out	0x24, r25	; 36
 38a:	88 bd       	out	0x28, r24	; 40
 38c:	08 95       	ret

0000038e <writeLcdF>:
 38e:	ef 92       	push	r14
 390:	ff 92       	push	r15
 392:	0f 93       	push	r16
 394:	1f 93       	push	r17
 396:	cf 93       	push	r28
 398:	df 93       	push	r29
 39a:	7c 01       	movw	r14, r24
 39c:	eb 01       	movw	r28, r22
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	d7 df       	rcall	.-82     	; 0x350 <lcdSid>
 3a2:	00 e0       	ldi	r16, 0x00	; 0
 3a4:	10 e0       	ldi	r17, 0x00	; 0
 3a6:	06 c0       	rjmp	.+12     	; 0x3b4 <writeLcdF+0x26>
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	dc df       	rcall	.-72     	; 0x364 <lcdSclk>
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	da df       	rcall	.-76     	; 0x364 <lcdSclk>
 3b0:	0f 5f       	subi	r16, 0xFF	; 255
 3b2:	1f 4f       	sbci	r17, 0xFF	; 255
 3b4:	05 30       	cpi	r16, 0x05	; 5
 3b6:	11 05       	cpc	r17, r1
 3b8:	b8 f3       	brcs	.-18     	; 0x3a8 <writeLcdF+0x1a>
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	c9 df       	rcall	.-110    	; 0x350 <lcdSid>
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	d1 df       	rcall	.-94     	; 0x364 <lcdSclk>
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	cf df       	rcall	.-98     	; 0x364 <lcdSclk>
 3c6:	83 e4       	ldi	r24, 0x43	; 67
 3c8:	e8 16       	cp	r14, r24
 3ca:	f1 04       	cpc	r15, r1
 3cc:	19 f4       	brne	.+6      	; 0x3d4 <writeLcdF+0x46>
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	bf df       	rcall	.-130    	; 0x350 <lcdSid>
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <writeLcdF+0x4a>
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	bc df       	rcall	.-136    	; 0x350 <lcdSid>
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	c4 df       	rcall	.-120    	; 0x364 <lcdSclk>
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	c2 df       	rcall	.-124    	; 0x364 <lcdSclk>
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	b6 df       	rcall	.-148    	; 0x350 <lcdSid>
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	be df       	rcall	.-132    	; 0x364 <lcdSclk>
 3e8:	81 e0       	ldi	r24, 0x01	; 1
 3ea:	bc df       	rcall	.-136    	; 0x364 <lcdSclk>
 3ec:	00 e0       	ldi	r16, 0x00	; 0
 3ee:	10 e0       	ldi	r17, 0x00	; 0
 3f0:	11 c0       	rjmp	.+34     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	b7 df       	rcall	.-146    	; 0x364 <lcdSclk>
 3f6:	c0 ff       	sbrs	r28, 0
 3f8:	03 c0       	rjmp	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	a9 df       	rcall	.-174    	; 0x350 <lcdSid>
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	a6 df       	rcall	.-180    	; 0x350 <lcdSid>
 404:	d6 95       	lsr	r29
 406:	c7 95       	ror	r28
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	ac df       	rcall	.-168    	; 0x364 <lcdSclk>
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	aa df       	rcall	.-172    	; 0x364 <lcdSclk>
 410:	0f 5f       	subi	r16, 0xFF	; 255
 412:	1f 4f       	sbci	r17, 0xFF	; 255
 414:	04 30       	cpi	r16, 0x04	; 4
 416:	11 05       	cpc	r17, r1
 418:	60 f3       	brcs	.-40     	; 0x3f2 <writeLcdF+0x64>
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	99 df       	rcall	.-206    	; 0x350 <lcdSid>
 41e:	00 e0       	ldi	r16, 0x00	; 0
 420:	10 e0       	ldi	r17, 0x00	; 0
 422:	06 c0       	rjmp	.+12     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	9e df       	rcall	.-196    	; 0x364 <lcdSclk>
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	9c df       	rcall	.-200    	; 0x364 <lcdSclk>
 42c:	0f 5f       	subi	r16, 0xFF	; 255
 42e:	1f 4f       	sbci	r17, 0xFF	; 255
 430:	04 30       	cpi	r16, 0x04	; 4
 432:	11 05       	cpc	r17, r1
 434:	b8 f3       	brcs	.-18     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 436:	00 e0       	ldi	r16, 0x00	; 0
 438:	10 e0       	ldi	r17, 0x00	; 0
 43a:	11 c0       	rjmp	.+34     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	92 df       	rcall	.-220    	; 0x364 <lcdSclk>
 440:	c0 ff       	sbrs	r28, 0
 442:	03 c0       	rjmp	.+6      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	84 df       	rcall	.-248    	; 0x350 <lcdSid>
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	81 df       	rcall	.-254    	; 0x350 <lcdSid>
 44e:	d6 95       	lsr	r29
 450:	c7 95       	ror	r28
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	87 df       	rcall	.-242    	; 0x364 <lcdSclk>
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	85 df       	rcall	.-246    	; 0x364 <lcdSclk>
 45a:	0f 5f       	subi	r16, 0xFF	; 255
 45c:	1f 4f       	sbci	r17, 0xFF	; 255
 45e:	04 30       	cpi	r16, 0x04	; 4
 460:	11 05       	cpc	r17, r1
 462:	60 f3       	brcs	.-40     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	74 df       	rcall	.-280    	; 0x350 <lcdSid>
 468:	c0 e0       	ldi	r28, 0x00	; 0
 46a:	d0 e0       	ldi	r29, 0x00	; 0
 46c:	05 c0       	rjmp	.+10     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	79 df       	rcall	.-270    	; 0x364 <lcdSclk>
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	77 df       	rcall	.-274    	; 0x364 <lcdSclk>
 476:	21 96       	adiw	r28, 0x01	; 1
 478:	c4 30       	cpi	r28, 0x04	; 4
 47a:	d1 05       	cpc	r29, r1
 47c:	c0 f3       	brcs	.-16     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	67 df       	rcall	.-306    	; 0x350 <lcdSid>
 482:	87 ec       	ldi	r24, 0xC7	; 199
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	01 97       	sbiw	r24, 0x01	; 1
 488:	f1 f7       	brne	.-4      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 48c:	00 00       	nop
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	1f 91       	pop	r17
 494:	0f 91       	pop	r16
 496:	ff 90       	pop	r15
 498:	ef 90       	pop	r14
 49a:	08 95       	ret

0000049c <lcdWriteText>:
 49c:	1f 93       	push	r17
 49e:	cf 93       	push	r28
 4a0:	df 93       	push	r29
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	65 97       	sbiw	r28, 0x15	; 21
 4a8:	0f b6       	in	r0, 0x3f	; 63
 4aa:	f8 94       	cli
 4ac:	de bf       	out	0x3e, r29	; 62
 4ae:	0f be       	out	0x3f, r0	; 63
 4b0:	cd bf       	out	0x3d, r28	; 61
 4b2:	9e 01       	movw	r18, r28
 4b4:	20 5e       	subi	r18, 0xE0	; 224
 4b6:	3f 4f       	sbci	r19, 0xFF	; 255
 4b8:	4e 8d       	ldd	r20, Y+30	; 0x1e
 4ba:	5f 8d       	ldd	r21, Y+31	; 0x1f
 4bc:	65 e1       	ldi	r22, 0x15	; 21
 4be:	70 e0       	ldi	r23, 0x00	; 0
 4c0:	ce 01       	movw	r24, r28
 4c2:	01 96       	adiw	r24, 0x01	; 1
 4c4:	3d d2       	rcall	.+1146   	; 0x940 <vsnprintf>
 4c6:	6d 8d       	ldd	r22, Y+29	; 0x1d
 4c8:	8c 8d       	ldd	r24, Y+28	; 0x1c
 4ca:	90 e2       	ldi	r25, 0x20	; 32
 4cc:	89 9f       	mul	r24, r25
 4ce:	60 0d       	add	r22, r0
 4d0:	11 24       	eor	r1, r1
 4d2:	60 68       	ori	r22, 0x80	; 128
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	83 e4       	ldi	r24, 0x43	; 67
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	59 df       	rcall	.-334    	; 0x38e <writeLcdF>
 4dc:	10 e0       	ldi	r17, 0x00	; 0
 4de:	05 c0       	rjmp	.+10     	; 0x4ea <lcdWriteText+0x4e>
 4e0:	1f 5f       	subi	r17, 0xFF	; 255
 4e2:	70 e0       	ldi	r23, 0x00	; 0
 4e4:	84 e4       	ldi	r24, 0x44	; 68
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	52 df       	rcall	.-348    	; 0x38e <writeLcdF>
 4ea:	e1 e0       	ldi	r30, 0x01	; 1
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	ec 0f       	add	r30, r28
 4f0:	fd 1f       	adc	r31, r29
 4f2:	e1 0f       	add	r30, r17
 4f4:	f1 1d       	adc	r31, r1
 4f6:	60 81       	ld	r22, Z
 4f8:	61 11       	cpse	r22, r1
 4fa:	f2 cf       	rjmp	.-28     	; 0x4e0 <lcdWriteText+0x44>
 4fc:	65 96       	adiw	r28, 0x15	; 21
 4fe:	0f b6       	in	r0, 0x3f	; 63
 500:	f8 94       	cli
 502:	de bf       	out	0x3e, r29	; 62
 504:	0f be       	out	0x3f, r0	; 63
 506:	cd bf       	out	0x3d, r28	; 61
 508:	df 91       	pop	r29
 50a:	cf 91       	pop	r28
 50c:	1f 91       	pop	r17
 50e:	08 95       	ret

00000510 <lcdClear>:
 510:	61 e0       	ldi	r22, 0x01	; 1
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	83 e4       	ldi	r24, 0x43	; 67
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	3a df       	rcall	.-396    	; 0x38e <writeLcdF>
 51a:	8f e3       	ldi	r24, 0x3F	; 63
 51c:	9f e1       	ldi	r25, 0x1F	; 31
 51e:	01 97       	sbiw	r24, 0x01	; 1
 520:	f1 f7       	brne	.-4      	; 0x51e <lcdClear+0xe>
 522:	00 c0       	rjmp	.+0      	; 0x524 <lcdClear+0x14>
 524:	00 00       	nop
 526:	8b e4       	ldi	r24, 0x4B	; 75
 528:	92 e0       	ldi	r25, 0x02	; 2
 52a:	9f 93       	push	r25
 52c:	8f 93       	push	r24
 52e:	1f 92       	push	r1
 530:	1f 92       	push	r1
 532:	b4 df       	rcall	.-152    	; 0x49c <lcdWriteText>
 534:	0f 90       	pop	r0
 536:	0f 90       	pop	r0
 538:	0f 90       	pop	r0
 53a:	0f 90       	pop	r0
 53c:	08 95       	ret

0000053e <initLcd>:
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	11 df       	rcall	.-478    	; 0x364 <lcdSclk>
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	05 df       	rcall	.-502    	; 0x350 <lcdSid>
 546:	64 e3       	ldi	r22, 0x34	; 52
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	83 e4       	ldi	r24, 0x43	; 67
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	1f df       	rcall	.-450    	; 0x38e <writeLcdF>
 550:	69 e0       	ldi	r22, 0x09	; 9
 552:	70 e0       	ldi	r23, 0x00	; 0
 554:	83 e4       	ldi	r24, 0x43	; 67
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	1a df       	rcall	.-460    	; 0x38e <writeLcdF>
 55a:	60 e3       	ldi	r22, 0x30	; 48
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	83 e4       	ldi	r24, 0x43	; 67
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	15 df       	rcall	.-470    	; 0x38e <writeLcdF>
 564:	6c e0       	ldi	r22, 0x0C	; 12
 566:	70 e0       	ldi	r23, 0x00	; 0
 568:	83 e4       	ldi	r24, 0x43	; 67
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	10 df       	rcall	.-480    	; 0x38e <writeLcdF>
 56e:	d0 df       	rcall	.-96     	; 0x510 <lcdClear>
 570:	67 e0       	ldi	r22, 0x07	; 7
 572:	70 e0       	ldi	r23, 0x00	; 0
 574:	83 e4       	ldi	r24, 0x43	; 67
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	0a df       	rcall	.-492    	; 0x38e <writeLcdF>
 57a:	80 e0       	ldi	r24, 0x00	; 0
 57c:	fd ce       	rjmp	.-518    	; 0x378 <lcdLight>
 57e:	08 95       	ret

00000580 <initBoard>:
 580:	ff 92       	push	r15
 582:	0f 93       	push	r16
 584:	1f 93       	push	r17
 586:	cf 93       	push	r28
 588:	df 93       	push	r29
 58a:	c8 2f       	mov	r28, r24
 58c:	85 b7       	in	r24, 0x35	; 53
 58e:	85 bf       	out	0x35, r24	; 53
 590:	12 b8       	out	0x02, r1	; 2
 592:	8f ef       	ldi	r24, 0xFF	; 255
 594:	81 b9       	out	0x01, r24	; 1
 596:	15 b8       	out	0x05, r1	; 5
 598:	84 b9       	out	0x04, r24	; 4
 59a:	88 b9       	out	0x08, r24	; 8
 59c:	17 b8       	out	0x07, r1	; 7
 59e:	8b b9       	out	0x0b, r24	; 11
 5a0:	1a b8       	out	0x0a, r1	; 10
 5a2:	8e b9       	out	0x0e, r24	; 14
 5a4:	1d b8       	out	0x0d, r1	; 13
 5a6:	9e b1       	in	r25, 0x0e	; 14
 5a8:	9b 7f       	andi	r25, 0xFB	; 251
 5aa:	9e b9       	out	0x0e, r25	; 14
 5ac:	11 ba       	out	0x11, r1	; 17
 5ae:	10 ba       	out	0x10, r1	; 16
 5b0:	94 e0       	ldi	r25, 0x04	; 4
 5b2:	94 bb       	out	0x14, r25	; 20
 5b4:	93 b3       	in	r25, 0x13	; 19
 5b6:	93 60       	ori	r25, 0x03	; 3
 5b8:	93 bb       	out	0x13, r25	; 19
 5ba:	93 b3       	in	r25, 0x13	; 19
 5bc:	90 62       	ori	r25, 0x20	; 32
 5be:	93 bb       	out	0x13, r25	; 19
 5c0:	97 ec       	ldi	r25, 0xC7	; 199
 5c2:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 5c6:	98 e3       	ldi	r25, 0x38	; 56
 5c8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 5cc:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 5d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 5d4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 5d8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 5dc:	8c e3       	ldi	r24, 0x3C	; 60
 5de:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 5e2:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 5e6:	78 94       	sei
 5e8:	5c de       	rcall	.-840    	; 0x2a2 <startSystemTimeMs>
 5ea:	a9 df       	rcall	.-174    	; 0x53e <initLcd>
 5ec:	64 de       	rcall	.-824    	; 0x2b6 <initAdc>
 5ee:	9c de       	rcall	.-712    	; 0x328 <initRgb>
 5f0:	cc 23       	and	r28, r28
 5f2:	09 f4       	brne	.+2      	; 0x5f6 <initBoard+0x76>
 5f4:	a3 c0       	rjmp	.+326    	; 0x73c <initBoard+0x1bc>
 5f6:	8f ef       	ldi	r24, 0xFF	; 255
 5f8:	bf de       	rcall	.-642    	; 0x378 <lcdLight>
 5fa:	40 e0       	ldi	r20, 0x00	; 0
 5fc:	50 e0       	ldi	r21, 0x00	; 0
 5fe:	6f ef       	ldi	r22, 0xFF	; 255
 600:	73 e0       	ldi	r23, 0x03	; 3
 602:	80 e0       	ldi	r24, 0x00	; 0
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	79 de       	rcall	.-782    	; 0x2fa <rgbWrite>
 608:	88 e3       	ldi	r24, 0x38	; 56
 60a:	92 e0       	ldi	r25, 0x02	; 2
 60c:	9f 93       	push	r25
 60e:	8f 93       	push	r24
 610:	1f 92       	push	r1
 612:	1f 92       	push	r1
 614:	43 df       	rcall	.-378    	; 0x49c <lcdWriteText>
 616:	8d e4       	ldi	r24, 0x4D	; 77
 618:	92 e0       	ldi	r25, 0x02	; 2
 61a:	9f 93       	push	r25
 61c:	8f 93       	push	r24
 61e:	1f 92       	push	r1
 620:	81 e0       	ldi	r24, 0x01	; 1
 622:	8f 93       	push	r24
 624:	3b df       	rcall	.-394    	; 0x49c <lcdWriteText>
 626:	83 e2       	ldi	r24, 0x23	; 35
 628:	92 e0       	ldi	r25, 0x02	; 2
 62a:	9f 93       	push	r25
 62c:	8f 93       	push	r24
 62e:	1f 92       	push	r1
 630:	82 e0       	ldi	r24, 0x02	; 2
 632:	8f 93       	push	r24
 634:	33 df       	rcall	.-410    	; 0x49c <lcdWriteText>
 636:	82 e6       	ldi	r24, 0x62	; 98
 638:	92 e0       	ldi	r25, 0x02	; 2
 63a:	9f 93       	push	r25
 63c:	8f 93       	push	r24
 63e:	1f 92       	push	r1
 640:	83 e0       	ldi	r24, 0x03	; 3
 642:	8f 93       	push	r24
 644:	2b df       	rcall	.-426    	; 0x49c <lcdWriteText>
 646:	8d b7       	in	r24, 0x3d	; 61
 648:	9e b7       	in	r25, 0x3e	; 62
 64a:	40 96       	adiw	r24, 0x10	; 16
 64c:	0f b6       	in	r0, 0x3f	; 63
 64e:	f8 94       	cli
 650:	9e bf       	out	0x3e, r25	; 62
 652:	0f be       	out	0x3f, r0	; 63
 654:	8d bf       	out	0x3d, r24	; 61
 656:	ff 24       	eor	r15, r15
 658:	f3 94       	inc	r15
 65a:	c0 e0       	ldi	r28, 0x00	; 0
 65c:	10 e0       	ldi	r17, 0x00	; 0
 65e:	01 e0       	ldi	r16, 0x01	; 1
 660:	d0 e0       	ldi	r29, 0x00	; 0
 662:	00 23       	and	r16, r16
 664:	51 f0       	breq	.+20     	; 0x67a <initBoard+0xfa>
 666:	80 e0       	ldi	r24, 0x00	; 0
 668:	90 e8       	ldi	r25, 0x80	; 128
 66a:	0d 2e       	mov	r0, r29
 66c:	02 c0       	rjmp	.+4      	; 0x672 <initBoard+0xf2>
 66e:	96 95       	lsr	r25
 670:	87 95       	ror	r24
 672:	0a 94       	dec	r0
 674:	e2 f7       	brpl	.-8      	; 0x66e <initBoard+0xee>
 676:	0d de       	rcall	.-998    	; 0x292 <ledWriteAll>
 678:	09 c0       	rjmp	.+18     	; 0x68c <initBoard+0x10c>
 67a:	81 e0       	ldi	r24, 0x01	; 1
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0d 2e       	mov	r0, r29
 680:	02 c0       	rjmp	.+4      	; 0x686 <initBoard+0x106>
 682:	88 0f       	add	r24, r24
 684:	99 1f       	adc	r25, r25
 686:	0a 94       	dec	r0
 688:	e2 f7       	brpl	.-8      	; 0x682 <initBoard+0x102>
 68a:	03 de       	rcall	.-1018   	; 0x292 <ledWriteAll>
 68c:	df 5f       	subi	r29, 0xFF	; 255
 68e:	d1 31       	cpi	r29, 0x11	; 17
 690:	28 f0       	brcs	.+10     	; 0x69c <initBoard+0x11c>
 692:	81 e0       	ldi	r24, 0x01	; 1
 694:	01 11       	cpse	r16, r1
 696:	80 e0       	ldi	r24, 0x00	; 0
 698:	08 2f       	mov	r16, r24
 69a:	d0 e0       	ldi	r29, 0x00	; 0
 69c:	ff 20       	and	r15, r15
 69e:	11 f0       	breq	.+4      	; 0x6a4 <initBoard+0x124>
 6a0:	ce 5f       	subi	r28, 0xFE	; 254
 6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <initBoard+0x126>
 6a4:	c2 50       	subi	r28, 0x02	; 2
 6a6:	8c 2f       	mov	r24, r28
 6a8:	67 de       	rcall	.-818    	; 0x378 <lcdLight>
 6aa:	ce 3f       	cpi	r28, 0xFE	; 254
 6ac:	09 f4       	brne	.+2      	; 0x6b0 <initBoard+0x130>
 6ae:	f1 2c       	mov	r15, r1
 6b0:	c8 37       	cpi	r28, 0x78	; 120
 6b2:	11 f4       	brne	.+4      	; 0x6b8 <initBoard+0x138>
 6b4:	ff 24       	eor	r15, r15
 6b6:	f3 94       	inc	r15
 6b8:	11 11       	cpse	r17, r1
 6ba:	17 c0       	rjmp	.+46     	; 0x6ea <initBoard+0x16a>
 6bc:	ef dd       	rcall	.-1058   	; 0x29c <buttonReadAllPL>
 6be:	83 7c       	andi	r24, 0xC3	; 195
 6c0:	a1 f0       	breq	.+40     	; 0x6ea <initBoard+0x16a>
 6c2:	40 e0       	ldi	r20, 0x00	; 0
 6c4:	50 e0       	ldi	r21, 0x00	; 0
 6c6:	66 e2       	ldi	r22, 0x26	; 38
 6c8:	72 e0       	ldi	r23, 0x02	; 2
 6ca:	8f ef       	ldi	r24, 0xFF	; 255
 6cc:	93 e0       	ldi	r25, 0x03	; 3
 6ce:	15 de       	rcall	.-982    	; 0x2fa <rgbWrite>
 6d0:	87 e7       	ldi	r24, 0x77	; 119
 6d2:	92 e0       	ldi	r25, 0x02	; 2
 6d4:	9f 93       	push	r25
 6d6:	8f 93       	push	r24
 6d8:	1f 92       	push	r1
 6da:	83 e0       	ldi	r24, 0x03	; 3
 6dc:	8f 93       	push	r24
 6de:	de de       	rcall	.-580    	; 0x49c <lcdWriteText>
 6e0:	0f 90       	pop	r0
 6e2:	0f 90       	pop	r0
 6e4:	0f 90       	pop	r0
 6e6:	0f 90       	pop	r0
 6e8:	11 e0       	ldi	r17, 0x01	; 1
 6ea:	11 23       	and	r17, r17
 6ec:	19 f0       	breq	.+6      	; 0x6f4 <initBoard+0x174>
 6ee:	d6 dd       	rcall	.-1108   	; 0x29c <buttonReadAllPL>
 6f0:	83 7c       	andi	r24, 0xC3	; 195
 6f2:	39 f0       	breq	.+14     	; 0x702 <initBoard+0x182>
 6f4:	8f ef       	ldi	r24, 0xFF	; 255
 6f6:	9c e7       	ldi	r25, 0x7C	; 124
 6f8:	01 97       	sbiw	r24, 0x01	; 1
 6fa:	f1 f7       	brne	.-4      	; 0x6f8 <initBoard+0x178>
 6fc:	00 c0       	rjmp	.+0      	; 0x6fe <initBoard+0x17e>
 6fe:	00 00       	nop
 700:	b0 cf       	rjmp	.-160    	; 0x662 <initBoard+0xe2>
 702:	06 df       	rcall	.-500    	; 0x510 <lcdClear>
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	38 de       	rcall	.-912    	; 0x378 <lcdLight>
 708:	80 e0       	ldi	r24, 0x00	; 0
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	c2 dd       	rcall	.-1148   	; 0x292 <ledWriteAll>
 70e:	40 e0       	ldi	r20, 0x00	; 0
 710:	50 e0       	ldi	r21, 0x00	; 0
 712:	60 e0       	ldi	r22, 0x00	; 0
 714:	70 e0       	ldi	r23, 0x00	; 0
 716:	80 e0       	ldi	r24, 0x00	; 0
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	ef dd       	rcall	.-1058   	; 0x2fa <rgbWrite>
 71c:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <systemTimeMs>
 720:	10 92 94 02 	sts	0x0294, r1	; 0x800294 <systemTimeMs+0x1>
 724:	10 92 95 02 	sts	0x0295, r1	; 0x800295 <systemTimeMs+0x2>
 728:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <systemTimeMs+0x3>
 72c:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <systemTimeMs+0x4>
 730:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <systemTimeMs+0x5>
 734:	10 92 99 02 	sts	0x0299, r1	; 0x800299 <systemTimeMs+0x6>
 738:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <systemTimeMs+0x7>
 73c:	df 91       	pop	r29
 73e:	cf 91       	pop	r28
 740:	1f 91       	pop	r17
 742:	0f 91       	pop	r16
 744:	ff 90       	pop	r15
 746:	08 95       	ret

00000748 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 748:	cf 93       	push	r28
 74a:	df 93       	push	r29
 74c:	cd b7       	in	r28, 0x3d	; 61
 74e:	de b7       	in	r29, 0x3e	; 62
 750:	28 97       	sbiw	r28, 0x08	; 8
 752:	0f b6       	in	r0, 0x3f	; 63
 754:	f8 94       	cli
 756:	de bf       	out	0x3e, r29	; 62
 758:	0f be       	out	0x3f, r0	; 63
 75a:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 75c:	88 e0       	ldi	r24, 0x08	; 8
 75e:	eb e1       	ldi	r30, 0x1B	; 27
 760:	f2 e0       	ldi	r31, 0x02	; 2
 762:	de 01       	movw	r26, r28
 764:	11 96       	adiw	r26, 0x01	; 1
 766:	01 90       	ld	r0, Z+
 768:	0d 92       	st	X+, r0
 76a:	8a 95       	dec	r24
 76c:	e1 f7       	brne	.-8      	; 0x766 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 76e:	e5 e0       	ldi	r30, 0x05	; 5
 770:	f1 e0       	ldi	r31, 0x01	; 1
 772:	80 81       	ld	r24, Z
 774:	8f 7b       	andi	r24, 0xBF	; 191
 776:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 778:	e0 91 90 02 	lds	r30, 0x0290	; 0x800290 <Zeilen_Nr.2743>
 77c:	f0 91 91 02 	lds	r31, 0x0291	; 0x800291 <Zeilen_Nr.2743+0x1>
 780:	81 e0       	ldi	r24, 0x01	; 1
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	8c 0f       	add	r24, r28
 786:	9d 1f       	adc	r25, r29
 788:	e8 0f       	add	r30, r24
 78a:	f9 1f       	adc	r31, r25
 78c:	80 81       	ld	r24, Z
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <__data_end+0x1>
 794:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 798:	80 e0       	ldi	r24, 0x00	; 0
 79a:	26 c0       	rjmp	.+76     	; 0x7e8 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 79c:	e7 e3       	ldi	r30, 0x37	; 55
 79e:	f0 e0       	ldi	r31, 0x00	; 0
 7a0:	e8 1b       	sub	r30, r24
 7a2:	f1 09       	sbc	r31, r1
 7a4:	ee 0f       	add	r30, r30
 7a6:	ff 1f       	adc	r31, r31
 7a8:	e4 56       	subi	r30, 0x64	; 100
 7aa:	fd 4f       	sbci	r31, 0xFD	; 253
 7ac:	40 81       	ld	r20, Z
 7ae:	51 81       	ldd	r21, Z+1	; 0x01
 7b0:	20 91 8e 02 	lds	r18, 0x028E	; 0x80028e <__data_end>
 7b4:	30 91 8f 02 	lds	r19, 0x028F	; 0x80028f <__data_end+0x1>
 7b8:	24 23       	and	r18, r20
 7ba:	35 23       	and	r19, r21
 7bc:	23 2b       	or	r18, r19
 7be:	31 f0       	breq	.+12     	; 0x7cc <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 7c0:	e5 e0       	ldi	r30, 0x05	; 5
 7c2:	f1 e0       	ldi	r31, 0x01	; 1
 7c4:	90 81       	ld	r25, Z
 7c6:	90 62       	ori	r25, 0x20	; 32
 7c8:	90 83       	st	Z, r25
 7ca:	05 c0       	rjmp	.+10     	; 0x7d6 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7cc:	e5 e0       	ldi	r30, 0x05	; 5
 7ce:	f1 e0       	ldi	r31, 0x01	; 1
 7d0:	90 81       	ld	r25, Z
 7d2:	9f 7d       	andi	r25, 0xDF	; 223
 7d4:	90 83       	st	Z, r25
        }
        CLOCK_1;
 7d6:	e5 e0       	ldi	r30, 0x05	; 5
 7d8:	f1 e0       	ldi	r31, 0x01	; 1
 7da:	90 81       	ld	r25, Z
 7dc:	90 61       	ori	r25, 0x10	; 16
 7de:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7e0:	90 81       	ld	r25, Z
 7e2:	9f 7e       	andi	r25, 0xEF	; 239
 7e4:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7e6:	8f 5f       	subi	r24, 0xFF	; 255
 7e8:	88 33       	cpi	r24, 0x38	; 56
 7ea:	c0 f2       	brcs	.-80     	; 0x79c <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 7ec:	e5 e0       	ldi	r30, 0x05	; 5
 7ee:	f1 e0       	ldi	r31, 0x01	; 1
 7f0:	80 81       	ld	r24, Z
 7f2:	87 7f       	andi	r24, 0xF7	; 247
 7f4:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 7f6:	80 81       	ld	r24, Z
 7f8:	88 7f       	andi	r24, 0xF8	; 248
 7fa:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 7fc:	90 81       	ld	r25, Z
 7fe:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <Zeilen_Nr.2743>
 802:	89 2b       	or	r24, r25
 804:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 806:	80 81       	ld	r24, Z
 808:	80 64       	ori	r24, 0x40	; 64
 80a:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 80c:	80 81       	ld	r24, Z
 80e:	88 60       	ori	r24, 0x08	; 8
 810:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 812:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <Zeilen_Nr.2743>
 816:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <Zeilen_Nr.2743+0x1>
 81a:	87 30       	cpi	r24, 0x07	; 7
 81c:	91 05       	cpc	r25, r1
 81e:	30 f4       	brcc	.+12     	; 0x82c <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 820:	01 96       	adiw	r24, 0x01	; 1
 822:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <Zeilen_Nr.2743+0x1>
 826:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <Zeilen_Nr.2743>
 82a:	07 c0       	rjmp	.+14     	; 0x83a <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 82c:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <Zeilen_Nr.2743+0x1>
 830:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 834:	81 e0       	ldi	r24, 0x01	; 1
 836:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <writeTextFinished>
    }
    
 83a:	28 96       	adiw	r28, 0x08	; 8
 83c:	0f b6       	in	r0, 0x3f	; 63
 83e:	f8 94       	cli
 840:	de bf       	out	0x3e, r29	; 62
 842:	0f be       	out	0x3f, r0	; 63
 844:	cd bf       	out	0x3d, r28	; 61
 846:	df 91       	pop	r29
 848:	cf 91       	pop	r28
 84a:	08 95       	ret

0000084c <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 84c:	1f 92       	push	r1
 84e:	0f 92       	push	r0
 850:	0f b6       	in	r0, 0x3f	; 63
 852:	0f 92       	push	r0
 854:	11 24       	eor	r1, r1
 856:	0b b6       	in	r0, 0x3b	; 59
 858:	0f 92       	push	r0
 85a:	2f 93       	push	r18
 85c:	3f 93       	push	r19
 85e:	4f 93       	push	r20
 860:	5f 93       	push	r21
 862:	6f 93       	push	r22
 864:	7f 93       	push	r23
 866:	8f 93       	push	r24
 868:	9f 93       	push	r25
 86a:	af 93       	push	r26
 86c:	bf 93       	push	r27
 86e:	ef 93       	push	r30
 870:	ff 93       	push	r31
    systemTimeMs += 1;
 872:	20 91 93 02 	lds	r18, 0x0293	; 0x800293 <systemTimeMs>
 876:	30 91 94 02 	lds	r19, 0x0294	; 0x800294 <systemTimeMs+0x1>
 87a:	40 91 95 02 	lds	r20, 0x0295	; 0x800295 <systemTimeMs+0x2>
 87e:	50 91 96 02 	lds	r21, 0x0296	; 0x800296 <systemTimeMs+0x3>
 882:	60 91 97 02 	lds	r22, 0x0297	; 0x800297 <systemTimeMs+0x4>
 886:	70 91 98 02 	lds	r23, 0x0298	; 0x800298 <systemTimeMs+0x5>
 88a:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <systemTimeMs+0x6>
 88e:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <systemTimeMs+0x7>
 892:	a1 e0       	ldi	r26, 0x01	; 1
 894:	49 d0       	rcall	.+146    	; 0x928 <__adddi3_s8>
 896:	20 93 93 02 	sts	0x0293, r18	; 0x800293 <systemTimeMs>
 89a:	30 93 94 02 	sts	0x0294, r19	; 0x800294 <systemTimeMs+0x1>
 89e:	40 93 95 02 	sts	0x0295, r20	; 0x800295 <systemTimeMs+0x2>
 8a2:	50 93 96 02 	sts	0x0296, r21	; 0x800296 <systemTimeMs+0x3>
 8a6:	60 93 97 02 	sts	0x0297, r22	; 0x800297 <systemTimeMs+0x4>
 8aa:	70 93 98 02 	sts	0x0298, r23	; 0x800298 <systemTimeMs+0x5>
 8ae:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <systemTimeMs+0x6>
 8b2:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 8b6:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <matrixRunning>
 8ba:	81 11       	cpse	r24, r1
 8bc:	45 df       	rcall	.-374    	; 0x748 <matrixWriteNextLine>
}
 8be:	ff 91       	pop	r31
 8c0:	ef 91       	pop	r30
 8c2:	bf 91       	pop	r27
 8c4:	af 91       	pop	r26
 8c6:	9f 91       	pop	r25
 8c8:	8f 91       	pop	r24
 8ca:	7f 91       	pop	r23
 8cc:	6f 91       	pop	r22
 8ce:	5f 91       	pop	r21
 8d0:	4f 91       	pop	r20
 8d2:	3f 91       	pop	r19
 8d4:	2f 91       	pop	r18
 8d6:	0f 90       	pop	r0
 8d8:	0b be       	out	0x3b, r0	; 59
 8da:	0f 90       	pop	r0
 8dc:	0f be       	out	0x3f, r0	; 63
 8de:	0f 90       	pop	r0
 8e0:	1f 90       	pop	r1
 8e2:	18 95       	reti

000008e4 <__udivmodsi4>:
 8e4:	a1 e2       	ldi	r26, 0x21	; 33
 8e6:	1a 2e       	mov	r1, r26
 8e8:	aa 1b       	sub	r26, r26
 8ea:	bb 1b       	sub	r27, r27
 8ec:	fd 01       	movw	r30, r26
 8ee:	0d c0       	rjmp	.+26     	; 0x90a <__udivmodsi4_ep>

000008f0 <__udivmodsi4_loop>:
 8f0:	aa 1f       	adc	r26, r26
 8f2:	bb 1f       	adc	r27, r27
 8f4:	ee 1f       	adc	r30, r30
 8f6:	ff 1f       	adc	r31, r31
 8f8:	a2 17       	cp	r26, r18
 8fa:	b3 07       	cpc	r27, r19
 8fc:	e4 07       	cpc	r30, r20
 8fe:	f5 07       	cpc	r31, r21
 900:	20 f0       	brcs	.+8      	; 0x90a <__udivmodsi4_ep>
 902:	a2 1b       	sub	r26, r18
 904:	b3 0b       	sbc	r27, r19
 906:	e4 0b       	sbc	r30, r20
 908:	f5 0b       	sbc	r31, r21

0000090a <__udivmodsi4_ep>:
 90a:	66 1f       	adc	r22, r22
 90c:	77 1f       	adc	r23, r23
 90e:	88 1f       	adc	r24, r24
 910:	99 1f       	adc	r25, r25
 912:	1a 94       	dec	r1
 914:	69 f7       	brne	.-38     	; 0x8f0 <__udivmodsi4_loop>
 916:	60 95       	com	r22
 918:	70 95       	com	r23
 91a:	80 95       	com	r24
 91c:	90 95       	com	r25
 91e:	9b 01       	movw	r18, r22
 920:	ac 01       	movw	r20, r24
 922:	bd 01       	movw	r22, r26
 924:	cf 01       	movw	r24, r30
 926:	08 95       	ret

00000928 <__adddi3_s8>:
 928:	00 24       	eor	r0, r0
 92a:	a7 fd       	sbrc	r26, 7
 92c:	00 94       	com	r0
 92e:	2a 0f       	add	r18, r26
 930:	30 1d       	adc	r19, r0
 932:	40 1d       	adc	r20, r0
 934:	50 1d       	adc	r21, r0
 936:	60 1d       	adc	r22, r0
 938:	70 1d       	adc	r23, r0
 93a:	80 1d       	adc	r24, r0
 93c:	90 1d       	adc	r25, r0
 93e:	08 95       	ret

00000940 <vsnprintf>:
 940:	0f 93       	push	r16
 942:	1f 93       	push	r17
 944:	cf 93       	push	r28
 946:	df 93       	push	r29
 948:	cd b7       	in	r28, 0x3d	; 61
 94a:	de b7       	in	r29, 0x3e	; 62
 94c:	2e 97       	sbiw	r28, 0x0e	; 14
 94e:	0f b6       	in	r0, 0x3f	; 63
 950:	f8 94       	cli
 952:	de bf       	out	0x3e, r29	; 62
 954:	0f be       	out	0x3f, r0	; 63
 956:	cd bf       	out	0x3d, r28	; 61
 958:	8c 01       	movw	r16, r24
 95a:	fa 01       	movw	r30, r20
 95c:	86 e0       	ldi	r24, 0x06	; 6
 95e:	8c 83       	std	Y+4, r24	; 0x04
 960:	1a 83       	std	Y+2, r17	; 0x02
 962:	09 83       	std	Y+1, r16	; 0x01
 964:	77 ff       	sbrs	r23, 7
 966:	02 c0       	rjmp	.+4      	; 0x96c <vsnprintf+0x2c>
 968:	60 e0       	ldi	r22, 0x00	; 0
 96a:	70 e8       	ldi	r23, 0x80	; 128
 96c:	cb 01       	movw	r24, r22
 96e:	01 97       	sbiw	r24, 0x01	; 1
 970:	9e 83       	std	Y+6, r25	; 0x06
 972:	8d 83       	std	Y+5, r24	; 0x05
 974:	a9 01       	movw	r20, r18
 976:	bf 01       	movw	r22, r30
 978:	ce 01       	movw	r24, r28
 97a:	01 96       	adiw	r24, 0x01	; 1
 97c:	19 d0       	rcall	.+50     	; 0x9b0 <vfprintf>
 97e:	4d 81       	ldd	r20, Y+5	; 0x05
 980:	5e 81       	ldd	r21, Y+6	; 0x06
 982:	57 fd       	sbrc	r21, 7
 984:	0a c0       	rjmp	.+20     	; 0x99a <vsnprintf+0x5a>
 986:	2f 81       	ldd	r18, Y+7	; 0x07
 988:	38 85       	ldd	r19, Y+8	; 0x08
 98a:	42 17       	cp	r20, r18
 98c:	53 07       	cpc	r21, r19
 98e:	0c f4       	brge	.+2      	; 0x992 <vsnprintf+0x52>
 990:	9a 01       	movw	r18, r20
 992:	f8 01       	movw	r30, r16
 994:	e2 0f       	add	r30, r18
 996:	f3 1f       	adc	r31, r19
 998:	10 82       	st	Z, r1
 99a:	2e 96       	adiw	r28, 0x0e	; 14
 99c:	0f b6       	in	r0, 0x3f	; 63
 99e:	f8 94       	cli
 9a0:	de bf       	out	0x3e, r29	; 62
 9a2:	0f be       	out	0x3f, r0	; 63
 9a4:	cd bf       	out	0x3d, r28	; 61
 9a6:	df 91       	pop	r29
 9a8:	cf 91       	pop	r28
 9aa:	1f 91       	pop	r17
 9ac:	0f 91       	pop	r16
 9ae:	08 95       	ret

000009b0 <vfprintf>:
 9b0:	2f 92       	push	r2
 9b2:	3f 92       	push	r3
 9b4:	4f 92       	push	r4
 9b6:	5f 92       	push	r5
 9b8:	6f 92       	push	r6
 9ba:	7f 92       	push	r7
 9bc:	8f 92       	push	r8
 9be:	9f 92       	push	r9
 9c0:	af 92       	push	r10
 9c2:	bf 92       	push	r11
 9c4:	cf 92       	push	r12
 9c6:	df 92       	push	r13
 9c8:	ef 92       	push	r14
 9ca:	ff 92       	push	r15
 9cc:	0f 93       	push	r16
 9ce:	1f 93       	push	r17
 9d0:	cf 93       	push	r28
 9d2:	df 93       	push	r29
 9d4:	cd b7       	in	r28, 0x3d	; 61
 9d6:	de b7       	in	r29, 0x3e	; 62
 9d8:	2b 97       	sbiw	r28, 0x0b	; 11
 9da:	0f b6       	in	r0, 0x3f	; 63
 9dc:	f8 94       	cli
 9de:	de bf       	out	0x3e, r29	; 62
 9e0:	0f be       	out	0x3f, r0	; 63
 9e2:	cd bf       	out	0x3d, r28	; 61
 9e4:	6c 01       	movw	r12, r24
 9e6:	7b 01       	movw	r14, r22
 9e8:	8a 01       	movw	r16, r20
 9ea:	fc 01       	movw	r30, r24
 9ec:	17 82       	std	Z+7, r1	; 0x07
 9ee:	16 82       	std	Z+6, r1	; 0x06
 9f0:	83 81       	ldd	r24, Z+3	; 0x03
 9f2:	81 ff       	sbrs	r24, 1
 9f4:	bf c1       	rjmp	.+894    	; 0xd74 <vfprintf+0x3c4>
 9f6:	ce 01       	movw	r24, r28
 9f8:	01 96       	adiw	r24, 0x01	; 1
 9fa:	3c 01       	movw	r6, r24
 9fc:	f6 01       	movw	r30, r12
 9fe:	93 81       	ldd	r25, Z+3	; 0x03
 a00:	f7 01       	movw	r30, r14
 a02:	93 fd       	sbrc	r25, 3
 a04:	85 91       	lpm	r24, Z+
 a06:	93 ff       	sbrs	r25, 3
 a08:	81 91       	ld	r24, Z+
 a0a:	7f 01       	movw	r14, r30
 a0c:	88 23       	and	r24, r24
 a0e:	09 f4       	brne	.+2      	; 0xa12 <vfprintf+0x62>
 a10:	ad c1       	rjmp	.+858    	; 0xd6c <vfprintf+0x3bc>
 a12:	85 32       	cpi	r24, 0x25	; 37
 a14:	39 f4       	brne	.+14     	; 0xa24 <vfprintf+0x74>
 a16:	93 fd       	sbrc	r25, 3
 a18:	85 91       	lpm	r24, Z+
 a1a:	93 ff       	sbrs	r25, 3
 a1c:	81 91       	ld	r24, Z+
 a1e:	7f 01       	movw	r14, r30
 a20:	85 32       	cpi	r24, 0x25	; 37
 a22:	21 f4       	brne	.+8      	; 0xa2c <vfprintf+0x7c>
 a24:	b6 01       	movw	r22, r12
 a26:	90 e0       	ldi	r25, 0x00	; 0
 a28:	d6 d1       	rcall	.+940    	; 0xdd6 <fputc>
 a2a:	e8 cf       	rjmp	.-48     	; 0x9fc <vfprintf+0x4c>
 a2c:	91 2c       	mov	r9, r1
 a2e:	21 2c       	mov	r2, r1
 a30:	31 2c       	mov	r3, r1
 a32:	ff e1       	ldi	r31, 0x1F	; 31
 a34:	f3 15       	cp	r31, r3
 a36:	d8 f0       	brcs	.+54     	; 0xa6e <vfprintf+0xbe>
 a38:	8b 32       	cpi	r24, 0x2B	; 43
 a3a:	79 f0       	breq	.+30     	; 0xa5a <vfprintf+0xaa>
 a3c:	38 f4       	brcc	.+14     	; 0xa4c <vfprintf+0x9c>
 a3e:	80 32       	cpi	r24, 0x20	; 32
 a40:	79 f0       	breq	.+30     	; 0xa60 <vfprintf+0xb0>
 a42:	83 32       	cpi	r24, 0x23	; 35
 a44:	a1 f4       	brne	.+40     	; 0xa6e <vfprintf+0xbe>
 a46:	23 2d       	mov	r18, r3
 a48:	20 61       	ori	r18, 0x10	; 16
 a4a:	1d c0       	rjmp	.+58     	; 0xa86 <vfprintf+0xd6>
 a4c:	8d 32       	cpi	r24, 0x2D	; 45
 a4e:	61 f0       	breq	.+24     	; 0xa68 <vfprintf+0xb8>
 a50:	80 33       	cpi	r24, 0x30	; 48
 a52:	69 f4       	brne	.+26     	; 0xa6e <vfprintf+0xbe>
 a54:	23 2d       	mov	r18, r3
 a56:	21 60       	ori	r18, 0x01	; 1
 a58:	16 c0       	rjmp	.+44     	; 0xa86 <vfprintf+0xd6>
 a5a:	83 2d       	mov	r24, r3
 a5c:	82 60       	ori	r24, 0x02	; 2
 a5e:	38 2e       	mov	r3, r24
 a60:	e3 2d       	mov	r30, r3
 a62:	e4 60       	ori	r30, 0x04	; 4
 a64:	3e 2e       	mov	r3, r30
 a66:	2a c0       	rjmp	.+84     	; 0xabc <vfprintf+0x10c>
 a68:	f3 2d       	mov	r31, r3
 a6a:	f8 60       	ori	r31, 0x08	; 8
 a6c:	1d c0       	rjmp	.+58     	; 0xaa8 <vfprintf+0xf8>
 a6e:	37 fc       	sbrc	r3, 7
 a70:	2d c0       	rjmp	.+90     	; 0xacc <vfprintf+0x11c>
 a72:	20 ed       	ldi	r18, 0xD0	; 208
 a74:	28 0f       	add	r18, r24
 a76:	2a 30       	cpi	r18, 0x0A	; 10
 a78:	40 f0       	brcs	.+16     	; 0xa8a <vfprintf+0xda>
 a7a:	8e 32       	cpi	r24, 0x2E	; 46
 a7c:	b9 f4       	brne	.+46     	; 0xaac <vfprintf+0xfc>
 a7e:	36 fc       	sbrc	r3, 6
 a80:	75 c1       	rjmp	.+746    	; 0xd6c <vfprintf+0x3bc>
 a82:	23 2d       	mov	r18, r3
 a84:	20 64       	ori	r18, 0x40	; 64
 a86:	32 2e       	mov	r3, r18
 a88:	19 c0       	rjmp	.+50     	; 0xabc <vfprintf+0x10c>
 a8a:	36 fe       	sbrs	r3, 6
 a8c:	06 c0       	rjmp	.+12     	; 0xa9a <vfprintf+0xea>
 a8e:	8a e0       	ldi	r24, 0x0A	; 10
 a90:	98 9e       	mul	r9, r24
 a92:	20 0d       	add	r18, r0
 a94:	11 24       	eor	r1, r1
 a96:	92 2e       	mov	r9, r18
 a98:	11 c0       	rjmp	.+34     	; 0xabc <vfprintf+0x10c>
 a9a:	ea e0       	ldi	r30, 0x0A	; 10
 a9c:	2e 9e       	mul	r2, r30
 a9e:	20 0d       	add	r18, r0
 aa0:	11 24       	eor	r1, r1
 aa2:	22 2e       	mov	r2, r18
 aa4:	f3 2d       	mov	r31, r3
 aa6:	f0 62       	ori	r31, 0x20	; 32
 aa8:	3f 2e       	mov	r3, r31
 aaa:	08 c0       	rjmp	.+16     	; 0xabc <vfprintf+0x10c>
 aac:	8c 36       	cpi	r24, 0x6C	; 108
 aae:	21 f4       	brne	.+8      	; 0xab8 <vfprintf+0x108>
 ab0:	83 2d       	mov	r24, r3
 ab2:	80 68       	ori	r24, 0x80	; 128
 ab4:	38 2e       	mov	r3, r24
 ab6:	02 c0       	rjmp	.+4      	; 0xabc <vfprintf+0x10c>
 ab8:	88 36       	cpi	r24, 0x68	; 104
 aba:	41 f4       	brne	.+16     	; 0xacc <vfprintf+0x11c>
 abc:	f7 01       	movw	r30, r14
 abe:	93 fd       	sbrc	r25, 3
 ac0:	85 91       	lpm	r24, Z+
 ac2:	93 ff       	sbrs	r25, 3
 ac4:	81 91       	ld	r24, Z+
 ac6:	7f 01       	movw	r14, r30
 ac8:	81 11       	cpse	r24, r1
 aca:	b3 cf       	rjmp	.-154    	; 0xa32 <vfprintf+0x82>
 acc:	98 2f       	mov	r25, r24
 ace:	9f 7d       	andi	r25, 0xDF	; 223
 ad0:	95 54       	subi	r25, 0x45	; 69
 ad2:	93 30       	cpi	r25, 0x03	; 3
 ad4:	28 f4       	brcc	.+10     	; 0xae0 <vfprintf+0x130>
 ad6:	0c 5f       	subi	r16, 0xFC	; 252
 ad8:	1f 4f       	sbci	r17, 0xFF	; 255
 ada:	9f e3       	ldi	r25, 0x3F	; 63
 adc:	99 83       	std	Y+1, r25	; 0x01
 ade:	0d c0       	rjmp	.+26     	; 0xafa <vfprintf+0x14a>
 ae0:	83 36       	cpi	r24, 0x63	; 99
 ae2:	31 f0       	breq	.+12     	; 0xaf0 <vfprintf+0x140>
 ae4:	83 37       	cpi	r24, 0x73	; 115
 ae6:	71 f0       	breq	.+28     	; 0xb04 <vfprintf+0x154>
 ae8:	83 35       	cpi	r24, 0x53	; 83
 aea:	09 f0       	breq	.+2      	; 0xaee <vfprintf+0x13e>
 aec:	55 c0       	rjmp	.+170    	; 0xb98 <vfprintf+0x1e8>
 aee:	20 c0       	rjmp	.+64     	; 0xb30 <vfprintf+0x180>
 af0:	f8 01       	movw	r30, r16
 af2:	80 81       	ld	r24, Z
 af4:	89 83       	std	Y+1, r24	; 0x01
 af6:	0e 5f       	subi	r16, 0xFE	; 254
 af8:	1f 4f       	sbci	r17, 0xFF	; 255
 afa:	88 24       	eor	r8, r8
 afc:	83 94       	inc	r8
 afe:	91 2c       	mov	r9, r1
 b00:	53 01       	movw	r10, r6
 b02:	12 c0       	rjmp	.+36     	; 0xb28 <vfprintf+0x178>
 b04:	28 01       	movw	r4, r16
 b06:	f2 e0       	ldi	r31, 0x02	; 2
 b08:	4f 0e       	add	r4, r31
 b0a:	51 1c       	adc	r5, r1
 b0c:	f8 01       	movw	r30, r16
 b0e:	a0 80       	ld	r10, Z
 b10:	b1 80       	ldd	r11, Z+1	; 0x01
 b12:	36 fe       	sbrs	r3, 6
 b14:	03 c0       	rjmp	.+6      	; 0xb1c <vfprintf+0x16c>
 b16:	69 2d       	mov	r22, r9
 b18:	70 e0       	ldi	r23, 0x00	; 0
 b1a:	02 c0       	rjmp	.+4      	; 0xb20 <vfprintf+0x170>
 b1c:	6f ef       	ldi	r22, 0xFF	; 255
 b1e:	7f ef       	ldi	r23, 0xFF	; 255
 b20:	c5 01       	movw	r24, r10
 b22:	4e d1       	rcall	.+668    	; 0xdc0 <strnlen>
 b24:	4c 01       	movw	r8, r24
 b26:	82 01       	movw	r16, r4
 b28:	f3 2d       	mov	r31, r3
 b2a:	ff 77       	andi	r31, 0x7F	; 127
 b2c:	3f 2e       	mov	r3, r31
 b2e:	15 c0       	rjmp	.+42     	; 0xb5a <vfprintf+0x1aa>
 b30:	28 01       	movw	r4, r16
 b32:	22 e0       	ldi	r18, 0x02	; 2
 b34:	42 0e       	add	r4, r18
 b36:	51 1c       	adc	r5, r1
 b38:	f8 01       	movw	r30, r16
 b3a:	a0 80       	ld	r10, Z
 b3c:	b1 80       	ldd	r11, Z+1	; 0x01
 b3e:	36 fe       	sbrs	r3, 6
 b40:	03 c0       	rjmp	.+6      	; 0xb48 <vfprintf+0x198>
 b42:	69 2d       	mov	r22, r9
 b44:	70 e0       	ldi	r23, 0x00	; 0
 b46:	02 c0       	rjmp	.+4      	; 0xb4c <vfprintf+0x19c>
 b48:	6f ef       	ldi	r22, 0xFF	; 255
 b4a:	7f ef       	ldi	r23, 0xFF	; 255
 b4c:	c5 01       	movw	r24, r10
 b4e:	2d d1       	rcall	.+602    	; 0xdaa <strnlen_P>
 b50:	4c 01       	movw	r8, r24
 b52:	f3 2d       	mov	r31, r3
 b54:	f0 68       	ori	r31, 0x80	; 128
 b56:	3f 2e       	mov	r3, r31
 b58:	82 01       	movw	r16, r4
 b5a:	33 fc       	sbrc	r3, 3
 b5c:	19 c0       	rjmp	.+50     	; 0xb90 <vfprintf+0x1e0>
 b5e:	82 2d       	mov	r24, r2
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	88 16       	cp	r8, r24
 b64:	99 06       	cpc	r9, r25
 b66:	a0 f4       	brcc	.+40     	; 0xb90 <vfprintf+0x1e0>
 b68:	b6 01       	movw	r22, r12
 b6a:	80 e2       	ldi	r24, 0x20	; 32
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	33 d1       	rcall	.+614    	; 0xdd6 <fputc>
 b70:	2a 94       	dec	r2
 b72:	f5 cf       	rjmp	.-22     	; 0xb5e <vfprintf+0x1ae>
 b74:	f5 01       	movw	r30, r10
 b76:	37 fc       	sbrc	r3, 7
 b78:	85 91       	lpm	r24, Z+
 b7a:	37 fe       	sbrs	r3, 7
 b7c:	81 91       	ld	r24, Z+
 b7e:	5f 01       	movw	r10, r30
 b80:	b6 01       	movw	r22, r12
 b82:	90 e0       	ldi	r25, 0x00	; 0
 b84:	28 d1       	rcall	.+592    	; 0xdd6 <fputc>
 b86:	21 10       	cpse	r2, r1
 b88:	2a 94       	dec	r2
 b8a:	21 e0       	ldi	r18, 0x01	; 1
 b8c:	82 1a       	sub	r8, r18
 b8e:	91 08       	sbc	r9, r1
 b90:	81 14       	cp	r8, r1
 b92:	91 04       	cpc	r9, r1
 b94:	79 f7       	brne	.-34     	; 0xb74 <vfprintf+0x1c4>
 b96:	e1 c0       	rjmp	.+450    	; 0xd5a <vfprintf+0x3aa>
 b98:	84 36       	cpi	r24, 0x64	; 100
 b9a:	11 f0       	breq	.+4      	; 0xba0 <vfprintf+0x1f0>
 b9c:	89 36       	cpi	r24, 0x69	; 105
 b9e:	39 f5       	brne	.+78     	; 0xbee <vfprintf+0x23e>
 ba0:	f8 01       	movw	r30, r16
 ba2:	37 fe       	sbrs	r3, 7
 ba4:	07 c0       	rjmp	.+14     	; 0xbb4 <vfprintf+0x204>
 ba6:	60 81       	ld	r22, Z
 ba8:	71 81       	ldd	r23, Z+1	; 0x01
 baa:	82 81       	ldd	r24, Z+2	; 0x02
 bac:	93 81       	ldd	r25, Z+3	; 0x03
 bae:	0c 5f       	subi	r16, 0xFC	; 252
 bb0:	1f 4f       	sbci	r17, 0xFF	; 255
 bb2:	08 c0       	rjmp	.+16     	; 0xbc4 <vfprintf+0x214>
 bb4:	60 81       	ld	r22, Z
 bb6:	71 81       	ldd	r23, Z+1	; 0x01
 bb8:	07 2e       	mov	r0, r23
 bba:	00 0c       	add	r0, r0
 bbc:	88 0b       	sbc	r24, r24
 bbe:	99 0b       	sbc	r25, r25
 bc0:	0e 5f       	subi	r16, 0xFE	; 254
 bc2:	1f 4f       	sbci	r17, 0xFF	; 255
 bc4:	f3 2d       	mov	r31, r3
 bc6:	ff 76       	andi	r31, 0x6F	; 111
 bc8:	3f 2e       	mov	r3, r31
 bca:	97 ff       	sbrs	r25, 7
 bcc:	09 c0       	rjmp	.+18     	; 0xbe0 <vfprintf+0x230>
 bce:	90 95       	com	r25
 bd0:	80 95       	com	r24
 bd2:	70 95       	com	r23
 bd4:	61 95       	neg	r22
 bd6:	7f 4f       	sbci	r23, 0xFF	; 255
 bd8:	8f 4f       	sbci	r24, 0xFF	; 255
 bda:	9f 4f       	sbci	r25, 0xFF	; 255
 bdc:	f0 68       	ori	r31, 0x80	; 128
 bde:	3f 2e       	mov	r3, r31
 be0:	2a e0       	ldi	r18, 0x0A	; 10
 be2:	30 e0       	ldi	r19, 0x00	; 0
 be4:	a3 01       	movw	r20, r6
 be6:	33 d1       	rcall	.+614    	; 0xe4e <__ultoa_invert>
 be8:	88 2e       	mov	r8, r24
 bea:	86 18       	sub	r8, r6
 bec:	44 c0       	rjmp	.+136    	; 0xc76 <vfprintf+0x2c6>
 bee:	85 37       	cpi	r24, 0x75	; 117
 bf0:	31 f4       	brne	.+12     	; 0xbfe <vfprintf+0x24e>
 bf2:	23 2d       	mov	r18, r3
 bf4:	2f 7e       	andi	r18, 0xEF	; 239
 bf6:	b2 2e       	mov	r11, r18
 bf8:	2a e0       	ldi	r18, 0x0A	; 10
 bfa:	30 e0       	ldi	r19, 0x00	; 0
 bfc:	25 c0       	rjmp	.+74     	; 0xc48 <vfprintf+0x298>
 bfe:	93 2d       	mov	r25, r3
 c00:	99 7f       	andi	r25, 0xF9	; 249
 c02:	b9 2e       	mov	r11, r25
 c04:	8f 36       	cpi	r24, 0x6F	; 111
 c06:	c1 f0       	breq	.+48     	; 0xc38 <vfprintf+0x288>
 c08:	18 f4       	brcc	.+6      	; 0xc10 <vfprintf+0x260>
 c0a:	88 35       	cpi	r24, 0x58	; 88
 c0c:	79 f0       	breq	.+30     	; 0xc2c <vfprintf+0x27c>
 c0e:	ae c0       	rjmp	.+348    	; 0xd6c <vfprintf+0x3bc>
 c10:	80 37       	cpi	r24, 0x70	; 112
 c12:	19 f0       	breq	.+6      	; 0xc1a <vfprintf+0x26a>
 c14:	88 37       	cpi	r24, 0x78	; 120
 c16:	21 f0       	breq	.+8      	; 0xc20 <vfprintf+0x270>
 c18:	a9 c0       	rjmp	.+338    	; 0xd6c <vfprintf+0x3bc>
 c1a:	e9 2f       	mov	r30, r25
 c1c:	e0 61       	ori	r30, 0x10	; 16
 c1e:	be 2e       	mov	r11, r30
 c20:	b4 fe       	sbrs	r11, 4
 c22:	0d c0       	rjmp	.+26     	; 0xc3e <vfprintf+0x28e>
 c24:	fb 2d       	mov	r31, r11
 c26:	f4 60       	ori	r31, 0x04	; 4
 c28:	bf 2e       	mov	r11, r31
 c2a:	09 c0       	rjmp	.+18     	; 0xc3e <vfprintf+0x28e>
 c2c:	34 fe       	sbrs	r3, 4
 c2e:	0a c0       	rjmp	.+20     	; 0xc44 <vfprintf+0x294>
 c30:	29 2f       	mov	r18, r25
 c32:	26 60       	ori	r18, 0x06	; 6
 c34:	b2 2e       	mov	r11, r18
 c36:	06 c0       	rjmp	.+12     	; 0xc44 <vfprintf+0x294>
 c38:	28 e0       	ldi	r18, 0x08	; 8
 c3a:	30 e0       	ldi	r19, 0x00	; 0
 c3c:	05 c0       	rjmp	.+10     	; 0xc48 <vfprintf+0x298>
 c3e:	20 e1       	ldi	r18, 0x10	; 16
 c40:	30 e0       	ldi	r19, 0x00	; 0
 c42:	02 c0       	rjmp	.+4      	; 0xc48 <vfprintf+0x298>
 c44:	20 e1       	ldi	r18, 0x10	; 16
 c46:	32 e0       	ldi	r19, 0x02	; 2
 c48:	f8 01       	movw	r30, r16
 c4a:	b7 fe       	sbrs	r11, 7
 c4c:	07 c0       	rjmp	.+14     	; 0xc5c <vfprintf+0x2ac>
 c4e:	60 81       	ld	r22, Z
 c50:	71 81       	ldd	r23, Z+1	; 0x01
 c52:	82 81       	ldd	r24, Z+2	; 0x02
 c54:	93 81       	ldd	r25, Z+3	; 0x03
 c56:	0c 5f       	subi	r16, 0xFC	; 252
 c58:	1f 4f       	sbci	r17, 0xFF	; 255
 c5a:	06 c0       	rjmp	.+12     	; 0xc68 <vfprintf+0x2b8>
 c5c:	60 81       	ld	r22, Z
 c5e:	71 81       	ldd	r23, Z+1	; 0x01
 c60:	80 e0       	ldi	r24, 0x00	; 0
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	0e 5f       	subi	r16, 0xFE	; 254
 c66:	1f 4f       	sbci	r17, 0xFF	; 255
 c68:	a3 01       	movw	r20, r6
 c6a:	f1 d0       	rcall	.+482    	; 0xe4e <__ultoa_invert>
 c6c:	88 2e       	mov	r8, r24
 c6e:	86 18       	sub	r8, r6
 c70:	fb 2d       	mov	r31, r11
 c72:	ff 77       	andi	r31, 0x7F	; 127
 c74:	3f 2e       	mov	r3, r31
 c76:	36 fe       	sbrs	r3, 6
 c78:	0d c0       	rjmp	.+26     	; 0xc94 <vfprintf+0x2e4>
 c7a:	23 2d       	mov	r18, r3
 c7c:	2e 7f       	andi	r18, 0xFE	; 254
 c7e:	a2 2e       	mov	r10, r18
 c80:	89 14       	cp	r8, r9
 c82:	58 f4       	brcc	.+22     	; 0xc9a <vfprintf+0x2ea>
 c84:	34 fe       	sbrs	r3, 4
 c86:	0b c0       	rjmp	.+22     	; 0xc9e <vfprintf+0x2ee>
 c88:	32 fc       	sbrc	r3, 2
 c8a:	09 c0       	rjmp	.+18     	; 0xc9e <vfprintf+0x2ee>
 c8c:	83 2d       	mov	r24, r3
 c8e:	8e 7e       	andi	r24, 0xEE	; 238
 c90:	a8 2e       	mov	r10, r24
 c92:	05 c0       	rjmp	.+10     	; 0xc9e <vfprintf+0x2ee>
 c94:	b8 2c       	mov	r11, r8
 c96:	a3 2c       	mov	r10, r3
 c98:	03 c0       	rjmp	.+6      	; 0xca0 <vfprintf+0x2f0>
 c9a:	b8 2c       	mov	r11, r8
 c9c:	01 c0       	rjmp	.+2      	; 0xca0 <vfprintf+0x2f0>
 c9e:	b9 2c       	mov	r11, r9
 ca0:	a4 fe       	sbrs	r10, 4
 ca2:	0f c0       	rjmp	.+30     	; 0xcc2 <vfprintf+0x312>
 ca4:	fe 01       	movw	r30, r28
 ca6:	e8 0d       	add	r30, r8
 ca8:	f1 1d       	adc	r31, r1
 caa:	80 81       	ld	r24, Z
 cac:	80 33       	cpi	r24, 0x30	; 48
 cae:	21 f4       	brne	.+8      	; 0xcb8 <vfprintf+0x308>
 cb0:	9a 2d       	mov	r25, r10
 cb2:	99 7e       	andi	r25, 0xE9	; 233
 cb4:	a9 2e       	mov	r10, r25
 cb6:	09 c0       	rjmp	.+18     	; 0xcca <vfprintf+0x31a>
 cb8:	a2 fe       	sbrs	r10, 2
 cba:	06 c0       	rjmp	.+12     	; 0xcc8 <vfprintf+0x318>
 cbc:	b3 94       	inc	r11
 cbe:	b3 94       	inc	r11
 cc0:	04 c0       	rjmp	.+8      	; 0xcca <vfprintf+0x31a>
 cc2:	8a 2d       	mov	r24, r10
 cc4:	86 78       	andi	r24, 0x86	; 134
 cc6:	09 f0       	breq	.+2      	; 0xcca <vfprintf+0x31a>
 cc8:	b3 94       	inc	r11
 cca:	a3 fc       	sbrc	r10, 3
 ccc:	10 c0       	rjmp	.+32     	; 0xcee <vfprintf+0x33e>
 cce:	a0 fe       	sbrs	r10, 0
 cd0:	06 c0       	rjmp	.+12     	; 0xcde <vfprintf+0x32e>
 cd2:	b2 14       	cp	r11, r2
 cd4:	80 f4       	brcc	.+32     	; 0xcf6 <vfprintf+0x346>
 cd6:	28 0c       	add	r2, r8
 cd8:	92 2c       	mov	r9, r2
 cda:	9b 18       	sub	r9, r11
 cdc:	0d c0       	rjmp	.+26     	; 0xcf8 <vfprintf+0x348>
 cde:	b2 14       	cp	r11, r2
 ce0:	58 f4       	brcc	.+22     	; 0xcf8 <vfprintf+0x348>
 ce2:	b6 01       	movw	r22, r12
 ce4:	80 e2       	ldi	r24, 0x20	; 32
 ce6:	90 e0       	ldi	r25, 0x00	; 0
 ce8:	76 d0       	rcall	.+236    	; 0xdd6 <fputc>
 cea:	b3 94       	inc	r11
 cec:	f8 cf       	rjmp	.-16     	; 0xcde <vfprintf+0x32e>
 cee:	b2 14       	cp	r11, r2
 cf0:	18 f4       	brcc	.+6      	; 0xcf8 <vfprintf+0x348>
 cf2:	2b 18       	sub	r2, r11
 cf4:	02 c0       	rjmp	.+4      	; 0xcfa <vfprintf+0x34a>
 cf6:	98 2c       	mov	r9, r8
 cf8:	21 2c       	mov	r2, r1
 cfa:	a4 fe       	sbrs	r10, 4
 cfc:	0f c0       	rjmp	.+30     	; 0xd1c <vfprintf+0x36c>
 cfe:	b6 01       	movw	r22, r12
 d00:	80 e3       	ldi	r24, 0x30	; 48
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	68 d0       	rcall	.+208    	; 0xdd6 <fputc>
 d06:	a2 fe       	sbrs	r10, 2
 d08:	16 c0       	rjmp	.+44     	; 0xd36 <vfprintf+0x386>
 d0a:	a1 fc       	sbrc	r10, 1
 d0c:	03 c0       	rjmp	.+6      	; 0xd14 <vfprintf+0x364>
 d0e:	88 e7       	ldi	r24, 0x78	; 120
 d10:	90 e0       	ldi	r25, 0x00	; 0
 d12:	02 c0       	rjmp	.+4      	; 0xd18 <vfprintf+0x368>
 d14:	88 e5       	ldi	r24, 0x58	; 88
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	b6 01       	movw	r22, r12
 d1a:	0c c0       	rjmp	.+24     	; 0xd34 <vfprintf+0x384>
 d1c:	8a 2d       	mov	r24, r10
 d1e:	86 78       	andi	r24, 0x86	; 134
 d20:	51 f0       	breq	.+20     	; 0xd36 <vfprintf+0x386>
 d22:	a1 fe       	sbrs	r10, 1
 d24:	02 c0       	rjmp	.+4      	; 0xd2a <vfprintf+0x37a>
 d26:	8b e2       	ldi	r24, 0x2B	; 43
 d28:	01 c0       	rjmp	.+2      	; 0xd2c <vfprintf+0x37c>
 d2a:	80 e2       	ldi	r24, 0x20	; 32
 d2c:	a7 fc       	sbrc	r10, 7
 d2e:	8d e2       	ldi	r24, 0x2D	; 45
 d30:	b6 01       	movw	r22, r12
 d32:	90 e0       	ldi	r25, 0x00	; 0
 d34:	50 d0       	rcall	.+160    	; 0xdd6 <fputc>
 d36:	89 14       	cp	r8, r9
 d38:	30 f4       	brcc	.+12     	; 0xd46 <vfprintf+0x396>
 d3a:	b6 01       	movw	r22, r12
 d3c:	80 e3       	ldi	r24, 0x30	; 48
 d3e:	90 e0       	ldi	r25, 0x00	; 0
 d40:	4a d0       	rcall	.+148    	; 0xdd6 <fputc>
 d42:	9a 94       	dec	r9
 d44:	f8 cf       	rjmp	.-16     	; 0xd36 <vfprintf+0x386>
 d46:	8a 94       	dec	r8
 d48:	f3 01       	movw	r30, r6
 d4a:	e8 0d       	add	r30, r8
 d4c:	f1 1d       	adc	r31, r1
 d4e:	80 81       	ld	r24, Z
 d50:	b6 01       	movw	r22, r12
 d52:	90 e0       	ldi	r25, 0x00	; 0
 d54:	40 d0       	rcall	.+128    	; 0xdd6 <fputc>
 d56:	81 10       	cpse	r8, r1
 d58:	f6 cf       	rjmp	.-20     	; 0xd46 <vfprintf+0x396>
 d5a:	22 20       	and	r2, r2
 d5c:	09 f4       	brne	.+2      	; 0xd60 <vfprintf+0x3b0>
 d5e:	4e ce       	rjmp	.-868    	; 0x9fc <vfprintf+0x4c>
 d60:	b6 01       	movw	r22, r12
 d62:	80 e2       	ldi	r24, 0x20	; 32
 d64:	90 e0       	ldi	r25, 0x00	; 0
 d66:	37 d0       	rcall	.+110    	; 0xdd6 <fputc>
 d68:	2a 94       	dec	r2
 d6a:	f7 cf       	rjmp	.-18     	; 0xd5a <vfprintf+0x3aa>
 d6c:	f6 01       	movw	r30, r12
 d6e:	86 81       	ldd	r24, Z+6	; 0x06
 d70:	97 81       	ldd	r25, Z+7	; 0x07
 d72:	02 c0       	rjmp	.+4      	; 0xd78 <vfprintf+0x3c8>
 d74:	8f ef       	ldi	r24, 0xFF	; 255
 d76:	9f ef       	ldi	r25, 0xFF	; 255
 d78:	2b 96       	adiw	r28, 0x0b	; 11
 d7a:	0f b6       	in	r0, 0x3f	; 63
 d7c:	f8 94       	cli
 d7e:	de bf       	out	0x3e, r29	; 62
 d80:	0f be       	out	0x3f, r0	; 63
 d82:	cd bf       	out	0x3d, r28	; 61
 d84:	df 91       	pop	r29
 d86:	cf 91       	pop	r28
 d88:	1f 91       	pop	r17
 d8a:	0f 91       	pop	r16
 d8c:	ff 90       	pop	r15
 d8e:	ef 90       	pop	r14
 d90:	df 90       	pop	r13
 d92:	cf 90       	pop	r12
 d94:	bf 90       	pop	r11
 d96:	af 90       	pop	r10
 d98:	9f 90       	pop	r9
 d9a:	8f 90       	pop	r8
 d9c:	7f 90       	pop	r7
 d9e:	6f 90       	pop	r6
 da0:	5f 90       	pop	r5
 da2:	4f 90       	pop	r4
 da4:	3f 90       	pop	r3
 da6:	2f 90       	pop	r2
 da8:	08 95       	ret

00000daa <strnlen_P>:
 daa:	fc 01       	movw	r30, r24
 dac:	05 90       	lpm	r0, Z+
 dae:	61 50       	subi	r22, 0x01	; 1
 db0:	70 40       	sbci	r23, 0x00	; 0
 db2:	01 10       	cpse	r0, r1
 db4:	d8 f7       	brcc	.-10     	; 0xdac <strnlen_P+0x2>
 db6:	80 95       	com	r24
 db8:	90 95       	com	r25
 dba:	8e 0f       	add	r24, r30
 dbc:	9f 1f       	adc	r25, r31
 dbe:	08 95       	ret

00000dc0 <strnlen>:
 dc0:	fc 01       	movw	r30, r24
 dc2:	61 50       	subi	r22, 0x01	; 1
 dc4:	70 40       	sbci	r23, 0x00	; 0
 dc6:	01 90       	ld	r0, Z+
 dc8:	01 10       	cpse	r0, r1
 dca:	d8 f7       	brcc	.-10     	; 0xdc2 <strnlen+0x2>
 dcc:	80 95       	com	r24
 dce:	90 95       	com	r25
 dd0:	8e 0f       	add	r24, r30
 dd2:	9f 1f       	adc	r25, r31
 dd4:	08 95       	ret

00000dd6 <fputc>:
 dd6:	0f 93       	push	r16
 dd8:	1f 93       	push	r17
 dda:	cf 93       	push	r28
 ddc:	df 93       	push	r29
 dde:	fb 01       	movw	r30, r22
 de0:	23 81       	ldd	r18, Z+3	; 0x03
 de2:	21 fd       	sbrc	r18, 1
 de4:	03 c0       	rjmp	.+6      	; 0xdec <fputc+0x16>
 de6:	8f ef       	ldi	r24, 0xFF	; 255
 de8:	9f ef       	ldi	r25, 0xFF	; 255
 dea:	2c c0       	rjmp	.+88     	; 0xe44 <fputc+0x6e>
 dec:	22 ff       	sbrs	r18, 2
 dee:	16 c0       	rjmp	.+44     	; 0xe1c <fputc+0x46>
 df0:	46 81       	ldd	r20, Z+6	; 0x06
 df2:	57 81       	ldd	r21, Z+7	; 0x07
 df4:	24 81       	ldd	r18, Z+4	; 0x04
 df6:	35 81       	ldd	r19, Z+5	; 0x05
 df8:	42 17       	cp	r20, r18
 dfa:	53 07       	cpc	r21, r19
 dfc:	44 f4       	brge	.+16     	; 0xe0e <fputc+0x38>
 dfe:	a0 81       	ld	r26, Z
 e00:	b1 81       	ldd	r27, Z+1	; 0x01
 e02:	9d 01       	movw	r18, r26
 e04:	2f 5f       	subi	r18, 0xFF	; 255
 e06:	3f 4f       	sbci	r19, 0xFF	; 255
 e08:	31 83       	std	Z+1, r19	; 0x01
 e0a:	20 83       	st	Z, r18
 e0c:	8c 93       	st	X, r24
 e0e:	26 81       	ldd	r18, Z+6	; 0x06
 e10:	37 81       	ldd	r19, Z+7	; 0x07
 e12:	2f 5f       	subi	r18, 0xFF	; 255
 e14:	3f 4f       	sbci	r19, 0xFF	; 255
 e16:	37 83       	std	Z+7, r19	; 0x07
 e18:	26 83       	std	Z+6, r18	; 0x06
 e1a:	14 c0       	rjmp	.+40     	; 0xe44 <fputc+0x6e>
 e1c:	8b 01       	movw	r16, r22
 e1e:	ec 01       	movw	r28, r24
 e20:	fb 01       	movw	r30, r22
 e22:	00 84       	ldd	r0, Z+8	; 0x08
 e24:	f1 85       	ldd	r31, Z+9	; 0x09
 e26:	e0 2d       	mov	r30, r0
 e28:	19 95       	eicall
 e2a:	89 2b       	or	r24, r25
 e2c:	e1 f6       	brne	.-72     	; 0xde6 <fputc+0x10>
 e2e:	d8 01       	movw	r26, r16
 e30:	16 96       	adiw	r26, 0x06	; 6
 e32:	8d 91       	ld	r24, X+
 e34:	9c 91       	ld	r25, X
 e36:	17 97       	sbiw	r26, 0x07	; 7
 e38:	01 96       	adiw	r24, 0x01	; 1
 e3a:	17 96       	adiw	r26, 0x07	; 7
 e3c:	9c 93       	st	X, r25
 e3e:	8e 93       	st	-X, r24
 e40:	16 97       	sbiw	r26, 0x06	; 6
 e42:	ce 01       	movw	r24, r28
 e44:	df 91       	pop	r29
 e46:	cf 91       	pop	r28
 e48:	1f 91       	pop	r17
 e4a:	0f 91       	pop	r16
 e4c:	08 95       	ret

00000e4e <__ultoa_invert>:
 e4e:	fa 01       	movw	r30, r20
 e50:	aa 27       	eor	r26, r26
 e52:	28 30       	cpi	r18, 0x08	; 8
 e54:	51 f1       	breq	.+84     	; 0xeaa <__ultoa_invert+0x5c>
 e56:	20 31       	cpi	r18, 0x10	; 16
 e58:	81 f1       	breq	.+96     	; 0xeba <__ultoa_invert+0x6c>
 e5a:	e8 94       	clt
 e5c:	6f 93       	push	r22
 e5e:	6e 7f       	andi	r22, 0xFE	; 254
 e60:	6e 5f       	subi	r22, 0xFE	; 254
 e62:	7f 4f       	sbci	r23, 0xFF	; 255
 e64:	8f 4f       	sbci	r24, 0xFF	; 255
 e66:	9f 4f       	sbci	r25, 0xFF	; 255
 e68:	af 4f       	sbci	r26, 0xFF	; 255
 e6a:	b1 e0       	ldi	r27, 0x01	; 1
 e6c:	3e d0       	rcall	.+124    	; 0xeea <__ultoa_invert+0x9c>
 e6e:	b4 e0       	ldi	r27, 0x04	; 4
 e70:	3c d0       	rcall	.+120    	; 0xeea <__ultoa_invert+0x9c>
 e72:	67 0f       	add	r22, r23
 e74:	78 1f       	adc	r23, r24
 e76:	89 1f       	adc	r24, r25
 e78:	9a 1f       	adc	r25, r26
 e7a:	a1 1d       	adc	r26, r1
 e7c:	68 0f       	add	r22, r24
 e7e:	79 1f       	adc	r23, r25
 e80:	8a 1f       	adc	r24, r26
 e82:	91 1d       	adc	r25, r1
 e84:	a1 1d       	adc	r26, r1
 e86:	6a 0f       	add	r22, r26
 e88:	71 1d       	adc	r23, r1
 e8a:	81 1d       	adc	r24, r1
 e8c:	91 1d       	adc	r25, r1
 e8e:	a1 1d       	adc	r26, r1
 e90:	20 d0       	rcall	.+64     	; 0xed2 <__ultoa_invert+0x84>
 e92:	09 f4       	brne	.+2      	; 0xe96 <__ultoa_invert+0x48>
 e94:	68 94       	set
 e96:	3f 91       	pop	r19
 e98:	2a e0       	ldi	r18, 0x0A	; 10
 e9a:	26 9f       	mul	r18, r22
 e9c:	11 24       	eor	r1, r1
 e9e:	30 19       	sub	r19, r0
 ea0:	30 5d       	subi	r19, 0xD0	; 208
 ea2:	31 93       	st	Z+, r19
 ea4:	de f6       	brtc	.-74     	; 0xe5c <__ultoa_invert+0xe>
 ea6:	cf 01       	movw	r24, r30
 ea8:	08 95       	ret
 eaa:	46 2f       	mov	r20, r22
 eac:	47 70       	andi	r20, 0x07	; 7
 eae:	40 5d       	subi	r20, 0xD0	; 208
 eb0:	41 93       	st	Z+, r20
 eb2:	b3 e0       	ldi	r27, 0x03	; 3
 eb4:	0f d0       	rcall	.+30     	; 0xed4 <__ultoa_invert+0x86>
 eb6:	c9 f7       	brne	.-14     	; 0xeaa <__ultoa_invert+0x5c>
 eb8:	f6 cf       	rjmp	.-20     	; 0xea6 <__ultoa_invert+0x58>
 eba:	46 2f       	mov	r20, r22
 ebc:	4f 70       	andi	r20, 0x0F	; 15
 ebe:	40 5d       	subi	r20, 0xD0	; 208
 ec0:	4a 33       	cpi	r20, 0x3A	; 58
 ec2:	18 f0       	brcs	.+6      	; 0xeca <__ultoa_invert+0x7c>
 ec4:	49 5d       	subi	r20, 0xD9	; 217
 ec6:	31 fd       	sbrc	r19, 1
 ec8:	40 52       	subi	r20, 0x20	; 32
 eca:	41 93       	st	Z+, r20
 ecc:	02 d0       	rcall	.+4      	; 0xed2 <__ultoa_invert+0x84>
 ece:	a9 f7       	brne	.-22     	; 0xeba <__ultoa_invert+0x6c>
 ed0:	ea cf       	rjmp	.-44     	; 0xea6 <__ultoa_invert+0x58>
 ed2:	b4 e0       	ldi	r27, 0x04	; 4
 ed4:	a6 95       	lsr	r26
 ed6:	97 95       	ror	r25
 ed8:	87 95       	ror	r24
 eda:	77 95       	ror	r23
 edc:	67 95       	ror	r22
 ede:	ba 95       	dec	r27
 ee0:	c9 f7       	brne	.-14     	; 0xed4 <__ultoa_invert+0x86>
 ee2:	00 97       	sbiw	r24, 0x00	; 0
 ee4:	61 05       	cpc	r22, r1
 ee6:	71 05       	cpc	r23, r1
 ee8:	08 95       	ret
 eea:	9b 01       	movw	r18, r22
 eec:	ac 01       	movw	r20, r24
 eee:	0a 2e       	mov	r0, r26
 ef0:	06 94       	lsr	r0
 ef2:	57 95       	ror	r21
 ef4:	47 95       	ror	r20
 ef6:	37 95       	ror	r19
 ef8:	27 95       	ror	r18
 efa:	ba 95       	dec	r27
 efc:	c9 f7       	brne	.-14     	; 0xef0 <__ultoa_invert+0xa2>
 efe:	62 0f       	add	r22, r18
 f00:	73 1f       	adc	r23, r19
 f02:	84 1f       	adc	r24, r20
 f04:	95 1f       	adc	r25, r21
 f06:	a0 1d       	adc	r26, r0
 f08:	08 95       	ret

00000f0a <_exit>:
 f0a:	f8 94       	cli

00000f0c <__stop_program>:
 f0c:	ff cf       	rjmp	.-2      	; 0xf0c <__stop_program>
