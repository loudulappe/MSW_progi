
LCD_potanzeige.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f4  00800200  0000139e  00001432  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000139e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  008002f4  008002f4  00001526  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001526  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001584  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  000015c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000267d  00000000  00000000  000017b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f40  00000000  00000000  00003e31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000168b  00000000  00000000  00004d71  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000694  00000000  00000000  000063fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d17  00000000  00000000  00006a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ef0  00000000  00000000  000077a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00009697  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	12 c6       	rjmp	.+3108   	; 0xc82 <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee e9       	ldi	r30, 0x9E	; 158
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 3f       	cpi	r26, 0xF4	; 244
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a4 ef       	ldi	r26, 0xF4	; 244
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 37       	cpi	r26, 0x72	; 114
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 cd 09 	jmp	0x139a	; 0x139a <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:
#define ADCMAX      1023
#define AP          50
#define TRUEMAX     5000

int main(void)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	a1 97       	sbiw	r28, 0x21	; 33
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
    initBoard(0);
     13a:	80 e0       	ldi	r24, 0x00	; 0
     13c:	3c d4       	rcall	.+2168   	; 0x9b6 <initBoard>
    initAdc();
     13e:	9e d2       	rcall	.+1340   	; 0x67c <initAdc>
     140:	1a 8a       	std	Y+18, r1	; 0x12
    uint16_t pot1=0;
     142:	19 8a       	std	Y+17, r1	; 0x11
     144:	1a 82       	std	Y+2, r1	; 0x02
    uint16_t outz01=0;
     146:	19 82       	std	Y+1, r1	; 0x01
     148:	1c 82       	std	Y+4, r1	; 0x04
    uint16_t outz02=0;
     14a:	1b 82       	std	Y+3, r1	; 0x03
     14c:	1d 82       	std	Y+5, r1	; 0x05
    uint8_t flagmv1=0;
     14e:	1c 8a       	std	Y+20, r1	; 0x14
    uint16_t propot1=0;
     150:	1b 8a       	std	Y+19, r1	; 0x13
     152:	1f 82       	std	Y+7, r1	; 0x07
    uint16_t propunkt1=0;
     154:	1e 82       	std	Y+6, r1	; 0x06
     156:	19 86       	std	Y+9, r1	; 0x09
    uint16_t flagpro1=0;
     158:	18 86       	std	Y+8, r1	; 0x08
     15a:	1e 8a       	std	Y+22, r1	; 0x16
    uint16_t pot2=0;
     15c:	1d 8a       	std	Y+21, r1	; 0x15
     15e:	1b 86       	std	Y+11, r1	; 0x0b
    uint16_t outz21=0;
     160:	1a 86       	std	Y+10, r1	; 0x0a
     162:	18 8e       	std	Y+24, r1	; 0x18
    uint16_t outz22=0;
     164:	1f 8a       	std	Y+23, r1	; 0x17
     166:	1c 86       	std	Y+12, r1	; 0x0c
    uint8_t flagmv2=0;
     168:	1a 8e       	std	Y+26, r1	; 0x1a
    uint16_t propot2=0;
     16a:	19 8e       	std	Y+25, r1	; 0x19
     16c:	1c 8e       	std	Y+28, r1	; 0x1c
    uint16_t rangepos=0;
     16e:	1b 8e       	std	Y+27, r1	; 0x1b
     170:	1e 8e       	std	Y+30, r1	; 0x1e
    uint16_t proneg=0;
     172:	1d 8e       	std	Y+29, r1	; 0x1d
     174:	1e 86       	std	Y+14, r1	; 0x0e
    uint16_t valpos=0;
     176:	1d 86       	std	Y+13, r1	; 0x0d
     178:	18 8a       	std	Y+16, r1	; 0x10
    uint16_t valneg=0;
     17a:	1f 86       	std	Y+15, r1	; 0x0f
     17c:	18 a2       	std	Y+32, r1	; 0x20
    uint16_t rangeneg=0;
     17e:	1f 8e       	std	Y+31, r1	; 0x1f
     180:	85 e2       	ldi	r24, 0x25	; 37
    char prozentzeichen= 0x25;
     182:	89 a3       	std	Y+33, r24	; 0x21
     184:	80 e0       	ldi	r24, 0x00	; 0
    lcdWriteText(0,0,"U-Poti1:  .     V");
     186:	92 e0       	ldi	r25, 0x02	; 2
     188:	89 2f       	mov	r24, r25
     18a:	8f 93       	push	r24
     18c:	80 e0       	ldi	r24, 0x00	; 0
     18e:	92 e0       	ldi	r25, 0x02	; 2
     190:	8f 93       	push	r24
     192:	1f 92       	push	r1
     194:	1f 92       	push	r1
     196:	9d d3       	rcall	.+1850   	; 0x8d2 <lcdWriteText>
     198:	0f 90       	pop	r0
     19a:	0f 90       	pop	r0
     19c:	0f 90       	pop	r0
     19e:	0f 90       	pop	r0
     1a0:	89 a1       	ldd	r24, Y+33	; 0x21
    lcdWriteText(1,0,"APO:   %c AP2.5: +  %c",prozentzeichen,prozentzeichen);
     1a2:	28 2f       	mov	r18, r24
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	89 a1       	ldd	r24, Y+33	; 0x21
     1a8:	88 2f       	mov	r24, r24
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	43 2f       	mov	r20, r19
     1ae:	4f 93       	push	r20
     1b0:	2f 93       	push	r18
     1b2:	29 2f       	mov	r18, r25
     1b4:	2f 93       	push	r18
     1b6:	8f 93       	push	r24
     1b8:	82 e1       	ldi	r24, 0x12	; 18
     1ba:	92 e0       	ldi	r25, 0x02	; 2
     1bc:	89 2f       	mov	r24, r25
     1be:	8f 93       	push	r24
     1c0:	82 e1       	ldi	r24, 0x12	; 18
     1c2:	92 e0       	ldi	r25, 0x02	; 2
     1c4:	8f 93       	push	r24
     1c6:	1f 92       	push	r1
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	8f 93       	push	r24
     1cc:	82 d3       	rcall	.+1796   	; 0x8d2 <lcdWriteText>
     1ce:	2d b7       	in	r18, 0x3d	; 61
     1d0:	3e b7       	in	r19, 0x3e	; 62
     1d2:	28 5f       	subi	r18, 0xF8	; 248
     1d4:	3f 4f       	sbci	r19, 0xFF	; 255
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	89 e2       	ldi	r24, 0x29	; 41
    lcdWriteText(2,0,"U-poti2            ");
     1e2:	92 e0       	ldi	r25, 0x02	; 2
     1e4:	89 2f       	mov	r24, r25
     1e6:	8f 93       	push	r24
     1e8:	89 e2       	ldi	r24, 0x29	; 41
     1ea:	92 e0       	ldi	r25, 0x02	; 2
     1ec:	8f 93       	push	r24
     1ee:	1f 92       	push	r1
     1f0:	82 e0       	ldi	r24, 0x02	; 2
     1f2:	8f 93       	push	r24
     1f4:	6e d3       	rcall	.+1756   	; 0x8d2 <lcdWriteText>
     1f6:	0f 90       	pop	r0
     1f8:	0f 90       	pop	r0
     1fa:	0f 90       	pop	r0
     1fc:	0f 90       	pop	r0
     1fe:	89 a1       	ldd	r24, Y+33	; 0x21
    lcdWriteText(3,0,"APpoti2:   %c",prozentzeichen);
     200:	88 2f       	mov	r24, r24
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	29 2f       	mov	r18, r25
     206:	2f 93       	push	r18
     208:	8f 93       	push	r24
     20a:	8d e3       	ldi	r24, 0x3D	; 61
     20c:	92 e0       	ldi	r25, 0x02	; 2
     20e:	89 2f       	mov	r24, r25
     210:	8f 93       	push	r24
     212:	8d e3       	ldi	r24, 0x3D	; 61
     214:	92 e0       	ldi	r25, 0x02	; 2
     216:	8f 93       	push	r24
     218:	1f 92       	push	r1
     21a:	83 e0       	ldi	r24, 0x03	; 3
     21c:	8f 93       	push	r24
     21e:	59 d3       	rcall	.+1714   	; 0x8d2 <lcdWriteText>
     220:	0f 90       	pop	r0
     222:	0f 90       	pop	r0
     224:	0f 90       	pop	r0
     226:	0f 90       	pop	r0
     228:	0f 90       	pop	r0
     22a:	0f 90       	pop	r0
    while (1) 
    {
//eingabe
        pot1= (uint32_t)adcRead(9)*TRUEMAX/ADCMAX;
     22c:	89 e0       	ldi	r24, 0x09	; 9
     22e:	48 d2       	rcall	.+1168   	; 0x6c0 <adcRead>
     230:	9c 01       	movw	r18, r24
     232:	40 e0       	ldi	r20, 0x00	; 0
     234:	50 e0       	ldi	r21, 0x00	; 0
     236:	88 e8       	ldi	r24, 0x88	; 136
     238:	93 e1       	ldi	r25, 0x13	; 19
     23a:	dc 01       	movw	r26, r24
     23c:	b3 d5       	rcall	.+2918   	; 0xda4 <__muluhisi3>
     23e:	dc 01       	movw	r26, r24
     240:	cb 01       	movw	r24, r22
     242:	2f ef       	ldi	r18, 0xFF	; 255
     244:	33 e0       	ldi	r19, 0x03	; 3
     246:	40 e0       	ldi	r20, 0x00	; 0
     248:	50 e0       	ldi	r21, 0x00	; 0
     24a:	bc 01       	movw	r22, r24
     24c:	cd 01       	movw	r24, r26
     24e:	79 d5       	rcall	.+2802   	; 0xd42 <__udivmodsi4>
     250:	da 01       	movw	r26, r20
     252:	c9 01       	movw	r24, r18
     254:	9a 8b       	std	Y+18, r25	; 0x12
     256:	89 8b       	std	Y+17, r24	; 0x11
        pot2= (uint32_t)adcRead(8)*TRUEMAX/ADCMAX;
     258:	88 e0       	ldi	r24, 0x08	; 8
     25a:	32 d2       	rcall	.+1124   	; 0x6c0 <adcRead>
     25c:	9c 01       	movw	r18, r24
     25e:	40 e0       	ldi	r20, 0x00	; 0
     260:	50 e0       	ldi	r21, 0x00	; 0
     262:	88 e8       	ldi	r24, 0x88	; 136
     264:	93 e1       	ldi	r25, 0x13	; 19
     266:	dc 01       	movw	r26, r24
     268:	9d d5       	rcall	.+2874   	; 0xda4 <__muluhisi3>
     26a:	dc 01       	movw	r26, r24
     26c:	cb 01       	movw	r24, r22
     26e:	2f ef       	ldi	r18, 0xFF	; 255
     270:	33 e0       	ldi	r19, 0x03	; 3
     272:	40 e0       	ldi	r20, 0x00	; 0
     274:	50 e0       	ldi	r21, 0x00	; 0
     276:	bc 01       	movw	r22, r24
     278:	cd 01       	movw	r24, r26
     27a:	63 d5       	rcall	.+2758   	; 0xd42 <__udivmodsi4>
     27c:	da 01       	movw	r26, r20
     27e:	c9 01       	movw	r24, r18
     280:	9e 8b       	std	Y+22, r25	; 0x16
     282:	8d 8b       	std	Y+21, r24	; 0x15
     284:	89 89       	ldd	r24, Y+17	; 0x11
        propot1= pot1/50;
     286:	9a 89       	ldd	r25, Y+18	; 0x12
     288:	96 95       	lsr	r25
     28a:	87 95       	ror	r24
     28c:	9c 01       	movw	r18, r24
     28e:	ab e7       	ldi	r26, 0x7B	; 123
     290:	b4 e1       	ldi	r27, 0x14	; 20
     292:	79 d5       	rcall	.+2802   	; 0xd86 <__umulhisi3>
     294:	96 95       	lsr	r25
     296:	87 95       	ror	r24
     298:	9c 8b       	std	Y+20, r25	; 0x14
     29a:	8b 8b       	std	Y+19, r24	; 0x13
     29c:	8d 89       	ldd	r24, Y+21	; 0x15
        propot2= pot2/50;
     29e:	9e 89       	ldd	r25, Y+22	; 0x16
     2a0:	96 95       	lsr	r25
     2a2:	87 95       	ror	r24
     2a4:	9c 01       	movw	r18, r24
     2a6:	ab e7       	ldi	r26, 0x7B	; 123
     2a8:	b4 e1       	ldi	r27, 0x14	; 20
     2aa:	6d d5       	rcall	.+2778   	; 0xd86 <__umulhisi3>
     2ac:	96 95       	lsr	r25
     2ae:	87 95       	ror	r24
     2b0:	9a 8f       	std	Y+26, r25	; 0x1a
     2b2:	89 8f       	std	Y+25, r24	; 0x19
     2b4:	28 e8       	ldi	r18, 0x88	; 136
     2b6:	33 e1       	ldi	r19, 0x13	; 19
        rangepos= TRUEMAX-propot2;
     2b8:	89 8d       	ldd	r24, Y+25	; 0x19
     2ba:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2bc:	a9 01       	movw	r20, r18
     2be:	48 1b       	sub	r20, r24
     2c0:	59 0b       	sbc	r21, r25
     2c2:	ca 01       	movw	r24, r20
     2c4:	9c 8f       	std	Y+28, r25	; 0x1c
     2c6:	8b 8f       	std	Y+27, r24	; 0x1b
     2c8:	89 8d       	ldd	r24, Y+25	; 0x19
     2ca:	9a 8d       	ldd	r25, Y+26	; 0x1a
        rangeneg= propot2;
     2cc:	98 a3       	std	Y+32, r25	; 0x20
     2ce:	8f 8f       	std	Y+31, r24	; 0x1f
     2d0:	89 89       	ldd	r24, Y+17	; 0x11
     2d2:	9a 89       	ldd	r25, Y+18	; 0x12
//verarbeitung        
        if (pot1<1000)
     2d4:	88 3e       	cpi	r24, 0xE8	; 232
     2d6:	93 40       	sbci	r25, 0x03	; 3
     2d8:	48 f4       	brcc	.+18     	; 0x2ec <main+0x1c6>
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	8d 83       	std	Y+5, r24	; 0x05
        {
            flagmv1=1;
     2de:	1a 82       	std	Y+2, r1	; 0x02
     2e0:	19 82       	std	Y+1, r1	; 0x01
            outz01=0;
     2e2:	89 89       	ldd	r24, Y+17	; 0x11
     2e4:	9a 89       	ldd	r25, Y+18	; 0x12
            outz02=pot1;
     2e6:	9c 83       	std	Y+4, r25	; 0x04
     2e8:	8b 83       	std	Y+3, r24	; 0x03
     2ea:	38 c0       	rjmp	.+112    	; 0x35c <main+0x236>
     2ec:	1d 82       	std	Y+5, r1	; 0x05
        } 
        else
        {
            flagmv1=0;
     2ee:	89 89       	ldd	r24, Y+17	; 0x11
            outz01=pot1/1000;
     2f0:	9a 89       	ldd	r25, Y+18	; 0x12
     2f2:	96 95       	lsr	r25
     2f4:	87 95       	ror	r24
     2f6:	96 95       	lsr	r25
     2f8:	87 95       	ror	r24
     2fa:	96 95       	lsr	r25
     2fc:	87 95       	ror	r24
     2fe:	9c 01       	movw	r18, r24
     300:	a5 ec       	ldi	r26, 0xC5	; 197
     302:	b0 e2       	ldi	r27, 0x20	; 32
     304:	40 d5       	rcall	.+2688   	; 0xd86 <__umulhisi3>
     306:	92 95       	swap	r25
     308:	82 95       	swap	r24
     30a:	8f 70       	andi	r24, 0x0F	; 15
     30c:	89 27       	eor	r24, r25
     30e:	9f 70       	andi	r25, 0x0F	; 15
     310:	89 27       	eor	r24, r25
     312:	9a 83       	std	Y+2, r25	; 0x02
     314:	89 83       	std	Y+1, r24	; 0x01
     316:	49 89       	ldd	r20, Y+17	; 0x11
            outz02=pot1%1000;
     318:	5a 89       	ldd	r21, Y+18	; 0x12
     31a:	ca 01       	movw	r24, r20
     31c:	96 95       	lsr	r25
     31e:	87 95       	ror	r24
     320:	96 95       	lsr	r25
     322:	87 95       	ror	r24
     324:	96 95       	lsr	r25
     326:	87 95       	ror	r24
     328:	9c 01       	movw	r18, r24
     32a:	a5 ec       	ldi	r26, 0xC5	; 197
     32c:	b0 e2       	ldi	r27, 0x20	; 32
     32e:	2b d5       	rcall	.+2646   	; 0xd86 <__umulhisi3>
     330:	bc 01       	movw	r22, r24
     332:	72 95       	swap	r23
     334:	62 95       	swap	r22
     336:	6f 70       	andi	r22, 0x0F	; 15
     338:	67 27       	eor	r22, r23
     33a:	7f 70       	andi	r23, 0x0F	; 15
     33c:	67 27       	eor	r22, r23
     33e:	28 ee       	ldi	r18, 0xE8	; 232
     340:	33 e0       	ldi	r19, 0x03	; 3
     342:	62 9f       	mul	r22, r18
     344:	c0 01       	movw	r24, r0
     346:	63 9f       	mul	r22, r19
     348:	90 0d       	add	r25, r0
     34a:	72 9f       	mul	r23, r18
     34c:	90 0d       	add	r25, r0
     34e:	11 24       	eor	r1, r1
     350:	9a 01       	movw	r18, r20
     352:	28 1b       	sub	r18, r24
     354:	39 0b       	sbc	r19, r25
     356:	c9 01       	movw	r24, r18
     358:	9c 83       	std	Y+4, r25	; 0x04
     35a:	8b 83       	std	Y+3, r24	; 0x03
     35c:	8b 89       	ldd	r24, Y+19	; 0x13
     35e:	9c 89       	ldd	r25, Y+20	; 0x14
        }
        
        if (propot1<AP)
     360:	c2 97       	sbiw	r24, 0x32	; 50
     362:	68 f4       	brcc	.+26     	; 0x37e <main+0x258>
     364:	22 e3       	ldi	r18, 0x32	; 50
     366:	30 e0       	ldi	r19, 0x00	; 0
        {
            propunkt1=AP-propot1;
     368:	8b 89       	ldd	r24, Y+19	; 0x13
     36a:	9c 89       	ldd	r25, Y+20	; 0x14
     36c:	a9 01       	movw	r20, r18
     36e:	48 1b       	sub	r20, r24
     370:	59 0b       	sbc	r21, r25
     372:	ca 01       	movw	r24, r20
     374:	9f 83       	std	Y+7, r25	; 0x07
     376:	8e 83       	std	Y+6, r24	; 0x06
     378:	19 86       	std	Y+9, r1	; 0x09
     37a:	18 86       	std	Y+8, r1	; 0x08
            flagpro1=0;
     37c:	09 c0       	rjmp	.+18     	; 0x390 <main+0x26a>
     37e:	8b 89       	ldd	r24, Y+19	; 0x13
     380:	9c 89       	ldd	r25, Y+20	; 0x14
        } 
        else
        {
            propunkt1=propot1-AP;
     382:	c2 97       	sbiw	r24, 0x32	; 50
     384:	9f 83       	std	Y+7, r25	; 0x07
     386:	8e 83       	std	Y+6, r24	; 0x06
     388:	81 e0       	ldi	r24, 0x01	; 1
     38a:	90 e0       	ldi	r25, 0x00	; 0
            flagpro1=1;
     38c:	99 87       	std	Y+9, r25	; 0x09
     38e:	88 87       	std	Y+8, r24	; 0x08
     390:	8d 89       	ldd	r24, Y+21	; 0x15
     392:	9e 89       	ldd	r25, Y+22	; 0x16
        }
        
        if (pot2<1000)
     394:	88 3e       	cpi	r24, 0xE8	; 232
     396:	93 40       	sbci	r25, 0x03	; 3
     398:	28 f4       	brcc	.+10     	; 0x3a4 <main+0x27e>
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	8c 87       	std	Y+12, r24	; 0x0c
        {
            flagmv2=1;
     39e:	1b 86       	std	Y+11, r1	; 0x0b
            outz21=0;
     3a0:	1a 86       	std	Y+10, r1	; 0x0a
     3a2:	15 c0       	rjmp	.+42     	; 0x3ce <main+0x2a8>
     3a4:	1c 86       	std	Y+12, r1	; 0x0c
        }
        else
        {
            flagmv2=0;
     3a6:	8d 89       	ldd	r24, Y+21	; 0x15
            outz21=pot2/1000;
     3a8:	9e 89       	ldd	r25, Y+22	; 0x16
     3aa:	96 95       	lsr	r25
     3ac:	87 95       	ror	r24
     3ae:	96 95       	lsr	r25
     3b0:	87 95       	ror	r24
     3b2:	96 95       	lsr	r25
     3b4:	87 95       	ror	r24
     3b6:	9c 01       	movw	r18, r24
     3b8:	a5 ec       	ldi	r26, 0xC5	; 197
     3ba:	b0 e2       	ldi	r27, 0x20	; 32
     3bc:	e4 d4       	rcall	.+2504   	; 0xd86 <__umulhisi3>
     3be:	92 95       	swap	r25
     3c0:	82 95       	swap	r24
     3c2:	8f 70       	andi	r24, 0x0F	; 15
     3c4:	89 27       	eor	r24, r25
     3c6:	9f 70       	andi	r25, 0x0F	; 15
     3c8:	89 27       	eor	r24, r25
     3ca:	9b 87       	std	Y+11, r25	; 0x0b
     3cc:	8a 87       	std	Y+10, r24	; 0x0a
     3ce:	4d 89       	ldd	r20, Y+21	; 0x15
        }
        outz22=pot2%1000;
     3d0:	5e 89       	ldd	r21, Y+22	; 0x16
     3d2:	ca 01       	movw	r24, r20
     3d4:	96 95       	lsr	r25
     3d6:	87 95       	ror	r24
     3d8:	96 95       	lsr	r25
     3da:	87 95       	ror	r24
     3dc:	96 95       	lsr	r25
     3de:	87 95       	ror	r24
     3e0:	9c 01       	movw	r18, r24
     3e2:	a5 ec       	ldi	r26, 0xC5	; 197
     3e4:	b0 e2       	ldi	r27, 0x20	; 32
     3e6:	cf d4       	rcall	.+2462   	; 0xd86 <__umulhisi3>
     3e8:	bc 01       	movw	r22, r24
     3ea:	72 95       	swap	r23
     3ec:	62 95       	swap	r22
     3ee:	6f 70       	andi	r22, 0x0F	; 15
     3f0:	67 27       	eor	r22, r23
     3f2:	7f 70       	andi	r23, 0x0F	; 15
     3f4:	67 27       	eor	r22, r23
     3f6:	28 ee       	ldi	r18, 0xE8	; 232
     3f8:	33 e0       	ldi	r19, 0x03	; 3
     3fa:	62 9f       	mul	r22, r18
     3fc:	c0 01       	movw	r24, r0
     3fe:	63 9f       	mul	r22, r19
     400:	90 0d       	add	r25, r0
     402:	72 9f       	mul	r23, r18
     404:	90 0d       	add	r25, r0
     406:	11 24       	eor	r1, r1
     408:	9a 01       	movw	r18, r20
     40a:	28 1b       	sub	r18, r24
     40c:	39 0b       	sbc	r19, r25
     40e:	c9 01       	movw	r24, r18
     410:	98 8f       	std	Y+24, r25	; 0x18
     412:	8f 8b       	std	Y+23, r24	; 0x17
     414:	2b 89       	ldd	r18, Y+19	; 0x13
     416:	3c 89       	ldd	r19, Y+20	; 0x14
        
        if (propot1<propot2)
     418:	89 8d       	ldd	r24, Y+25	; 0x19
     41a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     41c:	28 17       	cp	r18, r24
     41e:	39 07       	cpc	r19, r25
     420:	d8 f4       	brcc	.+54     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     422:	8b 89       	ldd	r24, Y+19	; 0x13
        {
            proneg=propot1*100/propot2;
     424:	9c 89       	ldd	r25, Y+20	; 0x14
     426:	24 e6       	ldi	r18, 0x64	; 100
     428:	28 9f       	mul	r18, r24
     42a:	a0 01       	movw	r20, r0
     42c:	29 9f       	mul	r18, r25
     42e:	50 0d       	add	r21, r0
     430:	11 24       	eor	r1, r1
     432:	29 8d       	ldd	r18, Y+25	; 0x19
     434:	3a 8d       	ldd	r19, Y+26	; 0x1a
     436:	ca 01       	movw	r24, r20
     438:	b9 01       	movw	r22, r18
     43a:	6f d4       	rcall	.+2270   	; 0xd1a <__udivmodhi4>
     43c:	cb 01       	movw	r24, r22
     43e:	9e 8f       	std	Y+30, r25	; 0x1e
     440:	8d 8f       	std	Y+29, r24	; 0x1d
     442:	24 e6       	ldi	r18, 0x64	; 100
     444:	30 e0       	ldi	r19, 0x00	; 0
            valneg=100-proneg;
     446:	8d 8d       	ldd	r24, Y+29	; 0x1d
     448:	9e 8d       	ldd	r25, Y+30	; 0x1e
     44a:	a9 01       	movw	r20, r18
     44c:	48 1b       	sub	r20, r24
     44e:	59 0b       	sbc	r21, r25
     450:	ca 01       	movw	r24, r20
     452:	98 8b       	std	Y+16, r25	; 0x10
     454:	8f 87       	std	Y+15, r24	; 0x0f
     456:	12 c0       	rjmp	.+36     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     458:	8b 89       	ldd	r24, Y+19	; 0x13
        } 
        else
        {
            valpos=(propot1*100/propot2)-100;
     45a:	9c 89       	ldd	r25, Y+20	; 0x14
     45c:	24 e6       	ldi	r18, 0x64	; 100
     45e:	28 9f       	mul	r18, r24
     460:	a0 01       	movw	r20, r0
     462:	29 9f       	mul	r18, r25
     464:	50 0d       	add	r21, r0
     466:	11 24       	eor	r1, r1
     468:	29 8d       	ldd	r18, Y+25	; 0x19
     46a:	3a 8d       	ldd	r19, Y+26	; 0x1a
     46c:	ca 01       	movw	r24, r20
     46e:	b9 01       	movw	r22, r18
     470:	54 d4       	rcall	.+2216   	; 0xd1a <__udivmodhi4>
     472:	cb 01       	movw	r24, r22
     474:	84 56       	subi	r24, 0x64	; 100
     476:	91 09       	sbc	r25, r1
     478:	9e 87       	std	Y+14, r25	; 0x0e
     47a:	8d 87       	std	Y+13, r24	; 0x0d
     47c:	8d 81       	ldd	r24, Y+5	; 0x05
        }
         
//ausgabe
        if (flagmv1)
     47e:	88 23       	and	r24, r24
     480:	b1 f0       	breq	.+44     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     482:	8c 81       	ldd	r24, Y+4	; 0x04
        {
            lcdWriteText(0,9,"  %03u mV", outz02);
     484:	8f 93       	push	r24
     486:	8b 81       	ldd	r24, Y+3	; 0x03
     488:	8f 93       	push	r24
     48a:	8b e4       	ldi	r24, 0x4B	; 75
     48c:	92 e0       	ldi	r25, 0x02	; 2
     48e:	89 2f       	mov	r24, r25
     490:	8f 93       	push	r24
     492:	8b e4       	ldi	r24, 0x4B	; 75
     494:	92 e0       	ldi	r25, 0x02	; 2
     496:	8f 93       	push	r24
     498:	89 e0       	ldi	r24, 0x09	; 9
     49a:	8f 93       	push	r24
     49c:	1f 92       	push	r1
     49e:	19 d2       	rcall	.+1074   	; 0x8d2 <lcdWriteText>
     4a0:	0f 90       	pop	r0
     4a2:	0f 90       	pop	r0
     4a4:	0f 90       	pop	r0
     4a6:	0f 90       	pop	r0
     4a8:	0f 90       	pop	r0
     4aa:	0f 90       	pop	r0
     4ac:	1b c0       	rjmp	.+54     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
     4ae:	8c 81       	ldd	r24, Y+4	; 0x04
        } 
        else
        {
            lcdWriteText(0,9,"%u.%03u V   ",outz01, outz02);
     4b0:	8f 93       	push	r24
     4b2:	8b 81       	ldd	r24, Y+3	; 0x03
     4b4:	8f 93       	push	r24
     4b6:	8a 81       	ldd	r24, Y+2	; 0x02
     4b8:	8f 93       	push	r24
     4ba:	89 81       	ldd	r24, Y+1	; 0x01
     4bc:	8f 93       	push	r24
     4be:	85 e5       	ldi	r24, 0x55	; 85
     4c0:	92 e0       	ldi	r25, 0x02	; 2
     4c2:	89 2f       	mov	r24, r25
     4c4:	8f 93       	push	r24
     4c6:	85 e5       	ldi	r24, 0x55	; 85
     4c8:	92 e0       	ldi	r25, 0x02	; 2
     4ca:	8f 93       	push	r24
     4cc:	89 e0       	ldi	r24, 0x09	; 9
     4ce:	8f 93       	push	r24
     4d0:	1f 92       	push	r1
     4d2:	ff d1       	rcall	.+1022   	; 0x8d2 <lcdWriteText>
     4d4:	8d b7       	in	r24, 0x3d	; 61
     4d6:	9e b7       	in	r25, 0x3e	; 62
     4d8:	08 96       	adiw	r24, 0x08	; 8
     4da:	0f b6       	in	r0, 0x3f	; 63
     4dc:	f8 94       	cli
     4de:	de bf       	out	0x3e, r29	; 62
     4e0:	0f be       	out	0x3f, r0	; 63
     4e2:	cd bf       	out	0x3d, r28	; 61
     4e4:	8c 89       	ldd	r24, Y+20	; 0x14
        }
        lcdWriteText(1,4,"%3u",propot1);
     4e6:	8f 93       	push	r24
     4e8:	8b 89       	ldd	r24, Y+19	; 0x13
     4ea:	8f 93       	push	r24
     4ec:	82 e6       	ldi	r24, 0x62	; 98
     4ee:	92 e0       	ldi	r25, 0x02	; 2
     4f0:	89 2f       	mov	r24, r25
     4f2:	8f 93       	push	r24
     4f4:	82 e6       	ldi	r24, 0x62	; 98
     4f6:	92 e0       	ldi	r25, 0x02	; 2
     4f8:	8f 93       	push	r24
     4fa:	84 e0       	ldi	r24, 0x04	; 4
     4fc:	8f 93       	push	r24
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	8f 93       	push	r24
     502:	e7 d1       	rcall	.+974    	; 0x8d2 <lcdWriteText>
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	0f 90       	pop	r0
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	88 85       	ldd	r24, Y+8	; 0x08
        if (flagpro1)
     512:	99 85       	ldd	r25, Y+9	; 0x09
     514:	89 2b       	or	r24, r25
     516:	b9 f0       	breq	.+46     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
     518:	8f 81       	ldd	r24, Y+7	; 0x07
        {
            lcdWriteText(1,16,"+%2u",propunkt1);
     51a:	8f 93       	push	r24
     51c:	8e 81       	ldd	r24, Y+6	; 0x06
     51e:	8f 93       	push	r24
     520:	86 e6       	ldi	r24, 0x66	; 102
     522:	92 e0       	ldi	r25, 0x02	; 2
     524:	89 2f       	mov	r24, r25
     526:	8f 93       	push	r24
     528:	86 e6       	ldi	r24, 0x66	; 102
     52a:	92 e0       	ldi	r25, 0x02	; 2
     52c:	8f 93       	push	r24
     52e:	80 e1       	ldi	r24, 0x10	; 16
     530:	8f 93       	push	r24
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	8f 93       	push	r24
     536:	cd d1       	rcall	.+922    	; 0x8d2 <lcdWriteText>
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0
     53c:	0f 90       	pop	r0
     53e:	0f 90       	pop	r0
     540:	0f 90       	pop	r0
     542:	0f 90       	pop	r0
     544:	16 c0       	rjmp	.+44     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
     546:	8f 81       	ldd	r24, Y+7	; 0x07
        } 
        else
        {
            lcdWriteText(1,16,"-%2u",propunkt1);
     548:	8f 93       	push	r24
     54a:	8e 81       	ldd	r24, Y+6	; 0x06
     54c:	8f 93       	push	r24
     54e:	8b e6       	ldi	r24, 0x6B	; 107
     550:	92 e0       	ldi	r25, 0x02	; 2
     552:	89 2f       	mov	r24, r25
     554:	8f 93       	push	r24
     556:	8b e6       	ldi	r24, 0x6B	; 107
     558:	92 e0       	ldi	r25, 0x02	; 2
     55a:	8f 93       	push	r24
     55c:	80 e1       	ldi	r24, 0x10	; 16
     55e:	8f 93       	push	r24
     560:	81 e0       	ldi	r24, 0x01	; 1
     562:	8f 93       	push	r24
     564:	b6 d1       	rcall	.+876    	; 0x8d2 <lcdWriteText>
     566:	0f 90       	pop	r0
     568:	0f 90       	pop	r0
     56a:	0f 90       	pop	r0
     56c:	0f 90       	pop	r0
     56e:	0f 90       	pop	r0
     570:	0f 90       	pop	r0
     572:	8c 85       	ldd	r24, Y+12	; 0x0c
        }
        if (flagmv2)
     574:	88 23       	and	r24, r24
     576:	b9 f0       	breq	.+46     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
     578:	88 8d       	ldd	r24, Y+24	; 0x18
        {
            lcdWriteText(2,9,"  %03u mV", outz22);
     57a:	8f 93       	push	r24
     57c:	8f 89       	ldd	r24, Y+23	; 0x17
     57e:	8f 93       	push	r24
     580:	8b e4       	ldi	r24, 0x4B	; 75
     582:	92 e0       	ldi	r25, 0x02	; 2
     584:	89 2f       	mov	r24, r25
     586:	8f 93       	push	r24
     588:	8b e4       	ldi	r24, 0x4B	; 75
     58a:	92 e0       	ldi	r25, 0x02	; 2
     58c:	8f 93       	push	r24
     58e:	89 e0       	ldi	r24, 0x09	; 9
     590:	8f 93       	push	r24
     592:	82 e0       	ldi	r24, 0x02	; 2
     594:	8f 93       	push	r24
     596:	9d d1       	rcall	.+826    	; 0x8d2 <lcdWriteText>
     598:	0f 90       	pop	r0
     59a:	0f 90       	pop	r0
     59c:	0f 90       	pop	r0
     59e:	0f 90       	pop	r0
     5a0:	0f 90       	pop	r0
     5a2:	0f 90       	pop	r0
     5a4:	1d c0       	rjmp	.+58     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
     5a6:	88 8d       	ldd	r24, Y+24	; 0x18
        }
        else
        {
            lcdWriteText(2,9,"%u.%03u V   ",outz21,outz22);
     5a8:	8f 93       	push	r24
     5aa:	8f 89       	ldd	r24, Y+23	; 0x17
     5ac:	8f 93       	push	r24
     5ae:	8b 85       	ldd	r24, Y+11	; 0x0b
     5b0:	8f 93       	push	r24
     5b2:	8a 85       	ldd	r24, Y+10	; 0x0a
     5b4:	8f 93       	push	r24
     5b6:	85 e5       	ldi	r24, 0x55	; 85
     5b8:	92 e0       	ldi	r25, 0x02	; 2
     5ba:	89 2f       	mov	r24, r25
     5bc:	8f 93       	push	r24
     5be:	85 e5       	ldi	r24, 0x55	; 85
     5c0:	92 e0       	ldi	r25, 0x02	; 2
     5c2:	8f 93       	push	r24
     5c4:	89 e0       	ldi	r24, 0x09	; 9
     5c6:	8f 93       	push	r24
     5c8:	82 e0       	ldi	r24, 0x02	; 2
     5ca:	8f 93       	push	r24
     5cc:	82 d1       	rcall	.+772    	; 0x8d2 <lcdWriteText>
     5ce:	2d b7       	in	r18, 0x3d	; 61
     5d0:	3e b7       	in	r19, 0x3e	; 62
     5d2:	28 5f       	subi	r18, 0xF8	; 248
     5d4:	3f 4f       	sbci	r19, 0xFF	; 255
     5d6:	0f b6       	in	r0, 0x3f	; 63
     5d8:	f8 94       	cli
     5da:	de bf       	out	0x3e, r29	; 62
     5dc:	0f be       	out	0x3f, r0	; 63
     5de:	cd bf       	out	0x3d, r28	; 61
     5e0:	2b 89       	ldd	r18, Y+19	; 0x13
        }
        
        if (propot1<propot2)
     5e2:	3c 89       	ldd	r19, Y+20	; 0x14
     5e4:	89 8d       	ldd	r24, Y+25	; 0x19
     5e6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5e8:	28 17       	cp	r18, r24
     5ea:	39 07       	cpc	r19, r25
     5ec:	b8 f4       	brcc	.+46     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
     5ee:	88 89       	ldd	r24, Y+16	; 0x10
        {
            lcdWriteText(3,9,"-%3u",valneg);
     5f0:	8f 93       	push	r24
     5f2:	8f 85       	ldd	r24, Y+15	; 0x0f
     5f4:	8f 93       	push	r24
     5f6:	80 e7       	ldi	r24, 0x70	; 112
     5f8:	92 e0       	ldi	r25, 0x02	; 2
     5fa:	89 2f       	mov	r24, r25
     5fc:	8f 93       	push	r24
     5fe:	80 e7       	ldi	r24, 0x70	; 112
     600:	92 e0       	ldi	r25, 0x02	; 2
     602:	8f 93       	push	r24
     604:	89 e0       	ldi	r24, 0x09	; 9
     606:	8f 93       	push	r24
     608:	83 e0       	ldi	r24, 0x03	; 3
     60a:	8f 93       	push	r24
     60c:	62 d1       	rcall	.+708    	; 0x8d2 <lcdWriteText>
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
     61a:	08 ce       	rjmp	.-1008   	; 0x22c <main+0x106>
     61c:	89 a1       	ldd	r24, Y+33	; 0x21
        } 
        else
        {
            lcdWriteText(3,9,"+%3u%c     ",valpos,prozentzeichen);
     61e:	88 2f       	mov	r24, r24
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	29 2f       	mov	r18, r25
     624:	2f 93       	push	r18
     626:	8f 93       	push	r24
     628:	8e 85       	ldd	r24, Y+14	; 0x0e
     62a:	8f 93       	push	r24
     62c:	8d 85       	ldd	r24, Y+13	; 0x0d
     62e:	8f 93       	push	r24
     630:	85 e7       	ldi	r24, 0x75	; 117
     632:	92 e0       	ldi	r25, 0x02	; 2
     634:	89 2f       	mov	r24, r25
     636:	8f 93       	push	r24
     638:	85 e7       	ldi	r24, 0x75	; 117
     63a:	92 e0       	ldi	r25, 0x02	; 2
     63c:	8f 93       	push	r24
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	8f 93       	push	r24
     642:	83 e0       	ldi	r24, 0x03	; 3
     644:	8f 93       	push	r24
     646:	45 d1       	rcall	.+650    	; 0x8d2 <lcdWriteText>
     648:	4d b7       	in	r20, 0x3d	; 61
     64a:	5e b7       	in	r21, 0x3e	; 62
     64c:	48 5f       	subi	r20, 0xF8	; 248
     64e:	5f 4f       	sbci	r21, 0xFF	; 255
     650:	0f b6       	in	r0, 0x3f	; 63
     652:	f8 94       	cli
     654:	de bf       	out	0x3e, r29	; 62
     656:	0f be       	out	0x3f, r0	; 63
     658:	cd bf       	out	0x3d, r28	; 61
     65a:	e8 cd       	rjmp	.-1072   	; 0x22c <main+0x106>

0000065c <ledWriteAll>:
     65c:	82 b9       	out	0x02, r24	; 2
        }
    }
     65e:	95 b9       	out	0x05, r25	; 5
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     660:	08 95       	ret

00000662 <buttonReadAllPL>:
     662:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
     666:	08 95       	ret

00000668 <startSystemTimeMs>:
     668:	83 e0       	ldi	r24, 0x03	; 3
     66a:	84 bd       	out	0x24, r24	; 36
     66c:	8b e0       	ldi	r24, 0x0B	; 11
     66e:	85 bd       	out	0x25, r24	; 37
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
     676:	89 ef       	ldi	r24, 0xF9	; 249
     678:	87 bd       	out	0x27, r24	; 39
     67a:	08 95       	ret

0000067c <initAdc>:
     67c:	11 ba       	out	0x11, r1	; 17
     67e:	10 ba       	out	0x10, r1	; 16
     680:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
     684:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
     688:	80 e4       	ldi	r24, 0x40	; 64
     68a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
     68e:	8f e0       	ldi	r24, 0x0F	; 15
     690:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
     694:	8f ef       	ldi	r24, 0xFF	; 255
     696:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
     69a:	ea e7       	ldi	r30, 0x7A	; 122
     69c:	f0 e0       	ldi	r31, 0x00	; 0
     69e:	87 ea       	ldi	r24, 0xA7	; 167
     6a0:	80 83       	st	Z, r24
     6a2:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
     6a6:	80 81       	ld	r24, Z
     6a8:	80 64       	ori	r24, 0x40	; 64
     6aa:	80 83       	st	Z, r24
     6ac:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     6b0:	84 ff       	sbrs	r24, 4
     6b2:	fc cf       	rjmp	.-8      	; 0x6ac <initAdc+0x30>
     6b4:	ea e7       	ldi	r30, 0x7A	; 122
     6b6:	f0 e0       	ldi	r31, 0x00	; 0
     6b8:	80 81       	ld	r24, Z
     6ba:	8f 7e       	andi	r24, 0xEF	; 239
     6bc:	80 83       	st	Z, r24
     6be:	08 95       	ret

000006c0 <adcRead>:
     6c0:	90 e4       	ldi	r25, 0x40	; 64
     6c2:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
     6c6:	88 30       	cpi	r24, 0x08	; 8
     6c8:	60 f0       	brcs	.+24     	; 0x6e2 <adcRead+0x22>
     6ca:	ec e7       	ldi	r30, 0x7C	; 124
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	90 81       	ld	r25, Z
     6d0:	88 50       	subi	r24, 0x08	; 8
     6d2:	89 2b       	or	r24, r25
     6d4:	80 83       	st	Z, r24
     6d6:	eb e7       	ldi	r30, 0x7B	; 123
     6d8:	f0 e0       	ldi	r31, 0x00	; 0
     6da:	80 81       	ld	r24, Z
     6dc:	88 61       	ori	r24, 0x18	; 24
     6de:	80 83       	st	Z, r24
     6e0:	0a c0       	rjmp	.+20     	; 0x6f6 <adcRead+0x36>
     6e2:	ec e7       	ldi	r30, 0x7C	; 124
     6e4:	f0 e0       	ldi	r31, 0x00	; 0
     6e6:	90 81       	ld	r25, Z
     6e8:	89 2b       	or	r24, r25
     6ea:	80 83       	st	Z, r24
     6ec:	eb e7       	ldi	r30, 0x7B	; 123
     6ee:	f0 e0       	ldi	r31, 0x00	; 0
     6f0:	80 81       	ld	r24, Z
     6f2:	87 7e       	andi	r24, 0xE7	; 231
     6f4:	80 83       	st	Z, r24
     6f6:	ea e7       	ldi	r30, 0x7A	; 122
     6f8:	f0 e0       	ldi	r31, 0x00	; 0
     6fa:	80 81       	ld	r24, Z
     6fc:	80 64       	ori	r24, 0x40	; 64
     6fe:	80 83       	st	Z, r24
     700:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     704:	84 ff       	sbrs	r24, 4
     706:	fc cf       	rjmp	.-8      	; 0x700 <adcRead+0x40>
     708:	8f ea       	ldi	r24, 0xAF	; 175
     70a:	94 e0       	ldi	r25, 0x04	; 4
     70c:	01 97       	sbiw	r24, 0x01	; 1
     70e:	f1 f7       	brne	.-4      	; 0x70c <adcRead+0x4c>
     710:	00 c0       	rjmp	.+0      	; 0x712 <adcRead+0x52>
     712:	00 00       	nop
     714:	30 91 78 00 	lds	r19, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     718:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	98 2f       	mov	r25, r24
     720:	88 27       	eor	r24, r24
     722:	ea e7       	ldi	r30, 0x7A	; 122
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	20 81       	ld	r18, Z
     728:	2f 7e       	andi	r18, 0xEF	; 239
     72a:	20 83       	st	Z, r18
     72c:	83 2b       	or	r24, r19
     72e:	08 95       	ret

00000730 <rgbWrite>:
     730:	2f ef       	ldi	r18, 0xFF	; 255
     732:	33 e0       	ldi	r19, 0x03	; 3
     734:	f9 01       	movw	r30, r18
     736:	e8 1b       	sub	r30, r24
     738:	f9 0b       	sbc	r31, r25
     73a:	c9 01       	movw	r24, r18
     73c:	86 1b       	sub	r24, r22
     73e:	97 0b       	sbc	r25, r23
     740:	24 1b       	sub	r18, r20
     742:	35 0b       	sbc	r19, r21
     744:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
     748:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
     74c:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
     750:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
     754:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
     758:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
     75c:	08 95       	ret

0000075e <initRgb>:
     75e:	8e ef       	ldi	r24, 0xFE	; 254
     760:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
     764:	8b e1       	ldi	r24, 0x1B	; 27
     766:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
     76a:	83 e0       	ldi	r24, 0x03	; 3
     76c:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     770:	8f ef       	ldi	r24, 0xFF	; 255
     772:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     776:	40 e0       	ldi	r20, 0x00	; 0
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	60 e0       	ldi	r22, 0x00	; 0
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	d6 cf       	rjmp	.-84     	; 0x730 <rgbWrite>
     784:	08 95       	ret

00000786 <lcdSid>:
     786:	88 23       	and	r24, r24
     788:	21 f0       	breq	.+8      	; 0x792 <lcdSid+0xc>
     78a:	84 b3       	in	r24, 0x14	; 20
     78c:	81 60       	ori	r24, 0x01	; 1
     78e:	84 bb       	out	0x14, r24	; 20
     790:	08 95       	ret
     792:	84 b3       	in	r24, 0x14	; 20
     794:	8e 7f       	andi	r24, 0xFE	; 254
     796:	84 bb       	out	0x14, r24	; 20
     798:	08 95       	ret

0000079a <lcdSclk>:
     79a:	88 23       	and	r24, r24
     79c:	21 f0       	breq	.+8      	; 0x7a6 <lcdSclk+0xc>
     79e:	84 b3       	in	r24, 0x14	; 20
     7a0:	82 60       	ori	r24, 0x02	; 2
     7a2:	84 bb       	out	0x14, r24	; 20
     7a4:	08 95       	ret
     7a6:	84 b3       	in	r24, 0x14	; 20
     7a8:	8d 7f       	andi	r24, 0xFD	; 253
     7aa:	84 bb       	out	0x14, r24	; 20
     7ac:	08 95       	ret

000007ae <lcdLight>:
     7ae:	81 11       	cpse	r24, r1
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <lcdLight+0xc>
     7b2:	84 b5       	in	r24, 0x24	; 36
     7b4:	8f 7d       	andi	r24, 0xDF	; 223
     7b6:	84 bd       	out	0x24, r24	; 36
     7b8:	08 95       	ret
     7ba:	94 b5       	in	r25, 0x24	; 36
     7bc:	90 62       	ori	r25, 0x20	; 32
     7be:	94 bd       	out	0x24, r25	; 36
     7c0:	88 bd       	out	0x28, r24	; 40
     7c2:	08 95       	ret

000007c4 <writeLcdF>:
     7c4:	ef 92       	push	r14
     7c6:	ff 92       	push	r15
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	7c 01       	movw	r14, r24
     7d2:	eb 01       	movw	r28, r22
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	d7 df       	rcall	.-82     	; 0x786 <lcdSid>
     7d8:	00 e0       	ldi	r16, 0x00	; 0
     7da:	10 e0       	ldi	r17, 0x00	; 0
     7dc:	06 c0       	rjmp	.+12     	; 0x7ea <writeLcdF+0x26>
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	dc df       	rcall	.-72     	; 0x79a <lcdSclk>
     7e2:	81 e0       	ldi	r24, 0x01	; 1
     7e4:	da df       	rcall	.-76     	; 0x79a <lcdSclk>
     7e6:	0f 5f       	subi	r16, 0xFF	; 255
     7e8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ea:	05 30       	cpi	r16, 0x05	; 5
     7ec:	11 05       	cpc	r17, r1
     7ee:	b8 f3       	brcs	.-18     	; 0x7de <writeLcdF+0x1a>
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	c9 df       	rcall	.-110    	; 0x786 <lcdSid>
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	d1 df       	rcall	.-94     	; 0x79a <lcdSclk>
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	cf df       	rcall	.-98     	; 0x79a <lcdSclk>
     7fc:	83 e4       	ldi	r24, 0x43	; 67
     7fe:	e8 16       	cp	r14, r24
     800:	f1 04       	cpc	r15, r1
     802:	19 f4       	brne	.+6      	; 0x80a <writeLcdF+0x46>
     804:	80 e0       	ldi	r24, 0x00	; 0
     806:	bf df       	rcall	.-130    	; 0x786 <lcdSid>
     808:	02 c0       	rjmp	.+4      	; 0x80e <writeLcdF+0x4a>
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	bc df       	rcall	.-136    	; 0x786 <lcdSid>
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	c4 df       	rcall	.-120    	; 0x79a <lcdSclk>
     812:	81 e0       	ldi	r24, 0x01	; 1
     814:	c2 df       	rcall	.-124    	; 0x79a <lcdSclk>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	b6 df       	rcall	.-148    	; 0x786 <lcdSid>
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	be df       	rcall	.-132    	; 0x79a <lcdSclk>
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	bc df       	rcall	.-136    	; 0x79a <lcdSclk>
     822:	00 e0       	ldi	r16, 0x00	; 0
     824:	10 e0       	ldi	r17, 0x00	; 0
     826:	11 c0       	rjmp	.+34     	; 0x84a <writeLcdF+0x86>
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	b7 df       	rcall	.-146    	; 0x79a <lcdSclk>
     82c:	c0 ff       	sbrs	r28, 0
     82e:	03 c0       	rjmp	.+6      	; 0x836 <writeLcdF+0x72>
     830:	81 e0       	ldi	r24, 0x01	; 1
     832:	a9 df       	rcall	.-174    	; 0x786 <lcdSid>
     834:	02 c0       	rjmp	.+4      	; 0x83a <writeLcdF+0x76>
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	a6 df       	rcall	.-180    	; 0x786 <lcdSid>
     83a:	d6 95       	lsr	r29
     83c:	c7 95       	ror	r28
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	ac df       	rcall	.-168    	; 0x79a <lcdSclk>
     842:	81 e0       	ldi	r24, 0x01	; 1
     844:	aa df       	rcall	.-172    	; 0x79a <lcdSclk>
     846:	0f 5f       	subi	r16, 0xFF	; 255
     848:	1f 4f       	sbci	r17, 0xFF	; 255
     84a:	04 30       	cpi	r16, 0x04	; 4
     84c:	11 05       	cpc	r17, r1
     84e:	60 f3       	brcs	.-40     	; 0x828 <writeLcdF+0x64>
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	99 df       	rcall	.-206    	; 0x786 <lcdSid>
     854:	00 e0       	ldi	r16, 0x00	; 0
     856:	10 e0       	ldi	r17, 0x00	; 0
     858:	06 c0       	rjmp	.+12     	; 0x866 <writeLcdF+0xa2>
     85a:	80 e0       	ldi	r24, 0x00	; 0
     85c:	9e df       	rcall	.-196    	; 0x79a <lcdSclk>
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	9c df       	rcall	.-200    	; 0x79a <lcdSclk>
     862:	0f 5f       	subi	r16, 0xFF	; 255
     864:	1f 4f       	sbci	r17, 0xFF	; 255
     866:	04 30       	cpi	r16, 0x04	; 4
     868:	11 05       	cpc	r17, r1
     86a:	b8 f3       	brcs	.-18     	; 0x85a <writeLcdF+0x96>
     86c:	00 e0       	ldi	r16, 0x00	; 0
     86e:	10 e0       	ldi	r17, 0x00	; 0
     870:	11 c0       	rjmp	.+34     	; 0x894 <writeLcdF+0xd0>
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	92 df       	rcall	.-220    	; 0x79a <lcdSclk>
     876:	c0 ff       	sbrs	r28, 0
     878:	03 c0       	rjmp	.+6      	; 0x880 <writeLcdF+0xbc>
     87a:	81 e0       	ldi	r24, 0x01	; 1
     87c:	84 df       	rcall	.-248    	; 0x786 <lcdSid>
     87e:	02 c0       	rjmp	.+4      	; 0x884 <writeLcdF+0xc0>
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	81 df       	rcall	.-254    	; 0x786 <lcdSid>
     884:	d6 95       	lsr	r29
     886:	c7 95       	ror	r28
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	87 df       	rcall	.-242    	; 0x79a <lcdSclk>
     88c:	81 e0       	ldi	r24, 0x01	; 1
     88e:	85 df       	rcall	.-246    	; 0x79a <lcdSclk>
     890:	0f 5f       	subi	r16, 0xFF	; 255
     892:	1f 4f       	sbci	r17, 0xFF	; 255
     894:	04 30       	cpi	r16, 0x04	; 4
     896:	11 05       	cpc	r17, r1
     898:	60 f3       	brcs	.-40     	; 0x872 <writeLcdF+0xae>
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	74 df       	rcall	.-280    	; 0x786 <lcdSid>
     89e:	c0 e0       	ldi	r28, 0x00	; 0
     8a0:	d0 e0       	ldi	r29, 0x00	; 0
     8a2:	05 c0       	rjmp	.+10     	; 0x8ae <writeLcdF+0xea>
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	79 df       	rcall	.-270    	; 0x79a <lcdSclk>
     8a8:	81 e0       	ldi	r24, 0x01	; 1
     8aa:	77 df       	rcall	.-274    	; 0x79a <lcdSclk>
     8ac:	21 96       	adiw	r28, 0x01	; 1
     8ae:	c4 30       	cpi	r28, 0x04	; 4
     8b0:	d1 05       	cpc	r29, r1
     8b2:	c0 f3       	brcs	.-16     	; 0x8a4 <writeLcdF+0xe0>
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	67 df       	rcall	.-306    	; 0x786 <lcdSid>
     8b8:	87 ec       	ldi	r24, 0xC7	; 199
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	01 97       	sbiw	r24, 0x01	; 1
     8be:	f1 f7       	brne	.-4      	; 0x8bc <writeLcdF+0xf8>
     8c0:	00 c0       	rjmp	.+0      	; 0x8c2 <writeLcdF+0xfe>
     8c2:	00 00       	nop
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	1f 91       	pop	r17
     8ca:	0f 91       	pop	r16
     8cc:	ff 90       	pop	r15
     8ce:	ef 90       	pop	r14
     8d0:	08 95       	ret

000008d2 <lcdWriteText>:
     8d2:	1f 93       	push	r17
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	cd b7       	in	r28, 0x3d	; 61
     8da:	de b7       	in	r29, 0x3e	; 62
     8dc:	65 97       	sbiw	r28, 0x15	; 21
     8de:	0f b6       	in	r0, 0x3f	; 63
     8e0:	f8 94       	cli
     8e2:	de bf       	out	0x3e, r29	; 62
     8e4:	0f be       	out	0x3f, r0	; 63
     8e6:	cd bf       	out	0x3d, r28	; 61
     8e8:	9e 01       	movw	r18, r28
     8ea:	20 5e       	subi	r18, 0xE0	; 224
     8ec:	3f 4f       	sbci	r19, 0xFF	; 255
     8ee:	4e 8d       	ldd	r20, Y+30	; 0x1e
     8f0:	5f 8d       	ldd	r21, Y+31	; 0x1f
     8f2:	65 e1       	ldi	r22, 0x15	; 21
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	ce 01       	movw	r24, r28
     8f8:	01 96       	adiw	r24, 0x01	; 1
     8fa:	6a d2       	rcall	.+1236   	; 0xdd0 <vsnprintf>
     8fc:	6d 8d       	ldd	r22, Y+29	; 0x1d
     8fe:	8c 8d       	ldd	r24, Y+28	; 0x1c
     900:	90 e2       	ldi	r25, 0x20	; 32
     902:	89 9f       	mul	r24, r25
     904:	60 0d       	add	r22, r0
     906:	11 24       	eor	r1, r1
     908:	60 68       	ori	r22, 0x80	; 128
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	83 e4       	ldi	r24, 0x43	; 67
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	59 df       	rcall	.-334    	; 0x7c4 <writeLcdF>
     912:	10 e0       	ldi	r17, 0x00	; 0
     914:	05 c0       	rjmp	.+10     	; 0x920 <lcdWriteText+0x4e>
     916:	1f 5f       	subi	r17, 0xFF	; 255
     918:	70 e0       	ldi	r23, 0x00	; 0
     91a:	84 e4       	ldi	r24, 0x44	; 68
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	52 df       	rcall	.-348    	; 0x7c4 <writeLcdF>
     920:	e1 e0       	ldi	r30, 0x01	; 1
     922:	f0 e0       	ldi	r31, 0x00	; 0
     924:	ec 0f       	add	r30, r28
     926:	fd 1f       	adc	r31, r29
     928:	e1 0f       	add	r30, r17
     92a:	f1 1d       	adc	r31, r1
     92c:	60 81       	ld	r22, Z
     92e:	61 11       	cpse	r22, r1
     930:	f2 cf       	rjmp	.-28     	; 0x916 <lcdWriteText+0x44>
     932:	65 96       	adiw	r28, 0x15	; 21
     934:	0f b6       	in	r0, 0x3f	; 63
     936:	f8 94       	cli
     938:	de bf       	out	0x3e, r29	; 62
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	cd bf       	out	0x3d, r28	; 61
     93e:	df 91       	pop	r29
     940:	cf 91       	pop	r28
     942:	1f 91       	pop	r17
     944:	08 95       	ret

00000946 <lcdClear>:
     946:	61 e0       	ldi	r22, 0x01	; 1
     948:	70 e0       	ldi	r23, 0x00	; 0
     94a:	83 e4       	ldi	r24, 0x43	; 67
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	3a df       	rcall	.-396    	; 0x7c4 <writeLcdF>
     950:	8f e3       	ldi	r24, 0x3F	; 63
     952:	9f e1       	ldi	r25, 0x1F	; 31
     954:	01 97       	sbiw	r24, 0x01	; 1
     956:	f1 f7       	brne	.-4      	; 0x954 <lcdClear+0xe>
     958:	00 c0       	rjmp	.+0      	; 0x95a <lcdClear+0x14>
     95a:	00 00       	nop
     95c:	81 eb       	ldi	r24, 0xB1	; 177
     95e:	92 e0       	ldi	r25, 0x02	; 2
     960:	9f 93       	push	r25
     962:	8f 93       	push	r24
     964:	1f 92       	push	r1
     966:	1f 92       	push	r1
     968:	b4 df       	rcall	.-152    	; 0x8d2 <lcdWriteText>
     96a:	0f 90       	pop	r0
     96c:	0f 90       	pop	r0
     96e:	0f 90       	pop	r0
     970:	0f 90       	pop	r0
     972:	08 95       	ret

00000974 <initLcd>:
     974:	81 e0       	ldi	r24, 0x01	; 1
     976:	11 df       	rcall	.-478    	; 0x79a <lcdSclk>
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	05 df       	rcall	.-502    	; 0x786 <lcdSid>
     97c:	64 e3       	ldi	r22, 0x34	; 52
     97e:	70 e0       	ldi	r23, 0x00	; 0
     980:	83 e4       	ldi	r24, 0x43	; 67
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	1f df       	rcall	.-450    	; 0x7c4 <writeLcdF>
     986:	69 e0       	ldi	r22, 0x09	; 9
     988:	70 e0       	ldi	r23, 0x00	; 0
     98a:	83 e4       	ldi	r24, 0x43	; 67
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	1a df       	rcall	.-460    	; 0x7c4 <writeLcdF>
     990:	60 e3       	ldi	r22, 0x30	; 48
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	83 e4       	ldi	r24, 0x43	; 67
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	15 df       	rcall	.-470    	; 0x7c4 <writeLcdF>
     99a:	6c e0       	ldi	r22, 0x0C	; 12
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	83 e4       	ldi	r24, 0x43	; 67
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	10 df       	rcall	.-480    	; 0x7c4 <writeLcdF>
     9a4:	d0 df       	rcall	.-96     	; 0x946 <lcdClear>
     9a6:	67 e0       	ldi	r22, 0x07	; 7
     9a8:	70 e0       	ldi	r23, 0x00	; 0
     9aa:	83 e4       	ldi	r24, 0x43	; 67
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0a df       	rcall	.-492    	; 0x7c4 <writeLcdF>
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	fd ce       	rjmp	.-518    	; 0x7ae <lcdLight>
     9b4:	08 95       	ret

000009b6 <initBoard>:
     9b6:	ff 92       	push	r15
     9b8:	0f 93       	push	r16
     9ba:	1f 93       	push	r17
     9bc:	cf 93       	push	r28
     9be:	df 93       	push	r29
     9c0:	c8 2f       	mov	r28, r24
     9c2:	85 b7       	in	r24, 0x35	; 53
     9c4:	85 bf       	out	0x35, r24	; 53
     9c6:	12 b8       	out	0x02, r1	; 2
     9c8:	8f ef       	ldi	r24, 0xFF	; 255
     9ca:	81 b9       	out	0x01, r24	; 1
     9cc:	15 b8       	out	0x05, r1	; 5
     9ce:	84 b9       	out	0x04, r24	; 4
     9d0:	88 b9       	out	0x08, r24	; 8
     9d2:	17 b8       	out	0x07, r1	; 7
     9d4:	8b b9       	out	0x0b, r24	; 11
     9d6:	1a b8       	out	0x0a, r1	; 10
     9d8:	8e b9       	out	0x0e, r24	; 14
     9da:	1d b8       	out	0x0d, r1	; 13
     9dc:	9e b1       	in	r25, 0x0e	; 14
     9de:	9b 7f       	andi	r25, 0xFB	; 251
     9e0:	9e b9       	out	0x0e, r25	; 14
     9e2:	11 ba       	out	0x11, r1	; 17
     9e4:	10 ba       	out	0x10, r1	; 16
     9e6:	94 e0       	ldi	r25, 0x04	; 4
     9e8:	94 bb       	out	0x14, r25	; 20
     9ea:	93 b3       	in	r25, 0x13	; 19
     9ec:	93 60       	ori	r25, 0x03	; 3
     9ee:	93 bb       	out	0x13, r25	; 19
     9f0:	93 b3       	in	r25, 0x13	; 19
     9f2:	90 62       	ori	r25, 0x20	; 32
     9f4:	93 bb       	out	0x13, r25	; 19
     9f6:	97 ec       	ldi	r25, 0xC7	; 199
     9f8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
     9fc:	98 e3       	ldi	r25, 0x38	; 56
     9fe:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
     a02:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
     a06:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
     a0a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
     a0e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
     a12:	8c e3       	ldi	r24, 0x3C	; 60
     a14:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     a18:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
     a1c:	78 94       	sei
     a1e:	24 de       	rcall	.-952    	; 0x668 <startSystemTimeMs>
     a20:	a9 df       	rcall	.-174    	; 0x974 <initLcd>
     a22:	2c de       	rcall	.-936    	; 0x67c <initAdc>
     a24:	9c de       	rcall	.-712    	; 0x75e <initRgb>
     a26:	cc 23       	and	r28, r28
     a28:	09 f4       	brne	.+2      	; 0xa2c <initBoard+0x76>
     a2a:	a3 c0       	rjmp	.+326    	; 0xb72 <initBoard+0x1bc>
     a2c:	8f ef       	ldi	r24, 0xFF	; 255
     a2e:	bf de       	rcall	.-642    	; 0x7ae <lcdLight>
     a30:	40 e0       	ldi	r20, 0x00	; 0
     a32:	50 e0       	ldi	r21, 0x00	; 0
     a34:	6f ef       	ldi	r22, 0xFF	; 255
     a36:	73 e0       	ldi	r23, 0x03	; 3
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	79 de       	rcall	.-782    	; 0x730 <rgbWrite>
     a3e:	8e e9       	ldi	r24, 0x9E	; 158
     a40:	92 e0       	ldi	r25, 0x02	; 2
     a42:	9f 93       	push	r25
     a44:	8f 93       	push	r24
     a46:	1f 92       	push	r1
     a48:	1f 92       	push	r1
     a4a:	43 df       	rcall	.-378    	; 0x8d2 <lcdWriteText>
     a4c:	83 eb       	ldi	r24, 0xB3	; 179
     a4e:	92 e0       	ldi	r25, 0x02	; 2
     a50:	9f 93       	push	r25
     a52:	8f 93       	push	r24
     a54:	1f 92       	push	r1
     a56:	81 e0       	ldi	r24, 0x01	; 1
     a58:	8f 93       	push	r24
     a5a:	3b df       	rcall	.-394    	; 0x8d2 <lcdWriteText>
     a5c:	89 e8       	ldi	r24, 0x89	; 137
     a5e:	92 e0       	ldi	r25, 0x02	; 2
     a60:	9f 93       	push	r25
     a62:	8f 93       	push	r24
     a64:	1f 92       	push	r1
     a66:	82 e0       	ldi	r24, 0x02	; 2
     a68:	8f 93       	push	r24
     a6a:	33 df       	rcall	.-410    	; 0x8d2 <lcdWriteText>
     a6c:	88 ec       	ldi	r24, 0xC8	; 200
     a6e:	92 e0       	ldi	r25, 0x02	; 2
     a70:	9f 93       	push	r25
     a72:	8f 93       	push	r24
     a74:	1f 92       	push	r1
     a76:	83 e0       	ldi	r24, 0x03	; 3
     a78:	8f 93       	push	r24
     a7a:	2b df       	rcall	.-426    	; 0x8d2 <lcdWriteText>
     a7c:	8d b7       	in	r24, 0x3d	; 61
     a7e:	9e b7       	in	r25, 0x3e	; 62
     a80:	40 96       	adiw	r24, 0x10	; 16
     a82:	0f b6       	in	r0, 0x3f	; 63
     a84:	f8 94       	cli
     a86:	9e bf       	out	0x3e, r25	; 62
     a88:	0f be       	out	0x3f, r0	; 63
     a8a:	8d bf       	out	0x3d, r24	; 61
     a8c:	ff 24       	eor	r15, r15
     a8e:	f3 94       	inc	r15
     a90:	c0 e0       	ldi	r28, 0x00	; 0
     a92:	10 e0       	ldi	r17, 0x00	; 0
     a94:	01 e0       	ldi	r16, 0x01	; 1
     a96:	d0 e0       	ldi	r29, 0x00	; 0
     a98:	00 23       	and	r16, r16
     a9a:	51 f0       	breq	.+20     	; 0xab0 <initBoard+0xfa>
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	90 e8       	ldi	r25, 0x80	; 128
     aa0:	0d 2e       	mov	r0, r29
     aa2:	02 c0       	rjmp	.+4      	; 0xaa8 <initBoard+0xf2>
     aa4:	96 95       	lsr	r25
     aa6:	87 95       	ror	r24
     aa8:	0a 94       	dec	r0
     aaa:	e2 f7       	brpl	.-8      	; 0xaa4 <initBoard+0xee>
     aac:	d7 dd       	rcall	.-1106   	; 0x65c <ledWriteAll>
     aae:	09 c0       	rjmp	.+18     	; 0xac2 <initBoard+0x10c>
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	0d 2e       	mov	r0, r29
     ab6:	02 c0       	rjmp	.+4      	; 0xabc <initBoard+0x106>
     ab8:	88 0f       	add	r24, r24
     aba:	99 1f       	adc	r25, r25
     abc:	0a 94       	dec	r0
     abe:	e2 f7       	brpl	.-8      	; 0xab8 <initBoard+0x102>
     ac0:	cd dd       	rcall	.-1126   	; 0x65c <ledWriteAll>
     ac2:	df 5f       	subi	r29, 0xFF	; 255
     ac4:	d1 31       	cpi	r29, 0x11	; 17
     ac6:	28 f0       	brcs	.+10     	; 0xad2 <initBoard+0x11c>
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	01 11       	cpse	r16, r1
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	08 2f       	mov	r16, r24
     ad0:	d0 e0       	ldi	r29, 0x00	; 0
     ad2:	ff 20       	and	r15, r15
     ad4:	11 f0       	breq	.+4      	; 0xada <initBoard+0x124>
     ad6:	ce 5f       	subi	r28, 0xFE	; 254
     ad8:	01 c0       	rjmp	.+2      	; 0xadc <initBoard+0x126>
     ada:	c2 50       	subi	r28, 0x02	; 2
     adc:	8c 2f       	mov	r24, r28
     ade:	67 de       	rcall	.-818    	; 0x7ae <lcdLight>
     ae0:	ce 3f       	cpi	r28, 0xFE	; 254
     ae2:	09 f4       	brne	.+2      	; 0xae6 <initBoard+0x130>
     ae4:	f1 2c       	mov	r15, r1
     ae6:	c8 37       	cpi	r28, 0x78	; 120
     ae8:	11 f4       	brne	.+4      	; 0xaee <initBoard+0x138>
     aea:	ff 24       	eor	r15, r15
     aec:	f3 94       	inc	r15
     aee:	11 11       	cpse	r17, r1
     af0:	17 c0       	rjmp	.+46     	; 0xb20 <initBoard+0x16a>
     af2:	b7 dd       	rcall	.-1170   	; 0x662 <buttonReadAllPL>
     af4:	83 7c       	andi	r24, 0xC3	; 195
     af6:	a1 f0       	breq	.+40     	; 0xb20 <initBoard+0x16a>
     af8:	40 e0       	ldi	r20, 0x00	; 0
     afa:	50 e0       	ldi	r21, 0x00	; 0
     afc:	66 e2       	ldi	r22, 0x26	; 38
     afe:	72 e0       	ldi	r23, 0x02	; 2
     b00:	8f ef       	ldi	r24, 0xFF	; 255
     b02:	93 e0       	ldi	r25, 0x03	; 3
     b04:	15 de       	rcall	.-982    	; 0x730 <rgbWrite>
     b06:	8d ed       	ldi	r24, 0xDD	; 221
     b08:	92 e0       	ldi	r25, 0x02	; 2
     b0a:	9f 93       	push	r25
     b0c:	8f 93       	push	r24
     b0e:	1f 92       	push	r1
     b10:	83 e0       	ldi	r24, 0x03	; 3
     b12:	8f 93       	push	r24
     b14:	de de       	rcall	.-580    	; 0x8d2 <lcdWriteText>
     b16:	0f 90       	pop	r0
     b18:	0f 90       	pop	r0
     b1a:	0f 90       	pop	r0
     b1c:	0f 90       	pop	r0
     b1e:	11 e0       	ldi	r17, 0x01	; 1
     b20:	11 23       	and	r17, r17
     b22:	19 f0       	breq	.+6      	; 0xb2a <initBoard+0x174>
     b24:	9e dd       	rcall	.-1220   	; 0x662 <buttonReadAllPL>
     b26:	83 7c       	andi	r24, 0xC3	; 195
     b28:	39 f0       	breq	.+14     	; 0xb38 <initBoard+0x182>
     b2a:	8f ef       	ldi	r24, 0xFF	; 255
     b2c:	9c e7       	ldi	r25, 0x7C	; 124
     b2e:	01 97       	sbiw	r24, 0x01	; 1
     b30:	f1 f7       	brne	.-4      	; 0xb2e <initBoard+0x178>
     b32:	00 c0       	rjmp	.+0      	; 0xb34 <initBoard+0x17e>
     b34:	00 00       	nop
     b36:	b0 cf       	rjmp	.-160    	; 0xa98 <initBoard+0xe2>
     b38:	06 df       	rcall	.-500    	; 0x946 <lcdClear>
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	38 de       	rcall	.-912    	; 0x7ae <lcdLight>
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	8c dd       	rcall	.-1256   	; 0x65c <ledWriteAll>
     b44:	40 e0       	ldi	r20, 0x00	; 0
     b46:	50 e0       	ldi	r21, 0x00	; 0
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	ef dd       	rcall	.-1058   	; 0x730 <rgbWrite>
     b52:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <systemTimeMs>
     b56:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <systemTimeMs+0x1>
     b5a:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <systemTimeMs+0x2>
     b5e:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <systemTimeMs+0x3>
     b62:	10 92 fd 02 	sts	0x02FD, r1	; 0x8002fd <systemTimeMs+0x4>
     b66:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <systemTimeMs+0x5>
     b6a:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <systemTimeMs+0x6>
     b6e:	10 92 00 03 	sts	0x0300, r1	; 0x800300 <systemTimeMs+0x7>
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	1f 91       	pop	r17
     b78:	0f 91       	pop	r16
     b7a:	ff 90       	pop	r15
     b7c:	08 95       	ret

00000b7e <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     b7e:	cf 93       	push	r28
     b80:	df 93       	push	r29
     b82:	cd b7       	in	r28, 0x3d	; 61
     b84:	de b7       	in	r29, 0x3e	; 62
     b86:	28 97       	sbiw	r28, 0x08	; 8
     b88:	0f b6       	in	r0, 0x3f	; 63
     b8a:	f8 94       	cli
     b8c:	de bf       	out	0x3e, r29	; 62
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     b92:	88 e0       	ldi	r24, 0x08	; 8
     b94:	e1 e8       	ldi	r30, 0x81	; 129
     b96:	f2 e0       	ldi	r31, 0x02	; 2
     b98:	de 01       	movw	r26, r28
     b9a:	11 96       	adiw	r26, 0x01	; 1
     b9c:	01 90       	ld	r0, Z+
     b9e:	0d 92       	st	X+, r0
     ba0:	8a 95       	dec	r24
     ba2:	e1 f7       	brne	.-8      	; 0xb9c <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     ba4:	e5 e0       	ldi	r30, 0x05	; 5
     ba6:	f1 e0       	ldi	r31, 0x01	; 1
     ba8:	80 81       	ld	r24, Z
     baa:	8f 7b       	andi	r24, 0xBF	; 191
     bac:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     bae:	e0 91 f6 02 	lds	r30, 0x02F6	; 0x8002f6 <Zeilen_Nr.2743>
     bb2:	f0 91 f7 02 	lds	r31, 0x02F7	; 0x8002f7 <Zeilen_Nr.2743+0x1>
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	8c 0f       	add	r24, r28
     bbc:	9d 1f       	adc	r25, r29
     bbe:	e8 0f       	add	r30, r24
     bc0:	f9 1f       	adc	r31, r25
     bc2:	80 81       	ld	r24, Z
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	90 93 f5 02 	sts	0x02F5, r25	; 0x8002f5 <__data_end+0x1>
     bca:	80 93 f4 02 	sts	0x02F4, r24	; 0x8002f4 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	26 c0       	rjmp	.+76     	; 0xc1e <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     bd2:	e7 e3       	ldi	r30, 0x37	; 55
     bd4:	f0 e0       	ldi	r31, 0x00	; 0
     bd6:	e8 1b       	sub	r30, r24
     bd8:	f1 09       	sbc	r31, r1
     bda:	ee 0f       	add	r30, r30
     bdc:	ff 1f       	adc	r31, r31
     bde:	ee 5f       	subi	r30, 0xFE	; 254
     be0:	fc 4f       	sbci	r31, 0xFC	; 252
     be2:	40 81       	ld	r20, Z
     be4:	51 81       	ldd	r21, Z+1	; 0x01
     be6:	20 91 f4 02 	lds	r18, 0x02F4	; 0x8002f4 <__data_end>
     bea:	30 91 f5 02 	lds	r19, 0x02F5	; 0x8002f5 <__data_end+0x1>
     bee:	24 23       	and	r18, r20
     bf0:	35 23       	and	r19, r21
     bf2:	23 2b       	or	r18, r19
     bf4:	31 f0       	breq	.+12     	; 0xc02 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     bf6:	e5 e0       	ldi	r30, 0x05	; 5
     bf8:	f1 e0       	ldi	r31, 0x01	; 1
     bfa:	90 81       	ld	r25, Z
     bfc:	90 62       	ori	r25, 0x20	; 32
     bfe:	90 83       	st	Z, r25
     c00:	05 c0       	rjmp	.+10     	; 0xc0c <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     c02:	e5 e0       	ldi	r30, 0x05	; 5
     c04:	f1 e0       	ldi	r31, 0x01	; 1
     c06:	90 81       	ld	r25, Z
     c08:	9f 7d       	andi	r25, 0xDF	; 223
     c0a:	90 83       	st	Z, r25
        }
        CLOCK_1;
     c0c:	e5 e0       	ldi	r30, 0x05	; 5
     c0e:	f1 e0       	ldi	r31, 0x01	; 1
     c10:	90 81       	ld	r25, Z
     c12:	90 61       	ori	r25, 0x10	; 16
     c14:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     c16:	90 81       	ld	r25, Z
     c18:	9f 7e       	andi	r25, 0xEF	; 239
     c1a:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     c1c:	8f 5f       	subi	r24, 0xFF	; 255
     c1e:	88 33       	cpi	r24, 0x38	; 56
     c20:	c0 f2       	brcs	.-80     	; 0xbd2 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     c22:	e5 e0       	ldi	r30, 0x05	; 5
     c24:	f1 e0       	ldi	r31, 0x01	; 1
     c26:	80 81       	ld	r24, Z
     c28:	87 7f       	andi	r24, 0xF7	; 247
     c2a:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     c2c:	80 81       	ld	r24, Z
     c2e:	88 7f       	andi	r24, 0xF8	; 248
     c30:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     c32:	90 81       	ld	r25, Z
     c34:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <Zeilen_Nr.2743>
     c38:	89 2b       	or	r24, r25
     c3a:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     c3c:	80 81       	ld	r24, Z
     c3e:	80 64       	ori	r24, 0x40	; 64
     c40:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     c42:	80 81       	ld	r24, Z
     c44:	88 60       	ori	r24, 0x08	; 8
     c46:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     c48:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <Zeilen_Nr.2743>
     c4c:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <Zeilen_Nr.2743+0x1>
     c50:	87 30       	cpi	r24, 0x07	; 7
     c52:	91 05       	cpc	r25, r1
     c54:	30 f4       	brcc	.+12     	; 0xc62 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	90 93 f7 02 	sts	0x02F7, r25	; 0x8002f7 <Zeilen_Nr.2743+0x1>
     c5c:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Zeilen_Nr.2743>
     c60:	07 c0       	rjmp	.+14     	; 0xc70 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
     c62:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <Zeilen_Nr.2743+0x1>
     c66:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Zeilen_Nr.2743>
        writeTextFinished = 1;
     c6a:	81 e0       	ldi	r24, 0x01	; 1
     c6c:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <writeTextFinished>
    }
    
     c70:	28 96       	adiw	r28, 0x08	; 8
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	f8 94       	cli
     c76:	de bf       	out	0x3e, r29	; 62
     c78:	0f be       	out	0x3f, r0	; 63
     c7a:	cd bf       	out	0x3d, r28	; 61
     c7c:	df 91       	pop	r29
     c7e:	cf 91       	pop	r28
     c80:	08 95       	ret

00000c82 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     c82:	1f 92       	push	r1
     c84:	0f 92       	push	r0
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	0f 92       	push	r0
     c8a:	11 24       	eor	r1, r1
     c8c:	0b b6       	in	r0, 0x3b	; 59
     c8e:	0f 92       	push	r0
     c90:	2f 93       	push	r18
     c92:	3f 93       	push	r19
     c94:	4f 93       	push	r20
     c96:	5f 93       	push	r21
     c98:	6f 93       	push	r22
     c9a:	7f 93       	push	r23
     c9c:	8f 93       	push	r24
     c9e:	9f 93       	push	r25
     ca0:	af 93       	push	r26
     ca2:	bf 93       	push	r27
     ca4:	ef 93       	push	r30
     ca6:	ff 93       	push	r31
    systemTimeMs += 1;
     ca8:	20 91 f9 02 	lds	r18, 0x02F9	; 0x8002f9 <systemTimeMs>
     cac:	30 91 fa 02 	lds	r19, 0x02FA	; 0x8002fa <systemTimeMs+0x1>
     cb0:	40 91 fb 02 	lds	r20, 0x02FB	; 0x8002fb <systemTimeMs+0x2>
     cb4:	50 91 fc 02 	lds	r21, 0x02FC	; 0x8002fc <systemTimeMs+0x3>
     cb8:	60 91 fd 02 	lds	r22, 0x02FD	; 0x8002fd <systemTimeMs+0x4>
     cbc:	70 91 fe 02 	lds	r23, 0x02FE	; 0x8002fe <systemTimeMs+0x5>
     cc0:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <systemTimeMs+0x6>
     cc4:	90 91 00 03 	lds	r25, 0x0300	; 0x800300 <systemTimeMs+0x7>
     cc8:	a1 e0       	ldi	r26, 0x01	; 1
     cca:	76 d0       	rcall	.+236    	; 0xdb8 <__adddi3_s8>
     ccc:	20 93 f9 02 	sts	0x02F9, r18	; 0x8002f9 <systemTimeMs>
     cd0:	30 93 fa 02 	sts	0x02FA, r19	; 0x8002fa <systemTimeMs+0x1>
     cd4:	40 93 fb 02 	sts	0x02FB, r20	; 0x8002fb <systemTimeMs+0x2>
     cd8:	50 93 fc 02 	sts	0x02FC, r21	; 0x8002fc <systemTimeMs+0x3>
     cdc:	60 93 fd 02 	sts	0x02FD, r22	; 0x8002fd <systemTimeMs+0x4>
     ce0:	70 93 fe 02 	sts	0x02FE, r23	; 0x8002fe <systemTimeMs+0x5>
     ce4:	80 93 ff 02 	sts	0x02FF, r24	; 0x8002ff <systemTimeMs+0x6>
     ce8:	90 93 00 03 	sts	0x0300, r25	; 0x800300 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     cec:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <matrixRunning>
     cf0:	81 11       	cpse	r24, r1
     cf2:	45 df       	rcall	.-374    	; 0xb7e <matrixWriteNextLine>
}
     cf4:	ff 91       	pop	r31
     cf6:	ef 91       	pop	r30
     cf8:	bf 91       	pop	r27
     cfa:	af 91       	pop	r26
     cfc:	9f 91       	pop	r25
     cfe:	8f 91       	pop	r24
     d00:	7f 91       	pop	r23
     d02:	6f 91       	pop	r22
     d04:	5f 91       	pop	r21
     d06:	4f 91       	pop	r20
     d08:	3f 91       	pop	r19
     d0a:	2f 91       	pop	r18
     d0c:	0f 90       	pop	r0
     d0e:	0b be       	out	0x3b, r0	; 59
     d10:	0f 90       	pop	r0
     d12:	0f be       	out	0x3f, r0	; 63
     d14:	0f 90       	pop	r0
     d16:	1f 90       	pop	r1
     d18:	18 95       	reti

00000d1a <__udivmodhi4>:
     d1a:	aa 1b       	sub	r26, r26
     d1c:	bb 1b       	sub	r27, r27
     d1e:	51 e1       	ldi	r21, 0x11	; 17
     d20:	07 c0       	rjmp	.+14     	; 0xd30 <__udivmodhi4_ep>

00000d22 <__udivmodhi4_loop>:
     d22:	aa 1f       	adc	r26, r26
     d24:	bb 1f       	adc	r27, r27
     d26:	a6 17       	cp	r26, r22
     d28:	b7 07       	cpc	r27, r23
     d2a:	10 f0       	brcs	.+4      	; 0xd30 <__udivmodhi4_ep>
     d2c:	a6 1b       	sub	r26, r22
     d2e:	b7 0b       	sbc	r27, r23

00000d30 <__udivmodhi4_ep>:
     d30:	88 1f       	adc	r24, r24
     d32:	99 1f       	adc	r25, r25
     d34:	5a 95       	dec	r21
     d36:	a9 f7       	brne	.-22     	; 0xd22 <__udivmodhi4_loop>
     d38:	80 95       	com	r24
     d3a:	90 95       	com	r25
     d3c:	bc 01       	movw	r22, r24
     d3e:	cd 01       	movw	r24, r26
     d40:	08 95       	ret

00000d42 <__udivmodsi4>:
     d42:	a1 e2       	ldi	r26, 0x21	; 33
     d44:	1a 2e       	mov	r1, r26
     d46:	aa 1b       	sub	r26, r26
     d48:	bb 1b       	sub	r27, r27
     d4a:	fd 01       	movw	r30, r26
     d4c:	0d c0       	rjmp	.+26     	; 0xd68 <__udivmodsi4_ep>

00000d4e <__udivmodsi4_loop>:
     d4e:	aa 1f       	adc	r26, r26
     d50:	bb 1f       	adc	r27, r27
     d52:	ee 1f       	adc	r30, r30
     d54:	ff 1f       	adc	r31, r31
     d56:	a2 17       	cp	r26, r18
     d58:	b3 07       	cpc	r27, r19
     d5a:	e4 07       	cpc	r30, r20
     d5c:	f5 07       	cpc	r31, r21
     d5e:	20 f0       	brcs	.+8      	; 0xd68 <__udivmodsi4_ep>
     d60:	a2 1b       	sub	r26, r18
     d62:	b3 0b       	sbc	r27, r19
     d64:	e4 0b       	sbc	r30, r20
     d66:	f5 0b       	sbc	r31, r21

00000d68 <__udivmodsi4_ep>:
     d68:	66 1f       	adc	r22, r22
     d6a:	77 1f       	adc	r23, r23
     d6c:	88 1f       	adc	r24, r24
     d6e:	99 1f       	adc	r25, r25
     d70:	1a 94       	dec	r1
     d72:	69 f7       	brne	.-38     	; 0xd4e <__udivmodsi4_loop>
     d74:	60 95       	com	r22
     d76:	70 95       	com	r23
     d78:	80 95       	com	r24
     d7a:	90 95       	com	r25
     d7c:	9b 01       	movw	r18, r22
     d7e:	ac 01       	movw	r20, r24
     d80:	bd 01       	movw	r22, r26
     d82:	cf 01       	movw	r24, r30
     d84:	08 95       	ret

00000d86 <__umulhisi3>:
     d86:	a2 9f       	mul	r26, r18
     d88:	b0 01       	movw	r22, r0
     d8a:	b3 9f       	mul	r27, r19
     d8c:	c0 01       	movw	r24, r0
     d8e:	a3 9f       	mul	r26, r19
     d90:	70 0d       	add	r23, r0
     d92:	81 1d       	adc	r24, r1
     d94:	11 24       	eor	r1, r1
     d96:	91 1d       	adc	r25, r1
     d98:	b2 9f       	mul	r27, r18
     d9a:	70 0d       	add	r23, r0
     d9c:	81 1d       	adc	r24, r1
     d9e:	11 24       	eor	r1, r1
     da0:	91 1d       	adc	r25, r1
     da2:	08 95       	ret

00000da4 <__muluhisi3>:
     da4:	f0 df       	rcall	.-32     	; 0xd86 <__umulhisi3>
     da6:	a5 9f       	mul	r26, r21
     da8:	90 0d       	add	r25, r0
     daa:	b4 9f       	mul	r27, r20
     dac:	90 0d       	add	r25, r0
     dae:	a4 9f       	mul	r26, r20
     db0:	80 0d       	add	r24, r0
     db2:	91 1d       	adc	r25, r1
     db4:	11 24       	eor	r1, r1
     db6:	08 95       	ret

00000db8 <__adddi3_s8>:
     db8:	00 24       	eor	r0, r0
     dba:	a7 fd       	sbrc	r26, 7
     dbc:	00 94       	com	r0
     dbe:	2a 0f       	add	r18, r26
     dc0:	30 1d       	adc	r19, r0
     dc2:	40 1d       	adc	r20, r0
     dc4:	50 1d       	adc	r21, r0
     dc6:	60 1d       	adc	r22, r0
     dc8:	70 1d       	adc	r23, r0
     dca:	80 1d       	adc	r24, r0
     dcc:	90 1d       	adc	r25, r0
     dce:	08 95       	ret

00000dd0 <vsnprintf>:
     dd0:	0f 93       	push	r16
     dd2:	1f 93       	push	r17
     dd4:	cf 93       	push	r28
     dd6:	df 93       	push	r29
     dd8:	cd b7       	in	r28, 0x3d	; 61
     dda:	de b7       	in	r29, 0x3e	; 62
     ddc:	2e 97       	sbiw	r28, 0x0e	; 14
     dde:	0f b6       	in	r0, 0x3f	; 63
     de0:	f8 94       	cli
     de2:	de bf       	out	0x3e, r29	; 62
     de4:	0f be       	out	0x3f, r0	; 63
     de6:	cd bf       	out	0x3d, r28	; 61
     de8:	8c 01       	movw	r16, r24
     dea:	fa 01       	movw	r30, r20
     dec:	86 e0       	ldi	r24, 0x06	; 6
     dee:	8c 83       	std	Y+4, r24	; 0x04
     df0:	1a 83       	std	Y+2, r17	; 0x02
     df2:	09 83       	std	Y+1, r16	; 0x01
     df4:	77 ff       	sbrs	r23, 7
     df6:	02 c0       	rjmp	.+4      	; 0xdfc <vsnprintf+0x2c>
     df8:	60 e0       	ldi	r22, 0x00	; 0
     dfa:	70 e8       	ldi	r23, 0x80	; 128
     dfc:	cb 01       	movw	r24, r22
     dfe:	01 97       	sbiw	r24, 0x01	; 1
     e00:	9e 83       	std	Y+6, r25	; 0x06
     e02:	8d 83       	std	Y+5, r24	; 0x05
     e04:	a9 01       	movw	r20, r18
     e06:	bf 01       	movw	r22, r30
     e08:	ce 01       	movw	r24, r28
     e0a:	01 96       	adiw	r24, 0x01	; 1
     e0c:	19 d0       	rcall	.+50     	; 0xe40 <vfprintf>
     e0e:	4d 81       	ldd	r20, Y+5	; 0x05
     e10:	5e 81       	ldd	r21, Y+6	; 0x06
     e12:	57 fd       	sbrc	r21, 7
     e14:	0a c0       	rjmp	.+20     	; 0xe2a <vsnprintf+0x5a>
     e16:	2f 81       	ldd	r18, Y+7	; 0x07
     e18:	38 85       	ldd	r19, Y+8	; 0x08
     e1a:	42 17       	cp	r20, r18
     e1c:	53 07       	cpc	r21, r19
     e1e:	0c f4       	brge	.+2      	; 0xe22 <vsnprintf+0x52>
     e20:	9a 01       	movw	r18, r20
     e22:	f8 01       	movw	r30, r16
     e24:	e2 0f       	add	r30, r18
     e26:	f3 1f       	adc	r31, r19
     e28:	10 82       	st	Z, r1
     e2a:	2e 96       	adiw	r28, 0x0e	; 14
     e2c:	0f b6       	in	r0, 0x3f	; 63
     e2e:	f8 94       	cli
     e30:	de bf       	out	0x3e, r29	; 62
     e32:	0f be       	out	0x3f, r0	; 63
     e34:	cd bf       	out	0x3d, r28	; 61
     e36:	df 91       	pop	r29
     e38:	cf 91       	pop	r28
     e3a:	1f 91       	pop	r17
     e3c:	0f 91       	pop	r16
     e3e:	08 95       	ret

00000e40 <vfprintf>:
     e40:	2f 92       	push	r2
     e42:	3f 92       	push	r3
     e44:	4f 92       	push	r4
     e46:	5f 92       	push	r5
     e48:	6f 92       	push	r6
     e4a:	7f 92       	push	r7
     e4c:	8f 92       	push	r8
     e4e:	9f 92       	push	r9
     e50:	af 92       	push	r10
     e52:	bf 92       	push	r11
     e54:	cf 92       	push	r12
     e56:	df 92       	push	r13
     e58:	ef 92       	push	r14
     e5a:	ff 92       	push	r15
     e5c:	0f 93       	push	r16
     e5e:	1f 93       	push	r17
     e60:	cf 93       	push	r28
     e62:	df 93       	push	r29
     e64:	cd b7       	in	r28, 0x3d	; 61
     e66:	de b7       	in	r29, 0x3e	; 62
     e68:	2b 97       	sbiw	r28, 0x0b	; 11
     e6a:	0f b6       	in	r0, 0x3f	; 63
     e6c:	f8 94       	cli
     e6e:	de bf       	out	0x3e, r29	; 62
     e70:	0f be       	out	0x3f, r0	; 63
     e72:	cd bf       	out	0x3d, r28	; 61
     e74:	6c 01       	movw	r12, r24
     e76:	7b 01       	movw	r14, r22
     e78:	8a 01       	movw	r16, r20
     e7a:	fc 01       	movw	r30, r24
     e7c:	17 82       	std	Z+7, r1	; 0x07
     e7e:	16 82       	std	Z+6, r1	; 0x06
     e80:	83 81       	ldd	r24, Z+3	; 0x03
     e82:	81 ff       	sbrs	r24, 1
     e84:	bf c1       	rjmp	.+894    	; 0x1204 <__EEPROM_REGION_LENGTH__+0x204>
     e86:	ce 01       	movw	r24, r28
     e88:	01 96       	adiw	r24, 0x01	; 1
     e8a:	3c 01       	movw	r6, r24
     e8c:	f6 01       	movw	r30, r12
     e8e:	93 81       	ldd	r25, Z+3	; 0x03
     e90:	f7 01       	movw	r30, r14
     e92:	93 fd       	sbrc	r25, 3
     e94:	85 91       	lpm	r24, Z+
     e96:	93 ff       	sbrs	r25, 3
     e98:	81 91       	ld	r24, Z+
     e9a:	7f 01       	movw	r14, r30
     e9c:	88 23       	and	r24, r24
     e9e:	09 f4       	brne	.+2      	; 0xea2 <vfprintf+0x62>
     ea0:	ad c1       	rjmp	.+858    	; 0x11fc <__EEPROM_REGION_LENGTH__+0x1fc>
     ea2:	85 32       	cpi	r24, 0x25	; 37
     ea4:	39 f4       	brne	.+14     	; 0xeb4 <vfprintf+0x74>
     ea6:	93 fd       	sbrc	r25, 3
     ea8:	85 91       	lpm	r24, Z+
     eaa:	93 ff       	sbrs	r25, 3
     eac:	81 91       	ld	r24, Z+
     eae:	7f 01       	movw	r14, r30
     eb0:	85 32       	cpi	r24, 0x25	; 37
     eb2:	21 f4       	brne	.+8      	; 0xebc <vfprintf+0x7c>
     eb4:	b6 01       	movw	r22, r12
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	d6 d1       	rcall	.+940    	; 0x1266 <fputc>
     eba:	e8 cf       	rjmp	.-48     	; 0xe8c <vfprintf+0x4c>
     ebc:	91 2c       	mov	r9, r1
     ebe:	21 2c       	mov	r2, r1
     ec0:	31 2c       	mov	r3, r1
     ec2:	ff e1       	ldi	r31, 0x1F	; 31
     ec4:	f3 15       	cp	r31, r3
     ec6:	d8 f0       	brcs	.+54     	; 0xefe <vfprintf+0xbe>
     ec8:	8b 32       	cpi	r24, 0x2B	; 43
     eca:	79 f0       	breq	.+30     	; 0xeea <vfprintf+0xaa>
     ecc:	38 f4       	brcc	.+14     	; 0xedc <vfprintf+0x9c>
     ece:	80 32       	cpi	r24, 0x20	; 32
     ed0:	79 f0       	breq	.+30     	; 0xef0 <vfprintf+0xb0>
     ed2:	83 32       	cpi	r24, 0x23	; 35
     ed4:	a1 f4       	brne	.+40     	; 0xefe <vfprintf+0xbe>
     ed6:	23 2d       	mov	r18, r3
     ed8:	20 61       	ori	r18, 0x10	; 16
     eda:	1d c0       	rjmp	.+58     	; 0xf16 <vfprintf+0xd6>
     edc:	8d 32       	cpi	r24, 0x2D	; 45
     ede:	61 f0       	breq	.+24     	; 0xef8 <vfprintf+0xb8>
     ee0:	80 33       	cpi	r24, 0x30	; 48
     ee2:	69 f4       	brne	.+26     	; 0xefe <vfprintf+0xbe>
     ee4:	23 2d       	mov	r18, r3
     ee6:	21 60       	ori	r18, 0x01	; 1
     ee8:	16 c0       	rjmp	.+44     	; 0xf16 <vfprintf+0xd6>
     eea:	83 2d       	mov	r24, r3
     eec:	82 60       	ori	r24, 0x02	; 2
     eee:	38 2e       	mov	r3, r24
     ef0:	e3 2d       	mov	r30, r3
     ef2:	e4 60       	ori	r30, 0x04	; 4
     ef4:	3e 2e       	mov	r3, r30
     ef6:	2a c0       	rjmp	.+84     	; 0xf4c <vfprintf+0x10c>
     ef8:	f3 2d       	mov	r31, r3
     efa:	f8 60       	ori	r31, 0x08	; 8
     efc:	1d c0       	rjmp	.+58     	; 0xf38 <vfprintf+0xf8>
     efe:	37 fc       	sbrc	r3, 7
     f00:	2d c0       	rjmp	.+90     	; 0xf5c <vfprintf+0x11c>
     f02:	20 ed       	ldi	r18, 0xD0	; 208
     f04:	28 0f       	add	r18, r24
     f06:	2a 30       	cpi	r18, 0x0A	; 10
     f08:	40 f0       	brcs	.+16     	; 0xf1a <vfprintf+0xda>
     f0a:	8e 32       	cpi	r24, 0x2E	; 46
     f0c:	b9 f4       	brne	.+46     	; 0xf3c <vfprintf+0xfc>
     f0e:	36 fc       	sbrc	r3, 6
     f10:	75 c1       	rjmp	.+746    	; 0x11fc <__EEPROM_REGION_LENGTH__+0x1fc>
     f12:	23 2d       	mov	r18, r3
     f14:	20 64       	ori	r18, 0x40	; 64
     f16:	32 2e       	mov	r3, r18
     f18:	19 c0       	rjmp	.+50     	; 0xf4c <vfprintf+0x10c>
     f1a:	36 fe       	sbrs	r3, 6
     f1c:	06 c0       	rjmp	.+12     	; 0xf2a <vfprintf+0xea>
     f1e:	8a e0       	ldi	r24, 0x0A	; 10
     f20:	98 9e       	mul	r9, r24
     f22:	20 0d       	add	r18, r0
     f24:	11 24       	eor	r1, r1
     f26:	92 2e       	mov	r9, r18
     f28:	11 c0       	rjmp	.+34     	; 0xf4c <vfprintf+0x10c>
     f2a:	ea e0       	ldi	r30, 0x0A	; 10
     f2c:	2e 9e       	mul	r2, r30
     f2e:	20 0d       	add	r18, r0
     f30:	11 24       	eor	r1, r1
     f32:	22 2e       	mov	r2, r18
     f34:	f3 2d       	mov	r31, r3
     f36:	f0 62       	ori	r31, 0x20	; 32
     f38:	3f 2e       	mov	r3, r31
     f3a:	08 c0       	rjmp	.+16     	; 0xf4c <vfprintf+0x10c>
     f3c:	8c 36       	cpi	r24, 0x6C	; 108
     f3e:	21 f4       	brne	.+8      	; 0xf48 <vfprintf+0x108>
     f40:	83 2d       	mov	r24, r3
     f42:	80 68       	ori	r24, 0x80	; 128
     f44:	38 2e       	mov	r3, r24
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <vfprintf+0x10c>
     f48:	88 36       	cpi	r24, 0x68	; 104
     f4a:	41 f4       	brne	.+16     	; 0xf5c <vfprintf+0x11c>
     f4c:	f7 01       	movw	r30, r14
     f4e:	93 fd       	sbrc	r25, 3
     f50:	85 91       	lpm	r24, Z+
     f52:	93 ff       	sbrs	r25, 3
     f54:	81 91       	ld	r24, Z+
     f56:	7f 01       	movw	r14, r30
     f58:	81 11       	cpse	r24, r1
     f5a:	b3 cf       	rjmp	.-154    	; 0xec2 <vfprintf+0x82>
     f5c:	98 2f       	mov	r25, r24
     f5e:	9f 7d       	andi	r25, 0xDF	; 223
     f60:	95 54       	subi	r25, 0x45	; 69
     f62:	93 30       	cpi	r25, 0x03	; 3
     f64:	28 f4       	brcc	.+10     	; 0xf70 <vfprintf+0x130>
     f66:	0c 5f       	subi	r16, 0xFC	; 252
     f68:	1f 4f       	sbci	r17, 0xFF	; 255
     f6a:	9f e3       	ldi	r25, 0x3F	; 63
     f6c:	99 83       	std	Y+1, r25	; 0x01
     f6e:	0d c0       	rjmp	.+26     	; 0xf8a <vfprintf+0x14a>
     f70:	83 36       	cpi	r24, 0x63	; 99
     f72:	31 f0       	breq	.+12     	; 0xf80 <vfprintf+0x140>
     f74:	83 37       	cpi	r24, 0x73	; 115
     f76:	71 f0       	breq	.+28     	; 0xf94 <vfprintf+0x154>
     f78:	83 35       	cpi	r24, 0x53	; 83
     f7a:	09 f0       	breq	.+2      	; 0xf7e <vfprintf+0x13e>
     f7c:	55 c0       	rjmp	.+170    	; 0x1028 <__EEPROM_REGION_LENGTH__+0x28>
     f7e:	20 c0       	rjmp	.+64     	; 0xfc0 <vfprintf+0x180>
     f80:	f8 01       	movw	r30, r16
     f82:	80 81       	ld	r24, Z
     f84:	89 83       	std	Y+1, r24	; 0x01
     f86:	0e 5f       	subi	r16, 0xFE	; 254
     f88:	1f 4f       	sbci	r17, 0xFF	; 255
     f8a:	88 24       	eor	r8, r8
     f8c:	83 94       	inc	r8
     f8e:	91 2c       	mov	r9, r1
     f90:	53 01       	movw	r10, r6
     f92:	12 c0       	rjmp	.+36     	; 0xfb8 <vfprintf+0x178>
     f94:	28 01       	movw	r4, r16
     f96:	f2 e0       	ldi	r31, 0x02	; 2
     f98:	4f 0e       	add	r4, r31
     f9a:	51 1c       	adc	r5, r1
     f9c:	f8 01       	movw	r30, r16
     f9e:	a0 80       	ld	r10, Z
     fa0:	b1 80       	ldd	r11, Z+1	; 0x01
     fa2:	36 fe       	sbrs	r3, 6
     fa4:	03 c0       	rjmp	.+6      	; 0xfac <vfprintf+0x16c>
     fa6:	69 2d       	mov	r22, r9
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <vfprintf+0x170>
     fac:	6f ef       	ldi	r22, 0xFF	; 255
     fae:	7f ef       	ldi	r23, 0xFF	; 255
     fb0:	c5 01       	movw	r24, r10
     fb2:	4e d1       	rcall	.+668    	; 0x1250 <strnlen>
     fb4:	4c 01       	movw	r8, r24
     fb6:	82 01       	movw	r16, r4
     fb8:	f3 2d       	mov	r31, r3
     fba:	ff 77       	andi	r31, 0x7F	; 127
     fbc:	3f 2e       	mov	r3, r31
     fbe:	15 c0       	rjmp	.+42     	; 0xfea <vfprintf+0x1aa>
     fc0:	28 01       	movw	r4, r16
     fc2:	22 e0       	ldi	r18, 0x02	; 2
     fc4:	42 0e       	add	r4, r18
     fc6:	51 1c       	adc	r5, r1
     fc8:	f8 01       	movw	r30, r16
     fca:	a0 80       	ld	r10, Z
     fcc:	b1 80       	ldd	r11, Z+1	; 0x01
     fce:	36 fe       	sbrs	r3, 6
     fd0:	03 c0       	rjmp	.+6      	; 0xfd8 <vfprintf+0x198>
     fd2:	69 2d       	mov	r22, r9
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <vfprintf+0x19c>
     fd8:	6f ef       	ldi	r22, 0xFF	; 255
     fda:	7f ef       	ldi	r23, 0xFF	; 255
     fdc:	c5 01       	movw	r24, r10
     fde:	2d d1       	rcall	.+602    	; 0x123a <strnlen_P>
     fe0:	4c 01       	movw	r8, r24
     fe2:	f3 2d       	mov	r31, r3
     fe4:	f0 68       	ori	r31, 0x80	; 128
     fe6:	3f 2e       	mov	r3, r31
     fe8:	82 01       	movw	r16, r4
     fea:	33 fc       	sbrc	r3, 3
     fec:	19 c0       	rjmp	.+50     	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
     fee:	82 2d       	mov	r24, r2
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	88 16       	cp	r8, r24
     ff4:	99 06       	cpc	r9, r25
     ff6:	a0 f4       	brcc	.+40     	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
     ff8:	b6 01       	movw	r22, r12
     ffa:	80 e2       	ldi	r24, 0x20	; 32
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	33 d1       	rcall	.+614    	; 0x1266 <fputc>
    1000:	2a 94       	dec	r2
    1002:	f5 cf       	rjmp	.-22     	; 0xfee <vfprintf+0x1ae>
    1004:	f5 01       	movw	r30, r10
    1006:	37 fc       	sbrc	r3, 7
    1008:	85 91       	lpm	r24, Z+
    100a:	37 fe       	sbrs	r3, 7
    100c:	81 91       	ld	r24, Z+
    100e:	5f 01       	movw	r10, r30
    1010:	b6 01       	movw	r22, r12
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	28 d1       	rcall	.+592    	; 0x1266 <fputc>
    1016:	21 10       	cpse	r2, r1
    1018:	2a 94       	dec	r2
    101a:	21 e0       	ldi	r18, 0x01	; 1
    101c:	82 1a       	sub	r8, r18
    101e:	91 08       	sbc	r9, r1
    1020:	81 14       	cp	r8, r1
    1022:	91 04       	cpc	r9, r1
    1024:	79 f7       	brne	.-34     	; 0x1004 <__EEPROM_REGION_LENGTH__+0x4>
    1026:	e1 c0       	rjmp	.+450    	; 0x11ea <__EEPROM_REGION_LENGTH__+0x1ea>
    1028:	84 36       	cpi	r24, 0x64	; 100
    102a:	11 f0       	breq	.+4      	; 0x1030 <__EEPROM_REGION_LENGTH__+0x30>
    102c:	89 36       	cpi	r24, 0x69	; 105
    102e:	39 f5       	brne	.+78     	; 0x107e <__EEPROM_REGION_LENGTH__+0x7e>
    1030:	f8 01       	movw	r30, r16
    1032:	37 fe       	sbrs	r3, 7
    1034:	07 c0       	rjmp	.+14     	; 0x1044 <__EEPROM_REGION_LENGTH__+0x44>
    1036:	60 81       	ld	r22, Z
    1038:	71 81       	ldd	r23, Z+1	; 0x01
    103a:	82 81       	ldd	r24, Z+2	; 0x02
    103c:	93 81       	ldd	r25, Z+3	; 0x03
    103e:	0c 5f       	subi	r16, 0xFC	; 252
    1040:	1f 4f       	sbci	r17, 0xFF	; 255
    1042:	08 c0       	rjmp	.+16     	; 0x1054 <__EEPROM_REGION_LENGTH__+0x54>
    1044:	60 81       	ld	r22, Z
    1046:	71 81       	ldd	r23, Z+1	; 0x01
    1048:	07 2e       	mov	r0, r23
    104a:	00 0c       	add	r0, r0
    104c:	88 0b       	sbc	r24, r24
    104e:	99 0b       	sbc	r25, r25
    1050:	0e 5f       	subi	r16, 0xFE	; 254
    1052:	1f 4f       	sbci	r17, 0xFF	; 255
    1054:	f3 2d       	mov	r31, r3
    1056:	ff 76       	andi	r31, 0x6F	; 111
    1058:	3f 2e       	mov	r3, r31
    105a:	97 ff       	sbrs	r25, 7
    105c:	09 c0       	rjmp	.+18     	; 0x1070 <__EEPROM_REGION_LENGTH__+0x70>
    105e:	90 95       	com	r25
    1060:	80 95       	com	r24
    1062:	70 95       	com	r23
    1064:	61 95       	neg	r22
    1066:	7f 4f       	sbci	r23, 0xFF	; 255
    1068:	8f 4f       	sbci	r24, 0xFF	; 255
    106a:	9f 4f       	sbci	r25, 0xFF	; 255
    106c:	f0 68       	ori	r31, 0x80	; 128
    106e:	3f 2e       	mov	r3, r31
    1070:	2a e0       	ldi	r18, 0x0A	; 10
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	a3 01       	movw	r20, r6
    1076:	33 d1       	rcall	.+614    	; 0x12de <__ultoa_invert>
    1078:	88 2e       	mov	r8, r24
    107a:	86 18       	sub	r8, r6
    107c:	44 c0       	rjmp	.+136    	; 0x1106 <__EEPROM_REGION_LENGTH__+0x106>
    107e:	85 37       	cpi	r24, 0x75	; 117
    1080:	31 f4       	brne	.+12     	; 0x108e <__EEPROM_REGION_LENGTH__+0x8e>
    1082:	23 2d       	mov	r18, r3
    1084:	2f 7e       	andi	r18, 0xEF	; 239
    1086:	b2 2e       	mov	r11, r18
    1088:	2a e0       	ldi	r18, 0x0A	; 10
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	25 c0       	rjmp	.+74     	; 0x10d8 <__EEPROM_REGION_LENGTH__+0xd8>
    108e:	93 2d       	mov	r25, r3
    1090:	99 7f       	andi	r25, 0xF9	; 249
    1092:	b9 2e       	mov	r11, r25
    1094:	8f 36       	cpi	r24, 0x6F	; 111
    1096:	c1 f0       	breq	.+48     	; 0x10c8 <__EEPROM_REGION_LENGTH__+0xc8>
    1098:	18 f4       	brcc	.+6      	; 0x10a0 <__EEPROM_REGION_LENGTH__+0xa0>
    109a:	88 35       	cpi	r24, 0x58	; 88
    109c:	79 f0       	breq	.+30     	; 0x10bc <__EEPROM_REGION_LENGTH__+0xbc>
    109e:	ae c0       	rjmp	.+348    	; 0x11fc <__EEPROM_REGION_LENGTH__+0x1fc>
    10a0:	80 37       	cpi	r24, 0x70	; 112
    10a2:	19 f0       	breq	.+6      	; 0x10aa <__EEPROM_REGION_LENGTH__+0xaa>
    10a4:	88 37       	cpi	r24, 0x78	; 120
    10a6:	21 f0       	breq	.+8      	; 0x10b0 <__EEPROM_REGION_LENGTH__+0xb0>
    10a8:	a9 c0       	rjmp	.+338    	; 0x11fc <__EEPROM_REGION_LENGTH__+0x1fc>
    10aa:	e9 2f       	mov	r30, r25
    10ac:	e0 61       	ori	r30, 0x10	; 16
    10ae:	be 2e       	mov	r11, r30
    10b0:	b4 fe       	sbrs	r11, 4
    10b2:	0d c0       	rjmp	.+26     	; 0x10ce <__EEPROM_REGION_LENGTH__+0xce>
    10b4:	fb 2d       	mov	r31, r11
    10b6:	f4 60       	ori	r31, 0x04	; 4
    10b8:	bf 2e       	mov	r11, r31
    10ba:	09 c0       	rjmp	.+18     	; 0x10ce <__EEPROM_REGION_LENGTH__+0xce>
    10bc:	34 fe       	sbrs	r3, 4
    10be:	0a c0       	rjmp	.+20     	; 0x10d4 <__EEPROM_REGION_LENGTH__+0xd4>
    10c0:	29 2f       	mov	r18, r25
    10c2:	26 60       	ori	r18, 0x06	; 6
    10c4:	b2 2e       	mov	r11, r18
    10c6:	06 c0       	rjmp	.+12     	; 0x10d4 <__EEPROM_REGION_LENGTH__+0xd4>
    10c8:	28 e0       	ldi	r18, 0x08	; 8
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	05 c0       	rjmp	.+10     	; 0x10d8 <__EEPROM_REGION_LENGTH__+0xd8>
    10ce:	20 e1       	ldi	r18, 0x10	; 16
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	02 c0       	rjmp	.+4      	; 0x10d8 <__EEPROM_REGION_LENGTH__+0xd8>
    10d4:	20 e1       	ldi	r18, 0x10	; 16
    10d6:	32 e0       	ldi	r19, 0x02	; 2
    10d8:	f8 01       	movw	r30, r16
    10da:	b7 fe       	sbrs	r11, 7
    10dc:	07 c0       	rjmp	.+14     	; 0x10ec <__EEPROM_REGION_LENGTH__+0xec>
    10de:	60 81       	ld	r22, Z
    10e0:	71 81       	ldd	r23, Z+1	; 0x01
    10e2:	82 81       	ldd	r24, Z+2	; 0x02
    10e4:	93 81       	ldd	r25, Z+3	; 0x03
    10e6:	0c 5f       	subi	r16, 0xFC	; 252
    10e8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ea:	06 c0       	rjmp	.+12     	; 0x10f8 <__EEPROM_REGION_LENGTH__+0xf8>
    10ec:	60 81       	ld	r22, Z
    10ee:	71 81       	ldd	r23, Z+1	; 0x01
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	0e 5f       	subi	r16, 0xFE	; 254
    10f6:	1f 4f       	sbci	r17, 0xFF	; 255
    10f8:	a3 01       	movw	r20, r6
    10fa:	f1 d0       	rcall	.+482    	; 0x12de <__ultoa_invert>
    10fc:	88 2e       	mov	r8, r24
    10fe:	86 18       	sub	r8, r6
    1100:	fb 2d       	mov	r31, r11
    1102:	ff 77       	andi	r31, 0x7F	; 127
    1104:	3f 2e       	mov	r3, r31
    1106:	36 fe       	sbrs	r3, 6
    1108:	0d c0       	rjmp	.+26     	; 0x1124 <__EEPROM_REGION_LENGTH__+0x124>
    110a:	23 2d       	mov	r18, r3
    110c:	2e 7f       	andi	r18, 0xFE	; 254
    110e:	a2 2e       	mov	r10, r18
    1110:	89 14       	cp	r8, r9
    1112:	58 f4       	brcc	.+22     	; 0x112a <__EEPROM_REGION_LENGTH__+0x12a>
    1114:	34 fe       	sbrs	r3, 4
    1116:	0b c0       	rjmp	.+22     	; 0x112e <__EEPROM_REGION_LENGTH__+0x12e>
    1118:	32 fc       	sbrc	r3, 2
    111a:	09 c0       	rjmp	.+18     	; 0x112e <__EEPROM_REGION_LENGTH__+0x12e>
    111c:	83 2d       	mov	r24, r3
    111e:	8e 7e       	andi	r24, 0xEE	; 238
    1120:	a8 2e       	mov	r10, r24
    1122:	05 c0       	rjmp	.+10     	; 0x112e <__EEPROM_REGION_LENGTH__+0x12e>
    1124:	b8 2c       	mov	r11, r8
    1126:	a3 2c       	mov	r10, r3
    1128:	03 c0       	rjmp	.+6      	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
    112a:	b8 2c       	mov	r11, r8
    112c:	01 c0       	rjmp	.+2      	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
    112e:	b9 2c       	mov	r11, r9
    1130:	a4 fe       	sbrs	r10, 4
    1132:	0f c0       	rjmp	.+30     	; 0x1152 <__EEPROM_REGION_LENGTH__+0x152>
    1134:	fe 01       	movw	r30, r28
    1136:	e8 0d       	add	r30, r8
    1138:	f1 1d       	adc	r31, r1
    113a:	80 81       	ld	r24, Z
    113c:	80 33       	cpi	r24, 0x30	; 48
    113e:	21 f4       	brne	.+8      	; 0x1148 <__EEPROM_REGION_LENGTH__+0x148>
    1140:	9a 2d       	mov	r25, r10
    1142:	99 7e       	andi	r25, 0xE9	; 233
    1144:	a9 2e       	mov	r10, r25
    1146:	09 c0       	rjmp	.+18     	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    1148:	a2 fe       	sbrs	r10, 2
    114a:	06 c0       	rjmp	.+12     	; 0x1158 <__EEPROM_REGION_LENGTH__+0x158>
    114c:	b3 94       	inc	r11
    114e:	b3 94       	inc	r11
    1150:	04 c0       	rjmp	.+8      	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    1152:	8a 2d       	mov	r24, r10
    1154:	86 78       	andi	r24, 0x86	; 134
    1156:	09 f0       	breq	.+2      	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    1158:	b3 94       	inc	r11
    115a:	a3 fc       	sbrc	r10, 3
    115c:	10 c0       	rjmp	.+32     	; 0x117e <__EEPROM_REGION_LENGTH__+0x17e>
    115e:	a0 fe       	sbrs	r10, 0
    1160:	06 c0       	rjmp	.+12     	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    1162:	b2 14       	cp	r11, r2
    1164:	80 f4       	brcc	.+32     	; 0x1186 <__EEPROM_REGION_LENGTH__+0x186>
    1166:	28 0c       	add	r2, r8
    1168:	92 2c       	mov	r9, r2
    116a:	9b 18       	sub	r9, r11
    116c:	0d c0       	rjmp	.+26     	; 0x1188 <__EEPROM_REGION_LENGTH__+0x188>
    116e:	b2 14       	cp	r11, r2
    1170:	58 f4       	brcc	.+22     	; 0x1188 <__EEPROM_REGION_LENGTH__+0x188>
    1172:	b6 01       	movw	r22, r12
    1174:	80 e2       	ldi	r24, 0x20	; 32
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	76 d0       	rcall	.+236    	; 0x1266 <fputc>
    117a:	b3 94       	inc	r11
    117c:	f8 cf       	rjmp	.-16     	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    117e:	b2 14       	cp	r11, r2
    1180:	18 f4       	brcc	.+6      	; 0x1188 <__EEPROM_REGION_LENGTH__+0x188>
    1182:	2b 18       	sub	r2, r11
    1184:	02 c0       	rjmp	.+4      	; 0x118a <__EEPROM_REGION_LENGTH__+0x18a>
    1186:	98 2c       	mov	r9, r8
    1188:	21 2c       	mov	r2, r1
    118a:	a4 fe       	sbrs	r10, 4
    118c:	0f c0       	rjmp	.+30     	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>
    118e:	b6 01       	movw	r22, r12
    1190:	80 e3       	ldi	r24, 0x30	; 48
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	68 d0       	rcall	.+208    	; 0x1266 <fputc>
    1196:	a2 fe       	sbrs	r10, 2
    1198:	16 c0       	rjmp	.+44     	; 0x11c6 <__EEPROM_REGION_LENGTH__+0x1c6>
    119a:	a1 fc       	sbrc	r10, 1
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <__EEPROM_REGION_LENGTH__+0x1a4>
    119e:	88 e7       	ldi	r24, 0x78	; 120
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	02 c0       	rjmp	.+4      	; 0x11a8 <__EEPROM_REGION_LENGTH__+0x1a8>
    11a4:	88 e5       	ldi	r24, 0x58	; 88
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	b6 01       	movw	r22, r12
    11aa:	0c c0       	rjmp	.+24     	; 0x11c4 <__EEPROM_REGION_LENGTH__+0x1c4>
    11ac:	8a 2d       	mov	r24, r10
    11ae:	86 78       	andi	r24, 0x86	; 134
    11b0:	51 f0       	breq	.+20     	; 0x11c6 <__EEPROM_REGION_LENGTH__+0x1c6>
    11b2:	a1 fe       	sbrs	r10, 1
    11b4:	02 c0       	rjmp	.+4      	; 0x11ba <__EEPROM_REGION_LENGTH__+0x1ba>
    11b6:	8b e2       	ldi	r24, 0x2B	; 43
    11b8:	01 c0       	rjmp	.+2      	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    11ba:	80 e2       	ldi	r24, 0x20	; 32
    11bc:	a7 fc       	sbrc	r10, 7
    11be:	8d e2       	ldi	r24, 0x2D	; 45
    11c0:	b6 01       	movw	r22, r12
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	50 d0       	rcall	.+160    	; 0x1266 <fputc>
    11c6:	89 14       	cp	r8, r9
    11c8:	30 f4       	brcc	.+12     	; 0x11d6 <__EEPROM_REGION_LENGTH__+0x1d6>
    11ca:	b6 01       	movw	r22, r12
    11cc:	80 e3       	ldi	r24, 0x30	; 48
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	4a d0       	rcall	.+148    	; 0x1266 <fputc>
    11d2:	9a 94       	dec	r9
    11d4:	f8 cf       	rjmp	.-16     	; 0x11c6 <__EEPROM_REGION_LENGTH__+0x1c6>
    11d6:	8a 94       	dec	r8
    11d8:	f3 01       	movw	r30, r6
    11da:	e8 0d       	add	r30, r8
    11dc:	f1 1d       	adc	r31, r1
    11de:	80 81       	ld	r24, Z
    11e0:	b6 01       	movw	r22, r12
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	40 d0       	rcall	.+128    	; 0x1266 <fputc>
    11e6:	81 10       	cpse	r8, r1
    11e8:	f6 cf       	rjmp	.-20     	; 0x11d6 <__EEPROM_REGION_LENGTH__+0x1d6>
    11ea:	22 20       	and	r2, r2
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <__EEPROM_REGION_LENGTH__+0x1f0>
    11ee:	4e ce       	rjmp	.-868    	; 0xe8c <vfprintf+0x4c>
    11f0:	b6 01       	movw	r22, r12
    11f2:	80 e2       	ldi	r24, 0x20	; 32
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	37 d0       	rcall	.+110    	; 0x1266 <fputc>
    11f8:	2a 94       	dec	r2
    11fa:	f7 cf       	rjmp	.-18     	; 0x11ea <__EEPROM_REGION_LENGTH__+0x1ea>
    11fc:	f6 01       	movw	r30, r12
    11fe:	86 81       	ldd	r24, Z+6	; 0x06
    1200:	97 81       	ldd	r25, Z+7	; 0x07
    1202:	02 c0       	rjmp	.+4      	; 0x1208 <__EEPROM_REGION_LENGTH__+0x208>
    1204:	8f ef       	ldi	r24, 0xFF	; 255
    1206:	9f ef       	ldi	r25, 0xFF	; 255
    1208:	2b 96       	adiw	r28, 0x0b	; 11
    120a:	0f b6       	in	r0, 0x3f	; 63
    120c:	f8 94       	cli
    120e:	de bf       	out	0x3e, r29	; 62
    1210:	0f be       	out	0x3f, r0	; 63
    1212:	cd bf       	out	0x3d, r28	; 61
    1214:	df 91       	pop	r29
    1216:	cf 91       	pop	r28
    1218:	1f 91       	pop	r17
    121a:	0f 91       	pop	r16
    121c:	ff 90       	pop	r15
    121e:	ef 90       	pop	r14
    1220:	df 90       	pop	r13
    1222:	cf 90       	pop	r12
    1224:	bf 90       	pop	r11
    1226:	af 90       	pop	r10
    1228:	9f 90       	pop	r9
    122a:	8f 90       	pop	r8
    122c:	7f 90       	pop	r7
    122e:	6f 90       	pop	r6
    1230:	5f 90       	pop	r5
    1232:	4f 90       	pop	r4
    1234:	3f 90       	pop	r3
    1236:	2f 90       	pop	r2
    1238:	08 95       	ret

0000123a <strnlen_P>:
    123a:	fc 01       	movw	r30, r24
    123c:	05 90       	lpm	r0, Z+
    123e:	61 50       	subi	r22, 0x01	; 1
    1240:	70 40       	sbci	r23, 0x00	; 0
    1242:	01 10       	cpse	r0, r1
    1244:	d8 f7       	brcc	.-10     	; 0x123c <strnlen_P+0x2>
    1246:	80 95       	com	r24
    1248:	90 95       	com	r25
    124a:	8e 0f       	add	r24, r30
    124c:	9f 1f       	adc	r25, r31
    124e:	08 95       	ret

00001250 <strnlen>:
    1250:	fc 01       	movw	r30, r24
    1252:	61 50       	subi	r22, 0x01	; 1
    1254:	70 40       	sbci	r23, 0x00	; 0
    1256:	01 90       	ld	r0, Z+
    1258:	01 10       	cpse	r0, r1
    125a:	d8 f7       	brcc	.-10     	; 0x1252 <strnlen+0x2>
    125c:	80 95       	com	r24
    125e:	90 95       	com	r25
    1260:	8e 0f       	add	r24, r30
    1262:	9f 1f       	adc	r25, r31
    1264:	08 95       	ret

00001266 <fputc>:
    1266:	0f 93       	push	r16
    1268:	1f 93       	push	r17
    126a:	cf 93       	push	r28
    126c:	df 93       	push	r29
    126e:	fb 01       	movw	r30, r22
    1270:	23 81       	ldd	r18, Z+3	; 0x03
    1272:	21 fd       	sbrc	r18, 1
    1274:	03 c0       	rjmp	.+6      	; 0x127c <fputc+0x16>
    1276:	8f ef       	ldi	r24, 0xFF	; 255
    1278:	9f ef       	ldi	r25, 0xFF	; 255
    127a:	2c c0       	rjmp	.+88     	; 0x12d4 <fputc+0x6e>
    127c:	22 ff       	sbrs	r18, 2
    127e:	16 c0       	rjmp	.+44     	; 0x12ac <fputc+0x46>
    1280:	46 81       	ldd	r20, Z+6	; 0x06
    1282:	57 81       	ldd	r21, Z+7	; 0x07
    1284:	24 81       	ldd	r18, Z+4	; 0x04
    1286:	35 81       	ldd	r19, Z+5	; 0x05
    1288:	42 17       	cp	r20, r18
    128a:	53 07       	cpc	r21, r19
    128c:	44 f4       	brge	.+16     	; 0x129e <fputc+0x38>
    128e:	a0 81       	ld	r26, Z
    1290:	b1 81       	ldd	r27, Z+1	; 0x01
    1292:	9d 01       	movw	r18, r26
    1294:	2f 5f       	subi	r18, 0xFF	; 255
    1296:	3f 4f       	sbci	r19, 0xFF	; 255
    1298:	31 83       	std	Z+1, r19	; 0x01
    129a:	20 83       	st	Z, r18
    129c:	8c 93       	st	X, r24
    129e:	26 81       	ldd	r18, Z+6	; 0x06
    12a0:	37 81       	ldd	r19, Z+7	; 0x07
    12a2:	2f 5f       	subi	r18, 0xFF	; 255
    12a4:	3f 4f       	sbci	r19, 0xFF	; 255
    12a6:	37 83       	std	Z+7, r19	; 0x07
    12a8:	26 83       	std	Z+6, r18	; 0x06
    12aa:	14 c0       	rjmp	.+40     	; 0x12d4 <fputc+0x6e>
    12ac:	8b 01       	movw	r16, r22
    12ae:	ec 01       	movw	r28, r24
    12b0:	fb 01       	movw	r30, r22
    12b2:	00 84       	ldd	r0, Z+8	; 0x08
    12b4:	f1 85       	ldd	r31, Z+9	; 0x09
    12b6:	e0 2d       	mov	r30, r0
    12b8:	19 95       	eicall
    12ba:	89 2b       	or	r24, r25
    12bc:	e1 f6       	brne	.-72     	; 0x1276 <fputc+0x10>
    12be:	d8 01       	movw	r26, r16
    12c0:	16 96       	adiw	r26, 0x06	; 6
    12c2:	8d 91       	ld	r24, X+
    12c4:	9c 91       	ld	r25, X
    12c6:	17 97       	sbiw	r26, 0x07	; 7
    12c8:	01 96       	adiw	r24, 0x01	; 1
    12ca:	17 96       	adiw	r26, 0x07	; 7
    12cc:	9c 93       	st	X, r25
    12ce:	8e 93       	st	-X, r24
    12d0:	16 97       	sbiw	r26, 0x06	; 6
    12d2:	ce 01       	movw	r24, r28
    12d4:	df 91       	pop	r29
    12d6:	cf 91       	pop	r28
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	08 95       	ret

000012de <__ultoa_invert>:
    12de:	fa 01       	movw	r30, r20
    12e0:	aa 27       	eor	r26, r26
    12e2:	28 30       	cpi	r18, 0x08	; 8
    12e4:	51 f1       	breq	.+84     	; 0x133a <__ultoa_invert+0x5c>
    12e6:	20 31       	cpi	r18, 0x10	; 16
    12e8:	81 f1       	breq	.+96     	; 0x134a <__ultoa_invert+0x6c>
    12ea:	e8 94       	clt
    12ec:	6f 93       	push	r22
    12ee:	6e 7f       	andi	r22, 0xFE	; 254
    12f0:	6e 5f       	subi	r22, 0xFE	; 254
    12f2:	7f 4f       	sbci	r23, 0xFF	; 255
    12f4:	8f 4f       	sbci	r24, 0xFF	; 255
    12f6:	9f 4f       	sbci	r25, 0xFF	; 255
    12f8:	af 4f       	sbci	r26, 0xFF	; 255
    12fa:	b1 e0       	ldi	r27, 0x01	; 1
    12fc:	3e d0       	rcall	.+124    	; 0x137a <__ultoa_invert+0x9c>
    12fe:	b4 e0       	ldi	r27, 0x04	; 4
    1300:	3c d0       	rcall	.+120    	; 0x137a <__ultoa_invert+0x9c>
    1302:	67 0f       	add	r22, r23
    1304:	78 1f       	adc	r23, r24
    1306:	89 1f       	adc	r24, r25
    1308:	9a 1f       	adc	r25, r26
    130a:	a1 1d       	adc	r26, r1
    130c:	68 0f       	add	r22, r24
    130e:	79 1f       	adc	r23, r25
    1310:	8a 1f       	adc	r24, r26
    1312:	91 1d       	adc	r25, r1
    1314:	a1 1d       	adc	r26, r1
    1316:	6a 0f       	add	r22, r26
    1318:	71 1d       	adc	r23, r1
    131a:	81 1d       	adc	r24, r1
    131c:	91 1d       	adc	r25, r1
    131e:	a1 1d       	adc	r26, r1
    1320:	20 d0       	rcall	.+64     	; 0x1362 <__ultoa_invert+0x84>
    1322:	09 f4       	brne	.+2      	; 0x1326 <__ultoa_invert+0x48>
    1324:	68 94       	set
    1326:	3f 91       	pop	r19
    1328:	2a e0       	ldi	r18, 0x0A	; 10
    132a:	26 9f       	mul	r18, r22
    132c:	11 24       	eor	r1, r1
    132e:	30 19       	sub	r19, r0
    1330:	30 5d       	subi	r19, 0xD0	; 208
    1332:	31 93       	st	Z+, r19
    1334:	de f6       	brtc	.-74     	; 0x12ec <__ultoa_invert+0xe>
    1336:	cf 01       	movw	r24, r30
    1338:	08 95       	ret
    133a:	46 2f       	mov	r20, r22
    133c:	47 70       	andi	r20, 0x07	; 7
    133e:	40 5d       	subi	r20, 0xD0	; 208
    1340:	41 93       	st	Z+, r20
    1342:	b3 e0       	ldi	r27, 0x03	; 3
    1344:	0f d0       	rcall	.+30     	; 0x1364 <__ultoa_invert+0x86>
    1346:	c9 f7       	brne	.-14     	; 0x133a <__ultoa_invert+0x5c>
    1348:	f6 cf       	rjmp	.-20     	; 0x1336 <__ultoa_invert+0x58>
    134a:	46 2f       	mov	r20, r22
    134c:	4f 70       	andi	r20, 0x0F	; 15
    134e:	40 5d       	subi	r20, 0xD0	; 208
    1350:	4a 33       	cpi	r20, 0x3A	; 58
    1352:	18 f0       	brcs	.+6      	; 0x135a <__ultoa_invert+0x7c>
    1354:	49 5d       	subi	r20, 0xD9	; 217
    1356:	31 fd       	sbrc	r19, 1
    1358:	40 52       	subi	r20, 0x20	; 32
    135a:	41 93       	st	Z+, r20
    135c:	02 d0       	rcall	.+4      	; 0x1362 <__ultoa_invert+0x84>
    135e:	a9 f7       	brne	.-22     	; 0x134a <__ultoa_invert+0x6c>
    1360:	ea cf       	rjmp	.-44     	; 0x1336 <__ultoa_invert+0x58>
    1362:	b4 e0       	ldi	r27, 0x04	; 4
    1364:	a6 95       	lsr	r26
    1366:	97 95       	ror	r25
    1368:	87 95       	ror	r24
    136a:	77 95       	ror	r23
    136c:	67 95       	ror	r22
    136e:	ba 95       	dec	r27
    1370:	c9 f7       	brne	.-14     	; 0x1364 <__ultoa_invert+0x86>
    1372:	00 97       	sbiw	r24, 0x00	; 0
    1374:	61 05       	cpc	r22, r1
    1376:	71 05       	cpc	r23, r1
    1378:	08 95       	ret
    137a:	9b 01       	movw	r18, r22
    137c:	ac 01       	movw	r20, r24
    137e:	0a 2e       	mov	r0, r26
    1380:	06 94       	lsr	r0
    1382:	57 95       	ror	r21
    1384:	47 95       	ror	r20
    1386:	37 95       	ror	r19
    1388:	27 95       	ror	r18
    138a:	ba 95       	dec	r27
    138c:	c9 f7       	brne	.-14     	; 0x1380 <__ultoa_invert+0xa2>
    138e:	62 0f       	add	r22, r18
    1390:	73 1f       	adc	r23, r19
    1392:	84 1f       	adc	r24, r20
    1394:	95 1f       	adc	r25, r21
    1396:	a0 1d       	adc	r26, r0
    1398:	08 95       	ret

0000139a <_exit>:
    139a:	f8 94       	cli

0000139c <__stop_program>:
    139c:	ff cf       	rjmp	.-2      	; 0x139c <__stop_program>
