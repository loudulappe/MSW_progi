
LCD-stoppuhr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800200  00000ee0  00000f74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ee0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  008002cc  008002cc  00001040  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001040  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000109c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  000010dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000259e  00000000  00000000  000012cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f57  00000000  00000000  0000386a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015d6  00000000  00000000  000047c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006a8  00000000  00000000  00005d98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d0b  00000000  00000000  00006440  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b99  00000000  00000000  0000714b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008ce4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	02 c4       	rjmp	.+2052   	; 0x862 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 ee       	ldi	r30, 0xE0	; 224
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 3c       	cpi	r26, 0xCC	; 204
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ac ec       	ldi	r26, 0xCC	; 204
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 34       	cpi	r26, 0x4A	; 74
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	dd c6       	rjmp	.+3514   	; 0xedc <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#define MASKINLAP       0X02
#define SYSTEMTAKT      10

int main(void)
{
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	37 d2       	rcall	.+1134   	; 0x596 <initBoard>
    uint8_t flagrun=0;
    uint8_t timezwischensp=0;
    uint32_t deadtime=0;
    
    
    lcdShowText("00:00:00.00         last 00: 00:00:00.00fast 00: 00:00:00.00slow 00: 00:00:00.00");
 128:	88 e0       	ldi	r24, 0x08	; 8
 12a:	92 e0       	ldi	r25, 0x02	; 2
 12c:	9f 93       	push	r25
 12e:	8f 93       	push	r24
 130:	97 d1       	rcall	.+814    	; 0x460 <lcdShowText>
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
    uint8_t inlap=0;
    uint8_t inbutton=0;
    uint8_t altinbutton=0;
    uint8_t flankpos=0;
    uint8_t flagrun=0;
    uint8_t timezwischensp=0;
 136:	10 e0       	ldi	r17, 0x00	; 0
    uint8_t inres=0;
    uint8_t inlap=0;
    uint8_t inbutton=0;
    uint8_t altinbutton=0;
    uint8_t flankpos=0;
    uint8_t flagrun=0;
 138:	d0 e0       	ldi	r29, 0x00	; 0
    uint8_t counter=0;
    uint32_t laps[RUNDENMAX]={0};
    uint8_t ingo=0;
    uint8_t inres=0;
    uint8_t inlap=0;
    uint8_t inbutton=0;
 13a:	c0 e0       	ldi	r28, 0x00	; 0
{
    initBoard(1);
    uint32_t alltime=0;
    uint32_t looptime=0;
    uint32_t pasttime=0;
    uint32_t runtime=0;
 13c:	81 2c       	mov	r8, r1
 13e:	91 2c       	mov	r9, r1
    
    lcdShowText("00:00:00.00         last 00: 00:00:00.00fast 00: 00:00:00.00slow 00: 00:00:00.00");
    while (1)
    {
//eingabe 
        alltime=getSystemTimeMs();
 140:	54 01       	movw	r10, r8
 142:	50 d0       	rcall	.+160    	; 0x1e4 <getSystemTimeMs>
        looptime=timezwischensp;
 144:	41 2f       	mov	r20, r17
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	70 e0       	ldi	r23, 0x00	; 0
        timezwischensp=alltime;
 14c:	12 2f       	mov	r17, r18
        looptime=timezwischensp-looptime;
 14e:	82 2f       	mov	r24, r18
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	a0 e0       	ldi	r26, 0x00	; 0
 154:	b0 e0       	ldi	r27, 0x00	; 0
 156:	6c 01       	movw	r12, r24
 158:	7d 01       	movw	r14, r26
 15a:	c4 1a       	sub	r12, r20
 15c:	d5 0a       	sbc	r13, r21
 15e:	e6 0a       	sbc	r14, r22
        altinbutton=inbutton;
        inbutton=buttonReadAllPL();
 160:	f7 0a       	sbc	r15, r23
 162:	33 d0       	rcall	.+102    	; 0x1ca <buttonReadAllPL>
 164:	08 2f       	mov	r16, r24
        flankpos=(altinbutton^inbutton)&inbutton;
 166:	c0 95       	com	r28
 168:	c8 23       	and	r28, r24
        ingo=flankpos&MASKINGO;
        inres=flankpos&MASKINRES;
        inlap=flankpos&MASKINLAP;
//verarbeitung
        
        if (ingo)
 16a:	24 f4       	brge	.+8      	; 0x174 <main+0x50>
        {
            flagrun=!flagrun;
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	d1 11       	cpse	r29, r1
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	d8 2f       	mov	r29, r24
        }
        if (flagrun)
 174:	dd 23       	and	r29, r29
 176:	29 f0       	breq	.+10     	; 0x182 <main+0x5e>
        {
            runtime=runtime+looptime;
 178:	8c 0c       	add	r8, r12
 17a:	9d 1c       	adc	r9, r13
 17c:	ae 1c       	adc	r10, r14
 17e:	bf 1c       	adc	r11, r15
 180:	03 c0       	rjmp	.+6      	; 0x188 <main+0x64>
        }
        else 
        {
            deadtime=deadtime+runtime;
            runtime=0;
 182:	81 2c       	mov	r8, r1
 184:	91 2c       	mov	r9, r1
 186:	54 01       	movw	r10, r8
        }
//ausgabe

        lcdWriteText(0,0,"%015lu",runtime);
 188:	bf 92       	push	r11
 18a:	af 92       	push	r10
 18c:	9f 92       	push	r9
 18e:	8f 92       	push	r8
 190:	89 e5       	ldi	r24, 0x59	; 89
 192:	92 e0       	ldi	r25, 0x02	; 2
 194:	9f 93       	push	r25
 196:	8f 93       	push	r24
 198:	1f 92       	push	r1
 19a:	1f 92       	push	r1
        ledWriteAll(flagrun);
 19c:	27 d1       	rcall	.+590    	; 0x3ec <lcdWriteText>
 19e:	8d 2f       	mov	r24, r29
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	10 d0       	rcall	.+32     	; 0x1c4 <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a4:	8f e3       	ldi	r24, 0x3F	; 63
 1a6:	9c e9       	ldi	r25, 0x9C	; 156
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <main+0x84>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <main+0x8a>
 1ae:	00 00       	nop
        alltime=getSystemTimeMs();
        looptime=timezwischensp;
        timezwischensp=alltime;
        looptime=timezwischensp-looptime;
        altinbutton=inbutton;
        inbutton=buttonReadAllPL();
 1b0:	c0 2f       	mov	r28, r16
 1b2:	8d b7       	in	r24, 0x3d	; 61
 1b4:	9e b7       	in	r25, 0x3e	; 62
 1b6:	08 96       	adiw	r24, 0x08	; 8
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	9e bf       	out	0x3e, r25	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	8d bf       	out	0x3d, r24	; 61
 1c2:	bf cf       	rjmp	.-130    	; 0x142 <main+0x1e>

000001c4 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1c4:	82 b9       	out	0x02, r24	; 2
 1c6:	95 b9       	out	0x05, r25	; 5
 1c8:	08 95       	ret

000001ca <buttonReadAllPL>:
 1ca:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 1ce:	08 95       	ret

000001d0 <startSystemTimeMs>:
 1d0:	83 e0       	ldi	r24, 0x03	; 3
 1d2:	84 bd       	out	0x24, r24	; 36
 1d4:	8b e0       	ldi	r24, 0x0B	; 11
 1d6:	85 bd       	out	0x25, r24	; 37
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 1de:	89 ef       	ldi	r24, 0xF9	; 249
 1e0:	87 bd       	out	0x27, r24	; 39
 1e2:	08 95       	ret

000001e4 <getSystemTimeMs>:
 1e4:	20 91 d1 02 	lds	r18, 0x02D1	; 0x8002d1 <systemTimeMs>
 1e8:	30 91 d2 02 	lds	r19, 0x02D2	; 0x8002d2 <systemTimeMs+0x1>
 1ec:	40 91 d3 02 	lds	r20, 0x02D3	; 0x8002d3 <systemTimeMs+0x2>
 1f0:	50 91 d4 02 	lds	r21, 0x02D4	; 0x8002d4 <systemTimeMs+0x3>
 1f4:	60 91 d5 02 	lds	r22, 0x02D5	; 0x8002d5 <systemTimeMs+0x4>
 1f8:	70 91 d6 02 	lds	r23, 0x02D6	; 0x8002d6 <systemTimeMs+0x5>
 1fc:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <systemTimeMs+0x6>
 200:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <systemTimeMs+0x7>
 204:	08 95       	ret

00000206 <initAdc>:
 206:	11 ba       	out	0x11, r1	; 17
 208:	10 ba       	out	0x10, r1	; 16
 20a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 20e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 212:	80 e4       	ldi	r24, 0x40	; 64
 214:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 218:	8f e0       	ldi	r24, 0x0F	; 15
 21a:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 21e:	8f ef       	ldi	r24, 0xFF	; 255
 220:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 224:	ea e7       	ldi	r30, 0x7A	; 122
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	87 ea       	ldi	r24, 0xA7	; 167
 22a:	80 83       	st	Z, r24
 22c:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 230:	80 81       	ld	r24, Z
 232:	80 64       	ori	r24, 0x40	; 64
 234:	80 83       	st	Z, r24
 236:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 23a:	84 ff       	sbrs	r24, 4
 23c:	fc cf       	rjmp	.-8      	; 0x236 <initAdc+0x30>
 23e:	ea e7       	ldi	r30, 0x7A	; 122
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	8f 7e       	andi	r24, 0xEF	; 239
 246:	80 83       	st	Z, r24
 248:	08 95       	ret

0000024a <rgbWrite>:
 24a:	2f ef       	ldi	r18, 0xFF	; 255
 24c:	33 e0       	ldi	r19, 0x03	; 3
 24e:	f9 01       	movw	r30, r18
 250:	e8 1b       	sub	r30, r24
 252:	f9 0b       	sbc	r31, r25
 254:	c9 01       	movw	r24, r18
 256:	86 1b       	sub	r24, r22
 258:	97 0b       	sbc	r25, r23
 25a:	24 1b       	sub	r18, r20
 25c:	35 0b       	sbc	r19, r21
 25e:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 262:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 266:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 26a:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 26e:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 272:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 276:	08 95       	ret

00000278 <initRgb>:
 278:	8e ef       	ldi	r24, 0xFE	; 254
 27a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 27e:	8b e1       	ldi	r24, 0x1B	; 27
 280:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 284:	83 e0       	ldi	r24, 0x03	; 3
 286:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 290:	40 e0       	ldi	r20, 0x00	; 0
 292:	50 e0       	ldi	r21, 0x00	; 0
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	d6 cf       	rjmp	.-84     	; 0x24a <rgbWrite>
 29e:	08 95       	ret

000002a0 <lcdSid>:
 2a0:	88 23       	and	r24, r24
 2a2:	21 f0       	breq	.+8      	; 0x2ac <lcdSid+0xc>
 2a4:	84 b3       	in	r24, 0x14	; 20
 2a6:	81 60       	ori	r24, 0x01	; 1
 2a8:	84 bb       	out	0x14, r24	; 20
 2aa:	08 95       	ret
 2ac:	84 b3       	in	r24, 0x14	; 20
 2ae:	8e 7f       	andi	r24, 0xFE	; 254
 2b0:	84 bb       	out	0x14, r24	; 20
 2b2:	08 95       	ret

000002b4 <lcdSclk>:
 2b4:	88 23       	and	r24, r24
 2b6:	21 f0       	breq	.+8      	; 0x2c0 <lcdSclk+0xc>
 2b8:	84 b3       	in	r24, 0x14	; 20
 2ba:	82 60       	ori	r24, 0x02	; 2
 2bc:	84 bb       	out	0x14, r24	; 20
 2be:	08 95       	ret
 2c0:	84 b3       	in	r24, 0x14	; 20
 2c2:	8d 7f       	andi	r24, 0xFD	; 253
 2c4:	84 bb       	out	0x14, r24	; 20
 2c6:	08 95       	ret

000002c8 <lcdLight>:
 2c8:	81 11       	cpse	r24, r1
 2ca:	04 c0       	rjmp	.+8      	; 0x2d4 <lcdLight+0xc>
 2cc:	84 b5       	in	r24, 0x24	; 36
 2ce:	8f 7d       	andi	r24, 0xDF	; 223
 2d0:	84 bd       	out	0x24, r24	; 36
 2d2:	08 95       	ret
 2d4:	94 b5       	in	r25, 0x24	; 36
 2d6:	90 62       	ori	r25, 0x20	; 32
 2d8:	94 bd       	out	0x24, r25	; 36
 2da:	88 bd       	out	0x28, r24	; 40
 2dc:	08 95       	ret

000002de <writeLcdF>:
 2de:	ef 92       	push	r14
 2e0:	ff 92       	push	r15
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	7c 01       	movw	r14, r24
 2ec:	eb 01       	movw	r28, r22
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	d7 df       	rcall	.-82     	; 0x2a0 <lcdSid>
 2f2:	00 e0       	ldi	r16, 0x00	; 0
 2f4:	10 e0       	ldi	r17, 0x00	; 0
 2f6:	06 c0       	rjmp	.+12     	; 0x304 <writeLcdF+0x26>
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	dc df       	rcall	.-72     	; 0x2b4 <lcdSclk>
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	da df       	rcall	.-76     	; 0x2b4 <lcdSclk>
 300:	0f 5f       	subi	r16, 0xFF	; 255
 302:	1f 4f       	sbci	r17, 0xFF	; 255
 304:	05 30       	cpi	r16, 0x05	; 5
 306:	11 05       	cpc	r17, r1
 308:	b8 f3       	brcs	.-18     	; 0x2f8 <writeLcdF+0x1a>
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	c9 df       	rcall	.-110    	; 0x2a0 <lcdSid>
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	d1 df       	rcall	.-94     	; 0x2b4 <lcdSclk>
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	cf df       	rcall	.-98     	; 0x2b4 <lcdSclk>
 316:	83 e4       	ldi	r24, 0x43	; 67
 318:	e8 16       	cp	r14, r24
 31a:	f1 04       	cpc	r15, r1
 31c:	19 f4       	brne	.+6      	; 0x324 <writeLcdF+0x46>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	bf df       	rcall	.-130    	; 0x2a0 <lcdSid>
 322:	02 c0       	rjmp	.+4      	; 0x328 <writeLcdF+0x4a>
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	bc df       	rcall	.-136    	; 0x2a0 <lcdSid>
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	c4 df       	rcall	.-120    	; 0x2b4 <lcdSclk>
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	c2 df       	rcall	.-124    	; 0x2b4 <lcdSclk>
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	b6 df       	rcall	.-148    	; 0x2a0 <lcdSid>
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	be df       	rcall	.-132    	; 0x2b4 <lcdSclk>
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	bc df       	rcall	.-136    	; 0x2b4 <lcdSclk>
 33c:	00 e0       	ldi	r16, 0x00	; 0
 33e:	10 e0       	ldi	r17, 0x00	; 0
 340:	11 c0       	rjmp	.+34     	; 0x364 <writeLcdF+0x86>
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	b7 df       	rcall	.-146    	; 0x2b4 <lcdSclk>
 346:	c0 ff       	sbrs	r28, 0
 348:	03 c0       	rjmp	.+6      	; 0x350 <writeLcdF+0x72>
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	a9 df       	rcall	.-174    	; 0x2a0 <lcdSid>
 34e:	02 c0       	rjmp	.+4      	; 0x354 <writeLcdF+0x76>
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	a6 df       	rcall	.-180    	; 0x2a0 <lcdSid>
 354:	d6 95       	lsr	r29
 356:	c7 95       	ror	r28
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	ac df       	rcall	.-168    	; 0x2b4 <lcdSclk>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	aa df       	rcall	.-172    	; 0x2b4 <lcdSclk>
 360:	0f 5f       	subi	r16, 0xFF	; 255
 362:	1f 4f       	sbci	r17, 0xFF	; 255
 364:	04 30       	cpi	r16, 0x04	; 4
 366:	11 05       	cpc	r17, r1
 368:	60 f3       	brcs	.-40     	; 0x342 <writeLcdF+0x64>
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	99 df       	rcall	.-206    	; 0x2a0 <lcdSid>
 36e:	00 e0       	ldi	r16, 0x00	; 0
 370:	10 e0       	ldi	r17, 0x00	; 0
 372:	06 c0       	rjmp	.+12     	; 0x380 <writeLcdF+0xa2>
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	9e df       	rcall	.-196    	; 0x2b4 <lcdSclk>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	9c df       	rcall	.-200    	; 0x2b4 <lcdSclk>
 37c:	0f 5f       	subi	r16, 0xFF	; 255
 37e:	1f 4f       	sbci	r17, 0xFF	; 255
 380:	04 30       	cpi	r16, 0x04	; 4
 382:	11 05       	cpc	r17, r1
 384:	b8 f3       	brcs	.-18     	; 0x374 <writeLcdF+0x96>
 386:	00 e0       	ldi	r16, 0x00	; 0
 388:	10 e0       	ldi	r17, 0x00	; 0
 38a:	11 c0       	rjmp	.+34     	; 0x3ae <writeLcdF+0xd0>
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	92 df       	rcall	.-220    	; 0x2b4 <lcdSclk>
 390:	c0 ff       	sbrs	r28, 0
 392:	03 c0       	rjmp	.+6      	; 0x39a <writeLcdF+0xbc>
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	84 df       	rcall	.-248    	; 0x2a0 <lcdSid>
 398:	02 c0       	rjmp	.+4      	; 0x39e <writeLcdF+0xc0>
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	81 df       	rcall	.-254    	; 0x2a0 <lcdSid>
 39e:	d6 95       	lsr	r29
 3a0:	c7 95       	ror	r28
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	87 df       	rcall	.-242    	; 0x2b4 <lcdSclk>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	85 df       	rcall	.-246    	; 0x2b4 <lcdSclk>
 3aa:	0f 5f       	subi	r16, 0xFF	; 255
 3ac:	1f 4f       	sbci	r17, 0xFF	; 255
 3ae:	04 30       	cpi	r16, 0x04	; 4
 3b0:	11 05       	cpc	r17, r1
 3b2:	60 f3       	brcs	.-40     	; 0x38c <writeLcdF+0xae>
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	74 df       	rcall	.-280    	; 0x2a0 <lcdSid>
 3b8:	c0 e0       	ldi	r28, 0x00	; 0
 3ba:	d0 e0       	ldi	r29, 0x00	; 0
 3bc:	05 c0       	rjmp	.+10     	; 0x3c8 <writeLcdF+0xea>
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	79 df       	rcall	.-270    	; 0x2b4 <lcdSclk>
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	77 df       	rcall	.-274    	; 0x2b4 <lcdSclk>
 3c6:	21 96       	adiw	r28, 0x01	; 1
 3c8:	c4 30       	cpi	r28, 0x04	; 4
 3ca:	d1 05       	cpc	r29, r1
 3cc:	c0 f3       	brcs	.-16     	; 0x3be <writeLcdF+0xe0>
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	67 df       	rcall	.-306    	; 0x2a0 <lcdSid>
 3d2:	87 ec       	ldi	r24, 0xC7	; 199
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	01 97       	sbiw	r24, 0x01	; 1
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <writeLcdF+0xf8>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <writeLcdF+0xfe>
 3dc:	00 00       	nop
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	1f 91       	pop	r17
 3e4:	0f 91       	pop	r16
 3e6:	ff 90       	pop	r15
 3e8:	ef 90       	pop	r14
 3ea:	08 95       	ret

000003ec <lcdWriteText>:
 3ec:	1f 93       	push	r17
 3ee:	cf 93       	push	r28
 3f0:	df 93       	push	r29
 3f2:	cd b7       	in	r28, 0x3d	; 61
 3f4:	de b7       	in	r29, 0x3e	; 62
 3f6:	65 97       	sbiw	r28, 0x15	; 21
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	f8 94       	cli
 3fc:	de bf       	out	0x3e, r29	; 62
 3fe:	0f be       	out	0x3f, r0	; 63
 400:	cd bf       	out	0x3d, r28	; 61
 402:	9e 01       	movw	r18, r28
 404:	20 5e       	subi	r18, 0xE0	; 224
 406:	3f 4f       	sbci	r19, 0xFF	; 255
 408:	4e 8d       	ldd	r20, Y+30	; 0x1e
 40a:	5f 8d       	ldd	r21, Y+31	; 0x1f
 40c:	65 e1       	ldi	r22, 0x15	; 21
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	ce 01       	movw	r24, r28
 412:	01 96       	adiw	r24, 0x01	; 1
 414:	7e d2       	rcall	.+1276   	; 0x912 <vsnprintf>
 416:	6d 8d       	ldd	r22, Y+29	; 0x1d
 418:	8c 8d       	ldd	r24, Y+28	; 0x1c
 41a:	90 e2       	ldi	r25, 0x20	; 32
 41c:	89 9f       	mul	r24, r25
 41e:	60 0d       	add	r22, r0
 420:	11 24       	eor	r1, r1
 422:	60 68       	ori	r22, 0x80	; 128
 424:	70 e0       	ldi	r23, 0x00	; 0
 426:	83 e4       	ldi	r24, 0x43	; 67
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	59 df       	rcall	.-334    	; 0x2de <writeLcdF>
 42c:	10 e0       	ldi	r17, 0x00	; 0
 42e:	05 c0       	rjmp	.+10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 430:	1f 5f       	subi	r17, 0xFF	; 255
 432:	70 e0       	ldi	r23, 0x00	; 0
 434:	84 e4       	ldi	r24, 0x44	; 68
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	52 df       	rcall	.-348    	; 0x2de <writeLcdF>
 43a:	e1 e0       	ldi	r30, 0x01	; 1
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	ec 0f       	add	r30, r28
 440:	fd 1f       	adc	r31, r29
 442:	e1 0f       	add	r30, r17
 444:	f1 1d       	adc	r31, r1
 446:	60 81       	ld	r22, Z
 448:	61 11       	cpse	r22, r1
 44a:	f2 cf       	rjmp	.-28     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 44c:	65 96       	adiw	r28, 0x15	; 21
 44e:	0f b6       	in	r0, 0x3f	; 63
 450:	f8 94       	cli
 452:	de bf       	out	0x3e, r29	; 62
 454:	0f be       	out	0x3f, r0	; 63
 456:	cd bf       	out	0x3d, r28	; 61
 458:	df 91       	pop	r29
 45a:	cf 91       	pop	r28
 45c:	1f 91       	pop	r17
 45e:	08 95       	ret

00000460 <lcdShowText>:
 460:	0f 93       	push	r16
 462:	1f 93       	push	r17
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
 468:	cd b7       	in	r28, 0x3d	; 61
 46a:	de b7       	in	r29, 0x3e	; 62
 46c:	c1 55       	subi	r28, 0x51	; 81
 46e:	d1 09       	sbc	r29, r1
 470:	0f b6       	in	r0, 0x3f	; 63
 472:	f8 94       	cli
 474:	de bf       	out	0x3e, r29	; 62
 476:	0f be       	out	0x3f, r0	; 63
 478:	cd bf       	out	0x3d, r28	; 61
 47a:	9e 01       	movw	r18, r28
 47c:	27 5a       	subi	r18, 0xA7	; 167
 47e:	3f 4f       	sbci	r19, 0xFF	; 255
 480:	f9 01       	movw	r30, r18
 482:	41 91       	ld	r20, Z+
 484:	51 91       	ld	r21, Z+
 486:	9f 01       	movw	r18, r30
 488:	61 e5       	ldi	r22, 0x51	; 81
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	8e 01       	movw	r16, r28
 48e:	0f 5f       	subi	r16, 0xFF	; 255
 490:	1f 4f       	sbci	r17, 0xFF	; 255
 492:	c8 01       	movw	r24, r16
 494:	3e d2       	rcall	.+1148   	; 0x912 <vsnprintf>
 496:	f8 01       	movw	r30, r16
 498:	01 90       	ld	r0, Z+
 49a:	00 20       	and	r0, r0
 49c:	e9 f7       	brne	.-6      	; 0x498 <lcdShowText+0x38>
 49e:	31 97       	sbiw	r30, 0x01	; 1
 4a0:	cf 01       	movw	r24, r30
 4a2:	80 1b       	sub	r24, r16
 4a4:	91 0b       	sbc	r25, r17
 4a6:	09 c0       	rjmp	.+18     	; 0x4ba <lcdShowText+0x5a>
 4a8:	e1 e0       	ldi	r30, 0x01	; 1
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	ec 0f       	add	r30, r28
 4ae:	fd 1f       	adc	r31, r29
 4b0:	e8 0f       	add	r30, r24
 4b2:	f9 1f       	adc	r31, r25
 4b4:	20 e2       	ldi	r18, 0x20	; 32
 4b6:	20 83       	st	Z, r18
 4b8:	01 96       	adiw	r24, 0x01	; 1
 4ba:	81 35       	cpi	r24, 0x51	; 81
 4bc:	91 05       	cpc	r25, r1
 4be:	a0 f3       	brcs	.-24     	; 0x4a8 <lcdShowText+0x48>
 4c0:	62 96       	adiw	r28, 0x12	; 18
 4c2:	1f ae       	std	Y+63, r1	; 0x3f
 4c4:	62 97       	sbiw	r28, 0x12	; 18
 4c6:	ce 01       	movw	r24, r28
 4c8:	01 96       	adiw	r24, 0x01	; 1
 4ca:	9f 93       	push	r25
 4cc:	8f 93       	push	r24
 4ce:	1f 92       	push	r1
 4d0:	1f 92       	push	r1
 4d2:	8c df       	rcall	.-232    	; 0x3ec <lcdWriteText>
 4d4:	ce 01       	movw	r24, r28
 4d6:	45 96       	adiw	r24, 0x15	; 21
 4d8:	9f 93       	push	r25
 4da:	8f 93       	push	r24
 4dc:	1f 92       	push	r1
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	8f 93       	push	r24
 4e2:	84 df       	rcall	.-248    	; 0x3ec <lcdWriteText>
 4e4:	ce 01       	movw	r24, r28
 4e6:	89 96       	adiw	r24, 0x29	; 41
 4e8:	9f 93       	push	r25
 4ea:	8f 93       	push	r24
 4ec:	1f 92       	push	r1
 4ee:	82 e0       	ldi	r24, 0x02	; 2
 4f0:	8f 93       	push	r24
 4f2:	7c df       	rcall	.-264    	; 0x3ec <lcdWriteText>
 4f4:	ce 01       	movw	r24, r28
 4f6:	cd 96       	adiw	r24, 0x3d	; 61
 4f8:	9f 93       	push	r25
 4fa:	8f 93       	push	r24
 4fc:	1f 92       	push	r1
 4fe:	83 e0       	ldi	r24, 0x03	; 3
 500:	8f 93       	push	r24
 502:	74 df       	rcall	.-280    	; 0x3ec <lcdWriteText>
 504:	0f b6       	in	r0, 0x3f	; 63
 506:	f8 94       	cli
 508:	de bf       	out	0x3e, r29	; 62
 50a:	0f be       	out	0x3f, r0	; 63
 50c:	cd bf       	out	0x3d, r28	; 61
 50e:	cf 5a       	subi	r28, 0xAF	; 175
 510:	df 4f       	sbci	r29, 0xFF	; 255
 512:	0f b6       	in	r0, 0x3f	; 63
 514:	f8 94       	cli
 516:	de bf       	out	0x3e, r29	; 62
 518:	0f be       	out	0x3f, r0	; 63
 51a:	cd bf       	out	0x3d, r28	; 61
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	1f 91       	pop	r17
 522:	0f 91       	pop	r16
 524:	08 95       	ret

00000526 <lcdClear>:
 526:	61 e0       	ldi	r22, 0x01	; 1
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	83 e4       	ldi	r24, 0x43	; 67
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	d7 de       	rcall	.-594    	; 0x2de <writeLcdF>
 530:	8f e3       	ldi	r24, 0x3F	; 63
 532:	9f e1       	ldi	r25, 0x1F	; 31
 534:	01 97       	sbiw	r24, 0x01	; 1
 536:	f1 f7       	brne	.-4      	; 0x534 <lcdClear+0xe>
 538:	00 c0       	rjmp	.+0      	; 0x53a <lcdClear+0x14>
 53a:	00 00       	nop
 53c:	88 e8       	ldi	r24, 0x88	; 136
 53e:	92 e0       	ldi	r25, 0x02	; 2
 540:	9f 93       	push	r25
 542:	8f 93       	push	r24
 544:	1f 92       	push	r1
 546:	1f 92       	push	r1
 548:	51 df       	rcall	.-350    	; 0x3ec <lcdWriteText>
 54a:	0f 90       	pop	r0
 54c:	0f 90       	pop	r0
 54e:	0f 90       	pop	r0
 550:	0f 90       	pop	r0
 552:	08 95       	ret

00000554 <initLcd>:
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	ae de       	rcall	.-676    	; 0x2b4 <lcdSclk>
 558:	80 e0       	ldi	r24, 0x00	; 0
 55a:	a2 de       	rcall	.-700    	; 0x2a0 <lcdSid>
 55c:	64 e3       	ldi	r22, 0x34	; 52
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	83 e4       	ldi	r24, 0x43	; 67
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	bc de       	rcall	.-648    	; 0x2de <writeLcdF>
 566:	69 e0       	ldi	r22, 0x09	; 9
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	83 e4       	ldi	r24, 0x43	; 67
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	b7 de       	rcall	.-658    	; 0x2de <writeLcdF>
 570:	60 e3       	ldi	r22, 0x30	; 48
 572:	70 e0       	ldi	r23, 0x00	; 0
 574:	83 e4       	ldi	r24, 0x43	; 67
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	b2 de       	rcall	.-668    	; 0x2de <writeLcdF>
 57a:	6c e0       	ldi	r22, 0x0C	; 12
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	83 e4       	ldi	r24, 0x43	; 67
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	ad de       	rcall	.-678    	; 0x2de <writeLcdF>
 584:	d0 df       	rcall	.-96     	; 0x526 <lcdClear>
 586:	67 e0       	ldi	r22, 0x07	; 7
 588:	70 e0       	ldi	r23, 0x00	; 0
 58a:	83 e4       	ldi	r24, 0x43	; 67
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	a7 de       	rcall	.-690    	; 0x2de <writeLcdF>
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	9a ce       	rjmp	.-716    	; 0x2c8 <lcdLight>
 594:	08 95       	ret

00000596 <initBoard>:
 596:	ff 92       	push	r15
 598:	0f 93       	push	r16
 59a:	1f 93       	push	r17
 59c:	cf 93       	push	r28
 59e:	df 93       	push	r29
 5a0:	c8 2f       	mov	r28, r24
 5a2:	85 b7       	in	r24, 0x35	; 53
 5a4:	85 bf       	out	0x35, r24	; 53
 5a6:	12 b8       	out	0x02, r1	; 2
 5a8:	8f ef       	ldi	r24, 0xFF	; 255
 5aa:	81 b9       	out	0x01, r24	; 1
 5ac:	15 b8       	out	0x05, r1	; 5
 5ae:	84 b9       	out	0x04, r24	; 4
 5b0:	88 b9       	out	0x08, r24	; 8
 5b2:	17 b8       	out	0x07, r1	; 7
 5b4:	8b b9       	out	0x0b, r24	; 11
 5b6:	1a b8       	out	0x0a, r1	; 10
 5b8:	8e b9       	out	0x0e, r24	; 14
 5ba:	1d b8       	out	0x0d, r1	; 13
 5bc:	9e b1       	in	r25, 0x0e	; 14
 5be:	9b 7f       	andi	r25, 0xFB	; 251
 5c0:	9e b9       	out	0x0e, r25	; 14
 5c2:	11 ba       	out	0x11, r1	; 17
 5c4:	10 ba       	out	0x10, r1	; 16
 5c6:	94 e0       	ldi	r25, 0x04	; 4
 5c8:	94 bb       	out	0x14, r25	; 20
 5ca:	93 b3       	in	r25, 0x13	; 19
 5cc:	93 60       	ori	r25, 0x03	; 3
 5ce:	93 bb       	out	0x13, r25	; 19
 5d0:	93 b3       	in	r25, 0x13	; 19
 5d2:	90 62       	ori	r25, 0x20	; 32
 5d4:	93 bb       	out	0x13, r25	; 19
 5d6:	97 ec       	ldi	r25, 0xC7	; 199
 5d8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 5dc:	98 e3       	ldi	r25, 0x38	; 56
 5de:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 5e2:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 5e6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 5ea:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 5ee:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 5f2:	8c e3       	ldi	r24, 0x3C	; 60
 5f4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 5f8:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 5fc:	78 94       	sei
 5fe:	e8 dd       	rcall	.-1072   	; 0x1d0 <startSystemTimeMs>
 600:	a9 df       	rcall	.-174    	; 0x554 <initLcd>
 602:	01 de       	rcall	.-1022   	; 0x206 <initAdc>
 604:	39 de       	rcall	.-910    	; 0x278 <initRgb>
 606:	cc 23       	and	r28, r28
 608:	09 f4       	brne	.+2      	; 0x60c <initBoard+0x76>
 60a:	a3 c0       	rjmp	.+326    	; 0x752 <initBoard+0x1bc>
 60c:	8f ef       	ldi	r24, 0xFF	; 255
 60e:	5c de       	rcall	.-840    	; 0x2c8 <lcdLight>
 610:	40 e0       	ldi	r20, 0x00	; 0
 612:	50 e0       	ldi	r21, 0x00	; 0
 614:	6f ef       	ldi	r22, 0xFF	; 255
 616:	73 e0       	ldi	r23, 0x03	; 3
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	16 de       	rcall	.-980    	; 0x24a <rgbWrite>
 61e:	85 e7       	ldi	r24, 0x75	; 117
 620:	92 e0       	ldi	r25, 0x02	; 2
 622:	9f 93       	push	r25
 624:	8f 93       	push	r24
 626:	1f 92       	push	r1
 628:	1f 92       	push	r1
 62a:	e0 de       	rcall	.-576    	; 0x3ec <lcdWriteText>
 62c:	8a e8       	ldi	r24, 0x8A	; 138
 62e:	92 e0       	ldi	r25, 0x02	; 2
 630:	9f 93       	push	r25
 632:	8f 93       	push	r24
 634:	1f 92       	push	r1
 636:	81 e0       	ldi	r24, 0x01	; 1
 638:	8f 93       	push	r24
 63a:	d8 de       	rcall	.-592    	; 0x3ec <lcdWriteText>
 63c:	80 e6       	ldi	r24, 0x60	; 96
 63e:	92 e0       	ldi	r25, 0x02	; 2
 640:	9f 93       	push	r25
 642:	8f 93       	push	r24
 644:	1f 92       	push	r1
 646:	82 e0       	ldi	r24, 0x02	; 2
 648:	8f 93       	push	r24
 64a:	d0 de       	rcall	.-608    	; 0x3ec <lcdWriteText>
 64c:	8f e9       	ldi	r24, 0x9F	; 159
 64e:	92 e0       	ldi	r25, 0x02	; 2
 650:	9f 93       	push	r25
 652:	8f 93       	push	r24
 654:	1f 92       	push	r1
 656:	83 e0       	ldi	r24, 0x03	; 3
 658:	8f 93       	push	r24
 65a:	c8 de       	rcall	.-624    	; 0x3ec <lcdWriteText>
 65c:	8d b7       	in	r24, 0x3d	; 61
 65e:	9e b7       	in	r25, 0x3e	; 62
 660:	40 96       	adiw	r24, 0x10	; 16
 662:	0f b6       	in	r0, 0x3f	; 63
 664:	f8 94       	cli
 666:	9e bf       	out	0x3e, r25	; 62
 668:	0f be       	out	0x3f, r0	; 63
 66a:	8d bf       	out	0x3d, r24	; 61
 66c:	ff 24       	eor	r15, r15
 66e:	f3 94       	inc	r15
 670:	c0 e0       	ldi	r28, 0x00	; 0
 672:	10 e0       	ldi	r17, 0x00	; 0
 674:	01 e0       	ldi	r16, 0x01	; 1
 676:	d0 e0       	ldi	r29, 0x00	; 0
 678:	00 23       	and	r16, r16
 67a:	51 f0       	breq	.+20     	; 0x690 <initBoard+0xfa>
 67c:	80 e0       	ldi	r24, 0x00	; 0
 67e:	90 e8       	ldi	r25, 0x80	; 128
 680:	0d 2e       	mov	r0, r29
 682:	02 c0       	rjmp	.+4      	; 0x688 <initBoard+0xf2>
 684:	96 95       	lsr	r25
 686:	87 95       	ror	r24
 688:	0a 94       	dec	r0
 68a:	e2 f7       	brpl	.-8      	; 0x684 <initBoard+0xee>
 68c:	9b dd       	rcall	.-1226   	; 0x1c4 <ledWriteAll>
 68e:	09 c0       	rjmp	.+18     	; 0x6a2 <initBoard+0x10c>
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	0d 2e       	mov	r0, r29
 696:	02 c0       	rjmp	.+4      	; 0x69c <initBoard+0x106>
 698:	88 0f       	add	r24, r24
 69a:	99 1f       	adc	r25, r25
 69c:	0a 94       	dec	r0
 69e:	e2 f7       	brpl	.-8      	; 0x698 <initBoard+0x102>
 6a0:	91 dd       	rcall	.-1246   	; 0x1c4 <ledWriteAll>
 6a2:	df 5f       	subi	r29, 0xFF	; 255
 6a4:	d1 31       	cpi	r29, 0x11	; 17
 6a6:	28 f0       	brcs	.+10     	; 0x6b2 <initBoard+0x11c>
 6a8:	81 e0       	ldi	r24, 0x01	; 1
 6aa:	01 11       	cpse	r16, r1
 6ac:	80 e0       	ldi	r24, 0x00	; 0
 6ae:	08 2f       	mov	r16, r24
 6b0:	d0 e0       	ldi	r29, 0x00	; 0
 6b2:	ff 20       	and	r15, r15
 6b4:	11 f0       	breq	.+4      	; 0x6ba <initBoard+0x124>
 6b6:	ce 5f       	subi	r28, 0xFE	; 254
 6b8:	01 c0       	rjmp	.+2      	; 0x6bc <initBoard+0x126>
 6ba:	c2 50       	subi	r28, 0x02	; 2
 6bc:	8c 2f       	mov	r24, r28
 6be:	04 de       	rcall	.-1016   	; 0x2c8 <lcdLight>
 6c0:	ce 3f       	cpi	r28, 0xFE	; 254
 6c2:	09 f4       	brne	.+2      	; 0x6c6 <initBoard+0x130>
 6c4:	f1 2c       	mov	r15, r1
 6c6:	c8 37       	cpi	r28, 0x78	; 120
 6c8:	11 f4       	brne	.+4      	; 0x6ce <initBoard+0x138>
 6ca:	ff 24       	eor	r15, r15
 6cc:	f3 94       	inc	r15
 6ce:	11 11       	cpse	r17, r1
 6d0:	17 c0       	rjmp	.+46     	; 0x700 <initBoard+0x16a>
 6d2:	7b dd       	rcall	.-1290   	; 0x1ca <buttonReadAllPL>
 6d4:	83 7c       	andi	r24, 0xC3	; 195
 6d6:	a1 f0       	breq	.+40     	; 0x700 <initBoard+0x16a>
 6d8:	40 e0       	ldi	r20, 0x00	; 0
 6da:	50 e0       	ldi	r21, 0x00	; 0
 6dc:	66 e2       	ldi	r22, 0x26	; 38
 6de:	72 e0       	ldi	r23, 0x02	; 2
 6e0:	8f ef       	ldi	r24, 0xFF	; 255
 6e2:	93 e0       	ldi	r25, 0x03	; 3
 6e4:	b2 dd       	rcall	.-1180   	; 0x24a <rgbWrite>
 6e6:	84 eb       	ldi	r24, 0xB4	; 180
 6e8:	92 e0       	ldi	r25, 0x02	; 2
 6ea:	9f 93       	push	r25
 6ec:	8f 93       	push	r24
 6ee:	1f 92       	push	r1
 6f0:	83 e0       	ldi	r24, 0x03	; 3
 6f2:	8f 93       	push	r24
 6f4:	7b de       	rcall	.-778    	; 0x3ec <lcdWriteText>
 6f6:	0f 90       	pop	r0
 6f8:	0f 90       	pop	r0
 6fa:	0f 90       	pop	r0
 6fc:	0f 90       	pop	r0
 6fe:	11 e0       	ldi	r17, 0x01	; 1
 700:	11 23       	and	r17, r17
 702:	19 f0       	breq	.+6      	; 0x70a <initBoard+0x174>
 704:	62 dd       	rcall	.-1340   	; 0x1ca <buttonReadAllPL>
 706:	83 7c       	andi	r24, 0xC3	; 195
 708:	39 f0       	breq	.+14     	; 0x718 <initBoard+0x182>
 70a:	8f ef       	ldi	r24, 0xFF	; 255
 70c:	9c e7       	ldi	r25, 0x7C	; 124
 70e:	01 97       	sbiw	r24, 0x01	; 1
 710:	f1 f7       	brne	.-4      	; 0x70e <initBoard+0x178>
 712:	00 c0       	rjmp	.+0      	; 0x714 <initBoard+0x17e>
 714:	00 00       	nop
 716:	b0 cf       	rjmp	.-160    	; 0x678 <initBoard+0xe2>
 718:	06 df       	rcall	.-500    	; 0x526 <lcdClear>
 71a:	80 e0       	ldi	r24, 0x00	; 0
 71c:	d5 dd       	rcall	.-1110   	; 0x2c8 <lcdLight>
 71e:	80 e0       	ldi	r24, 0x00	; 0
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	50 dd       	rcall	.-1376   	; 0x1c4 <ledWriteAll>
 724:	40 e0       	ldi	r20, 0x00	; 0
 726:	50 e0       	ldi	r21, 0x00	; 0
 728:	60 e0       	ldi	r22, 0x00	; 0
 72a:	70 e0       	ldi	r23, 0x00	; 0
 72c:	80 e0       	ldi	r24, 0x00	; 0
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	8c dd       	rcall	.-1256   	; 0x24a <rgbWrite>
 732:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <systemTimeMs>
 736:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <systemTimeMs+0x1>
 73a:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <systemTimeMs+0x2>
 73e:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <systemTimeMs+0x3>
 742:	10 92 d5 02 	sts	0x02D5, r1	; 0x8002d5 <systemTimeMs+0x4>
 746:	10 92 d6 02 	sts	0x02D6, r1	; 0x8002d6 <systemTimeMs+0x5>
 74a:	10 92 d7 02 	sts	0x02D7, r1	; 0x8002d7 <systemTimeMs+0x6>
 74e:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <systemTimeMs+0x7>
 752:	df 91       	pop	r29
 754:	cf 91       	pop	r28
 756:	1f 91       	pop	r17
 758:	0f 91       	pop	r16
 75a:	ff 90       	pop	r15
 75c:	08 95       	ret

0000075e <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 75e:	cf 93       	push	r28
 760:	df 93       	push	r29
 762:	cd b7       	in	r28, 0x3d	; 61
 764:	de b7       	in	r29, 0x3e	; 62
 766:	28 97       	sbiw	r28, 0x08	; 8
 768:	0f b6       	in	r0, 0x3f	; 63
 76a:	f8 94       	cli
 76c:	de bf       	out	0x3e, r29	; 62
 76e:	0f be       	out	0x3f, r0	; 63
 770:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 772:	88 e0       	ldi	r24, 0x08	; 8
 774:	e0 e0       	ldi	r30, 0x00	; 0
 776:	f2 e0       	ldi	r31, 0x02	; 2
 778:	de 01       	movw	r26, r28
 77a:	11 96       	adiw	r26, 0x01	; 1
 77c:	01 90       	ld	r0, Z+
 77e:	0d 92       	st	X+, r0
 780:	8a 95       	dec	r24
 782:	e1 f7       	brne	.-8      	; 0x77c <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 784:	e5 e0       	ldi	r30, 0x05	; 5
 786:	f1 e0       	ldi	r31, 0x01	; 1
 788:	80 81       	ld	r24, Z
 78a:	8f 7b       	andi	r24, 0xBF	; 191
 78c:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 78e:	e0 91 ce 02 	lds	r30, 0x02CE	; 0x8002ce <Zeilen_Nr.2743>
 792:	f0 91 cf 02 	lds	r31, 0x02CF	; 0x8002cf <Zeilen_Nr.2743+0x1>
 796:	81 e0       	ldi	r24, 0x01	; 1
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	8c 0f       	add	r24, r28
 79c:	9d 1f       	adc	r25, r29
 79e:	e8 0f       	add	r30, r24
 7a0:	f9 1f       	adc	r31, r25
 7a2:	80 81       	ld	r24, Z
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	90 93 cd 02 	sts	0x02CD, r25	; 0x8002cd <__data_end+0x1>
 7aa:	80 93 cc 02 	sts	0x02CC, r24	; 0x8002cc <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7ae:	80 e0       	ldi	r24, 0x00	; 0
 7b0:	26 c0       	rjmp	.+76     	; 0x7fe <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 7b2:	e7 e3       	ldi	r30, 0x37	; 55
 7b4:	f0 e0       	ldi	r31, 0x00	; 0
 7b6:	e8 1b       	sub	r30, r24
 7b8:	f1 09       	sbc	r31, r1
 7ba:	ee 0f       	add	r30, r30
 7bc:	ff 1f       	adc	r31, r31
 7be:	e6 52       	subi	r30, 0x26	; 38
 7c0:	fd 4f       	sbci	r31, 0xFD	; 253
 7c2:	40 81       	ld	r20, Z
 7c4:	51 81       	ldd	r21, Z+1	; 0x01
 7c6:	20 91 cc 02 	lds	r18, 0x02CC	; 0x8002cc <__data_end>
 7ca:	30 91 cd 02 	lds	r19, 0x02CD	; 0x8002cd <__data_end+0x1>
 7ce:	24 23       	and	r18, r20
 7d0:	35 23       	and	r19, r21
 7d2:	23 2b       	or	r18, r19
 7d4:	31 f0       	breq	.+12     	; 0x7e2 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 7d6:	e5 e0       	ldi	r30, 0x05	; 5
 7d8:	f1 e0       	ldi	r31, 0x01	; 1
 7da:	90 81       	ld	r25, Z
 7dc:	90 62       	ori	r25, 0x20	; 32
 7de:	90 83       	st	Z, r25
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7e2:	e5 e0       	ldi	r30, 0x05	; 5
 7e4:	f1 e0       	ldi	r31, 0x01	; 1
 7e6:	90 81       	ld	r25, Z
 7e8:	9f 7d       	andi	r25, 0xDF	; 223
 7ea:	90 83       	st	Z, r25
        }
        CLOCK_1;
 7ec:	e5 e0       	ldi	r30, 0x05	; 5
 7ee:	f1 e0       	ldi	r31, 0x01	; 1
 7f0:	90 81       	ld	r25, Z
 7f2:	90 61       	ori	r25, 0x10	; 16
 7f4:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7f6:	90 81       	ld	r25, Z
 7f8:	9f 7e       	andi	r25, 0xEF	; 239
 7fa:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7fc:	8f 5f       	subi	r24, 0xFF	; 255
 7fe:	88 33       	cpi	r24, 0x38	; 56
 800:	c0 f2       	brcs	.-80     	; 0x7b2 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 802:	e5 e0       	ldi	r30, 0x05	; 5
 804:	f1 e0       	ldi	r31, 0x01	; 1
 806:	80 81       	ld	r24, Z
 808:	87 7f       	andi	r24, 0xF7	; 247
 80a:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 80c:	80 81       	ld	r24, Z
 80e:	88 7f       	andi	r24, 0xF8	; 248
 810:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 812:	90 81       	ld	r25, Z
 814:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <Zeilen_Nr.2743>
 818:	89 2b       	or	r24, r25
 81a:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 81c:	80 81       	ld	r24, Z
 81e:	80 64       	ori	r24, 0x40	; 64
 820:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 822:	80 81       	ld	r24, Z
 824:	88 60       	ori	r24, 0x08	; 8
 826:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 828:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <Zeilen_Nr.2743>
 82c:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <Zeilen_Nr.2743+0x1>
 830:	87 30       	cpi	r24, 0x07	; 7
 832:	91 05       	cpc	r25, r1
 834:	30 f4       	brcc	.+12     	; 0x842 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 836:	01 96       	adiw	r24, 0x01	; 1
 838:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <Zeilen_Nr.2743+0x1>
 83c:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <Zeilen_Nr.2743>
 840:	07 c0       	rjmp	.+14     	; 0x850 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 842:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <Zeilen_Nr.2743+0x1>
 846:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <Zeilen_Nr.2743>
        writeTextFinished = 1;
 84a:	81 e0       	ldi	r24, 0x01	; 1
 84c:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <writeTextFinished>
    }
    
 850:	28 96       	adiw	r28, 0x08	; 8
 852:	0f b6       	in	r0, 0x3f	; 63
 854:	f8 94       	cli
 856:	de bf       	out	0x3e, r29	; 62
 858:	0f be       	out	0x3f, r0	; 63
 85a:	cd bf       	out	0x3d, r28	; 61
 85c:	df 91       	pop	r29
 85e:	cf 91       	pop	r28
 860:	08 95       	ret

00000862 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 862:	1f 92       	push	r1
 864:	0f 92       	push	r0
 866:	0f b6       	in	r0, 0x3f	; 63
 868:	0f 92       	push	r0
 86a:	11 24       	eor	r1, r1
 86c:	0b b6       	in	r0, 0x3b	; 59
 86e:	0f 92       	push	r0
 870:	2f 93       	push	r18
 872:	3f 93       	push	r19
 874:	4f 93       	push	r20
 876:	5f 93       	push	r21
 878:	6f 93       	push	r22
 87a:	7f 93       	push	r23
 87c:	8f 93       	push	r24
 87e:	9f 93       	push	r25
 880:	af 93       	push	r26
 882:	bf 93       	push	r27
 884:	ef 93       	push	r30
 886:	ff 93       	push	r31
    systemTimeMs += 1;
 888:	20 91 d1 02 	lds	r18, 0x02D1	; 0x8002d1 <systemTimeMs>
 88c:	30 91 d2 02 	lds	r19, 0x02D2	; 0x8002d2 <systemTimeMs+0x1>
 890:	40 91 d3 02 	lds	r20, 0x02D3	; 0x8002d3 <systemTimeMs+0x2>
 894:	50 91 d4 02 	lds	r21, 0x02D4	; 0x8002d4 <systemTimeMs+0x3>
 898:	60 91 d5 02 	lds	r22, 0x02D5	; 0x8002d5 <systemTimeMs+0x4>
 89c:	70 91 d6 02 	lds	r23, 0x02D6	; 0x8002d6 <systemTimeMs+0x5>
 8a0:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <systemTimeMs+0x6>
 8a4:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <systemTimeMs+0x7>
 8a8:	a1 e0       	ldi	r26, 0x01	; 1
 8aa:	27 d0       	rcall	.+78     	; 0x8fa <__adddi3_s8>
 8ac:	20 93 d1 02 	sts	0x02D1, r18	; 0x8002d1 <systemTimeMs>
 8b0:	30 93 d2 02 	sts	0x02D2, r19	; 0x8002d2 <systemTimeMs+0x1>
 8b4:	40 93 d3 02 	sts	0x02D3, r20	; 0x8002d3 <systemTimeMs+0x2>
 8b8:	50 93 d4 02 	sts	0x02D4, r21	; 0x8002d4 <systemTimeMs+0x3>
 8bc:	60 93 d5 02 	sts	0x02D5, r22	; 0x8002d5 <systemTimeMs+0x4>
 8c0:	70 93 d6 02 	sts	0x02D6, r23	; 0x8002d6 <systemTimeMs+0x5>
 8c4:	80 93 d7 02 	sts	0x02D7, r24	; 0x8002d7 <systemTimeMs+0x6>
 8c8:	90 93 d8 02 	sts	0x02D8, r25	; 0x8002d8 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 8cc:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <matrixRunning>
 8d0:	81 11       	cpse	r24, r1
 8d2:	45 df       	rcall	.-374    	; 0x75e <matrixWriteNextLine>
}
 8d4:	ff 91       	pop	r31
 8d6:	ef 91       	pop	r30
 8d8:	bf 91       	pop	r27
 8da:	af 91       	pop	r26
 8dc:	9f 91       	pop	r25
 8de:	8f 91       	pop	r24
 8e0:	7f 91       	pop	r23
 8e2:	6f 91       	pop	r22
 8e4:	5f 91       	pop	r21
 8e6:	4f 91       	pop	r20
 8e8:	3f 91       	pop	r19
 8ea:	2f 91       	pop	r18
 8ec:	0f 90       	pop	r0
 8ee:	0b be       	out	0x3b, r0	; 59
 8f0:	0f 90       	pop	r0
 8f2:	0f be       	out	0x3f, r0	; 63
 8f4:	0f 90       	pop	r0
 8f6:	1f 90       	pop	r1
 8f8:	18 95       	reti

000008fa <__adddi3_s8>:
 8fa:	00 24       	eor	r0, r0
 8fc:	a7 fd       	sbrc	r26, 7
 8fe:	00 94       	com	r0
 900:	2a 0f       	add	r18, r26
 902:	30 1d       	adc	r19, r0
 904:	40 1d       	adc	r20, r0
 906:	50 1d       	adc	r21, r0
 908:	60 1d       	adc	r22, r0
 90a:	70 1d       	adc	r23, r0
 90c:	80 1d       	adc	r24, r0
 90e:	90 1d       	adc	r25, r0
 910:	08 95       	ret

00000912 <vsnprintf>:
 912:	0f 93       	push	r16
 914:	1f 93       	push	r17
 916:	cf 93       	push	r28
 918:	df 93       	push	r29
 91a:	cd b7       	in	r28, 0x3d	; 61
 91c:	de b7       	in	r29, 0x3e	; 62
 91e:	2e 97       	sbiw	r28, 0x0e	; 14
 920:	0f b6       	in	r0, 0x3f	; 63
 922:	f8 94       	cli
 924:	de bf       	out	0x3e, r29	; 62
 926:	0f be       	out	0x3f, r0	; 63
 928:	cd bf       	out	0x3d, r28	; 61
 92a:	8c 01       	movw	r16, r24
 92c:	fa 01       	movw	r30, r20
 92e:	86 e0       	ldi	r24, 0x06	; 6
 930:	8c 83       	std	Y+4, r24	; 0x04
 932:	1a 83       	std	Y+2, r17	; 0x02
 934:	09 83       	std	Y+1, r16	; 0x01
 936:	77 ff       	sbrs	r23, 7
 938:	02 c0       	rjmp	.+4      	; 0x93e <vsnprintf+0x2c>
 93a:	60 e0       	ldi	r22, 0x00	; 0
 93c:	70 e8       	ldi	r23, 0x80	; 128
 93e:	cb 01       	movw	r24, r22
 940:	01 97       	sbiw	r24, 0x01	; 1
 942:	9e 83       	std	Y+6, r25	; 0x06
 944:	8d 83       	std	Y+5, r24	; 0x05
 946:	a9 01       	movw	r20, r18
 948:	bf 01       	movw	r22, r30
 94a:	ce 01       	movw	r24, r28
 94c:	01 96       	adiw	r24, 0x01	; 1
 94e:	19 d0       	rcall	.+50     	; 0x982 <vfprintf>
 950:	4d 81       	ldd	r20, Y+5	; 0x05
 952:	5e 81       	ldd	r21, Y+6	; 0x06
 954:	57 fd       	sbrc	r21, 7
 956:	0a c0       	rjmp	.+20     	; 0x96c <vsnprintf+0x5a>
 958:	2f 81       	ldd	r18, Y+7	; 0x07
 95a:	38 85       	ldd	r19, Y+8	; 0x08
 95c:	42 17       	cp	r20, r18
 95e:	53 07       	cpc	r21, r19
 960:	0c f4       	brge	.+2      	; 0x964 <vsnprintf+0x52>
 962:	9a 01       	movw	r18, r20
 964:	f8 01       	movw	r30, r16
 966:	e2 0f       	add	r30, r18
 968:	f3 1f       	adc	r31, r19
 96a:	10 82       	st	Z, r1
 96c:	2e 96       	adiw	r28, 0x0e	; 14
 96e:	0f b6       	in	r0, 0x3f	; 63
 970:	f8 94       	cli
 972:	de bf       	out	0x3e, r29	; 62
 974:	0f be       	out	0x3f, r0	; 63
 976:	cd bf       	out	0x3d, r28	; 61
 978:	df 91       	pop	r29
 97a:	cf 91       	pop	r28
 97c:	1f 91       	pop	r17
 97e:	0f 91       	pop	r16
 980:	08 95       	ret

00000982 <vfprintf>:
 982:	2f 92       	push	r2
 984:	3f 92       	push	r3
 986:	4f 92       	push	r4
 988:	5f 92       	push	r5
 98a:	6f 92       	push	r6
 98c:	7f 92       	push	r7
 98e:	8f 92       	push	r8
 990:	9f 92       	push	r9
 992:	af 92       	push	r10
 994:	bf 92       	push	r11
 996:	cf 92       	push	r12
 998:	df 92       	push	r13
 99a:	ef 92       	push	r14
 99c:	ff 92       	push	r15
 99e:	0f 93       	push	r16
 9a0:	1f 93       	push	r17
 9a2:	cf 93       	push	r28
 9a4:	df 93       	push	r29
 9a6:	cd b7       	in	r28, 0x3d	; 61
 9a8:	de b7       	in	r29, 0x3e	; 62
 9aa:	2b 97       	sbiw	r28, 0x0b	; 11
 9ac:	0f b6       	in	r0, 0x3f	; 63
 9ae:	f8 94       	cli
 9b0:	de bf       	out	0x3e, r29	; 62
 9b2:	0f be       	out	0x3f, r0	; 63
 9b4:	cd bf       	out	0x3d, r28	; 61
 9b6:	6c 01       	movw	r12, r24
 9b8:	7b 01       	movw	r14, r22
 9ba:	8a 01       	movw	r16, r20
 9bc:	fc 01       	movw	r30, r24
 9be:	17 82       	std	Z+7, r1	; 0x07
 9c0:	16 82       	std	Z+6, r1	; 0x06
 9c2:	83 81       	ldd	r24, Z+3	; 0x03
 9c4:	81 ff       	sbrs	r24, 1
 9c6:	bf c1       	rjmp	.+894    	; 0xd46 <vfprintf+0x3c4>
 9c8:	ce 01       	movw	r24, r28
 9ca:	01 96       	adiw	r24, 0x01	; 1
 9cc:	3c 01       	movw	r6, r24
 9ce:	f6 01       	movw	r30, r12
 9d0:	93 81       	ldd	r25, Z+3	; 0x03
 9d2:	f7 01       	movw	r30, r14
 9d4:	93 fd       	sbrc	r25, 3
 9d6:	85 91       	lpm	r24, Z+
 9d8:	93 ff       	sbrs	r25, 3
 9da:	81 91       	ld	r24, Z+
 9dc:	7f 01       	movw	r14, r30
 9de:	88 23       	and	r24, r24
 9e0:	09 f4       	brne	.+2      	; 0x9e4 <vfprintf+0x62>
 9e2:	ad c1       	rjmp	.+858    	; 0xd3e <vfprintf+0x3bc>
 9e4:	85 32       	cpi	r24, 0x25	; 37
 9e6:	39 f4       	brne	.+14     	; 0x9f6 <vfprintf+0x74>
 9e8:	93 fd       	sbrc	r25, 3
 9ea:	85 91       	lpm	r24, Z+
 9ec:	93 ff       	sbrs	r25, 3
 9ee:	81 91       	ld	r24, Z+
 9f0:	7f 01       	movw	r14, r30
 9f2:	85 32       	cpi	r24, 0x25	; 37
 9f4:	21 f4       	brne	.+8      	; 0x9fe <vfprintf+0x7c>
 9f6:	b6 01       	movw	r22, r12
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	d6 d1       	rcall	.+940    	; 0xda8 <fputc>
 9fc:	e8 cf       	rjmp	.-48     	; 0x9ce <vfprintf+0x4c>
 9fe:	91 2c       	mov	r9, r1
 a00:	21 2c       	mov	r2, r1
 a02:	31 2c       	mov	r3, r1
 a04:	ff e1       	ldi	r31, 0x1F	; 31
 a06:	f3 15       	cp	r31, r3
 a08:	d8 f0       	brcs	.+54     	; 0xa40 <vfprintf+0xbe>
 a0a:	8b 32       	cpi	r24, 0x2B	; 43
 a0c:	79 f0       	breq	.+30     	; 0xa2c <vfprintf+0xaa>
 a0e:	38 f4       	brcc	.+14     	; 0xa1e <vfprintf+0x9c>
 a10:	80 32       	cpi	r24, 0x20	; 32
 a12:	79 f0       	breq	.+30     	; 0xa32 <vfprintf+0xb0>
 a14:	83 32       	cpi	r24, 0x23	; 35
 a16:	a1 f4       	brne	.+40     	; 0xa40 <vfprintf+0xbe>
 a18:	23 2d       	mov	r18, r3
 a1a:	20 61       	ori	r18, 0x10	; 16
 a1c:	1d c0       	rjmp	.+58     	; 0xa58 <vfprintf+0xd6>
 a1e:	8d 32       	cpi	r24, 0x2D	; 45
 a20:	61 f0       	breq	.+24     	; 0xa3a <vfprintf+0xb8>
 a22:	80 33       	cpi	r24, 0x30	; 48
 a24:	69 f4       	brne	.+26     	; 0xa40 <vfprintf+0xbe>
 a26:	23 2d       	mov	r18, r3
 a28:	21 60       	ori	r18, 0x01	; 1
 a2a:	16 c0       	rjmp	.+44     	; 0xa58 <vfprintf+0xd6>
 a2c:	83 2d       	mov	r24, r3
 a2e:	82 60       	ori	r24, 0x02	; 2
 a30:	38 2e       	mov	r3, r24
 a32:	e3 2d       	mov	r30, r3
 a34:	e4 60       	ori	r30, 0x04	; 4
 a36:	3e 2e       	mov	r3, r30
 a38:	2a c0       	rjmp	.+84     	; 0xa8e <vfprintf+0x10c>
 a3a:	f3 2d       	mov	r31, r3
 a3c:	f8 60       	ori	r31, 0x08	; 8
 a3e:	1d c0       	rjmp	.+58     	; 0xa7a <vfprintf+0xf8>
 a40:	37 fc       	sbrc	r3, 7
 a42:	2d c0       	rjmp	.+90     	; 0xa9e <vfprintf+0x11c>
 a44:	20 ed       	ldi	r18, 0xD0	; 208
 a46:	28 0f       	add	r18, r24
 a48:	2a 30       	cpi	r18, 0x0A	; 10
 a4a:	40 f0       	brcs	.+16     	; 0xa5c <vfprintf+0xda>
 a4c:	8e 32       	cpi	r24, 0x2E	; 46
 a4e:	b9 f4       	brne	.+46     	; 0xa7e <vfprintf+0xfc>
 a50:	36 fc       	sbrc	r3, 6
 a52:	75 c1       	rjmp	.+746    	; 0xd3e <vfprintf+0x3bc>
 a54:	23 2d       	mov	r18, r3
 a56:	20 64       	ori	r18, 0x40	; 64
 a58:	32 2e       	mov	r3, r18
 a5a:	19 c0       	rjmp	.+50     	; 0xa8e <vfprintf+0x10c>
 a5c:	36 fe       	sbrs	r3, 6
 a5e:	06 c0       	rjmp	.+12     	; 0xa6c <vfprintf+0xea>
 a60:	8a e0       	ldi	r24, 0x0A	; 10
 a62:	98 9e       	mul	r9, r24
 a64:	20 0d       	add	r18, r0
 a66:	11 24       	eor	r1, r1
 a68:	92 2e       	mov	r9, r18
 a6a:	11 c0       	rjmp	.+34     	; 0xa8e <vfprintf+0x10c>
 a6c:	ea e0       	ldi	r30, 0x0A	; 10
 a6e:	2e 9e       	mul	r2, r30
 a70:	20 0d       	add	r18, r0
 a72:	11 24       	eor	r1, r1
 a74:	22 2e       	mov	r2, r18
 a76:	f3 2d       	mov	r31, r3
 a78:	f0 62       	ori	r31, 0x20	; 32
 a7a:	3f 2e       	mov	r3, r31
 a7c:	08 c0       	rjmp	.+16     	; 0xa8e <vfprintf+0x10c>
 a7e:	8c 36       	cpi	r24, 0x6C	; 108
 a80:	21 f4       	brne	.+8      	; 0xa8a <vfprintf+0x108>
 a82:	83 2d       	mov	r24, r3
 a84:	80 68       	ori	r24, 0x80	; 128
 a86:	38 2e       	mov	r3, r24
 a88:	02 c0       	rjmp	.+4      	; 0xa8e <vfprintf+0x10c>
 a8a:	88 36       	cpi	r24, 0x68	; 104
 a8c:	41 f4       	brne	.+16     	; 0xa9e <vfprintf+0x11c>
 a8e:	f7 01       	movw	r30, r14
 a90:	93 fd       	sbrc	r25, 3
 a92:	85 91       	lpm	r24, Z+
 a94:	93 ff       	sbrs	r25, 3
 a96:	81 91       	ld	r24, Z+
 a98:	7f 01       	movw	r14, r30
 a9a:	81 11       	cpse	r24, r1
 a9c:	b3 cf       	rjmp	.-154    	; 0xa04 <vfprintf+0x82>
 a9e:	98 2f       	mov	r25, r24
 aa0:	9f 7d       	andi	r25, 0xDF	; 223
 aa2:	95 54       	subi	r25, 0x45	; 69
 aa4:	93 30       	cpi	r25, 0x03	; 3
 aa6:	28 f4       	brcc	.+10     	; 0xab2 <vfprintf+0x130>
 aa8:	0c 5f       	subi	r16, 0xFC	; 252
 aaa:	1f 4f       	sbci	r17, 0xFF	; 255
 aac:	9f e3       	ldi	r25, 0x3F	; 63
 aae:	99 83       	std	Y+1, r25	; 0x01
 ab0:	0d c0       	rjmp	.+26     	; 0xacc <vfprintf+0x14a>
 ab2:	83 36       	cpi	r24, 0x63	; 99
 ab4:	31 f0       	breq	.+12     	; 0xac2 <vfprintf+0x140>
 ab6:	83 37       	cpi	r24, 0x73	; 115
 ab8:	71 f0       	breq	.+28     	; 0xad6 <vfprintf+0x154>
 aba:	83 35       	cpi	r24, 0x53	; 83
 abc:	09 f0       	breq	.+2      	; 0xac0 <vfprintf+0x13e>
 abe:	55 c0       	rjmp	.+170    	; 0xb6a <vfprintf+0x1e8>
 ac0:	20 c0       	rjmp	.+64     	; 0xb02 <vfprintf+0x180>
 ac2:	f8 01       	movw	r30, r16
 ac4:	80 81       	ld	r24, Z
 ac6:	89 83       	std	Y+1, r24	; 0x01
 ac8:	0e 5f       	subi	r16, 0xFE	; 254
 aca:	1f 4f       	sbci	r17, 0xFF	; 255
 acc:	88 24       	eor	r8, r8
 ace:	83 94       	inc	r8
 ad0:	91 2c       	mov	r9, r1
 ad2:	53 01       	movw	r10, r6
 ad4:	12 c0       	rjmp	.+36     	; 0xafa <vfprintf+0x178>
 ad6:	28 01       	movw	r4, r16
 ad8:	f2 e0       	ldi	r31, 0x02	; 2
 ada:	4f 0e       	add	r4, r31
 adc:	51 1c       	adc	r5, r1
 ade:	f8 01       	movw	r30, r16
 ae0:	a0 80       	ld	r10, Z
 ae2:	b1 80       	ldd	r11, Z+1	; 0x01
 ae4:	36 fe       	sbrs	r3, 6
 ae6:	03 c0       	rjmp	.+6      	; 0xaee <vfprintf+0x16c>
 ae8:	69 2d       	mov	r22, r9
 aea:	70 e0       	ldi	r23, 0x00	; 0
 aec:	02 c0       	rjmp	.+4      	; 0xaf2 <vfprintf+0x170>
 aee:	6f ef       	ldi	r22, 0xFF	; 255
 af0:	7f ef       	ldi	r23, 0xFF	; 255
 af2:	c5 01       	movw	r24, r10
 af4:	4e d1       	rcall	.+668    	; 0xd92 <strnlen>
 af6:	4c 01       	movw	r8, r24
 af8:	82 01       	movw	r16, r4
 afa:	f3 2d       	mov	r31, r3
 afc:	ff 77       	andi	r31, 0x7F	; 127
 afe:	3f 2e       	mov	r3, r31
 b00:	15 c0       	rjmp	.+42     	; 0xb2c <vfprintf+0x1aa>
 b02:	28 01       	movw	r4, r16
 b04:	22 e0       	ldi	r18, 0x02	; 2
 b06:	42 0e       	add	r4, r18
 b08:	51 1c       	adc	r5, r1
 b0a:	f8 01       	movw	r30, r16
 b0c:	a0 80       	ld	r10, Z
 b0e:	b1 80       	ldd	r11, Z+1	; 0x01
 b10:	36 fe       	sbrs	r3, 6
 b12:	03 c0       	rjmp	.+6      	; 0xb1a <vfprintf+0x198>
 b14:	69 2d       	mov	r22, r9
 b16:	70 e0       	ldi	r23, 0x00	; 0
 b18:	02 c0       	rjmp	.+4      	; 0xb1e <vfprintf+0x19c>
 b1a:	6f ef       	ldi	r22, 0xFF	; 255
 b1c:	7f ef       	ldi	r23, 0xFF	; 255
 b1e:	c5 01       	movw	r24, r10
 b20:	2d d1       	rcall	.+602    	; 0xd7c <strnlen_P>
 b22:	4c 01       	movw	r8, r24
 b24:	f3 2d       	mov	r31, r3
 b26:	f0 68       	ori	r31, 0x80	; 128
 b28:	3f 2e       	mov	r3, r31
 b2a:	82 01       	movw	r16, r4
 b2c:	33 fc       	sbrc	r3, 3
 b2e:	19 c0       	rjmp	.+50     	; 0xb62 <vfprintf+0x1e0>
 b30:	82 2d       	mov	r24, r2
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	88 16       	cp	r8, r24
 b36:	99 06       	cpc	r9, r25
 b38:	a0 f4       	brcc	.+40     	; 0xb62 <vfprintf+0x1e0>
 b3a:	b6 01       	movw	r22, r12
 b3c:	80 e2       	ldi	r24, 0x20	; 32
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	33 d1       	rcall	.+614    	; 0xda8 <fputc>
 b42:	2a 94       	dec	r2
 b44:	f5 cf       	rjmp	.-22     	; 0xb30 <vfprintf+0x1ae>
 b46:	f5 01       	movw	r30, r10
 b48:	37 fc       	sbrc	r3, 7
 b4a:	85 91       	lpm	r24, Z+
 b4c:	37 fe       	sbrs	r3, 7
 b4e:	81 91       	ld	r24, Z+
 b50:	5f 01       	movw	r10, r30
 b52:	b6 01       	movw	r22, r12
 b54:	90 e0       	ldi	r25, 0x00	; 0
 b56:	28 d1       	rcall	.+592    	; 0xda8 <fputc>
 b58:	21 10       	cpse	r2, r1
 b5a:	2a 94       	dec	r2
 b5c:	21 e0       	ldi	r18, 0x01	; 1
 b5e:	82 1a       	sub	r8, r18
 b60:	91 08       	sbc	r9, r1
 b62:	81 14       	cp	r8, r1
 b64:	91 04       	cpc	r9, r1
 b66:	79 f7       	brne	.-34     	; 0xb46 <vfprintf+0x1c4>
 b68:	e1 c0       	rjmp	.+450    	; 0xd2c <vfprintf+0x3aa>
 b6a:	84 36       	cpi	r24, 0x64	; 100
 b6c:	11 f0       	breq	.+4      	; 0xb72 <vfprintf+0x1f0>
 b6e:	89 36       	cpi	r24, 0x69	; 105
 b70:	39 f5       	brne	.+78     	; 0xbc0 <vfprintf+0x23e>
 b72:	f8 01       	movw	r30, r16
 b74:	37 fe       	sbrs	r3, 7
 b76:	07 c0       	rjmp	.+14     	; 0xb86 <vfprintf+0x204>
 b78:	60 81       	ld	r22, Z
 b7a:	71 81       	ldd	r23, Z+1	; 0x01
 b7c:	82 81       	ldd	r24, Z+2	; 0x02
 b7e:	93 81       	ldd	r25, Z+3	; 0x03
 b80:	0c 5f       	subi	r16, 0xFC	; 252
 b82:	1f 4f       	sbci	r17, 0xFF	; 255
 b84:	08 c0       	rjmp	.+16     	; 0xb96 <vfprintf+0x214>
 b86:	60 81       	ld	r22, Z
 b88:	71 81       	ldd	r23, Z+1	; 0x01
 b8a:	07 2e       	mov	r0, r23
 b8c:	00 0c       	add	r0, r0
 b8e:	88 0b       	sbc	r24, r24
 b90:	99 0b       	sbc	r25, r25
 b92:	0e 5f       	subi	r16, 0xFE	; 254
 b94:	1f 4f       	sbci	r17, 0xFF	; 255
 b96:	f3 2d       	mov	r31, r3
 b98:	ff 76       	andi	r31, 0x6F	; 111
 b9a:	3f 2e       	mov	r3, r31
 b9c:	97 ff       	sbrs	r25, 7
 b9e:	09 c0       	rjmp	.+18     	; 0xbb2 <vfprintf+0x230>
 ba0:	90 95       	com	r25
 ba2:	80 95       	com	r24
 ba4:	70 95       	com	r23
 ba6:	61 95       	neg	r22
 ba8:	7f 4f       	sbci	r23, 0xFF	; 255
 baa:	8f 4f       	sbci	r24, 0xFF	; 255
 bac:	9f 4f       	sbci	r25, 0xFF	; 255
 bae:	f0 68       	ori	r31, 0x80	; 128
 bb0:	3f 2e       	mov	r3, r31
 bb2:	2a e0       	ldi	r18, 0x0A	; 10
 bb4:	30 e0       	ldi	r19, 0x00	; 0
 bb6:	a3 01       	movw	r20, r6
 bb8:	33 d1       	rcall	.+614    	; 0xe20 <__ultoa_invert>
 bba:	88 2e       	mov	r8, r24
 bbc:	86 18       	sub	r8, r6
 bbe:	44 c0       	rjmp	.+136    	; 0xc48 <vfprintf+0x2c6>
 bc0:	85 37       	cpi	r24, 0x75	; 117
 bc2:	31 f4       	brne	.+12     	; 0xbd0 <vfprintf+0x24e>
 bc4:	23 2d       	mov	r18, r3
 bc6:	2f 7e       	andi	r18, 0xEF	; 239
 bc8:	b2 2e       	mov	r11, r18
 bca:	2a e0       	ldi	r18, 0x0A	; 10
 bcc:	30 e0       	ldi	r19, 0x00	; 0
 bce:	25 c0       	rjmp	.+74     	; 0xc1a <vfprintf+0x298>
 bd0:	93 2d       	mov	r25, r3
 bd2:	99 7f       	andi	r25, 0xF9	; 249
 bd4:	b9 2e       	mov	r11, r25
 bd6:	8f 36       	cpi	r24, 0x6F	; 111
 bd8:	c1 f0       	breq	.+48     	; 0xc0a <vfprintf+0x288>
 bda:	18 f4       	brcc	.+6      	; 0xbe2 <vfprintf+0x260>
 bdc:	88 35       	cpi	r24, 0x58	; 88
 bde:	79 f0       	breq	.+30     	; 0xbfe <vfprintf+0x27c>
 be0:	ae c0       	rjmp	.+348    	; 0xd3e <vfprintf+0x3bc>
 be2:	80 37       	cpi	r24, 0x70	; 112
 be4:	19 f0       	breq	.+6      	; 0xbec <vfprintf+0x26a>
 be6:	88 37       	cpi	r24, 0x78	; 120
 be8:	21 f0       	breq	.+8      	; 0xbf2 <vfprintf+0x270>
 bea:	a9 c0       	rjmp	.+338    	; 0xd3e <vfprintf+0x3bc>
 bec:	e9 2f       	mov	r30, r25
 bee:	e0 61       	ori	r30, 0x10	; 16
 bf0:	be 2e       	mov	r11, r30
 bf2:	b4 fe       	sbrs	r11, 4
 bf4:	0d c0       	rjmp	.+26     	; 0xc10 <vfprintf+0x28e>
 bf6:	fb 2d       	mov	r31, r11
 bf8:	f4 60       	ori	r31, 0x04	; 4
 bfa:	bf 2e       	mov	r11, r31
 bfc:	09 c0       	rjmp	.+18     	; 0xc10 <vfprintf+0x28e>
 bfe:	34 fe       	sbrs	r3, 4
 c00:	0a c0       	rjmp	.+20     	; 0xc16 <vfprintf+0x294>
 c02:	29 2f       	mov	r18, r25
 c04:	26 60       	ori	r18, 0x06	; 6
 c06:	b2 2e       	mov	r11, r18
 c08:	06 c0       	rjmp	.+12     	; 0xc16 <vfprintf+0x294>
 c0a:	28 e0       	ldi	r18, 0x08	; 8
 c0c:	30 e0       	ldi	r19, 0x00	; 0
 c0e:	05 c0       	rjmp	.+10     	; 0xc1a <vfprintf+0x298>
 c10:	20 e1       	ldi	r18, 0x10	; 16
 c12:	30 e0       	ldi	r19, 0x00	; 0
 c14:	02 c0       	rjmp	.+4      	; 0xc1a <vfprintf+0x298>
 c16:	20 e1       	ldi	r18, 0x10	; 16
 c18:	32 e0       	ldi	r19, 0x02	; 2
 c1a:	f8 01       	movw	r30, r16
 c1c:	b7 fe       	sbrs	r11, 7
 c1e:	07 c0       	rjmp	.+14     	; 0xc2e <vfprintf+0x2ac>
 c20:	60 81       	ld	r22, Z
 c22:	71 81       	ldd	r23, Z+1	; 0x01
 c24:	82 81       	ldd	r24, Z+2	; 0x02
 c26:	93 81       	ldd	r25, Z+3	; 0x03
 c28:	0c 5f       	subi	r16, 0xFC	; 252
 c2a:	1f 4f       	sbci	r17, 0xFF	; 255
 c2c:	06 c0       	rjmp	.+12     	; 0xc3a <vfprintf+0x2b8>
 c2e:	60 81       	ld	r22, Z
 c30:	71 81       	ldd	r23, Z+1	; 0x01
 c32:	80 e0       	ldi	r24, 0x00	; 0
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	0e 5f       	subi	r16, 0xFE	; 254
 c38:	1f 4f       	sbci	r17, 0xFF	; 255
 c3a:	a3 01       	movw	r20, r6
 c3c:	f1 d0       	rcall	.+482    	; 0xe20 <__ultoa_invert>
 c3e:	88 2e       	mov	r8, r24
 c40:	86 18       	sub	r8, r6
 c42:	fb 2d       	mov	r31, r11
 c44:	ff 77       	andi	r31, 0x7F	; 127
 c46:	3f 2e       	mov	r3, r31
 c48:	36 fe       	sbrs	r3, 6
 c4a:	0d c0       	rjmp	.+26     	; 0xc66 <vfprintf+0x2e4>
 c4c:	23 2d       	mov	r18, r3
 c4e:	2e 7f       	andi	r18, 0xFE	; 254
 c50:	a2 2e       	mov	r10, r18
 c52:	89 14       	cp	r8, r9
 c54:	58 f4       	brcc	.+22     	; 0xc6c <vfprintf+0x2ea>
 c56:	34 fe       	sbrs	r3, 4
 c58:	0b c0       	rjmp	.+22     	; 0xc70 <vfprintf+0x2ee>
 c5a:	32 fc       	sbrc	r3, 2
 c5c:	09 c0       	rjmp	.+18     	; 0xc70 <vfprintf+0x2ee>
 c5e:	83 2d       	mov	r24, r3
 c60:	8e 7e       	andi	r24, 0xEE	; 238
 c62:	a8 2e       	mov	r10, r24
 c64:	05 c0       	rjmp	.+10     	; 0xc70 <vfprintf+0x2ee>
 c66:	b8 2c       	mov	r11, r8
 c68:	a3 2c       	mov	r10, r3
 c6a:	03 c0       	rjmp	.+6      	; 0xc72 <vfprintf+0x2f0>
 c6c:	b8 2c       	mov	r11, r8
 c6e:	01 c0       	rjmp	.+2      	; 0xc72 <vfprintf+0x2f0>
 c70:	b9 2c       	mov	r11, r9
 c72:	a4 fe       	sbrs	r10, 4
 c74:	0f c0       	rjmp	.+30     	; 0xc94 <vfprintf+0x312>
 c76:	fe 01       	movw	r30, r28
 c78:	e8 0d       	add	r30, r8
 c7a:	f1 1d       	adc	r31, r1
 c7c:	80 81       	ld	r24, Z
 c7e:	80 33       	cpi	r24, 0x30	; 48
 c80:	21 f4       	brne	.+8      	; 0xc8a <vfprintf+0x308>
 c82:	9a 2d       	mov	r25, r10
 c84:	99 7e       	andi	r25, 0xE9	; 233
 c86:	a9 2e       	mov	r10, r25
 c88:	09 c0       	rjmp	.+18     	; 0xc9c <vfprintf+0x31a>
 c8a:	a2 fe       	sbrs	r10, 2
 c8c:	06 c0       	rjmp	.+12     	; 0xc9a <vfprintf+0x318>
 c8e:	b3 94       	inc	r11
 c90:	b3 94       	inc	r11
 c92:	04 c0       	rjmp	.+8      	; 0xc9c <vfprintf+0x31a>
 c94:	8a 2d       	mov	r24, r10
 c96:	86 78       	andi	r24, 0x86	; 134
 c98:	09 f0       	breq	.+2      	; 0xc9c <vfprintf+0x31a>
 c9a:	b3 94       	inc	r11
 c9c:	a3 fc       	sbrc	r10, 3
 c9e:	10 c0       	rjmp	.+32     	; 0xcc0 <vfprintf+0x33e>
 ca0:	a0 fe       	sbrs	r10, 0
 ca2:	06 c0       	rjmp	.+12     	; 0xcb0 <vfprintf+0x32e>
 ca4:	b2 14       	cp	r11, r2
 ca6:	80 f4       	brcc	.+32     	; 0xcc8 <vfprintf+0x346>
 ca8:	28 0c       	add	r2, r8
 caa:	92 2c       	mov	r9, r2
 cac:	9b 18       	sub	r9, r11
 cae:	0d c0       	rjmp	.+26     	; 0xcca <vfprintf+0x348>
 cb0:	b2 14       	cp	r11, r2
 cb2:	58 f4       	brcc	.+22     	; 0xcca <vfprintf+0x348>
 cb4:	b6 01       	movw	r22, r12
 cb6:	80 e2       	ldi	r24, 0x20	; 32
 cb8:	90 e0       	ldi	r25, 0x00	; 0
 cba:	76 d0       	rcall	.+236    	; 0xda8 <fputc>
 cbc:	b3 94       	inc	r11
 cbe:	f8 cf       	rjmp	.-16     	; 0xcb0 <vfprintf+0x32e>
 cc0:	b2 14       	cp	r11, r2
 cc2:	18 f4       	brcc	.+6      	; 0xcca <vfprintf+0x348>
 cc4:	2b 18       	sub	r2, r11
 cc6:	02 c0       	rjmp	.+4      	; 0xccc <vfprintf+0x34a>
 cc8:	98 2c       	mov	r9, r8
 cca:	21 2c       	mov	r2, r1
 ccc:	a4 fe       	sbrs	r10, 4
 cce:	0f c0       	rjmp	.+30     	; 0xcee <vfprintf+0x36c>
 cd0:	b6 01       	movw	r22, r12
 cd2:	80 e3       	ldi	r24, 0x30	; 48
 cd4:	90 e0       	ldi	r25, 0x00	; 0
 cd6:	68 d0       	rcall	.+208    	; 0xda8 <fputc>
 cd8:	a2 fe       	sbrs	r10, 2
 cda:	16 c0       	rjmp	.+44     	; 0xd08 <vfprintf+0x386>
 cdc:	a1 fc       	sbrc	r10, 1
 cde:	03 c0       	rjmp	.+6      	; 0xce6 <vfprintf+0x364>
 ce0:	88 e7       	ldi	r24, 0x78	; 120
 ce2:	90 e0       	ldi	r25, 0x00	; 0
 ce4:	02 c0       	rjmp	.+4      	; 0xcea <vfprintf+0x368>
 ce6:	88 e5       	ldi	r24, 0x58	; 88
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	b6 01       	movw	r22, r12
 cec:	0c c0       	rjmp	.+24     	; 0xd06 <vfprintf+0x384>
 cee:	8a 2d       	mov	r24, r10
 cf0:	86 78       	andi	r24, 0x86	; 134
 cf2:	51 f0       	breq	.+20     	; 0xd08 <vfprintf+0x386>
 cf4:	a1 fe       	sbrs	r10, 1
 cf6:	02 c0       	rjmp	.+4      	; 0xcfc <vfprintf+0x37a>
 cf8:	8b e2       	ldi	r24, 0x2B	; 43
 cfa:	01 c0       	rjmp	.+2      	; 0xcfe <vfprintf+0x37c>
 cfc:	80 e2       	ldi	r24, 0x20	; 32
 cfe:	a7 fc       	sbrc	r10, 7
 d00:	8d e2       	ldi	r24, 0x2D	; 45
 d02:	b6 01       	movw	r22, r12
 d04:	90 e0       	ldi	r25, 0x00	; 0
 d06:	50 d0       	rcall	.+160    	; 0xda8 <fputc>
 d08:	89 14       	cp	r8, r9
 d0a:	30 f4       	brcc	.+12     	; 0xd18 <vfprintf+0x396>
 d0c:	b6 01       	movw	r22, r12
 d0e:	80 e3       	ldi	r24, 0x30	; 48
 d10:	90 e0       	ldi	r25, 0x00	; 0
 d12:	4a d0       	rcall	.+148    	; 0xda8 <fputc>
 d14:	9a 94       	dec	r9
 d16:	f8 cf       	rjmp	.-16     	; 0xd08 <vfprintf+0x386>
 d18:	8a 94       	dec	r8
 d1a:	f3 01       	movw	r30, r6
 d1c:	e8 0d       	add	r30, r8
 d1e:	f1 1d       	adc	r31, r1
 d20:	80 81       	ld	r24, Z
 d22:	b6 01       	movw	r22, r12
 d24:	90 e0       	ldi	r25, 0x00	; 0
 d26:	40 d0       	rcall	.+128    	; 0xda8 <fputc>
 d28:	81 10       	cpse	r8, r1
 d2a:	f6 cf       	rjmp	.-20     	; 0xd18 <vfprintf+0x396>
 d2c:	22 20       	and	r2, r2
 d2e:	09 f4       	brne	.+2      	; 0xd32 <vfprintf+0x3b0>
 d30:	4e ce       	rjmp	.-868    	; 0x9ce <vfprintf+0x4c>
 d32:	b6 01       	movw	r22, r12
 d34:	80 e2       	ldi	r24, 0x20	; 32
 d36:	90 e0       	ldi	r25, 0x00	; 0
 d38:	37 d0       	rcall	.+110    	; 0xda8 <fputc>
 d3a:	2a 94       	dec	r2
 d3c:	f7 cf       	rjmp	.-18     	; 0xd2c <vfprintf+0x3aa>
 d3e:	f6 01       	movw	r30, r12
 d40:	86 81       	ldd	r24, Z+6	; 0x06
 d42:	97 81       	ldd	r25, Z+7	; 0x07
 d44:	02 c0       	rjmp	.+4      	; 0xd4a <vfprintf+0x3c8>
 d46:	8f ef       	ldi	r24, 0xFF	; 255
 d48:	9f ef       	ldi	r25, 0xFF	; 255
 d4a:	2b 96       	adiw	r28, 0x0b	; 11
 d4c:	0f b6       	in	r0, 0x3f	; 63
 d4e:	f8 94       	cli
 d50:	de bf       	out	0x3e, r29	; 62
 d52:	0f be       	out	0x3f, r0	; 63
 d54:	cd bf       	out	0x3d, r28	; 61
 d56:	df 91       	pop	r29
 d58:	cf 91       	pop	r28
 d5a:	1f 91       	pop	r17
 d5c:	0f 91       	pop	r16
 d5e:	ff 90       	pop	r15
 d60:	ef 90       	pop	r14
 d62:	df 90       	pop	r13
 d64:	cf 90       	pop	r12
 d66:	bf 90       	pop	r11
 d68:	af 90       	pop	r10
 d6a:	9f 90       	pop	r9
 d6c:	8f 90       	pop	r8
 d6e:	7f 90       	pop	r7
 d70:	6f 90       	pop	r6
 d72:	5f 90       	pop	r5
 d74:	4f 90       	pop	r4
 d76:	3f 90       	pop	r3
 d78:	2f 90       	pop	r2
 d7a:	08 95       	ret

00000d7c <strnlen_P>:
 d7c:	fc 01       	movw	r30, r24
 d7e:	05 90       	lpm	r0, Z+
 d80:	61 50       	subi	r22, 0x01	; 1
 d82:	70 40       	sbci	r23, 0x00	; 0
 d84:	01 10       	cpse	r0, r1
 d86:	d8 f7       	brcc	.-10     	; 0xd7e <strnlen_P+0x2>
 d88:	80 95       	com	r24
 d8a:	90 95       	com	r25
 d8c:	8e 0f       	add	r24, r30
 d8e:	9f 1f       	adc	r25, r31
 d90:	08 95       	ret

00000d92 <strnlen>:
 d92:	fc 01       	movw	r30, r24
 d94:	61 50       	subi	r22, 0x01	; 1
 d96:	70 40       	sbci	r23, 0x00	; 0
 d98:	01 90       	ld	r0, Z+
 d9a:	01 10       	cpse	r0, r1
 d9c:	d8 f7       	brcc	.-10     	; 0xd94 <strnlen+0x2>
 d9e:	80 95       	com	r24
 da0:	90 95       	com	r25
 da2:	8e 0f       	add	r24, r30
 da4:	9f 1f       	adc	r25, r31
 da6:	08 95       	ret

00000da8 <fputc>:
 da8:	0f 93       	push	r16
 daa:	1f 93       	push	r17
 dac:	cf 93       	push	r28
 dae:	df 93       	push	r29
 db0:	fb 01       	movw	r30, r22
 db2:	23 81       	ldd	r18, Z+3	; 0x03
 db4:	21 fd       	sbrc	r18, 1
 db6:	03 c0       	rjmp	.+6      	; 0xdbe <fputc+0x16>
 db8:	8f ef       	ldi	r24, 0xFF	; 255
 dba:	9f ef       	ldi	r25, 0xFF	; 255
 dbc:	2c c0       	rjmp	.+88     	; 0xe16 <fputc+0x6e>
 dbe:	22 ff       	sbrs	r18, 2
 dc0:	16 c0       	rjmp	.+44     	; 0xdee <fputc+0x46>
 dc2:	46 81       	ldd	r20, Z+6	; 0x06
 dc4:	57 81       	ldd	r21, Z+7	; 0x07
 dc6:	24 81       	ldd	r18, Z+4	; 0x04
 dc8:	35 81       	ldd	r19, Z+5	; 0x05
 dca:	42 17       	cp	r20, r18
 dcc:	53 07       	cpc	r21, r19
 dce:	44 f4       	brge	.+16     	; 0xde0 <fputc+0x38>
 dd0:	a0 81       	ld	r26, Z
 dd2:	b1 81       	ldd	r27, Z+1	; 0x01
 dd4:	9d 01       	movw	r18, r26
 dd6:	2f 5f       	subi	r18, 0xFF	; 255
 dd8:	3f 4f       	sbci	r19, 0xFF	; 255
 dda:	31 83       	std	Z+1, r19	; 0x01
 ddc:	20 83       	st	Z, r18
 dde:	8c 93       	st	X, r24
 de0:	26 81       	ldd	r18, Z+6	; 0x06
 de2:	37 81       	ldd	r19, Z+7	; 0x07
 de4:	2f 5f       	subi	r18, 0xFF	; 255
 de6:	3f 4f       	sbci	r19, 0xFF	; 255
 de8:	37 83       	std	Z+7, r19	; 0x07
 dea:	26 83       	std	Z+6, r18	; 0x06
 dec:	14 c0       	rjmp	.+40     	; 0xe16 <fputc+0x6e>
 dee:	8b 01       	movw	r16, r22
 df0:	ec 01       	movw	r28, r24
 df2:	fb 01       	movw	r30, r22
 df4:	00 84       	ldd	r0, Z+8	; 0x08
 df6:	f1 85       	ldd	r31, Z+9	; 0x09
 df8:	e0 2d       	mov	r30, r0
 dfa:	19 95       	eicall
 dfc:	89 2b       	or	r24, r25
 dfe:	e1 f6       	brne	.-72     	; 0xdb8 <fputc+0x10>
 e00:	d8 01       	movw	r26, r16
 e02:	16 96       	adiw	r26, 0x06	; 6
 e04:	8d 91       	ld	r24, X+
 e06:	9c 91       	ld	r25, X
 e08:	17 97       	sbiw	r26, 0x07	; 7
 e0a:	01 96       	adiw	r24, 0x01	; 1
 e0c:	17 96       	adiw	r26, 0x07	; 7
 e0e:	9c 93       	st	X, r25
 e10:	8e 93       	st	-X, r24
 e12:	16 97       	sbiw	r26, 0x06	; 6
 e14:	ce 01       	movw	r24, r28
 e16:	df 91       	pop	r29
 e18:	cf 91       	pop	r28
 e1a:	1f 91       	pop	r17
 e1c:	0f 91       	pop	r16
 e1e:	08 95       	ret

00000e20 <__ultoa_invert>:
 e20:	fa 01       	movw	r30, r20
 e22:	aa 27       	eor	r26, r26
 e24:	28 30       	cpi	r18, 0x08	; 8
 e26:	51 f1       	breq	.+84     	; 0xe7c <__ultoa_invert+0x5c>
 e28:	20 31       	cpi	r18, 0x10	; 16
 e2a:	81 f1       	breq	.+96     	; 0xe8c <__ultoa_invert+0x6c>
 e2c:	e8 94       	clt
 e2e:	6f 93       	push	r22
 e30:	6e 7f       	andi	r22, 0xFE	; 254
 e32:	6e 5f       	subi	r22, 0xFE	; 254
 e34:	7f 4f       	sbci	r23, 0xFF	; 255
 e36:	8f 4f       	sbci	r24, 0xFF	; 255
 e38:	9f 4f       	sbci	r25, 0xFF	; 255
 e3a:	af 4f       	sbci	r26, 0xFF	; 255
 e3c:	b1 e0       	ldi	r27, 0x01	; 1
 e3e:	3e d0       	rcall	.+124    	; 0xebc <__ultoa_invert+0x9c>
 e40:	b4 e0       	ldi	r27, 0x04	; 4
 e42:	3c d0       	rcall	.+120    	; 0xebc <__ultoa_invert+0x9c>
 e44:	67 0f       	add	r22, r23
 e46:	78 1f       	adc	r23, r24
 e48:	89 1f       	adc	r24, r25
 e4a:	9a 1f       	adc	r25, r26
 e4c:	a1 1d       	adc	r26, r1
 e4e:	68 0f       	add	r22, r24
 e50:	79 1f       	adc	r23, r25
 e52:	8a 1f       	adc	r24, r26
 e54:	91 1d       	adc	r25, r1
 e56:	a1 1d       	adc	r26, r1
 e58:	6a 0f       	add	r22, r26
 e5a:	71 1d       	adc	r23, r1
 e5c:	81 1d       	adc	r24, r1
 e5e:	91 1d       	adc	r25, r1
 e60:	a1 1d       	adc	r26, r1
 e62:	20 d0       	rcall	.+64     	; 0xea4 <__ultoa_invert+0x84>
 e64:	09 f4       	brne	.+2      	; 0xe68 <__ultoa_invert+0x48>
 e66:	68 94       	set
 e68:	3f 91       	pop	r19
 e6a:	2a e0       	ldi	r18, 0x0A	; 10
 e6c:	26 9f       	mul	r18, r22
 e6e:	11 24       	eor	r1, r1
 e70:	30 19       	sub	r19, r0
 e72:	30 5d       	subi	r19, 0xD0	; 208
 e74:	31 93       	st	Z+, r19
 e76:	de f6       	brtc	.-74     	; 0xe2e <__ultoa_invert+0xe>
 e78:	cf 01       	movw	r24, r30
 e7a:	08 95       	ret
 e7c:	46 2f       	mov	r20, r22
 e7e:	47 70       	andi	r20, 0x07	; 7
 e80:	40 5d       	subi	r20, 0xD0	; 208
 e82:	41 93       	st	Z+, r20
 e84:	b3 e0       	ldi	r27, 0x03	; 3
 e86:	0f d0       	rcall	.+30     	; 0xea6 <__ultoa_invert+0x86>
 e88:	c9 f7       	brne	.-14     	; 0xe7c <__ultoa_invert+0x5c>
 e8a:	f6 cf       	rjmp	.-20     	; 0xe78 <__ultoa_invert+0x58>
 e8c:	46 2f       	mov	r20, r22
 e8e:	4f 70       	andi	r20, 0x0F	; 15
 e90:	40 5d       	subi	r20, 0xD0	; 208
 e92:	4a 33       	cpi	r20, 0x3A	; 58
 e94:	18 f0       	brcs	.+6      	; 0xe9c <__ultoa_invert+0x7c>
 e96:	49 5d       	subi	r20, 0xD9	; 217
 e98:	31 fd       	sbrc	r19, 1
 e9a:	40 52       	subi	r20, 0x20	; 32
 e9c:	41 93       	st	Z+, r20
 e9e:	02 d0       	rcall	.+4      	; 0xea4 <__ultoa_invert+0x84>
 ea0:	a9 f7       	brne	.-22     	; 0xe8c <__ultoa_invert+0x6c>
 ea2:	ea cf       	rjmp	.-44     	; 0xe78 <__ultoa_invert+0x58>
 ea4:	b4 e0       	ldi	r27, 0x04	; 4
 ea6:	a6 95       	lsr	r26
 ea8:	97 95       	ror	r25
 eaa:	87 95       	ror	r24
 eac:	77 95       	ror	r23
 eae:	67 95       	ror	r22
 eb0:	ba 95       	dec	r27
 eb2:	c9 f7       	brne	.-14     	; 0xea6 <__ultoa_invert+0x86>
 eb4:	00 97       	sbiw	r24, 0x00	; 0
 eb6:	61 05       	cpc	r22, r1
 eb8:	71 05       	cpc	r23, r1
 eba:	08 95       	ret
 ebc:	9b 01       	movw	r18, r22
 ebe:	ac 01       	movw	r20, r24
 ec0:	0a 2e       	mov	r0, r26
 ec2:	06 94       	lsr	r0
 ec4:	57 95       	ror	r21
 ec6:	47 95       	ror	r20
 ec8:	37 95       	ror	r19
 eca:	27 95       	ror	r18
 ecc:	ba 95       	dec	r27
 ece:	c9 f7       	brne	.-14     	; 0xec2 <__ultoa_invert+0xa2>
 ed0:	62 0f       	add	r22, r18
 ed2:	73 1f       	adc	r23, r19
 ed4:	84 1f       	adc	r24, r20
 ed6:	95 1f       	adc	r25, r21
 ed8:	a0 1d       	adc	r26, r0
 eda:	08 95       	ret

00000edc <_exit>:
 edc:	f8 94       	cli

00000ede <__stop_program>:
 ede:	ff cf       	rjmp	.-2      	; 0xede <__stop_program>
