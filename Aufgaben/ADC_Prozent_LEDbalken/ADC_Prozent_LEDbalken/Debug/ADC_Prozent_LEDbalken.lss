
ADC_Prozent_LEDbalken.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800200  00000ea6  00000f3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ea6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  0080027e  0080027e  00000fb8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fb8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001014  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001054  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000250a  00000000  00000000  00001244  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f36  00000000  00000000  0000374e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001511  00000000  00000000  00004684  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000690  00000000  00000000  00005b98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ce0  00000000  00000000  00006228  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b24  00000000  00000000  00006f08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008a2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	e5 c3       	rjmp	.+1994   	; 0x828 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 ea       	ldi	r30, 0xA6	; 166
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 37       	cpi	r26, 0x7E	; 126
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e7       	ldi	r26, 0x7E	; 126
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 3f       	cpi	r26, 0xFC	; 252
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	c0 c6       	rjmp	.+3456   	; 0xea2 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:



int main(void)
{
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	1a d2       	rcall	.+1076   	; 0x55c <initBoard>
    
    while (1) 
    {
//Eingabe

        adcwert=adcRead(0);
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	3a d0       	rcall	.+116    	; 0x1a0 <adcRead>
//Ausgabe

        balkenpos=~(0xff>>anzahlledspos);
        balkenneg=~(0xff<<anzahlledsneg);
//        ledWriteAll((balkenneg<<8)|balkenpos);
        lcdShowText("test test");
 12c:	88 e0       	ldi	r24, 0x08	; 8
 12e:	92 e0       	ldi	r25, 0x02	; 2
 130:	9f 93       	push	r25
 132:	8f 93       	push	r24
 134:	78 d1       	rcall	.+752    	; 0x426 <lcdShowText>
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	f6 cf       	rjmp	.-20     	; 0x128 <main+0x4>

0000013c <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 13c:	82 b9       	out	0x02, r24	; 2
 13e:	95 b9       	out	0x05, r25	; 5
 140:	08 95       	ret

00000142 <buttonReadAllPL>:
 142:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 146:	08 95       	ret

00000148 <startSystemTimeMs>:
 148:	83 e0       	ldi	r24, 0x03	; 3
 14a:	84 bd       	out	0x24, r24	; 36
 14c:	8b e0       	ldi	r24, 0x0B	; 11
 14e:	85 bd       	out	0x25, r24	; 37
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 156:	89 ef       	ldi	r24, 0xF9	; 249
 158:	87 bd       	out	0x27, r24	; 39
 15a:	08 95       	ret

0000015c <initAdc>:
 15c:	11 ba       	out	0x11, r1	; 17
 15e:	10 ba       	out	0x10, r1	; 16
 160:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 164:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 168:	80 e4       	ldi	r24, 0x40	; 64
 16a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 16e:	8f e0       	ldi	r24, 0x0F	; 15
 170:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 17a:	ea e7       	ldi	r30, 0x7A	; 122
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	87 ea       	ldi	r24, 0xA7	; 167
 180:	80 83       	st	Z, r24
 182:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 186:	80 81       	ld	r24, Z
 188:	80 64       	ori	r24, 0x40	; 64
 18a:	80 83       	st	Z, r24
 18c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 190:	84 ff       	sbrs	r24, 4
 192:	fc cf       	rjmp	.-8      	; 0x18c <initAdc+0x30>
 194:	ea e7       	ldi	r30, 0x7A	; 122
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	8f 7e       	andi	r24, 0xEF	; 239
 19c:	80 83       	st	Z, r24
 19e:	08 95       	ret

000001a0 <adcRead>:
 1a0:	90 e4       	ldi	r25, 0x40	; 64
 1a2:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 1a6:	88 30       	cpi	r24, 0x08	; 8
 1a8:	60 f0       	brcs	.+24     	; 0x1c2 <adcRead+0x22>
 1aa:	ec e7       	ldi	r30, 0x7C	; 124
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	90 81       	ld	r25, Z
 1b0:	88 50       	subi	r24, 0x08	; 8
 1b2:	89 2b       	or	r24, r25
 1b4:	80 83       	st	Z, r24
 1b6:	eb e7       	ldi	r30, 0x7B	; 123
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	88 61       	ori	r24, 0x18	; 24
 1be:	80 83       	st	Z, r24
 1c0:	0a c0       	rjmp	.+20     	; 0x1d6 <adcRead+0x36>
 1c2:	ec e7       	ldi	r30, 0x7C	; 124
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	90 81       	ld	r25, Z
 1c8:	89 2b       	or	r24, r25
 1ca:	80 83       	st	Z, r24
 1cc:	eb e7       	ldi	r30, 0x7B	; 123
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	87 7e       	andi	r24, 0xE7	; 231
 1d4:	80 83       	st	Z, r24
 1d6:	ea e7       	ldi	r30, 0x7A	; 122
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	80 64       	ori	r24, 0x40	; 64
 1de:	80 83       	st	Z, r24
 1e0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 1e4:	84 ff       	sbrs	r24, 4
 1e6:	fc cf       	rjmp	.-8      	; 0x1e0 <adcRead+0x40>
 1e8:	8f ea       	ldi	r24, 0xAF	; 175
 1ea:	94 e0       	ldi	r25, 0x04	; 4
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <adcRead+0x4c>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <adcRead+0x52>
 1f2:	00 00       	nop
 1f4:	30 91 78 00 	lds	r19, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 1f8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	98 2f       	mov	r25, r24
 200:	88 27       	eor	r24, r24
 202:	ea e7       	ldi	r30, 0x7A	; 122
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	20 81       	ld	r18, Z
 208:	2f 7e       	andi	r18, 0xEF	; 239
 20a:	20 83       	st	Z, r18
 20c:	83 2b       	or	r24, r19
 20e:	08 95       	ret

00000210 <rgbWrite>:
 210:	2f ef       	ldi	r18, 0xFF	; 255
 212:	33 e0       	ldi	r19, 0x03	; 3
 214:	f9 01       	movw	r30, r18
 216:	e8 1b       	sub	r30, r24
 218:	f9 0b       	sbc	r31, r25
 21a:	c9 01       	movw	r24, r18
 21c:	86 1b       	sub	r24, r22
 21e:	97 0b       	sbc	r25, r23
 220:	24 1b       	sub	r18, r20
 222:	35 0b       	sbc	r19, r21
 224:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 228:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 22c:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 230:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 234:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 238:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 23c:	08 95       	ret

0000023e <initRgb>:
 23e:	8e ef       	ldi	r24, 0xFE	; 254
 240:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 244:	8b e1       	ldi	r24, 0x1B	; 27
 246:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 24a:	83 e0       	ldi	r24, 0x03	; 3
 24c:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 250:	8f ef       	ldi	r24, 0xFF	; 255
 252:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 256:	40 e0       	ldi	r20, 0x00	; 0
 258:	50 e0       	ldi	r21, 0x00	; 0
 25a:	60 e0       	ldi	r22, 0x00	; 0
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	d6 cf       	rjmp	.-84     	; 0x210 <rgbWrite>
 264:	08 95       	ret

00000266 <lcdSid>:
 266:	88 23       	and	r24, r24
 268:	21 f0       	breq	.+8      	; 0x272 <lcdSid+0xc>
 26a:	84 b3       	in	r24, 0x14	; 20
 26c:	81 60       	ori	r24, 0x01	; 1
 26e:	84 bb       	out	0x14, r24	; 20
 270:	08 95       	ret
 272:	84 b3       	in	r24, 0x14	; 20
 274:	8e 7f       	andi	r24, 0xFE	; 254
 276:	84 bb       	out	0x14, r24	; 20
 278:	08 95       	ret

0000027a <lcdSclk>:
 27a:	88 23       	and	r24, r24
 27c:	21 f0       	breq	.+8      	; 0x286 <lcdSclk+0xc>
 27e:	84 b3       	in	r24, 0x14	; 20
 280:	82 60       	ori	r24, 0x02	; 2
 282:	84 bb       	out	0x14, r24	; 20
 284:	08 95       	ret
 286:	84 b3       	in	r24, 0x14	; 20
 288:	8d 7f       	andi	r24, 0xFD	; 253
 28a:	84 bb       	out	0x14, r24	; 20
 28c:	08 95       	ret

0000028e <lcdLight>:
 28e:	81 11       	cpse	r24, r1
 290:	04 c0       	rjmp	.+8      	; 0x29a <lcdLight+0xc>
 292:	84 b5       	in	r24, 0x24	; 36
 294:	8f 7d       	andi	r24, 0xDF	; 223
 296:	84 bd       	out	0x24, r24	; 36
 298:	08 95       	ret
 29a:	94 b5       	in	r25, 0x24	; 36
 29c:	90 62       	ori	r25, 0x20	; 32
 29e:	94 bd       	out	0x24, r25	; 36
 2a0:	88 bd       	out	0x28, r24	; 40
 2a2:	08 95       	ret

000002a4 <writeLcdF>:
 2a4:	ef 92       	push	r14
 2a6:	ff 92       	push	r15
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	7c 01       	movw	r14, r24
 2b2:	eb 01       	movw	r28, r22
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	d7 df       	rcall	.-82     	; 0x266 <lcdSid>
 2b8:	00 e0       	ldi	r16, 0x00	; 0
 2ba:	10 e0       	ldi	r17, 0x00	; 0
 2bc:	06 c0       	rjmp	.+12     	; 0x2ca <writeLcdF+0x26>
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	dc df       	rcall	.-72     	; 0x27a <lcdSclk>
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	da df       	rcall	.-76     	; 0x27a <lcdSclk>
 2c6:	0f 5f       	subi	r16, 0xFF	; 255
 2c8:	1f 4f       	sbci	r17, 0xFF	; 255
 2ca:	05 30       	cpi	r16, 0x05	; 5
 2cc:	11 05       	cpc	r17, r1
 2ce:	b8 f3       	brcs	.-18     	; 0x2be <writeLcdF+0x1a>
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	c9 df       	rcall	.-110    	; 0x266 <lcdSid>
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	d1 df       	rcall	.-94     	; 0x27a <lcdSclk>
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	cf df       	rcall	.-98     	; 0x27a <lcdSclk>
 2dc:	83 e4       	ldi	r24, 0x43	; 67
 2de:	e8 16       	cp	r14, r24
 2e0:	f1 04       	cpc	r15, r1
 2e2:	19 f4       	brne	.+6      	; 0x2ea <writeLcdF+0x46>
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	bf df       	rcall	.-130    	; 0x266 <lcdSid>
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <writeLcdF+0x4a>
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	bc df       	rcall	.-136    	; 0x266 <lcdSid>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	c4 df       	rcall	.-120    	; 0x27a <lcdSclk>
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	c2 df       	rcall	.-124    	; 0x27a <lcdSclk>
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	b6 df       	rcall	.-148    	; 0x266 <lcdSid>
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	be df       	rcall	.-132    	; 0x27a <lcdSclk>
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	bc df       	rcall	.-136    	; 0x27a <lcdSclk>
 302:	00 e0       	ldi	r16, 0x00	; 0
 304:	10 e0       	ldi	r17, 0x00	; 0
 306:	11 c0       	rjmp	.+34     	; 0x32a <writeLcdF+0x86>
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	b7 df       	rcall	.-146    	; 0x27a <lcdSclk>
 30c:	c0 ff       	sbrs	r28, 0
 30e:	03 c0       	rjmp	.+6      	; 0x316 <writeLcdF+0x72>
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	a9 df       	rcall	.-174    	; 0x266 <lcdSid>
 314:	02 c0       	rjmp	.+4      	; 0x31a <writeLcdF+0x76>
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	a6 df       	rcall	.-180    	; 0x266 <lcdSid>
 31a:	d6 95       	lsr	r29
 31c:	c7 95       	ror	r28
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	ac df       	rcall	.-168    	; 0x27a <lcdSclk>
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	aa df       	rcall	.-172    	; 0x27a <lcdSclk>
 326:	0f 5f       	subi	r16, 0xFF	; 255
 328:	1f 4f       	sbci	r17, 0xFF	; 255
 32a:	04 30       	cpi	r16, 0x04	; 4
 32c:	11 05       	cpc	r17, r1
 32e:	60 f3       	brcs	.-40     	; 0x308 <writeLcdF+0x64>
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	99 df       	rcall	.-206    	; 0x266 <lcdSid>
 334:	00 e0       	ldi	r16, 0x00	; 0
 336:	10 e0       	ldi	r17, 0x00	; 0
 338:	06 c0       	rjmp	.+12     	; 0x346 <writeLcdF+0xa2>
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	9e df       	rcall	.-196    	; 0x27a <lcdSclk>
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	9c df       	rcall	.-200    	; 0x27a <lcdSclk>
 342:	0f 5f       	subi	r16, 0xFF	; 255
 344:	1f 4f       	sbci	r17, 0xFF	; 255
 346:	04 30       	cpi	r16, 0x04	; 4
 348:	11 05       	cpc	r17, r1
 34a:	b8 f3       	brcs	.-18     	; 0x33a <writeLcdF+0x96>
 34c:	00 e0       	ldi	r16, 0x00	; 0
 34e:	10 e0       	ldi	r17, 0x00	; 0
 350:	11 c0       	rjmp	.+34     	; 0x374 <writeLcdF+0xd0>
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	92 df       	rcall	.-220    	; 0x27a <lcdSclk>
 356:	c0 ff       	sbrs	r28, 0
 358:	03 c0       	rjmp	.+6      	; 0x360 <writeLcdF+0xbc>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	84 df       	rcall	.-248    	; 0x266 <lcdSid>
 35e:	02 c0       	rjmp	.+4      	; 0x364 <writeLcdF+0xc0>
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	81 df       	rcall	.-254    	; 0x266 <lcdSid>
 364:	d6 95       	lsr	r29
 366:	c7 95       	ror	r28
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	87 df       	rcall	.-242    	; 0x27a <lcdSclk>
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	85 df       	rcall	.-246    	; 0x27a <lcdSclk>
 370:	0f 5f       	subi	r16, 0xFF	; 255
 372:	1f 4f       	sbci	r17, 0xFF	; 255
 374:	04 30       	cpi	r16, 0x04	; 4
 376:	11 05       	cpc	r17, r1
 378:	60 f3       	brcs	.-40     	; 0x352 <writeLcdF+0xae>
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	74 df       	rcall	.-280    	; 0x266 <lcdSid>
 37e:	c0 e0       	ldi	r28, 0x00	; 0
 380:	d0 e0       	ldi	r29, 0x00	; 0
 382:	05 c0       	rjmp	.+10     	; 0x38e <writeLcdF+0xea>
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	79 df       	rcall	.-270    	; 0x27a <lcdSclk>
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	77 df       	rcall	.-274    	; 0x27a <lcdSclk>
 38c:	21 96       	adiw	r28, 0x01	; 1
 38e:	c4 30       	cpi	r28, 0x04	; 4
 390:	d1 05       	cpc	r29, r1
 392:	c0 f3       	brcs	.-16     	; 0x384 <writeLcdF+0xe0>
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	67 df       	rcall	.-306    	; 0x266 <lcdSid>
 398:	87 ec       	ldi	r24, 0xC7	; 199
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	01 97       	sbiw	r24, 0x01	; 1
 39e:	f1 f7       	brne	.-4      	; 0x39c <writeLcdF+0xf8>
 3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <writeLcdF+0xfe>
 3a2:	00 00       	nop
 3a4:	df 91       	pop	r29
 3a6:	cf 91       	pop	r28
 3a8:	1f 91       	pop	r17
 3aa:	0f 91       	pop	r16
 3ac:	ff 90       	pop	r15
 3ae:	ef 90       	pop	r14
 3b0:	08 95       	ret

000003b2 <lcdWriteText>:
 3b2:	1f 93       	push	r17
 3b4:	cf 93       	push	r28
 3b6:	df 93       	push	r29
 3b8:	cd b7       	in	r28, 0x3d	; 61
 3ba:	de b7       	in	r29, 0x3e	; 62
 3bc:	65 97       	sbiw	r28, 0x15	; 21
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	de bf       	out	0x3e, r29	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	cd bf       	out	0x3d, r28	; 61
 3c8:	9e 01       	movw	r18, r28
 3ca:	20 5e       	subi	r18, 0xE0	; 224
 3cc:	3f 4f       	sbci	r19, 0xFF	; 255
 3ce:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3d0:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3d2:	65 e1       	ldi	r22, 0x15	; 21
 3d4:	70 e0       	ldi	r23, 0x00	; 0
 3d6:	ce 01       	movw	r24, r28
 3d8:	01 96       	adiw	r24, 0x01	; 1
 3da:	7e d2       	rcall	.+1276   	; 0x8d8 <vsnprintf>
 3dc:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3de:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3e0:	90 e2       	ldi	r25, 0x20	; 32
 3e2:	89 9f       	mul	r24, r25
 3e4:	60 0d       	add	r22, r0
 3e6:	11 24       	eor	r1, r1
 3e8:	60 68       	ori	r22, 0x80	; 128
 3ea:	70 e0       	ldi	r23, 0x00	; 0
 3ec:	83 e4       	ldi	r24, 0x43	; 67
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	59 df       	rcall	.-334    	; 0x2a4 <writeLcdF>
 3f2:	10 e0       	ldi	r17, 0x00	; 0
 3f4:	05 c0       	rjmp	.+10     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f6:	1f 5f       	subi	r17, 0xFF	; 255
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	84 e4       	ldi	r24, 0x44	; 68
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	52 df       	rcall	.-348    	; 0x2a4 <writeLcdF>
 400:	e1 e0       	ldi	r30, 0x01	; 1
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	ec 0f       	add	r30, r28
 406:	fd 1f       	adc	r31, r29
 408:	e1 0f       	add	r30, r17
 40a:	f1 1d       	adc	r31, r1
 40c:	60 81       	ld	r22, Z
 40e:	61 11       	cpse	r22, r1
 410:	f2 cf       	rjmp	.-28     	; 0x3f6 <lcdWriteText+0x44>
 412:	65 96       	adiw	r28, 0x15	; 21
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	f8 94       	cli
 418:	de bf       	out	0x3e, r29	; 62
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	cd bf       	out	0x3d, r28	; 61
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	1f 91       	pop	r17
 424:	08 95       	ret

00000426 <lcdShowText>:
 426:	0f 93       	push	r16
 428:	1f 93       	push	r17
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	cd b7       	in	r28, 0x3d	; 61
 430:	de b7       	in	r29, 0x3e	; 62
 432:	c1 55       	subi	r28, 0x51	; 81
 434:	d1 09       	sbc	r29, r1
 436:	0f b6       	in	r0, 0x3f	; 63
 438:	f8 94       	cli
 43a:	de bf       	out	0x3e, r29	; 62
 43c:	0f be       	out	0x3f, r0	; 63
 43e:	cd bf       	out	0x3d, r28	; 61
 440:	9e 01       	movw	r18, r28
 442:	27 5a       	subi	r18, 0xA7	; 167
 444:	3f 4f       	sbci	r19, 0xFF	; 255
 446:	f9 01       	movw	r30, r18
 448:	41 91       	ld	r20, Z+
 44a:	51 91       	ld	r21, Z+
 44c:	9f 01       	movw	r18, r30
 44e:	61 e5       	ldi	r22, 0x51	; 81
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	8e 01       	movw	r16, r28
 454:	0f 5f       	subi	r16, 0xFF	; 255
 456:	1f 4f       	sbci	r17, 0xFF	; 255
 458:	c8 01       	movw	r24, r16
 45a:	3e d2       	rcall	.+1148   	; 0x8d8 <vsnprintf>
 45c:	f8 01       	movw	r30, r16
 45e:	01 90       	ld	r0, Z+
 460:	00 20       	and	r0, r0
 462:	e9 f7       	brne	.-6      	; 0x45e <lcdShowText+0x38>
 464:	31 97       	sbiw	r30, 0x01	; 1
 466:	cf 01       	movw	r24, r30
 468:	80 1b       	sub	r24, r16
 46a:	91 0b       	sbc	r25, r17
 46c:	09 c0       	rjmp	.+18     	; 0x480 <lcdShowText+0x5a>
 46e:	e1 e0       	ldi	r30, 0x01	; 1
 470:	f0 e0       	ldi	r31, 0x00	; 0
 472:	ec 0f       	add	r30, r28
 474:	fd 1f       	adc	r31, r29
 476:	e8 0f       	add	r30, r24
 478:	f9 1f       	adc	r31, r25
 47a:	20 e2       	ldi	r18, 0x20	; 32
 47c:	20 83       	st	Z, r18
 47e:	01 96       	adiw	r24, 0x01	; 1
 480:	81 35       	cpi	r24, 0x51	; 81
 482:	91 05       	cpc	r25, r1
 484:	a0 f3       	brcs	.-24     	; 0x46e <lcdShowText+0x48>
 486:	62 96       	adiw	r28, 0x12	; 18
 488:	1f ae       	std	Y+63, r1	; 0x3f
 48a:	62 97       	sbiw	r28, 0x12	; 18
 48c:	ce 01       	movw	r24, r28
 48e:	01 96       	adiw	r24, 0x01	; 1
 490:	9f 93       	push	r25
 492:	8f 93       	push	r24
 494:	1f 92       	push	r1
 496:	1f 92       	push	r1
 498:	8c df       	rcall	.-232    	; 0x3b2 <lcdWriteText>
 49a:	ce 01       	movw	r24, r28
 49c:	45 96       	adiw	r24, 0x15	; 21
 49e:	9f 93       	push	r25
 4a0:	8f 93       	push	r24
 4a2:	1f 92       	push	r1
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	8f 93       	push	r24
 4a8:	84 df       	rcall	.-248    	; 0x3b2 <lcdWriteText>
 4aa:	ce 01       	movw	r24, r28
 4ac:	89 96       	adiw	r24, 0x29	; 41
 4ae:	9f 93       	push	r25
 4b0:	8f 93       	push	r24
 4b2:	1f 92       	push	r1
 4b4:	82 e0       	ldi	r24, 0x02	; 2
 4b6:	8f 93       	push	r24
 4b8:	7c df       	rcall	.-264    	; 0x3b2 <lcdWriteText>
 4ba:	ce 01       	movw	r24, r28
 4bc:	cd 96       	adiw	r24, 0x3d	; 61
 4be:	9f 93       	push	r25
 4c0:	8f 93       	push	r24
 4c2:	1f 92       	push	r1
 4c4:	83 e0       	ldi	r24, 0x03	; 3
 4c6:	8f 93       	push	r24
 4c8:	74 df       	rcall	.-280    	; 0x3b2 <lcdWriteText>
 4ca:	0f b6       	in	r0, 0x3f	; 63
 4cc:	f8 94       	cli
 4ce:	de bf       	out	0x3e, r29	; 62
 4d0:	0f be       	out	0x3f, r0	; 63
 4d2:	cd bf       	out	0x3d, r28	; 61
 4d4:	cf 5a       	subi	r28, 0xAF	; 175
 4d6:	df 4f       	sbci	r29, 0xFF	; 255
 4d8:	0f b6       	in	r0, 0x3f	; 63
 4da:	f8 94       	cli
 4dc:	de bf       	out	0x3e, r29	; 62
 4de:	0f be       	out	0x3f, r0	; 63
 4e0:	cd bf       	out	0x3d, r28	; 61
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	1f 91       	pop	r17
 4e8:	0f 91       	pop	r16
 4ea:	08 95       	ret

000004ec <lcdClear>:
 4ec:	61 e0       	ldi	r22, 0x01	; 1
 4ee:	70 e0       	ldi	r23, 0x00	; 0
 4f0:	83 e4       	ldi	r24, 0x43	; 67
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	d7 de       	rcall	.-594    	; 0x2a4 <writeLcdF>
 4f6:	8f e3       	ldi	r24, 0x3F	; 63
 4f8:	9f e1       	ldi	r25, 0x1F	; 31
 4fa:	01 97       	sbiw	r24, 0x01	; 1
 4fc:	f1 f7       	brne	.-4      	; 0x4fa <lcdClear+0xe>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <lcdClear+0x14>
 500:	00 00       	nop
 502:	8a e3       	ldi	r24, 0x3A	; 58
 504:	92 e0       	ldi	r25, 0x02	; 2
 506:	9f 93       	push	r25
 508:	8f 93       	push	r24
 50a:	1f 92       	push	r1
 50c:	1f 92       	push	r1
 50e:	51 df       	rcall	.-350    	; 0x3b2 <lcdWriteText>
 510:	0f 90       	pop	r0
 512:	0f 90       	pop	r0
 514:	0f 90       	pop	r0
 516:	0f 90       	pop	r0
 518:	08 95       	ret

0000051a <initLcd>:
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	ae de       	rcall	.-676    	; 0x27a <lcdSclk>
 51e:	80 e0       	ldi	r24, 0x00	; 0
 520:	a2 de       	rcall	.-700    	; 0x266 <lcdSid>
 522:	64 e3       	ldi	r22, 0x34	; 52
 524:	70 e0       	ldi	r23, 0x00	; 0
 526:	83 e4       	ldi	r24, 0x43	; 67
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	bc de       	rcall	.-648    	; 0x2a4 <writeLcdF>
 52c:	69 e0       	ldi	r22, 0x09	; 9
 52e:	70 e0       	ldi	r23, 0x00	; 0
 530:	83 e4       	ldi	r24, 0x43	; 67
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	b7 de       	rcall	.-658    	; 0x2a4 <writeLcdF>
 536:	60 e3       	ldi	r22, 0x30	; 48
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	83 e4       	ldi	r24, 0x43	; 67
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	b2 de       	rcall	.-668    	; 0x2a4 <writeLcdF>
 540:	6c e0       	ldi	r22, 0x0C	; 12
 542:	70 e0       	ldi	r23, 0x00	; 0
 544:	83 e4       	ldi	r24, 0x43	; 67
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	ad de       	rcall	.-678    	; 0x2a4 <writeLcdF>
 54a:	d0 df       	rcall	.-96     	; 0x4ec <lcdClear>
 54c:	67 e0       	ldi	r22, 0x07	; 7
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	83 e4       	ldi	r24, 0x43	; 67
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	a7 de       	rcall	.-690    	; 0x2a4 <writeLcdF>
 556:	80 e0       	ldi	r24, 0x00	; 0
 558:	9a ce       	rjmp	.-716    	; 0x28e <lcdLight>
 55a:	08 95       	ret

0000055c <initBoard>:
 55c:	ff 92       	push	r15
 55e:	0f 93       	push	r16
 560:	1f 93       	push	r17
 562:	cf 93       	push	r28
 564:	df 93       	push	r29
 566:	c8 2f       	mov	r28, r24
 568:	85 b7       	in	r24, 0x35	; 53
 56a:	85 bf       	out	0x35, r24	; 53
 56c:	12 b8       	out	0x02, r1	; 2
 56e:	8f ef       	ldi	r24, 0xFF	; 255
 570:	81 b9       	out	0x01, r24	; 1
 572:	15 b8       	out	0x05, r1	; 5
 574:	84 b9       	out	0x04, r24	; 4
 576:	88 b9       	out	0x08, r24	; 8
 578:	17 b8       	out	0x07, r1	; 7
 57a:	8b b9       	out	0x0b, r24	; 11
 57c:	1a b8       	out	0x0a, r1	; 10
 57e:	8e b9       	out	0x0e, r24	; 14
 580:	1d b8       	out	0x0d, r1	; 13
 582:	9e b1       	in	r25, 0x0e	; 14
 584:	9b 7f       	andi	r25, 0xFB	; 251
 586:	9e b9       	out	0x0e, r25	; 14
 588:	11 ba       	out	0x11, r1	; 17
 58a:	10 ba       	out	0x10, r1	; 16
 58c:	94 e0       	ldi	r25, 0x04	; 4
 58e:	94 bb       	out	0x14, r25	; 20
 590:	93 b3       	in	r25, 0x13	; 19
 592:	93 60       	ori	r25, 0x03	; 3
 594:	93 bb       	out	0x13, r25	; 19
 596:	93 b3       	in	r25, 0x13	; 19
 598:	90 62       	ori	r25, 0x20	; 32
 59a:	93 bb       	out	0x13, r25	; 19
 59c:	97 ec       	ldi	r25, 0xC7	; 199
 59e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 5a2:	98 e3       	ldi	r25, 0x38	; 56
 5a4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 5a8:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 5ac:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 5b0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 5b4:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 5b8:	8c e3       	ldi	r24, 0x3C	; 60
 5ba:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 5be:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 5c2:	78 94       	sei
 5c4:	c1 dd       	rcall	.-1150   	; 0x148 <startSystemTimeMs>
 5c6:	a9 df       	rcall	.-174    	; 0x51a <initLcd>
 5c8:	c9 dd       	rcall	.-1134   	; 0x15c <initAdc>
 5ca:	39 de       	rcall	.-910    	; 0x23e <initRgb>
 5cc:	cc 23       	and	r28, r28
 5ce:	09 f4       	brne	.+2      	; 0x5d2 <initBoard+0x76>
 5d0:	a3 c0       	rjmp	.+326    	; 0x718 <initBoard+0x1bc>
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	5c de       	rcall	.-840    	; 0x28e <lcdLight>
 5d6:	40 e0       	ldi	r20, 0x00	; 0
 5d8:	50 e0       	ldi	r21, 0x00	; 0
 5da:	6f ef       	ldi	r22, 0xFF	; 255
 5dc:	73 e0       	ldi	r23, 0x03	; 3
 5de:	80 e0       	ldi	r24, 0x00	; 0
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	16 de       	rcall	.-980    	; 0x210 <rgbWrite>
 5e4:	87 e2       	ldi	r24, 0x27	; 39
 5e6:	92 e0       	ldi	r25, 0x02	; 2
 5e8:	9f 93       	push	r25
 5ea:	8f 93       	push	r24
 5ec:	1f 92       	push	r1
 5ee:	1f 92       	push	r1
 5f0:	e0 de       	rcall	.-576    	; 0x3b2 <lcdWriteText>
 5f2:	8c e3       	ldi	r24, 0x3C	; 60
 5f4:	92 e0       	ldi	r25, 0x02	; 2
 5f6:	9f 93       	push	r25
 5f8:	8f 93       	push	r24
 5fa:	1f 92       	push	r1
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	8f 93       	push	r24
 600:	d8 de       	rcall	.-592    	; 0x3b2 <lcdWriteText>
 602:	82 e1       	ldi	r24, 0x12	; 18
 604:	92 e0       	ldi	r25, 0x02	; 2
 606:	9f 93       	push	r25
 608:	8f 93       	push	r24
 60a:	1f 92       	push	r1
 60c:	82 e0       	ldi	r24, 0x02	; 2
 60e:	8f 93       	push	r24
 610:	d0 de       	rcall	.-608    	; 0x3b2 <lcdWriteText>
 612:	81 e5       	ldi	r24, 0x51	; 81
 614:	92 e0       	ldi	r25, 0x02	; 2
 616:	9f 93       	push	r25
 618:	8f 93       	push	r24
 61a:	1f 92       	push	r1
 61c:	83 e0       	ldi	r24, 0x03	; 3
 61e:	8f 93       	push	r24
 620:	c8 de       	rcall	.-624    	; 0x3b2 <lcdWriteText>
 622:	8d b7       	in	r24, 0x3d	; 61
 624:	9e b7       	in	r25, 0x3e	; 62
 626:	40 96       	adiw	r24, 0x10	; 16
 628:	0f b6       	in	r0, 0x3f	; 63
 62a:	f8 94       	cli
 62c:	9e bf       	out	0x3e, r25	; 62
 62e:	0f be       	out	0x3f, r0	; 63
 630:	8d bf       	out	0x3d, r24	; 61
 632:	ff 24       	eor	r15, r15
 634:	f3 94       	inc	r15
 636:	c0 e0       	ldi	r28, 0x00	; 0
 638:	10 e0       	ldi	r17, 0x00	; 0
 63a:	01 e0       	ldi	r16, 0x01	; 1
 63c:	d0 e0       	ldi	r29, 0x00	; 0
 63e:	00 23       	and	r16, r16
 640:	51 f0       	breq	.+20     	; 0x656 <initBoard+0xfa>
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	90 e8       	ldi	r25, 0x80	; 128
 646:	0d 2e       	mov	r0, r29
 648:	02 c0       	rjmp	.+4      	; 0x64e <initBoard+0xf2>
 64a:	96 95       	lsr	r25
 64c:	87 95       	ror	r24
 64e:	0a 94       	dec	r0
 650:	e2 f7       	brpl	.-8      	; 0x64a <initBoard+0xee>
 652:	74 dd       	rcall	.-1304   	; 0x13c <ledWriteAll>
 654:	09 c0       	rjmp	.+18     	; 0x668 <initBoard+0x10c>
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	0d 2e       	mov	r0, r29
 65c:	02 c0       	rjmp	.+4      	; 0x662 <initBoard+0x106>
 65e:	88 0f       	add	r24, r24
 660:	99 1f       	adc	r25, r25
 662:	0a 94       	dec	r0
 664:	e2 f7       	brpl	.-8      	; 0x65e <initBoard+0x102>
 666:	6a dd       	rcall	.-1324   	; 0x13c <ledWriteAll>
 668:	df 5f       	subi	r29, 0xFF	; 255
 66a:	d1 31       	cpi	r29, 0x11	; 17
 66c:	28 f0       	brcs	.+10     	; 0x678 <initBoard+0x11c>
 66e:	81 e0       	ldi	r24, 0x01	; 1
 670:	01 11       	cpse	r16, r1
 672:	80 e0       	ldi	r24, 0x00	; 0
 674:	08 2f       	mov	r16, r24
 676:	d0 e0       	ldi	r29, 0x00	; 0
 678:	ff 20       	and	r15, r15
 67a:	11 f0       	breq	.+4      	; 0x680 <initBoard+0x124>
 67c:	ce 5f       	subi	r28, 0xFE	; 254
 67e:	01 c0       	rjmp	.+2      	; 0x682 <initBoard+0x126>
 680:	c2 50       	subi	r28, 0x02	; 2
 682:	8c 2f       	mov	r24, r28
 684:	04 de       	rcall	.-1016   	; 0x28e <lcdLight>
 686:	ce 3f       	cpi	r28, 0xFE	; 254
 688:	09 f4       	brne	.+2      	; 0x68c <initBoard+0x130>
 68a:	f1 2c       	mov	r15, r1
 68c:	c8 37       	cpi	r28, 0x78	; 120
 68e:	11 f4       	brne	.+4      	; 0x694 <initBoard+0x138>
 690:	ff 24       	eor	r15, r15
 692:	f3 94       	inc	r15
 694:	11 11       	cpse	r17, r1
 696:	17 c0       	rjmp	.+46     	; 0x6c6 <initBoard+0x16a>
 698:	54 dd       	rcall	.-1368   	; 0x142 <buttonReadAllPL>
 69a:	83 7c       	andi	r24, 0xC3	; 195
 69c:	a1 f0       	breq	.+40     	; 0x6c6 <initBoard+0x16a>
 69e:	40 e0       	ldi	r20, 0x00	; 0
 6a0:	50 e0       	ldi	r21, 0x00	; 0
 6a2:	66 e2       	ldi	r22, 0x26	; 38
 6a4:	72 e0       	ldi	r23, 0x02	; 2
 6a6:	8f ef       	ldi	r24, 0xFF	; 255
 6a8:	93 e0       	ldi	r25, 0x03	; 3
 6aa:	b2 dd       	rcall	.-1180   	; 0x210 <rgbWrite>
 6ac:	86 e6       	ldi	r24, 0x66	; 102
 6ae:	92 e0       	ldi	r25, 0x02	; 2
 6b0:	9f 93       	push	r25
 6b2:	8f 93       	push	r24
 6b4:	1f 92       	push	r1
 6b6:	83 e0       	ldi	r24, 0x03	; 3
 6b8:	8f 93       	push	r24
 6ba:	7b de       	rcall	.-778    	; 0x3b2 <lcdWriteText>
 6bc:	0f 90       	pop	r0
 6be:	0f 90       	pop	r0
 6c0:	0f 90       	pop	r0
 6c2:	0f 90       	pop	r0
 6c4:	11 e0       	ldi	r17, 0x01	; 1
 6c6:	11 23       	and	r17, r17
 6c8:	19 f0       	breq	.+6      	; 0x6d0 <initBoard+0x174>
 6ca:	3b dd       	rcall	.-1418   	; 0x142 <buttonReadAllPL>
 6cc:	83 7c       	andi	r24, 0xC3	; 195
 6ce:	39 f0       	breq	.+14     	; 0x6de <initBoard+0x182>
 6d0:	8f ef       	ldi	r24, 0xFF	; 255
 6d2:	9c e7       	ldi	r25, 0x7C	; 124
 6d4:	01 97       	sbiw	r24, 0x01	; 1
 6d6:	f1 f7       	brne	.-4      	; 0x6d4 <initBoard+0x178>
 6d8:	00 c0       	rjmp	.+0      	; 0x6da <initBoard+0x17e>
 6da:	00 00       	nop
 6dc:	b0 cf       	rjmp	.-160    	; 0x63e <initBoard+0xe2>
 6de:	06 df       	rcall	.-500    	; 0x4ec <lcdClear>
 6e0:	80 e0       	ldi	r24, 0x00	; 0
 6e2:	d5 dd       	rcall	.-1110   	; 0x28e <lcdLight>
 6e4:	80 e0       	ldi	r24, 0x00	; 0
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	29 dd       	rcall	.-1454   	; 0x13c <ledWriteAll>
 6ea:	40 e0       	ldi	r20, 0x00	; 0
 6ec:	50 e0       	ldi	r21, 0x00	; 0
 6ee:	60 e0       	ldi	r22, 0x00	; 0
 6f0:	70 e0       	ldi	r23, 0x00	; 0
 6f2:	80 e0       	ldi	r24, 0x00	; 0
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	8c dd       	rcall	.-1256   	; 0x210 <rgbWrite>
 6f8:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <systemTimeMs>
 6fc:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <systemTimeMs+0x1>
 700:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <systemTimeMs+0x2>
 704:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <systemTimeMs+0x3>
 708:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <systemTimeMs+0x4>
 70c:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <systemTimeMs+0x5>
 710:	10 92 89 02 	sts	0x0289, r1	; 0x800289 <systemTimeMs+0x6>
 714:	10 92 8a 02 	sts	0x028A, r1	; 0x80028a <systemTimeMs+0x7>
 718:	df 91       	pop	r29
 71a:	cf 91       	pop	r28
 71c:	1f 91       	pop	r17
 71e:	0f 91       	pop	r16
 720:	ff 90       	pop	r15
 722:	08 95       	ret

00000724 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 724:	cf 93       	push	r28
 726:	df 93       	push	r29
 728:	cd b7       	in	r28, 0x3d	; 61
 72a:	de b7       	in	r29, 0x3e	; 62
 72c:	28 97       	sbiw	r28, 0x08	; 8
 72e:	0f b6       	in	r0, 0x3f	; 63
 730:	f8 94       	cli
 732:	de bf       	out	0x3e, r29	; 62
 734:	0f be       	out	0x3f, r0	; 63
 736:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 738:	88 e0       	ldi	r24, 0x08	; 8
 73a:	e0 e0       	ldi	r30, 0x00	; 0
 73c:	f2 e0       	ldi	r31, 0x02	; 2
 73e:	de 01       	movw	r26, r28
 740:	11 96       	adiw	r26, 0x01	; 1
 742:	01 90       	ld	r0, Z+
 744:	0d 92       	st	X+, r0
 746:	8a 95       	dec	r24
 748:	e1 f7       	brne	.-8      	; 0x742 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 74a:	e5 e0       	ldi	r30, 0x05	; 5
 74c:	f1 e0       	ldi	r31, 0x01	; 1
 74e:	80 81       	ld	r24, Z
 750:	8f 7b       	andi	r24, 0xBF	; 191
 752:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 754:	e0 91 80 02 	lds	r30, 0x0280	; 0x800280 <Zeilen_Nr.2743>
 758:	f0 91 81 02 	lds	r31, 0x0281	; 0x800281 <Zeilen_Nr.2743+0x1>
 75c:	81 e0       	ldi	r24, 0x01	; 1
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	8c 0f       	add	r24, r28
 762:	9d 1f       	adc	r25, r29
 764:	e8 0f       	add	r30, r24
 766:	f9 1f       	adc	r31, r25
 768:	80 81       	ld	r24, Z
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <__data_end+0x1>
 770:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 774:	80 e0       	ldi	r24, 0x00	; 0
 776:	26 c0       	rjmp	.+76     	; 0x7c4 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 778:	e7 e3       	ldi	r30, 0x37	; 55
 77a:	f0 e0       	ldi	r31, 0x00	; 0
 77c:	e8 1b       	sub	r30, r24
 77e:	f1 09       	sbc	r31, r1
 780:	ee 0f       	add	r30, r30
 782:	ff 1f       	adc	r31, r31
 784:	e4 57       	subi	r30, 0x74	; 116
 786:	fd 4f       	sbci	r31, 0xFD	; 253
 788:	40 81       	ld	r20, Z
 78a:	51 81       	ldd	r21, Z+1	; 0x01
 78c:	20 91 7e 02 	lds	r18, 0x027E	; 0x80027e <__data_end>
 790:	30 91 7f 02 	lds	r19, 0x027F	; 0x80027f <__data_end+0x1>
 794:	24 23       	and	r18, r20
 796:	35 23       	and	r19, r21
 798:	23 2b       	or	r18, r19
 79a:	31 f0       	breq	.+12     	; 0x7a8 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 79c:	e5 e0       	ldi	r30, 0x05	; 5
 79e:	f1 e0       	ldi	r31, 0x01	; 1
 7a0:	90 81       	ld	r25, Z
 7a2:	90 62       	ori	r25, 0x20	; 32
 7a4:	90 83       	st	Z, r25
 7a6:	05 c0       	rjmp	.+10     	; 0x7b2 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7a8:	e5 e0       	ldi	r30, 0x05	; 5
 7aa:	f1 e0       	ldi	r31, 0x01	; 1
 7ac:	90 81       	ld	r25, Z
 7ae:	9f 7d       	andi	r25, 0xDF	; 223
 7b0:	90 83       	st	Z, r25
        }
        CLOCK_1;
 7b2:	e5 e0       	ldi	r30, 0x05	; 5
 7b4:	f1 e0       	ldi	r31, 0x01	; 1
 7b6:	90 81       	ld	r25, Z
 7b8:	90 61       	ori	r25, 0x10	; 16
 7ba:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7bc:	90 81       	ld	r25, Z
 7be:	9f 7e       	andi	r25, 0xEF	; 239
 7c0:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7c2:	8f 5f       	subi	r24, 0xFF	; 255
 7c4:	88 33       	cpi	r24, 0x38	; 56
 7c6:	c0 f2       	brcs	.-80     	; 0x778 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 7c8:	e5 e0       	ldi	r30, 0x05	; 5
 7ca:	f1 e0       	ldi	r31, 0x01	; 1
 7cc:	80 81       	ld	r24, Z
 7ce:	87 7f       	andi	r24, 0xF7	; 247
 7d0:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 7d2:	80 81       	ld	r24, Z
 7d4:	88 7f       	andi	r24, 0xF8	; 248
 7d6:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 7d8:	90 81       	ld	r25, Z
 7da:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <Zeilen_Nr.2743>
 7de:	89 2b       	or	r24, r25
 7e0:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 7e2:	80 81       	ld	r24, Z
 7e4:	80 64       	ori	r24, 0x40	; 64
 7e6:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 7e8:	80 81       	ld	r24, Z
 7ea:	88 60       	ori	r24, 0x08	; 8
 7ec:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 7ee:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <Zeilen_Nr.2743>
 7f2:	90 91 81 02 	lds	r25, 0x0281	; 0x800281 <Zeilen_Nr.2743+0x1>
 7f6:	87 30       	cpi	r24, 0x07	; 7
 7f8:	91 05       	cpc	r25, r1
 7fa:	30 f4       	brcc	.+12     	; 0x808 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 7fc:	01 96       	adiw	r24, 0x01	; 1
 7fe:	90 93 81 02 	sts	0x0281, r25	; 0x800281 <Zeilen_Nr.2743+0x1>
 802:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <Zeilen_Nr.2743>
 806:	07 c0       	rjmp	.+14     	; 0x816 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 808:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <Zeilen_Nr.2743+0x1>
 80c:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <writeTextFinished>
    }
    
 816:	28 96       	adiw	r28, 0x08	; 8
 818:	0f b6       	in	r0, 0x3f	; 63
 81a:	f8 94       	cli
 81c:	de bf       	out	0x3e, r29	; 62
 81e:	0f be       	out	0x3f, r0	; 63
 820:	cd bf       	out	0x3d, r28	; 61
 822:	df 91       	pop	r29
 824:	cf 91       	pop	r28
 826:	08 95       	ret

00000828 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 828:	1f 92       	push	r1
 82a:	0f 92       	push	r0
 82c:	0f b6       	in	r0, 0x3f	; 63
 82e:	0f 92       	push	r0
 830:	11 24       	eor	r1, r1
 832:	0b b6       	in	r0, 0x3b	; 59
 834:	0f 92       	push	r0
 836:	2f 93       	push	r18
 838:	3f 93       	push	r19
 83a:	4f 93       	push	r20
 83c:	5f 93       	push	r21
 83e:	6f 93       	push	r22
 840:	7f 93       	push	r23
 842:	8f 93       	push	r24
 844:	9f 93       	push	r25
 846:	af 93       	push	r26
 848:	bf 93       	push	r27
 84a:	ef 93       	push	r30
 84c:	ff 93       	push	r31
    systemTimeMs += 1;
 84e:	20 91 83 02 	lds	r18, 0x0283	; 0x800283 <systemTimeMs>
 852:	30 91 84 02 	lds	r19, 0x0284	; 0x800284 <systemTimeMs+0x1>
 856:	40 91 85 02 	lds	r20, 0x0285	; 0x800285 <systemTimeMs+0x2>
 85a:	50 91 86 02 	lds	r21, 0x0286	; 0x800286 <systemTimeMs+0x3>
 85e:	60 91 87 02 	lds	r22, 0x0287	; 0x800287 <systemTimeMs+0x4>
 862:	70 91 88 02 	lds	r23, 0x0288	; 0x800288 <systemTimeMs+0x5>
 866:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <systemTimeMs+0x6>
 86a:	90 91 8a 02 	lds	r25, 0x028A	; 0x80028a <systemTimeMs+0x7>
 86e:	a1 e0       	ldi	r26, 0x01	; 1
 870:	27 d0       	rcall	.+78     	; 0x8c0 <__adddi3_s8>
 872:	20 93 83 02 	sts	0x0283, r18	; 0x800283 <systemTimeMs>
 876:	30 93 84 02 	sts	0x0284, r19	; 0x800284 <systemTimeMs+0x1>
 87a:	40 93 85 02 	sts	0x0285, r20	; 0x800285 <systemTimeMs+0x2>
 87e:	50 93 86 02 	sts	0x0286, r21	; 0x800286 <systemTimeMs+0x3>
 882:	60 93 87 02 	sts	0x0287, r22	; 0x800287 <systemTimeMs+0x4>
 886:	70 93 88 02 	sts	0x0288, r23	; 0x800288 <systemTimeMs+0x5>
 88a:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <systemTimeMs+0x6>
 88e:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 892:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <matrixRunning>
 896:	81 11       	cpse	r24, r1
 898:	45 df       	rcall	.-374    	; 0x724 <matrixWriteNextLine>
}
 89a:	ff 91       	pop	r31
 89c:	ef 91       	pop	r30
 89e:	bf 91       	pop	r27
 8a0:	af 91       	pop	r26
 8a2:	9f 91       	pop	r25
 8a4:	8f 91       	pop	r24
 8a6:	7f 91       	pop	r23
 8a8:	6f 91       	pop	r22
 8aa:	5f 91       	pop	r21
 8ac:	4f 91       	pop	r20
 8ae:	3f 91       	pop	r19
 8b0:	2f 91       	pop	r18
 8b2:	0f 90       	pop	r0
 8b4:	0b be       	out	0x3b, r0	; 59
 8b6:	0f 90       	pop	r0
 8b8:	0f be       	out	0x3f, r0	; 63
 8ba:	0f 90       	pop	r0
 8bc:	1f 90       	pop	r1
 8be:	18 95       	reti

000008c0 <__adddi3_s8>:
 8c0:	00 24       	eor	r0, r0
 8c2:	a7 fd       	sbrc	r26, 7
 8c4:	00 94       	com	r0
 8c6:	2a 0f       	add	r18, r26
 8c8:	30 1d       	adc	r19, r0
 8ca:	40 1d       	adc	r20, r0
 8cc:	50 1d       	adc	r21, r0
 8ce:	60 1d       	adc	r22, r0
 8d0:	70 1d       	adc	r23, r0
 8d2:	80 1d       	adc	r24, r0
 8d4:	90 1d       	adc	r25, r0
 8d6:	08 95       	ret

000008d8 <vsnprintf>:
 8d8:	0f 93       	push	r16
 8da:	1f 93       	push	r17
 8dc:	cf 93       	push	r28
 8de:	df 93       	push	r29
 8e0:	cd b7       	in	r28, 0x3d	; 61
 8e2:	de b7       	in	r29, 0x3e	; 62
 8e4:	2e 97       	sbiw	r28, 0x0e	; 14
 8e6:	0f b6       	in	r0, 0x3f	; 63
 8e8:	f8 94       	cli
 8ea:	de bf       	out	0x3e, r29	; 62
 8ec:	0f be       	out	0x3f, r0	; 63
 8ee:	cd bf       	out	0x3d, r28	; 61
 8f0:	8c 01       	movw	r16, r24
 8f2:	fa 01       	movw	r30, r20
 8f4:	86 e0       	ldi	r24, 0x06	; 6
 8f6:	8c 83       	std	Y+4, r24	; 0x04
 8f8:	1a 83       	std	Y+2, r17	; 0x02
 8fa:	09 83       	std	Y+1, r16	; 0x01
 8fc:	77 ff       	sbrs	r23, 7
 8fe:	02 c0       	rjmp	.+4      	; 0x904 <vsnprintf+0x2c>
 900:	60 e0       	ldi	r22, 0x00	; 0
 902:	70 e8       	ldi	r23, 0x80	; 128
 904:	cb 01       	movw	r24, r22
 906:	01 97       	sbiw	r24, 0x01	; 1
 908:	9e 83       	std	Y+6, r25	; 0x06
 90a:	8d 83       	std	Y+5, r24	; 0x05
 90c:	a9 01       	movw	r20, r18
 90e:	bf 01       	movw	r22, r30
 910:	ce 01       	movw	r24, r28
 912:	01 96       	adiw	r24, 0x01	; 1
 914:	19 d0       	rcall	.+50     	; 0x948 <vfprintf>
 916:	4d 81       	ldd	r20, Y+5	; 0x05
 918:	5e 81       	ldd	r21, Y+6	; 0x06
 91a:	57 fd       	sbrc	r21, 7
 91c:	0a c0       	rjmp	.+20     	; 0x932 <vsnprintf+0x5a>
 91e:	2f 81       	ldd	r18, Y+7	; 0x07
 920:	38 85       	ldd	r19, Y+8	; 0x08
 922:	42 17       	cp	r20, r18
 924:	53 07       	cpc	r21, r19
 926:	0c f4       	brge	.+2      	; 0x92a <vsnprintf+0x52>
 928:	9a 01       	movw	r18, r20
 92a:	f8 01       	movw	r30, r16
 92c:	e2 0f       	add	r30, r18
 92e:	f3 1f       	adc	r31, r19
 930:	10 82       	st	Z, r1
 932:	2e 96       	adiw	r28, 0x0e	; 14
 934:	0f b6       	in	r0, 0x3f	; 63
 936:	f8 94       	cli
 938:	de bf       	out	0x3e, r29	; 62
 93a:	0f be       	out	0x3f, r0	; 63
 93c:	cd bf       	out	0x3d, r28	; 61
 93e:	df 91       	pop	r29
 940:	cf 91       	pop	r28
 942:	1f 91       	pop	r17
 944:	0f 91       	pop	r16
 946:	08 95       	ret

00000948 <vfprintf>:
 948:	2f 92       	push	r2
 94a:	3f 92       	push	r3
 94c:	4f 92       	push	r4
 94e:	5f 92       	push	r5
 950:	6f 92       	push	r6
 952:	7f 92       	push	r7
 954:	8f 92       	push	r8
 956:	9f 92       	push	r9
 958:	af 92       	push	r10
 95a:	bf 92       	push	r11
 95c:	cf 92       	push	r12
 95e:	df 92       	push	r13
 960:	ef 92       	push	r14
 962:	ff 92       	push	r15
 964:	0f 93       	push	r16
 966:	1f 93       	push	r17
 968:	cf 93       	push	r28
 96a:	df 93       	push	r29
 96c:	cd b7       	in	r28, 0x3d	; 61
 96e:	de b7       	in	r29, 0x3e	; 62
 970:	2b 97       	sbiw	r28, 0x0b	; 11
 972:	0f b6       	in	r0, 0x3f	; 63
 974:	f8 94       	cli
 976:	de bf       	out	0x3e, r29	; 62
 978:	0f be       	out	0x3f, r0	; 63
 97a:	cd bf       	out	0x3d, r28	; 61
 97c:	6c 01       	movw	r12, r24
 97e:	7b 01       	movw	r14, r22
 980:	8a 01       	movw	r16, r20
 982:	fc 01       	movw	r30, r24
 984:	17 82       	std	Z+7, r1	; 0x07
 986:	16 82       	std	Z+6, r1	; 0x06
 988:	83 81       	ldd	r24, Z+3	; 0x03
 98a:	81 ff       	sbrs	r24, 1
 98c:	bf c1       	rjmp	.+894    	; 0xd0c <vfprintf+0x3c4>
 98e:	ce 01       	movw	r24, r28
 990:	01 96       	adiw	r24, 0x01	; 1
 992:	3c 01       	movw	r6, r24
 994:	f6 01       	movw	r30, r12
 996:	93 81       	ldd	r25, Z+3	; 0x03
 998:	f7 01       	movw	r30, r14
 99a:	93 fd       	sbrc	r25, 3
 99c:	85 91       	lpm	r24, Z+
 99e:	93 ff       	sbrs	r25, 3
 9a0:	81 91       	ld	r24, Z+
 9a2:	7f 01       	movw	r14, r30
 9a4:	88 23       	and	r24, r24
 9a6:	09 f4       	brne	.+2      	; 0x9aa <vfprintf+0x62>
 9a8:	ad c1       	rjmp	.+858    	; 0xd04 <vfprintf+0x3bc>
 9aa:	85 32       	cpi	r24, 0x25	; 37
 9ac:	39 f4       	brne	.+14     	; 0x9bc <vfprintf+0x74>
 9ae:	93 fd       	sbrc	r25, 3
 9b0:	85 91       	lpm	r24, Z+
 9b2:	93 ff       	sbrs	r25, 3
 9b4:	81 91       	ld	r24, Z+
 9b6:	7f 01       	movw	r14, r30
 9b8:	85 32       	cpi	r24, 0x25	; 37
 9ba:	21 f4       	brne	.+8      	; 0x9c4 <vfprintf+0x7c>
 9bc:	b6 01       	movw	r22, r12
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	d6 d1       	rcall	.+940    	; 0xd6e <fputc>
 9c2:	e8 cf       	rjmp	.-48     	; 0x994 <vfprintf+0x4c>
 9c4:	91 2c       	mov	r9, r1
 9c6:	21 2c       	mov	r2, r1
 9c8:	31 2c       	mov	r3, r1
 9ca:	ff e1       	ldi	r31, 0x1F	; 31
 9cc:	f3 15       	cp	r31, r3
 9ce:	d8 f0       	brcs	.+54     	; 0xa06 <vfprintf+0xbe>
 9d0:	8b 32       	cpi	r24, 0x2B	; 43
 9d2:	79 f0       	breq	.+30     	; 0x9f2 <vfprintf+0xaa>
 9d4:	38 f4       	brcc	.+14     	; 0x9e4 <vfprintf+0x9c>
 9d6:	80 32       	cpi	r24, 0x20	; 32
 9d8:	79 f0       	breq	.+30     	; 0x9f8 <vfprintf+0xb0>
 9da:	83 32       	cpi	r24, 0x23	; 35
 9dc:	a1 f4       	brne	.+40     	; 0xa06 <vfprintf+0xbe>
 9de:	23 2d       	mov	r18, r3
 9e0:	20 61       	ori	r18, 0x10	; 16
 9e2:	1d c0       	rjmp	.+58     	; 0xa1e <vfprintf+0xd6>
 9e4:	8d 32       	cpi	r24, 0x2D	; 45
 9e6:	61 f0       	breq	.+24     	; 0xa00 <vfprintf+0xb8>
 9e8:	80 33       	cpi	r24, 0x30	; 48
 9ea:	69 f4       	brne	.+26     	; 0xa06 <vfprintf+0xbe>
 9ec:	23 2d       	mov	r18, r3
 9ee:	21 60       	ori	r18, 0x01	; 1
 9f0:	16 c0       	rjmp	.+44     	; 0xa1e <vfprintf+0xd6>
 9f2:	83 2d       	mov	r24, r3
 9f4:	82 60       	ori	r24, 0x02	; 2
 9f6:	38 2e       	mov	r3, r24
 9f8:	e3 2d       	mov	r30, r3
 9fa:	e4 60       	ori	r30, 0x04	; 4
 9fc:	3e 2e       	mov	r3, r30
 9fe:	2a c0       	rjmp	.+84     	; 0xa54 <vfprintf+0x10c>
 a00:	f3 2d       	mov	r31, r3
 a02:	f8 60       	ori	r31, 0x08	; 8
 a04:	1d c0       	rjmp	.+58     	; 0xa40 <vfprintf+0xf8>
 a06:	37 fc       	sbrc	r3, 7
 a08:	2d c0       	rjmp	.+90     	; 0xa64 <vfprintf+0x11c>
 a0a:	20 ed       	ldi	r18, 0xD0	; 208
 a0c:	28 0f       	add	r18, r24
 a0e:	2a 30       	cpi	r18, 0x0A	; 10
 a10:	40 f0       	brcs	.+16     	; 0xa22 <vfprintf+0xda>
 a12:	8e 32       	cpi	r24, 0x2E	; 46
 a14:	b9 f4       	brne	.+46     	; 0xa44 <vfprintf+0xfc>
 a16:	36 fc       	sbrc	r3, 6
 a18:	75 c1       	rjmp	.+746    	; 0xd04 <vfprintf+0x3bc>
 a1a:	23 2d       	mov	r18, r3
 a1c:	20 64       	ori	r18, 0x40	; 64
 a1e:	32 2e       	mov	r3, r18
 a20:	19 c0       	rjmp	.+50     	; 0xa54 <vfprintf+0x10c>
 a22:	36 fe       	sbrs	r3, 6
 a24:	06 c0       	rjmp	.+12     	; 0xa32 <vfprintf+0xea>
 a26:	8a e0       	ldi	r24, 0x0A	; 10
 a28:	98 9e       	mul	r9, r24
 a2a:	20 0d       	add	r18, r0
 a2c:	11 24       	eor	r1, r1
 a2e:	92 2e       	mov	r9, r18
 a30:	11 c0       	rjmp	.+34     	; 0xa54 <vfprintf+0x10c>
 a32:	ea e0       	ldi	r30, 0x0A	; 10
 a34:	2e 9e       	mul	r2, r30
 a36:	20 0d       	add	r18, r0
 a38:	11 24       	eor	r1, r1
 a3a:	22 2e       	mov	r2, r18
 a3c:	f3 2d       	mov	r31, r3
 a3e:	f0 62       	ori	r31, 0x20	; 32
 a40:	3f 2e       	mov	r3, r31
 a42:	08 c0       	rjmp	.+16     	; 0xa54 <vfprintf+0x10c>
 a44:	8c 36       	cpi	r24, 0x6C	; 108
 a46:	21 f4       	brne	.+8      	; 0xa50 <vfprintf+0x108>
 a48:	83 2d       	mov	r24, r3
 a4a:	80 68       	ori	r24, 0x80	; 128
 a4c:	38 2e       	mov	r3, r24
 a4e:	02 c0       	rjmp	.+4      	; 0xa54 <vfprintf+0x10c>
 a50:	88 36       	cpi	r24, 0x68	; 104
 a52:	41 f4       	brne	.+16     	; 0xa64 <vfprintf+0x11c>
 a54:	f7 01       	movw	r30, r14
 a56:	93 fd       	sbrc	r25, 3
 a58:	85 91       	lpm	r24, Z+
 a5a:	93 ff       	sbrs	r25, 3
 a5c:	81 91       	ld	r24, Z+
 a5e:	7f 01       	movw	r14, r30
 a60:	81 11       	cpse	r24, r1
 a62:	b3 cf       	rjmp	.-154    	; 0x9ca <vfprintf+0x82>
 a64:	98 2f       	mov	r25, r24
 a66:	9f 7d       	andi	r25, 0xDF	; 223
 a68:	95 54       	subi	r25, 0x45	; 69
 a6a:	93 30       	cpi	r25, 0x03	; 3
 a6c:	28 f4       	brcc	.+10     	; 0xa78 <vfprintf+0x130>
 a6e:	0c 5f       	subi	r16, 0xFC	; 252
 a70:	1f 4f       	sbci	r17, 0xFF	; 255
 a72:	9f e3       	ldi	r25, 0x3F	; 63
 a74:	99 83       	std	Y+1, r25	; 0x01
 a76:	0d c0       	rjmp	.+26     	; 0xa92 <vfprintf+0x14a>
 a78:	83 36       	cpi	r24, 0x63	; 99
 a7a:	31 f0       	breq	.+12     	; 0xa88 <vfprintf+0x140>
 a7c:	83 37       	cpi	r24, 0x73	; 115
 a7e:	71 f0       	breq	.+28     	; 0xa9c <vfprintf+0x154>
 a80:	83 35       	cpi	r24, 0x53	; 83
 a82:	09 f0       	breq	.+2      	; 0xa86 <vfprintf+0x13e>
 a84:	55 c0       	rjmp	.+170    	; 0xb30 <vfprintf+0x1e8>
 a86:	20 c0       	rjmp	.+64     	; 0xac8 <vfprintf+0x180>
 a88:	f8 01       	movw	r30, r16
 a8a:	80 81       	ld	r24, Z
 a8c:	89 83       	std	Y+1, r24	; 0x01
 a8e:	0e 5f       	subi	r16, 0xFE	; 254
 a90:	1f 4f       	sbci	r17, 0xFF	; 255
 a92:	88 24       	eor	r8, r8
 a94:	83 94       	inc	r8
 a96:	91 2c       	mov	r9, r1
 a98:	53 01       	movw	r10, r6
 a9a:	12 c0       	rjmp	.+36     	; 0xac0 <vfprintf+0x178>
 a9c:	28 01       	movw	r4, r16
 a9e:	f2 e0       	ldi	r31, 0x02	; 2
 aa0:	4f 0e       	add	r4, r31
 aa2:	51 1c       	adc	r5, r1
 aa4:	f8 01       	movw	r30, r16
 aa6:	a0 80       	ld	r10, Z
 aa8:	b1 80       	ldd	r11, Z+1	; 0x01
 aaa:	36 fe       	sbrs	r3, 6
 aac:	03 c0       	rjmp	.+6      	; 0xab4 <vfprintf+0x16c>
 aae:	69 2d       	mov	r22, r9
 ab0:	70 e0       	ldi	r23, 0x00	; 0
 ab2:	02 c0       	rjmp	.+4      	; 0xab8 <vfprintf+0x170>
 ab4:	6f ef       	ldi	r22, 0xFF	; 255
 ab6:	7f ef       	ldi	r23, 0xFF	; 255
 ab8:	c5 01       	movw	r24, r10
 aba:	4e d1       	rcall	.+668    	; 0xd58 <strnlen>
 abc:	4c 01       	movw	r8, r24
 abe:	82 01       	movw	r16, r4
 ac0:	f3 2d       	mov	r31, r3
 ac2:	ff 77       	andi	r31, 0x7F	; 127
 ac4:	3f 2e       	mov	r3, r31
 ac6:	15 c0       	rjmp	.+42     	; 0xaf2 <vfprintf+0x1aa>
 ac8:	28 01       	movw	r4, r16
 aca:	22 e0       	ldi	r18, 0x02	; 2
 acc:	42 0e       	add	r4, r18
 ace:	51 1c       	adc	r5, r1
 ad0:	f8 01       	movw	r30, r16
 ad2:	a0 80       	ld	r10, Z
 ad4:	b1 80       	ldd	r11, Z+1	; 0x01
 ad6:	36 fe       	sbrs	r3, 6
 ad8:	03 c0       	rjmp	.+6      	; 0xae0 <vfprintf+0x198>
 ada:	69 2d       	mov	r22, r9
 adc:	70 e0       	ldi	r23, 0x00	; 0
 ade:	02 c0       	rjmp	.+4      	; 0xae4 <vfprintf+0x19c>
 ae0:	6f ef       	ldi	r22, 0xFF	; 255
 ae2:	7f ef       	ldi	r23, 0xFF	; 255
 ae4:	c5 01       	movw	r24, r10
 ae6:	2d d1       	rcall	.+602    	; 0xd42 <strnlen_P>
 ae8:	4c 01       	movw	r8, r24
 aea:	f3 2d       	mov	r31, r3
 aec:	f0 68       	ori	r31, 0x80	; 128
 aee:	3f 2e       	mov	r3, r31
 af0:	82 01       	movw	r16, r4
 af2:	33 fc       	sbrc	r3, 3
 af4:	19 c0       	rjmp	.+50     	; 0xb28 <vfprintf+0x1e0>
 af6:	82 2d       	mov	r24, r2
 af8:	90 e0       	ldi	r25, 0x00	; 0
 afa:	88 16       	cp	r8, r24
 afc:	99 06       	cpc	r9, r25
 afe:	a0 f4       	brcc	.+40     	; 0xb28 <vfprintf+0x1e0>
 b00:	b6 01       	movw	r22, r12
 b02:	80 e2       	ldi	r24, 0x20	; 32
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	33 d1       	rcall	.+614    	; 0xd6e <fputc>
 b08:	2a 94       	dec	r2
 b0a:	f5 cf       	rjmp	.-22     	; 0xaf6 <vfprintf+0x1ae>
 b0c:	f5 01       	movw	r30, r10
 b0e:	37 fc       	sbrc	r3, 7
 b10:	85 91       	lpm	r24, Z+
 b12:	37 fe       	sbrs	r3, 7
 b14:	81 91       	ld	r24, Z+
 b16:	5f 01       	movw	r10, r30
 b18:	b6 01       	movw	r22, r12
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	28 d1       	rcall	.+592    	; 0xd6e <fputc>
 b1e:	21 10       	cpse	r2, r1
 b20:	2a 94       	dec	r2
 b22:	21 e0       	ldi	r18, 0x01	; 1
 b24:	82 1a       	sub	r8, r18
 b26:	91 08       	sbc	r9, r1
 b28:	81 14       	cp	r8, r1
 b2a:	91 04       	cpc	r9, r1
 b2c:	79 f7       	brne	.-34     	; 0xb0c <vfprintf+0x1c4>
 b2e:	e1 c0       	rjmp	.+450    	; 0xcf2 <vfprintf+0x3aa>
 b30:	84 36       	cpi	r24, 0x64	; 100
 b32:	11 f0       	breq	.+4      	; 0xb38 <vfprintf+0x1f0>
 b34:	89 36       	cpi	r24, 0x69	; 105
 b36:	39 f5       	brne	.+78     	; 0xb86 <vfprintf+0x23e>
 b38:	f8 01       	movw	r30, r16
 b3a:	37 fe       	sbrs	r3, 7
 b3c:	07 c0       	rjmp	.+14     	; 0xb4c <vfprintf+0x204>
 b3e:	60 81       	ld	r22, Z
 b40:	71 81       	ldd	r23, Z+1	; 0x01
 b42:	82 81       	ldd	r24, Z+2	; 0x02
 b44:	93 81       	ldd	r25, Z+3	; 0x03
 b46:	0c 5f       	subi	r16, 0xFC	; 252
 b48:	1f 4f       	sbci	r17, 0xFF	; 255
 b4a:	08 c0       	rjmp	.+16     	; 0xb5c <vfprintf+0x214>
 b4c:	60 81       	ld	r22, Z
 b4e:	71 81       	ldd	r23, Z+1	; 0x01
 b50:	07 2e       	mov	r0, r23
 b52:	00 0c       	add	r0, r0
 b54:	88 0b       	sbc	r24, r24
 b56:	99 0b       	sbc	r25, r25
 b58:	0e 5f       	subi	r16, 0xFE	; 254
 b5a:	1f 4f       	sbci	r17, 0xFF	; 255
 b5c:	f3 2d       	mov	r31, r3
 b5e:	ff 76       	andi	r31, 0x6F	; 111
 b60:	3f 2e       	mov	r3, r31
 b62:	97 ff       	sbrs	r25, 7
 b64:	09 c0       	rjmp	.+18     	; 0xb78 <vfprintf+0x230>
 b66:	90 95       	com	r25
 b68:	80 95       	com	r24
 b6a:	70 95       	com	r23
 b6c:	61 95       	neg	r22
 b6e:	7f 4f       	sbci	r23, 0xFF	; 255
 b70:	8f 4f       	sbci	r24, 0xFF	; 255
 b72:	9f 4f       	sbci	r25, 0xFF	; 255
 b74:	f0 68       	ori	r31, 0x80	; 128
 b76:	3f 2e       	mov	r3, r31
 b78:	2a e0       	ldi	r18, 0x0A	; 10
 b7a:	30 e0       	ldi	r19, 0x00	; 0
 b7c:	a3 01       	movw	r20, r6
 b7e:	33 d1       	rcall	.+614    	; 0xde6 <__ultoa_invert>
 b80:	88 2e       	mov	r8, r24
 b82:	86 18       	sub	r8, r6
 b84:	44 c0       	rjmp	.+136    	; 0xc0e <vfprintf+0x2c6>
 b86:	85 37       	cpi	r24, 0x75	; 117
 b88:	31 f4       	brne	.+12     	; 0xb96 <vfprintf+0x24e>
 b8a:	23 2d       	mov	r18, r3
 b8c:	2f 7e       	andi	r18, 0xEF	; 239
 b8e:	b2 2e       	mov	r11, r18
 b90:	2a e0       	ldi	r18, 0x0A	; 10
 b92:	30 e0       	ldi	r19, 0x00	; 0
 b94:	25 c0       	rjmp	.+74     	; 0xbe0 <vfprintf+0x298>
 b96:	93 2d       	mov	r25, r3
 b98:	99 7f       	andi	r25, 0xF9	; 249
 b9a:	b9 2e       	mov	r11, r25
 b9c:	8f 36       	cpi	r24, 0x6F	; 111
 b9e:	c1 f0       	breq	.+48     	; 0xbd0 <vfprintf+0x288>
 ba0:	18 f4       	brcc	.+6      	; 0xba8 <vfprintf+0x260>
 ba2:	88 35       	cpi	r24, 0x58	; 88
 ba4:	79 f0       	breq	.+30     	; 0xbc4 <vfprintf+0x27c>
 ba6:	ae c0       	rjmp	.+348    	; 0xd04 <vfprintf+0x3bc>
 ba8:	80 37       	cpi	r24, 0x70	; 112
 baa:	19 f0       	breq	.+6      	; 0xbb2 <vfprintf+0x26a>
 bac:	88 37       	cpi	r24, 0x78	; 120
 bae:	21 f0       	breq	.+8      	; 0xbb8 <vfprintf+0x270>
 bb0:	a9 c0       	rjmp	.+338    	; 0xd04 <vfprintf+0x3bc>
 bb2:	e9 2f       	mov	r30, r25
 bb4:	e0 61       	ori	r30, 0x10	; 16
 bb6:	be 2e       	mov	r11, r30
 bb8:	b4 fe       	sbrs	r11, 4
 bba:	0d c0       	rjmp	.+26     	; 0xbd6 <vfprintf+0x28e>
 bbc:	fb 2d       	mov	r31, r11
 bbe:	f4 60       	ori	r31, 0x04	; 4
 bc0:	bf 2e       	mov	r11, r31
 bc2:	09 c0       	rjmp	.+18     	; 0xbd6 <vfprintf+0x28e>
 bc4:	34 fe       	sbrs	r3, 4
 bc6:	0a c0       	rjmp	.+20     	; 0xbdc <vfprintf+0x294>
 bc8:	29 2f       	mov	r18, r25
 bca:	26 60       	ori	r18, 0x06	; 6
 bcc:	b2 2e       	mov	r11, r18
 bce:	06 c0       	rjmp	.+12     	; 0xbdc <vfprintf+0x294>
 bd0:	28 e0       	ldi	r18, 0x08	; 8
 bd2:	30 e0       	ldi	r19, 0x00	; 0
 bd4:	05 c0       	rjmp	.+10     	; 0xbe0 <vfprintf+0x298>
 bd6:	20 e1       	ldi	r18, 0x10	; 16
 bd8:	30 e0       	ldi	r19, 0x00	; 0
 bda:	02 c0       	rjmp	.+4      	; 0xbe0 <vfprintf+0x298>
 bdc:	20 e1       	ldi	r18, 0x10	; 16
 bde:	32 e0       	ldi	r19, 0x02	; 2
 be0:	f8 01       	movw	r30, r16
 be2:	b7 fe       	sbrs	r11, 7
 be4:	07 c0       	rjmp	.+14     	; 0xbf4 <vfprintf+0x2ac>
 be6:	60 81       	ld	r22, Z
 be8:	71 81       	ldd	r23, Z+1	; 0x01
 bea:	82 81       	ldd	r24, Z+2	; 0x02
 bec:	93 81       	ldd	r25, Z+3	; 0x03
 bee:	0c 5f       	subi	r16, 0xFC	; 252
 bf0:	1f 4f       	sbci	r17, 0xFF	; 255
 bf2:	06 c0       	rjmp	.+12     	; 0xc00 <vfprintf+0x2b8>
 bf4:	60 81       	ld	r22, Z
 bf6:	71 81       	ldd	r23, Z+1	; 0x01
 bf8:	80 e0       	ldi	r24, 0x00	; 0
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	0e 5f       	subi	r16, 0xFE	; 254
 bfe:	1f 4f       	sbci	r17, 0xFF	; 255
 c00:	a3 01       	movw	r20, r6
 c02:	f1 d0       	rcall	.+482    	; 0xde6 <__ultoa_invert>
 c04:	88 2e       	mov	r8, r24
 c06:	86 18       	sub	r8, r6
 c08:	fb 2d       	mov	r31, r11
 c0a:	ff 77       	andi	r31, 0x7F	; 127
 c0c:	3f 2e       	mov	r3, r31
 c0e:	36 fe       	sbrs	r3, 6
 c10:	0d c0       	rjmp	.+26     	; 0xc2c <vfprintf+0x2e4>
 c12:	23 2d       	mov	r18, r3
 c14:	2e 7f       	andi	r18, 0xFE	; 254
 c16:	a2 2e       	mov	r10, r18
 c18:	89 14       	cp	r8, r9
 c1a:	58 f4       	brcc	.+22     	; 0xc32 <vfprintf+0x2ea>
 c1c:	34 fe       	sbrs	r3, 4
 c1e:	0b c0       	rjmp	.+22     	; 0xc36 <vfprintf+0x2ee>
 c20:	32 fc       	sbrc	r3, 2
 c22:	09 c0       	rjmp	.+18     	; 0xc36 <vfprintf+0x2ee>
 c24:	83 2d       	mov	r24, r3
 c26:	8e 7e       	andi	r24, 0xEE	; 238
 c28:	a8 2e       	mov	r10, r24
 c2a:	05 c0       	rjmp	.+10     	; 0xc36 <vfprintf+0x2ee>
 c2c:	b8 2c       	mov	r11, r8
 c2e:	a3 2c       	mov	r10, r3
 c30:	03 c0       	rjmp	.+6      	; 0xc38 <vfprintf+0x2f0>
 c32:	b8 2c       	mov	r11, r8
 c34:	01 c0       	rjmp	.+2      	; 0xc38 <vfprintf+0x2f0>
 c36:	b9 2c       	mov	r11, r9
 c38:	a4 fe       	sbrs	r10, 4
 c3a:	0f c0       	rjmp	.+30     	; 0xc5a <vfprintf+0x312>
 c3c:	fe 01       	movw	r30, r28
 c3e:	e8 0d       	add	r30, r8
 c40:	f1 1d       	adc	r31, r1
 c42:	80 81       	ld	r24, Z
 c44:	80 33       	cpi	r24, 0x30	; 48
 c46:	21 f4       	brne	.+8      	; 0xc50 <vfprintf+0x308>
 c48:	9a 2d       	mov	r25, r10
 c4a:	99 7e       	andi	r25, 0xE9	; 233
 c4c:	a9 2e       	mov	r10, r25
 c4e:	09 c0       	rjmp	.+18     	; 0xc62 <vfprintf+0x31a>
 c50:	a2 fe       	sbrs	r10, 2
 c52:	06 c0       	rjmp	.+12     	; 0xc60 <vfprintf+0x318>
 c54:	b3 94       	inc	r11
 c56:	b3 94       	inc	r11
 c58:	04 c0       	rjmp	.+8      	; 0xc62 <vfprintf+0x31a>
 c5a:	8a 2d       	mov	r24, r10
 c5c:	86 78       	andi	r24, 0x86	; 134
 c5e:	09 f0       	breq	.+2      	; 0xc62 <vfprintf+0x31a>
 c60:	b3 94       	inc	r11
 c62:	a3 fc       	sbrc	r10, 3
 c64:	10 c0       	rjmp	.+32     	; 0xc86 <vfprintf+0x33e>
 c66:	a0 fe       	sbrs	r10, 0
 c68:	06 c0       	rjmp	.+12     	; 0xc76 <vfprintf+0x32e>
 c6a:	b2 14       	cp	r11, r2
 c6c:	80 f4       	brcc	.+32     	; 0xc8e <vfprintf+0x346>
 c6e:	28 0c       	add	r2, r8
 c70:	92 2c       	mov	r9, r2
 c72:	9b 18       	sub	r9, r11
 c74:	0d c0       	rjmp	.+26     	; 0xc90 <vfprintf+0x348>
 c76:	b2 14       	cp	r11, r2
 c78:	58 f4       	brcc	.+22     	; 0xc90 <vfprintf+0x348>
 c7a:	b6 01       	movw	r22, r12
 c7c:	80 e2       	ldi	r24, 0x20	; 32
 c7e:	90 e0       	ldi	r25, 0x00	; 0
 c80:	76 d0       	rcall	.+236    	; 0xd6e <fputc>
 c82:	b3 94       	inc	r11
 c84:	f8 cf       	rjmp	.-16     	; 0xc76 <vfprintf+0x32e>
 c86:	b2 14       	cp	r11, r2
 c88:	18 f4       	brcc	.+6      	; 0xc90 <vfprintf+0x348>
 c8a:	2b 18       	sub	r2, r11
 c8c:	02 c0       	rjmp	.+4      	; 0xc92 <vfprintf+0x34a>
 c8e:	98 2c       	mov	r9, r8
 c90:	21 2c       	mov	r2, r1
 c92:	a4 fe       	sbrs	r10, 4
 c94:	0f c0       	rjmp	.+30     	; 0xcb4 <vfprintf+0x36c>
 c96:	b6 01       	movw	r22, r12
 c98:	80 e3       	ldi	r24, 0x30	; 48
 c9a:	90 e0       	ldi	r25, 0x00	; 0
 c9c:	68 d0       	rcall	.+208    	; 0xd6e <fputc>
 c9e:	a2 fe       	sbrs	r10, 2
 ca0:	16 c0       	rjmp	.+44     	; 0xcce <vfprintf+0x386>
 ca2:	a1 fc       	sbrc	r10, 1
 ca4:	03 c0       	rjmp	.+6      	; 0xcac <vfprintf+0x364>
 ca6:	88 e7       	ldi	r24, 0x78	; 120
 ca8:	90 e0       	ldi	r25, 0x00	; 0
 caa:	02 c0       	rjmp	.+4      	; 0xcb0 <vfprintf+0x368>
 cac:	88 e5       	ldi	r24, 0x58	; 88
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	b6 01       	movw	r22, r12
 cb2:	0c c0       	rjmp	.+24     	; 0xccc <vfprintf+0x384>
 cb4:	8a 2d       	mov	r24, r10
 cb6:	86 78       	andi	r24, 0x86	; 134
 cb8:	51 f0       	breq	.+20     	; 0xcce <vfprintf+0x386>
 cba:	a1 fe       	sbrs	r10, 1
 cbc:	02 c0       	rjmp	.+4      	; 0xcc2 <vfprintf+0x37a>
 cbe:	8b e2       	ldi	r24, 0x2B	; 43
 cc0:	01 c0       	rjmp	.+2      	; 0xcc4 <vfprintf+0x37c>
 cc2:	80 e2       	ldi	r24, 0x20	; 32
 cc4:	a7 fc       	sbrc	r10, 7
 cc6:	8d e2       	ldi	r24, 0x2D	; 45
 cc8:	b6 01       	movw	r22, r12
 cca:	90 e0       	ldi	r25, 0x00	; 0
 ccc:	50 d0       	rcall	.+160    	; 0xd6e <fputc>
 cce:	89 14       	cp	r8, r9
 cd0:	30 f4       	brcc	.+12     	; 0xcde <vfprintf+0x396>
 cd2:	b6 01       	movw	r22, r12
 cd4:	80 e3       	ldi	r24, 0x30	; 48
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	4a d0       	rcall	.+148    	; 0xd6e <fputc>
 cda:	9a 94       	dec	r9
 cdc:	f8 cf       	rjmp	.-16     	; 0xcce <vfprintf+0x386>
 cde:	8a 94       	dec	r8
 ce0:	f3 01       	movw	r30, r6
 ce2:	e8 0d       	add	r30, r8
 ce4:	f1 1d       	adc	r31, r1
 ce6:	80 81       	ld	r24, Z
 ce8:	b6 01       	movw	r22, r12
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	40 d0       	rcall	.+128    	; 0xd6e <fputc>
 cee:	81 10       	cpse	r8, r1
 cf0:	f6 cf       	rjmp	.-20     	; 0xcde <vfprintf+0x396>
 cf2:	22 20       	and	r2, r2
 cf4:	09 f4       	brne	.+2      	; 0xcf8 <vfprintf+0x3b0>
 cf6:	4e ce       	rjmp	.-868    	; 0x994 <vfprintf+0x4c>
 cf8:	b6 01       	movw	r22, r12
 cfa:	80 e2       	ldi	r24, 0x20	; 32
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	37 d0       	rcall	.+110    	; 0xd6e <fputc>
 d00:	2a 94       	dec	r2
 d02:	f7 cf       	rjmp	.-18     	; 0xcf2 <vfprintf+0x3aa>
 d04:	f6 01       	movw	r30, r12
 d06:	86 81       	ldd	r24, Z+6	; 0x06
 d08:	97 81       	ldd	r25, Z+7	; 0x07
 d0a:	02 c0       	rjmp	.+4      	; 0xd10 <vfprintf+0x3c8>
 d0c:	8f ef       	ldi	r24, 0xFF	; 255
 d0e:	9f ef       	ldi	r25, 0xFF	; 255
 d10:	2b 96       	adiw	r28, 0x0b	; 11
 d12:	0f b6       	in	r0, 0x3f	; 63
 d14:	f8 94       	cli
 d16:	de bf       	out	0x3e, r29	; 62
 d18:	0f be       	out	0x3f, r0	; 63
 d1a:	cd bf       	out	0x3d, r28	; 61
 d1c:	df 91       	pop	r29
 d1e:	cf 91       	pop	r28
 d20:	1f 91       	pop	r17
 d22:	0f 91       	pop	r16
 d24:	ff 90       	pop	r15
 d26:	ef 90       	pop	r14
 d28:	df 90       	pop	r13
 d2a:	cf 90       	pop	r12
 d2c:	bf 90       	pop	r11
 d2e:	af 90       	pop	r10
 d30:	9f 90       	pop	r9
 d32:	8f 90       	pop	r8
 d34:	7f 90       	pop	r7
 d36:	6f 90       	pop	r6
 d38:	5f 90       	pop	r5
 d3a:	4f 90       	pop	r4
 d3c:	3f 90       	pop	r3
 d3e:	2f 90       	pop	r2
 d40:	08 95       	ret

00000d42 <strnlen_P>:
 d42:	fc 01       	movw	r30, r24
 d44:	05 90       	lpm	r0, Z+
 d46:	61 50       	subi	r22, 0x01	; 1
 d48:	70 40       	sbci	r23, 0x00	; 0
 d4a:	01 10       	cpse	r0, r1
 d4c:	d8 f7       	brcc	.-10     	; 0xd44 <strnlen_P+0x2>
 d4e:	80 95       	com	r24
 d50:	90 95       	com	r25
 d52:	8e 0f       	add	r24, r30
 d54:	9f 1f       	adc	r25, r31
 d56:	08 95       	ret

00000d58 <strnlen>:
 d58:	fc 01       	movw	r30, r24
 d5a:	61 50       	subi	r22, 0x01	; 1
 d5c:	70 40       	sbci	r23, 0x00	; 0
 d5e:	01 90       	ld	r0, Z+
 d60:	01 10       	cpse	r0, r1
 d62:	d8 f7       	brcc	.-10     	; 0xd5a <strnlen+0x2>
 d64:	80 95       	com	r24
 d66:	90 95       	com	r25
 d68:	8e 0f       	add	r24, r30
 d6a:	9f 1f       	adc	r25, r31
 d6c:	08 95       	ret

00000d6e <fputc>:
 d6e:	0f 93       	push	r16
 d70:	1f 93       	push	r17
 d72:	cf 93       	push	r28
 d74:	df 93       	push	r29
 d76:	fb 01       	movw	r30, r22
 d78:	23 81       	ldd	r18, Z+3	; 0x03
 d7a:	21 fd       	sbrc	r18, 1
 d7c:	03 c0       	rjmp	.+6      	; 0xd84 <fputc+0x16>
 d7e:	8f ef       	ldi	r24, 0xFF	; 255
 d80:	9f ef       	ldi	r25, 0xFF	; 255
 d82:	2c c0       	rjmp	.+88     	; 0xddc <fputc+0x6e>
 d84:	22 ff       	sbrs	r18, 2
 d86:	16 c0       	rjmp	.+44     	; 0xdb4 <fputc+0x46>
 d88:	46 81       	ldd	r20, Z+6	; 0x06
 d8a:	57 81       	ldd	r21, Z+7	; 0x07
 d8c:	24 81       	ldd	r18, Z+4	; 0x04
 d8e:	35 81       	ldd	r19, Z+5	; 0x05
 d90:	42 17       	cp	r20, r18
 d92:	53 07       	cpc	r21, r19
 d94:	44 f4       	brge	.+16     	; 0xda6 <fputc+0x38>
 d96:	a0 81       	ld	r26, Z
 d98:	b1 81       	ldd	r27, Z+1	; 0x01
 d9a:	9d 01       	movw	r18, r26
 d9c:	2f 5f       	subi	r18, 0xFF	; 255
 d9e:	3f 4f       	sbci	r19, 0xFF	; 255
 da0:	31 83       	std	Z+1, r19	; 0x01
 da2:	20 83       	st	Z, r18
 da4:	8c 93       	st	X, r24
 da6:	26 81       	ldd	r18, Z+6	; 0x06
 da8:	37 81       	ldd	r19, Z+7	; 0x07
 daa:	2f 5f       	subi	r18, 0xFF	; 255
 dac:	3f 4f       	sbci	r19, 0xFF	; 255
 dae:	37 83       	std	Z+7, r19	; 0x07
 db0:	26 83       	std	Z+6, r18	; 0x06
 db2:	14 c0       	rjmp	.+40     	; 0xddc <fputc+0x6e>
 db4:	8b 01       	movw	r16, r22
 db6:	ec 01       	movw	r28, r24
 db8:	fb 01       	movw	r30, r22
 dba:	00 84       	ldd	r0, Z+8	; 0x08
 dbc:	f1 85       	ldd	r31, Z+9	; 0x09
 dbe:	e0 2d       	mov	r30, r0
 dc0:	19 95       	eicall
 dc2:	89 2b       	or	r24, r25
 dc4:	e1 f6       	brne	.-72     	; 0xd7e <fputc+0x10>
 dc6:	d8 01       	movw	r26, r16
 dc8:	16 96       	adiw	r26, 0x06	; 6
 dca:	8d 91       	ld	r24, X+
 dcc:	9c 91       	ld	r25, X
 dce:	17 97       	sbiw	r26, 0x07	; 7
 dd0:	01 96       	adiw	r24, 0x01	; 1
 dd2:	17 96       	adiw	r26, 0x07	; 7
 dd4:	9c 93       	st	X, r25
 dd6:	8e 93       	st	-X, r24
 dd8:	16 97       	sbiw	r26, 0x06	; 6
 dda:	ce 01       	movw	r24, r28
 ddc:	df 91       	pop	r29
 dde:	cf 91       	pop	r28
 de0:	1f 91       	pop	r17
 de2:	0f 91       	pop	r16
 de4:	08 95       	ret

00000de6 <__ultoa_invert>:
 de6:	fa 01       	movw	r30, r20
 de8:	aa 27       	eor	r26, r26
 dea:	28 30       	cpi	r18, 0x08	; 8
 dec:	51 f1       	breq	.+84     	; 0xe42 <__ultoa_invert+0x5c>
 dee:	20 31       	cpi	r18, 0x10	; 16
 df0:	81 f1       	breq	.+96     	; 0xe52 <__ultoa_invert+0x6c>
 df2:	e8 94       	clt
 df4:	6f 93       	push	r22
 df6:	6e 7f       	andi	r22, 0xFE	; 254
 df8:	6e 5f       	subi	r22, 0xFE	; 254
 dfa:	7f 4f       	sbci	r23, 0xFF	; 255
 dfc:	8f 4f       	sbci	r24, 0xFF	; 255
 dfe:	9f 4f       	sbci	r25, 0xFF	; 255
 e00:	af 4f       	sbci	r26, 0xFF	; 255
 e02:	b1 e0       	ldi	r27, 0x01	; 1
 e04:	3e d0       	rcall	.+124    	; 0xe82 <__ultoa_invert+0x9c>
 e06:	b4 e0       	ldi	r27, 0x04	; 4
 e08:	3c d0       	rcall	.+120    	; 0xe82 <__ultoa_invert+0x9c>
 e0a:	67 0f       	add	r22, r23
 e0c:	78 1f       	adc	r23, r24
 e0e:	89 1f       	adc	r24, r25
 e10:	9a 1f       	adc	r25, r26
 e12:	a1 1d       	adc	r26, r1
 e14:	68 0f       	add	r22, r24
 e16:	79 1f       	adc	r23, r25
 e18:	8a 1f       	adc	r24, r26
 e1a:	91 1d       	adc	r25, r1
 e1c:	a1 1d       	adc	r26, r1
 e1e:	6a 0f       	add	r22, r26
 e20:	71 1d       	adc	r23, r1
 e22:	81 1d       	adc	r24, r1
 e24:	91 1d       	adc	r25, r1
 e26:	a1 1d       	adc	r26, r1
 e28:	20 d0       	rcall	.+64     	; 0xe6a <__ultoa_invert+0x84>
 e2a:	09 f4       	brne	.+2      	; 0xe2e <__ultoa_invert+0x48>
 e2c:	68 94       	set
 e2e:	3f 91       	pop	r19
 e30:	2a e0       	ldi	r18, 0x0A	; 10
 e32:	26 9f       	mul	r18, r22
 e34:	11 24       	eor	r1, r1
 e36:	30 19       	sub	r19, r0
 e38:	30 5d       	subi	r19, 0xD0	; 208
 e3a:	31 93       	st	Z+, r19
 e3c:	de f6       	brtc	.-74     	; 0xdf4 <__ultoa_invert+0xe>
 e3e:	cf 01       	movw	r24, r30
 e40:	08 95       	ret
 e42:	46 2f       	mov	r20, r22
 e44:	47 70       	andi	r20, 0x07	; 7
 e46:	40 5d       	subi	r20, 0xD0	; 208
 e48:	41 93       	st	Z+, r20
 e4a:	b3 e0       	ldi	r27, 0x03	; 3
 e4c:	0f d0       	rcall	.+30     	; 0xe6c <__ultoa_invert+0x86>
 e4e:	c9 f7       	brne	.-14     	; 0xe42 <__ultoa_invert+0x5c>
 e50:	f6 cf       	rjmp	.-20     	; 0xe3e <__ultoa_invert+0x58>
 e52:	46 2f       	mov	r20, r22
 e54:	4f 70       	andi	r20, 0x0F	; 15
 e56:	40 5d       	subi	r20, 0xD0	; 208
 e58:	4a 33       	cpi	r20, 0x3A	; 58
 e5a:	18 f0       	brcs	.+6      	; 0xe62 <__ultoa_invert+0x7c>
 e5c:	49 5d       	subi	r20, 0xD9	; 217
 e5e:	31 fd       	sbrc	r19, 1
 e60:	40 52       	subi	r20, 0x20	; 32
 e62:	41 93       	st	Z+, r20
 e64:	02 d0       	rcall	.+4      	; 0xe6a <__ultoa_invert+0x84>
 e66:	a9 f7       	brne	.-22     	; 0xe52 <__ultoa_invert+0x6c>
 e68:	ea cf       	rjmp	.-44     	; 0xe3e <__ultoa_invert+0x58>
 e6a:	b4 e0       	ldi	r27, 0x04	; 4
 e6c:	a6 95       	lsr	r26
 e6e:	97 95       	ror	r25
 e70:	87 95       	ror	r24
 e72:	77 95       	ror	r23
 e74:	67 95       	ror	r22
 e76:	ba 95       	dec	r27
 e78:	c9 f7       	brne	.-14     	; 0xe6c <__ultoa_invert+0x86>
 e7a:	00 97       	sbiw	r24, 0x00	; 0
 e7c:	61 05       	cpc	r22, r1
 e7e:	71 05       	cpc	r23, r1
 e80:	08 95       	ret
 e82:	9b 01       	movw	r18, r22
 e84:	ac 01       	movw	r20, r24
 e86:	0a 2e       	mov	r0, r26
 e88:	06 94       	lsr	r0
 e8a:	57 95       	ror	r21
 e8c:	47 95       	ror	r20
 e8e:	37 95       	ror	r19
 e90:	27 95       	ror	r18
 e92:	ba 95       	dec	r27
 e94:	c9 f7       	brne	.-14     	; 0xe88 <__ultoa_invert+0xa2>
 e96:	62 0f       	add	r22, r18
 e98:	73 1f       	adc	r23, r19
 e9a:	84 1f       	adc	r24, r20
 e9c:	95 1f       	adc	r25, r21
 e9e:	a0 1d       	adc	r26, r0
 ea0:	08 95       	ret

00000ea2 <_exit>:
 ea2:	f8 94       	cli

00000ea4 <__stop_program>:
 ea4:	ff cf       	rjmp	.-2      	; 0xea4 <__stop_program>
