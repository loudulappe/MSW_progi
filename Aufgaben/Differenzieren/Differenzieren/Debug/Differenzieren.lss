
Differenzieren.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000ee6  00000f7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ee6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000fee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000104c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  0000108c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002604  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fd2  00000000  00000000  00003880  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015eb  00000000  00000000  00004852  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000698  00000000  00000000  00005e40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ce1  00000000  00000000  000064d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c91  00000000  00000000  000071b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  00008e4a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	e3 c3       	rjmp	.+1990   	; 0x824 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 ee       	ldi	r30, 0xE6	; 230
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	e0 c6       	rjmp	.+3520   	; 0xee2 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:

#define SYSTEMTAKT      10
#pragma GCC OPTIMIZE 0

int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	c8 5c       	subi	r28, 0xC8	; 200
 12e:	d1 09       	sbc	r29, r1
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	f8 94       	cli
 134:	de bf       	out	0x3e, r29	; 62
 136:	0f be       	out	0x3f, r0	; 63
 138:	cd bf       	out	0x3d, r28	; 61
    initBoard(0);
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	0d d2       	rcall	.+1050   	; 0x558 <initBoard>
    uint16_t timesave [100]={0};
 13e:	fe 01       	movw	r30, r28
 140:	31 96       	adiw	r30, 0x01	; 1
 142:	88 ec       	ldi	r24, 0xC8	; 200
 144:	df 01       	movw	r26, r30
 146:	1d 92       	st	X+, r1
 148:	8a 95       	dec	r24
 14a:	e9 f7       	brne	.-6      	; 0x146 <main+0x22>
    uint16_t input=0;
    uint16_t inputalt=0;
    uint16_t counter=0;
 14c:	e1 2c       	mov	r14, r1
 14e:	f1 2c       	mov	r15, r1

int main(void)
{
    initBoard(0);
    uint16_t timesave [100]={0};
    uint16_t input=0;
 150:	c1 2c       	mov	r12, r1
 152:	d1 2c       	mov	r13, r1
    uint32_t roundtime=0;
    uint32_t acttime=0;
    while (1) 
    {
        inputalt=input;
        input=adcRead(1);
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	85 d0       	rcall	.+266    	; 0x262 <adcRead>
 158:	8c 01       	movw	r16, r24
        if ((inputalt<500)&&(input>500))
 15a:	b4 ef       	ldi	r27, 0xF4	; 244
 15c:	cb 16       	cp	r12, r27
 15e:	b1 e0       	ldi	r27, 0x01	; 1
 160:	db 06       	cpc	r13, r27
 162:	b8 f5       	brcc	.+110    	; 0x1d2 <main+0xae>
 164:	85 3f       	cpi	r24, 0xF5	; 245
 166:	91 40       	sbci	r25, 0x01	; 1
 168:	90 f4       	brcc	.+36     	; 0x18e <main+0x6a>
 16a:	33 c0       	rjmp	.+102    	; 0x1d2 <main+0xae>
        {
            for (uint8_t i=0; i=i+1; i<100)
            {
                total=total+timesave[i];
 16c:	e8 2f       	mov	r30, r24
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	ee 0f       	add	r30, r30
 172:	ff 1f       	adc	r31, r31
 174:	a1 e0       	ldi	r26, 0x01	; 1
 176:	b0 e0       	ldi	r27, 0x00	; 0
 178:	ac 0f       	add	r26, r28
 17a:	bd 1f       	adc	r27, r29
 17c:	ea 0f       	add	r30, r26
 17e:	fb 1f       	adc	r31, r27
 180:	20 81       	ld	r18, Z
 182:	31 81       	ldd	r19, Z+1	; 0x01
 184:	42 0f       	add	r20, r18
 186:	53 1f       	adc	r21, r19
 188:	61 1d       	adc	r22, r1
 18a:	71 1d       	adc	r23, r1
 18c:	04 c0       	rjmp	.+8      	; 0x196 <main+0x72>
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	50 e0       	ldi	r21, 0x00	; 0
 194:	ba 01       	movw	r22, r20
    {
        inputalt=input;
        input=adcRead(1);
        if ((inputalt<500)&&(input>500))
        {
            for (uint8_t i=0; i=i+1; i<100)
 196:	8f 5f       	subi	r24, 0xFF	; 255
 198:	49 f7       	brne	.-46     	; 0x16c <main+0x48>
            {
                total=total+timesave[i];
            }
            output=total/counter;
 19a:	67 01       	movw	r12, r14
 19c:	e1 2c       	mov	r14, r1
 19e:	f1 2c       	mov	r15, r1
 1a0:	cb 01       	movw	r24, r22
 1a2:	ba 01       	movw	r22, r20
 1a4:	a7 01       	movw	r20, r14
 1a6:	96 01       	movw	r18, r12
            ledWriteAll(output);
 1a8:	89 d3       	rcall	.+1810   	; 0x8bc <__udivmodsi4>
 1aa:	c9 01       	movw	r24, r18
 1ac:	28 d0       	rcall	.+80     	; 0x1fe <ledWriteAll>
            total=0;
            counter=0;
            for (uint8_t i=0; i=i+1; i<100)
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	0c c0       	rjmp	.+24     	; 0x1ca <main+0xa6>
            {
                timesave[i]=0;
 1b2:	e8 2f       	mov	r30, r24
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	ee 0f       	add	r30, r30
 1b8:	ff 1f       	adc	r31, r31
 1ba:	21 e0       	ldi	r18, 0x01	; 1
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	2c 0f       	add	r18, r28
 1c0:	3d 1f       	adc	r19, r29
 1c2:	e2 0f       	add	r30, r18
 1c4:	f3 1f       	adc	r31, r19
 1c6:	11 82       	std	Z+1, r1	; 0x01
 1c8:	10 82       	st	Z, r1
            }
            output=total/counter;
            ledWriteAll(output);
            total=0;
            counter=0;
            for (uint8_t i=0; i=i+1; i<100)
 1ca:	8f 5f       	subi	r24, 0xFF	; 255
 1cc:	91 f7       	brne	.-28     	; 0x1b2 <main+0x8e>
                total=total+timesave[i];
            }
            output=total/counter;
            ledWriteAll(output);
            total=0;
            counter=0;
 1ce:	e1 2c       	mov	r14, r1
 1d0:	f1 2c       	mov	r15, r1
            for (uint8_t i=0; i=i+1; i<100)
            {
                timesave[i]=0;
            }            
        }
        timesave[counter]=input;
 1d2:	f7 01       	movw	r30, r14
 1d4:	ee 0f       	add	r30, r30
 1d6:	ff 1f       	adc	r31, r31
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	8c 0f       	add	r24, r28
 1de:	9d 1f       	adc	r25, r29
 1e0:	e8 0f       	add	r30, r24
 1e2:	f9 1f       	adc	r31, r25
 1e4:	11 83       	std	Z+1, r17	; 0x01
 1e6:	00 83       	st	Z, r16
        counter=counter+1;
 1e8:	9f ef       	ldi	r25, 0xFF	; 255
 1ea:	e9 1a       	sub	r14, r25
 1ec:	f9 0a       	sbc	r15, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ee:	af e3       	ldi	r26, 0x3F	; 63
 1f0:	bc e9       	ldi	r27, 0x9C	; 156
 1f2:	11 97       	sbiw	r26, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <main+0xce>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0xd4>
 1f8:	00 00       	nop
    uint32_t roundtime=0;
    uint32_t acttime=0;
    while (1) 
    {
        inputalt=input;
        input=adcRead(1);
 1fa:	68 01       	movw	r12, r16
 1fc:	ab cf       	rjmp	.-170    	; 0x154 <main+0x30>

000001fe <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1fe:	82 b9       	out	0x02, r24	; 2
 200:	95 b9       	out	0x05, r25	; 5
 202:	08 95       	ret

00000204 <buttonReadAllPL>:
 204:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 208:	08 95       	ret

0000020a <startSystemTimeMs>:
 20a:	83 e0       	ldi	r24, 0x03	; 3
 20c:	84 bd       	out	0x24, r24	; 36
 20e:	8b e0       	ldi	r24, 0x0B	; 11
 210:	85 bd       	out	0x25, r24	; 37
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 218:	89 ef       	ldi	r24, 0xF9	; 249
 21a:	87 bd       	out	0x27, r24	; 39
 21c:	08 95       	ret

0000021e <initAdc>:
 21e:	11 ba       	out	0x11, r1	; 17
 220:	10 ba       	out	0x10, r1	; 16
 222:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 226:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 22a:	80 e4       	ldi	r24, 0x40	; 64
 22c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 230:	8f e0       	ldi	r24, 0x0F	; 15
 232:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 236:	8f ef       	ldi	r24, 0xFF	; 255
 238:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 23c:	ea e7       	ldi	r30, 0x7A	; 122
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	87 ea       	ldi	r24, 0xA7	; 167
 242:	80 83       	st	Z, r24
 244:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 248:	80 81       	ld	r24, Z
 24a:	80 64       	ori	r24, 0x40	; 64
 24c:	80 83       	st	Z, r24
 24e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 252:	84 ff       	sbrs	r24, 4
 254:	fc cf       	rjmp	.-8      	; 0x24e <initAdc+0x30>
 256:	ea e7       	ldi	r30, 0x7A	; 122
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	80 81       	ld	r24, Z
 25c:	8f 7e       	andi	r24, 0xEF	; 239
 25e:	80 83       	st	Z, r24
 260:	08 95       	ret

00000262 <adcRead>:
 262:	90 e4       	ldi	r25, 0x40	; 64
 264:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 268:	88 30       	cpi	r24, 0x08	; 8
 26a:	60 f0       	brcs	.+24     	; 0x284 <adcRead+0x22>
 26c:	ec e7       	ldi	r30, 0x7C	; 124
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	90 81       	ld	r25, Z
 272:	88 50       	subi	r24, 0x08	; 8
 274:	89 2b       	or	r24, r25
 276:	80 83       	st	Z, r24
 278:	eb e7       	ldi	r30, 0x7B	; 123
 27a:	f0 e0       	ldi	r31, 0x00	; 0
 27c:	80 81       	ld	r24, Z
 27e:	88 61       	ori	r24, 0x18	; 24
 280:	80 83       	st	Z, r24
 282:	0a c0       	rjmp	.+20     	; 0x298 <adcRead+0x36>
 284:	ec e7       	ldi	r30, 0x7C	; 124
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	90 81       	ld	r25, Z
 28a:	89 2b       	or	r24, r25
 28c:	80 83       	st	Z, r24
 28e:	eb e7       	ldi	r30, 0x7B	; 123
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	80 81       	ld	r24, Z
 294:	87 7e       	andi	r24, 0xE7	; 231
 296:	80 83       	st	Z, r24
 298:	ea e7       	ldi	r30, 0x7A	; 122
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	80 64       	ori	r24, 0x40	; 64
 2a0:	80 83       	st	Z, r24
 2a2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 2a6:	84 ff       	sbrs	r24, 4
 2a8:	fc cf       	rjmp	.-8      	; 0x2a2 <adcRead+0x40>
 2aa:	8f ea       	ldi	r24, 0xAF	; 175
 2ac:	94 e0       	ldi	r25, 0x04	; 4
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <adcRead+0x4c>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <adcRead+0x52>
 2b4:	00 00       	nop
 2b6:	30 91 78 00 	lds	r19, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 2ba:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	98 2f       	mov	r25, r24
 2c2:	88 27       	eor	r24, r24
 2c4:	ea e7       	ldi	r30, 0x7A	; 122
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	20 81       	ld	r18, Z
 2ca:	2f 7e       	andi	r18, 0xEF	; 239
 2cc:	20 83       	st	Z, r18
 2ce:	83 2b       	or	r24, r19
 2d0:	08 95       	ret

000002d2 <rgbWrite>:
 2d2:	2f ef       	ldi	r18, 0xFF	; 255
 2d4:	33 e0       	ldi	r19, 0x03	; 3
 2d6:	f9 01       	movw	r30, r18
 2d8:	e8 1b       	sub	r30, r24
 2da:	f9 0b       	sbc	r31, r25
 2dc:	c9 01       	movw	r24, r18
 2de:	86 1b       	sub	r24, r22
 2e0:	97 0b       	sbc	r25, r23
 2e2:	24 1b       	sub	r18, r20
 2e4:	35 0b       	sbc	r19, r21
 2e6:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 2ea:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 2ee:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 2f2:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 2f6:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 2fa:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 2fe:	08 95       	ret

00000300 <initRgb>:
 300:	8e ef       	ldi	r24, 0xFE	; 254
 302:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 306:	8b e1       	ldi	r24, 0x1B	; 27
 308:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 30c:	83 e0       	ldi	r24, 0x03	; 3
 30e:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 312:	8f ef       	ldi	r24, 0xFF	; 255
 314:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 318:	40 e0       	ldi	r20, 0x00	; 0
 31a:	50 e0       	ldi	r21, 0x00	; 0
 31c:	60 e0       	ldi	r22, 0x00	; 0
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	d6 cf       	rjmp	.-84     	; 0x2d2 <rgbWrite>
 326:	08 95       	ret

00000328 <lcdSid>:
 328:	88 23       	and	r24, r24
 32a:	21 f0       	breq	.+8      	; 0x334 <lcdSid+0xc>
 32c:	84 b3       	in	r24, 0x14	; 20
 32e:	81 60       	ori	r24, 0x01	; 1
 330:	84 bb       	out	0x14, r24	; 20
 332:	08 95       	ret
 334:	84 b3       	in	r24, 0x14	; 20
 336:	8e 7f       	andi	r24, 0xFE	; 254
 338:	84 bb       	out	0x14, r24	; 20
 33a:	08 95       	ret

0000033c <lcdSclk>:
 33c:	88 23       	and	r24, r24
 33e:	21 f0       	breq	.+8      	; 0x348 <lcdSclk+0xc>
 340:	84 b3       	in	r24, 0x14	; 20
 342:	82 60       	ori	r24, 0x02	; 2
 344:	84 bb       	out	0x14, r24	; 20
 346:	08 95       	ret
 348:	84 b3       	in	r24, 0x14	; 20
 34a:	8d 7f       	andi	r24, 0xFD	; 253
 34c:	84 bb       	out	0x14, r24	; 20
 34e:	08 95       	ret

00000350 <lcdLight>:
 350:	81 11       	cpse	r24, r1
 352:	04 c0       	rjmp	.+8      	; 0x35c <lcdLight+0xc>
 354:	84 b5       	in	r24, 0x24	; 36
 356:	8f 7d       	andi	r24, 0xDF	; 223
 358:	84 bd       	out	0x24, r24	; 36
 35a:	08 95       	ret
 35c:	94 b5       	in	r25, 0x24	; 36
 35e:	90 62       	ori	r25, 0x20	; 32
 360:	94 bd       	out	0x24, r25	; 36
 362:	88 bd       	out	0x28, r24	; 40
 364:	08 95       	ret

00000366 <writeLcdF>:
 366:	ef 92       	push	r14
 368:	ff 92       	push	r15
 36a:	0f 93       	push	r16
 36c:	1f 93       	push	r17
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	7c 01       	movw	r14, r24
 374:	eb 01       	movw	r28, r22
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	d7 df       	rcall	.-82     	; 0x328 <lcdSid>
 37a:	00 e0       	ldi	r16, 0x00	; 0
 37c:	10 e0       	ldi	r17, 0x00	; 0
 37e:	06 c0       	rjmp	.+12     	; 0x38c <writeLcdF+0x26>
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	dc df       	rcall	.-72     	; 0x33c <lcdSclk>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	da df       	rcall	.-76     	; 0x33c <lcdSclk>
 388:	0f 5f       	subi	r16, 0xFF	; 255
 38a:	1f 4f       	sbci	r17, 0xFF	; 255
 38c:	05 30       	cpi	r16, 0x05	; 5
 38e:	11 05       	cpc	r17, r1
 390:	b8 f3       	brcs	.-18     	; 0x380 <writeLcdF+0x1a>
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	c9 df       	rcall	.-110    	; 0x328 <lcdSid>
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	d1 df       	rcall	.-94     	; 0x33c <lcdSclk>
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	cf df       	rcall	.-98     	; 0x33c <lcdSclk>
 39e:	83 e4       	ldi	r24, 0x43	; 67
 3a0:	e8 16       	cp	r14, r24
 3a2:	f1 04       	cpc	r15, r1
 3a4:	19 f4       	brne	.+6      	; 0x3ac <writeLcdF+0x46>
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	bf df       	rcall	.-130    	; 0x328 <lcdSid>
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <writeLcdF+0x4a>
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	bc df       	rcall	.-136    	; 0x328 <lcdSid>
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	c4 df       	rcall	.-120    	; 0x33c <lcdSclk>
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	c2 df       	rcall	.-124    	; 0x33c <lcdSclk>
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	b6 df       	rcall	.-148    	; 0x328 <lcdSid>
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	be df       	rcall	.-132    	; 0x33c <lcdSclk>
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	bc df       	rcall	.-136    	; 0x33c <lcdSclk>
 3c4:	00 e0       	ldi	r16, 0x00	; 0
 3c6:	10 e0       	ldi	r17, 0x00	; 0
 3c8:	11 c0       	rjmp	.+34     	; 0x3ec <writeLcdF+0x86>
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	b7 df       	rcall	.-146    	; 0x33c <lcdSclk>
 3ce:	c0 ff       	sbrs	r28, 0
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <writeLcdF+0x72>
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	a9 df       	rcall	.-174    	; 0x328 <lcdSid>
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <writeLcdF+0x76>
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	a6 df       	rcall	.-180    	; 0x328 <lcdSid>
 3dc:	d6 95       	lsr	r29
 3de:	c7 95       	ror	r28
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	ac df       	rcall	.-168    	; 0x33c <lcdSclk>
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	aa df       	rcall	.-172    	; 0x33c <lcdSclk>
 3e8:	0f 5f       	subi	r16, 0xFF	; 255
 3ea:	1f 4f       	sbci	r17, 0xFF	; 255
 3ec:	04 30       	cpi	r16, 0x04	; 4
 3ee:	11 05       	cpc	r17, r1
 3f0:	60 f3       	brcs	.-40     	; 0x3ca <writeLcdF+0x64>
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	99 df       	rcall	.-206    	; 0x328 <lcdSid>
 3f6:	00 e0       	ldi	r16, 0x00	; 0
 3f8:	10 e0       	ldi	r17, 0x00	; 0
 3fa:	06 c0       	rjmp	.+12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	9e df       	rcall	.-196    	; 0x33c <lcdSclk>
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	9c df       	rcall	.-200    	; 0x33c <lcdSclk>
 404:	0f 5f       	subi	r16, 0xFF	; 255
 406:	1f 4f       	sbci	r17, 0xFF	; 255
 408:	04 30       	cpi	r16, 0x04	; 4
 40a:	11 05       	cpc	r17, r1
 40c:	b8 f3       	brcs	.-18     	; 0x3fc <writeLcdF+0x96>
 40e:	00 e0       	ldi	r16, 0x00	; 0
 410:	10 e0       	ldi	r17, 0x00	; 0
 412:	11 c0       	rjmp	.+34     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	92 df       	rcall	.-220    	; 0x33c <lcdSclk>
 418:	c0 ff       	sbrs	r28, 0
 41a:	03 c0       	rjmp	.+6      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	84 df       	rcall	.-248    	; 0x328 <lcdSid>
 420:	02 c0       	rjmp	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	81 df       	rcall	.-254    	; 0x328 <lcdSid>
 426:	d6 95       	lsr	r29
 428:	c7 95       	ror	r28
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	87 df       	rcall	.-242    	; 0x33c <lcdSclk>
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	85 df       	rcall	.-246    	; 0x33c <lcdSclk>
 432:	0f 5f       	subi	r16, 0xFF	; 255
 434:	1f 4f       	sbci	r17, 0xFF	; 255
 436:	04 30       	cpi	r16, 0x04	; 4
 438:	11 05       	cpc	r17, r1
 43a:	60 f3       	brcs	.-40     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	74 df       	rcall	.-280    	; 0x328 <lcdSid>
 440:	c0 e0       	ldi	r28, 0x00	; 0
 442:	d0 e0       	ldi	r29, 0x00	; 0
 444:	05 c0       	rjmp	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	79 df       	rcall	.-270    	; 0x33c <lcdSclk>
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	77 df       	rcall	.-274    	; 0x33c <lcdSclk>
 44e:	21 96       	adiw	r28, 0x01	; 1
 450:	c4 30       	cpi	r28, 0x04	; 4
 452:	d1 05       	cpc	r29, r1
 454:	c0 f3       	brcs	.-16     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	67 df       	rcall	.-306    	; 0x328 <lcdSid>
 45a:	87 ec       	ldi	r24, 0xC7	; 199
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	01 97       	sbiw	r24, 0x01	; 1
 460:	f1 f7       	brne	.-4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 462:	00 c0       	rjmp	.+0      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 464:	00 00       	nop
 466:	df 91       	pop	r29
 468:	cf 91       	pop	r28
 46a:	1f 91       	pop	r17
 46c:	0f 91       	pop	r16
 46e:	ff 90       	pop	r15
 470:	ef 90       	pop	r14
 472:	08 95       	ret

00000474 <lcdWriteText>:
 474:	1f 93       	push	r17
 476:	cf 93       	push	r28
 478:	df 93       	push	r29
 47a:	cd b7       	in	r28, 0x3d	; 61
 47c:	de b7       	in	r29, 0x3e	; 62
 47e:	65 97       	sbiw	r28, 0x15	; 21
 480:	0f b6       	in	r0, 0x3f	; 63
 482:	f8 94       	cli
 484:	de bf       	out	0x3e, r29	; 62
 486:	0f be       	out	0x3f, r0	; 63
 488:	cd bf       	out	0x3d, r28	; 61
 48a:	9e 01       	movw	r18, r28
 48c:	20 5e       	subi	r18, 0xE0	; 224
 48e:	3f 4f       	sbci	r19, 0xFF	; 255
 490:	4e 8d       	ldd	r20, Y+30	; 0x1e
 492:	5f 8d       	ldd	r21, Y+31	; 0x1f
 494:	65 e1       	ldi	r22, 0x15	; 21
 496:	70 e0       	ldi	r23, 0x00	; 0
 498:	ce 01       	movw	r24, r28
 49a:	01 96       	adiw	r24, 0x01	; 1
 49c:	3d d2       	rcall	.+1146   	; 0x918 <vsnprintf>
 49e:	6d 8d       	ldd	r22, Y+29	; 0x1d
 4a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
 4a2:	90 e2       	ldi	r25, 0x20	; 32
 4a4:	89 9f       	mul	r24, r25
 4a6:	60 0d       	add	r22, r0
 4a8:	11 24       	eor	r1, r1
 4aa:	60 68       	ori	r22, 0x80	; 128
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	83 e4       	ldi	r24, 0x43	; 67
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	59 df       	rcall	.-334    	; 0x366 <writeLcdF>
 4b4:	10 e0       	ldi	r17, 0x00	; 0
 4b6:	05 c0       	rjmp	.+10     	; 0x4c2 <lcdWriteText+0x4e>
 4b8:	1f 5f       	subi	r17, 0xFF	; 255
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	84 e4       	ldi	r24, 0x44	; 68
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	52 df       	rcall	.-348    	; 0x366 <writeLcdF>
 4c2:	e1 e0       	ldi	r30, 0x01	; 1
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	ec 0f       	add	r30, r28
 4c8:	fd 1f       	adc	r31, r29
 4ca:	e1 0f       	add	r30, r17
 4cc:	f1 1d       	adc	r31, r1
 4ce:	60 81       	ld	r22, Z
 4d0:	61 11       	cpse	r22, r1
 4d2:	f2 cf       	rjmp	.-28     	; 0x4b8 <lcdWriteText+0x44>
 4d4:	65 96       	adiw	r28, 0x15	; 21
 4d6:	0f b6       	in	r0, 0x3f	; 63
 4d8:	f8 94       	cli
 4da:	de bf       	out	0x3e, r29	; 62
 4dc:	0f be       	out	0x3f, r0	; 63
 4de:	cd bf       	out	0x3d, r28	; 61
 4e0:	df 91       	pop	r29
 4e2:	cf 91       	pop	r28
 4e4:	1f 91       	pop	r17
 4e6:	08 95       	ret

000004e8 <lcdClear>:
 4e8:	61 e0       	ldi	r22, 0x01	; 1
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	83 e4       	ldi	r24, 0x43	; 67
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	3a df       	rcall	.-396    	; 0x366 <writeLcdF>
 4f2:	8f e3       	ldi	r24, 0x3F	; 63
 4f4:	9f e1       	ldi	r25, 0x1F	; 31
 4f6:	01 97       	sbiw	r24, 0x01	; 1
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <lcdClear+0xe>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <lcdClear+0x14>
 4fc:	00 00       	nop
 4fe:	80 e3       	ldi	r24, 0x30	; 48
 500:	92 e0       	ldi	r25, 0x02	; 2
 502:	9f 93       	push	r25
 504:	8f 93       	push	r24
 506:	1f 92       	push	r1
 508:	1f 92       	push	r1
 50a:	b4 df       	rcall	.-152    	; 0x474 <lcdWriteText>
 50c:	0f 90       	pop	r0
 50e:	0f 90       	pop	r0
 510:	0f 90       	pop	r0
 512:	0f 90       	pop	r0
 514:	08 95       	ret

00000516 <initLcd>:
 516:	81 e0       	ldi	r24, 0x01	; 1
 518:	11 df       	rcall	.-478    	; 0x33c <lcdSclk>
 51a:	80 e0       	ldi	r24, 0x00	; 0
 51c:	05 df       	rcall	.-502    	; 0x328 <lcdSid>
 51e:	64 e3       	ldi	r22, 0x34	; 52
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	83 e4       	ldi	r24, 0x43	; 67
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	1f df       	rcall	.-450    	; 0x366 <writeLcdF>
 528:	69 e0       	ldi	r22, 0x09	; 9
 52a:	70 e0       	ldi	r23, 0x00	; 0
 52c:	83 e4       	ldi	r24, 0x43	; 67
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	1a df       	rcall	.-460    	; 0x366 <writeLcdF>
 532:	60 e3       	ldi	r22, 0x30	; 48
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	83 e4       	ldi	r24, 0x43	; 67
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	15 df       	rcall	.-470    	; 0x366 <writeLcdF>
 53c:	6c e0       	ldi	r22, 0x0C	; 12
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	83 e4       	ldi	r24, 0x43	; 67
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	10 df       	rcall	.-480    	; 0x366 <writeLcdF>
 546:	d0 df       	rcall	.-96     	; 0x4e8 <lcdClear>
 548:	67 e0       	ldi	r22, 0x07	; 7
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	83 e4       	ldi	r24, 0x43	; 67
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	0a df       	rcall	.-492    	; 0x366 <writeLcdF>
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	fd ce       	rjmp	.-518    	; 0x350 <lcdLight>
 556:	08 95       	ret

00000558 <initBoard>:
 558:	ff 92       	push	r15
 55a:	0f 93       	push	r16
 55c:	1f 93       	push	r17
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	c8 2f       	mov	r28, r24
 564:	85 b7       	in	r24, 0x35	; 53
 566:	85 bf       	out	0x35, r24	; 53
 568:	12 b8       	out	0x02, r1	; 2
 56a:	8f ef       	ldi	r24, 0xFF	; 255
 56c:	81 b9       	out	0x01, r24	; 1
 56e:	15 b8       	out	0x05, r1	; 5
 570:	84 b9       	out	0x04, r24	; 4
 572:	88 b9       	out	0x08, r24	; 8
 574:	17 b8       	out	0x07, r1	; 7
 576:	8b b9       	out	0x0b, r24	; 11
 578:	1a b8       	out	0x0a, r1	; 10
 57a:	8e b9       	out	0x0e, r24	; 14
 57c:	1d b8       	out	0x0d, r1	; 13
 57e:	9e b1       	in	r25, 0x0e	; 14
 580:	9b 7f       	andi	r25, 0xFB	; 251
 582:	9e b9       	out	0x0e, r25	; 14
 584:	11 ba       	out	0x11, r1	; 17
 586:	10 ba       	out	0x10, r1	; 16
 588:	94 e0       	ldi	r25, 0x04	; 4
 58a:	94 bb       	out	0x14, r25	; 20
 58c:	93 b3       	in	r25, 0x13	; 19
 58e:	93 60       	ori	r25, 0x03	; 3
 590:	93 bb       	out	0x13, r25	; 19
 592:	93 b3       	in	r25, 0x13	; 19
 594:	90 62       	ori	r25, 0x20	; 32
 596:	93 bb       	out	0x13, r25	; 19
 598:	97 ec       	ldi	r25, 0xC7	; 199
 59a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 59e:	98 e3       	ldi	r25, 0x38	; 56
 5a0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 5a4:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 5a8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 5ac:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 5b0:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 5b4:	8c e3       	ldi	r24, 0x3C	; 60
 5b6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 5ba:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 5be:	78 94       	sei
 5c0:	24 de       	rcall	.-952    	; 0x20a <startSystemTimeMs>
 5c2:	a9 df       	rcall	.-174    	; 0x516 <initLcd>
 5c4:	2c de       	rcall	.-936    	; 0x21e <initAdc>
 5c6:	9c de       	rcall	.-712    	; 0x300 <initRgb>
 5c8:	cc 23       	and	r28, r28
 5ca:	09 f4       	brne	.+2      	; 0x5ce <initBoard+0x76>
 5cc:	a3 c0       	rjmp	.+326    	; 0x714 <initBoard+0x1bc>
 5ce:	8f ef       	ldi	r24, 0xFF	; 255
 5d0:	bf de       	rcall	.-642    	; 0x350 <lcdLight>
 5d2:	40 e0       	ldi	r20, 0x00	; 0
 5d4:	50 e0       	ldi	r21, 0x00	; 0
 5d6:	6f ef       	ldi	r22, 0xFF	; 255
 5d8:	73 e0       	ldi	r23, 0x03	; 3
 5da:	80 e0       	ldi	r24, 0x00	; 0
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	79 de       	rcall	.-782    	; 0x2d2 <rgbWrite>
 5e0:	8d e1       	ldi	r24, 0x1D	; 29
 5e2:	92 e0       	ldi	r25, 0x02	; 2
 5e4:	9f 93       	push	r25
 5e6:	8f 93       	push	r24
 5e8:	1f 92       	push	r1
 5ea:	1f 92       	push	r1
 5ec:	43 df       	rcall	.-378    	; 0x474 <lcdWriteText>
 5ee:	82 e3       	ldi	r24, 0x32	; 50
 5f0:	92 e0       	ldi	r25, 0x02	; 2
 5f2:	9f 93       	push	r25
 5f4:	8f 93       	push	r24
 5f6:	1f 92       	push	r1
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	8f 93       	push	r24
 5fc:	3b df       	rcall	.-394    	; 0x474 <lcdWriteText>
 5fe:	88 e0       	ldi	r24, 0x08	; 8
 600:	92 e0       	ldi	r25, 0x02	; 2
 602:	9f 93       	push	r25
 604:	8f 93       	push	r24
 606:	1f 92       	push	r1
 608:	82 e0       	ldi	r24, 0x02	; 2
 60a:	8f 93       	push	r24
 60c:	33 df       	rcall	.-410    	; 0x474 <lcdWriteText>
 60e:	87 e4       	ldi	r24, 0x47	; 71
 610:	92 e0       	ldi	r25, 0x02	; 2
 612:	9f 93       	push	r25
 614:	8f 93       	push	r24
 616:	1f 92       	push	r1
 618:	83 e0       	ldi	r24, 0x03	; 3
 61a:	8f 93       	push	r24
 61c:	2b df       	rcall	.-426    	; 0x474 <lcdWriteText>
 61e:	8d b7       	in	r24, 0x3d	; 61
 620:	9e b7       	in	r25, 0x3e	; 62
 622:	40 96       	adiw	r24, 0x10	; 16
 624:	0f b6       	in	r0, 0x3f	; 63
 626:	f8 94       	cli
 628:	9e bf       	out	0x3e, r25	; 62
 62a:	0f be       	out	0x3f, r0	; 63
 62c:	8d bf       	out	0x3d, r24	; 61
 62e:	ff 24       	eor	r15, r15
 630:	f3 94       	inc	r15
 632:	c0 e0       	ldi	r28, 0x00	; 0
 634:	10 e0       	ldi	r17, 0x00	; 0
 636:	01 e0       	ldi	r16, 0x01	; 1
 638:	d0 e0       	ldi	r29, 0x00	; 0
 63a:	00 23       	and	r16, r16
 63c:	51 f0       	breq	.+20     	; 0x652 <initBoard+0xfa>
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	90 e8       	ldi	r25, 0x80	; 128
 642:	0d 2e       	mov	r0, r29
 644:	02 c0       	rjmp	.+4      	; 0x64a <initBoard+0xf2>
 646:	96 95       	lsr	r25
 648:	87 95       	ror	r24
 64a:	0a 94       	dec	r0
 64c:	e2 f7       	brpl	.-8      	; 0x646 <initBoard+0xee>
 64e:	d7 dd       	rcall	.-1106   	; 0x1fe <ledWriteAll>
 650:	09 c0       	rjmp	.+18     	; 0x664 <initBoard+0x10c>
 652:	81 e0       	ldi	r24, 0x01	; 1
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0d 2e       	mov	r0, r29
 658:	02 c0       	rjmp	.+4      	; 0x65e <initBoard+0x106>
 65a:	88 0f       	add	r24, r24
 65c:	99 1f       	adc	r25, r25
 65e:	0a 94       	dec	r0
 660:	e2 f7       	brpl	.-8      	; 0x65a <initBoard+0x102>
 662:	cd dd       	rcall	.-1126   	; 0x1fe <ledWriteAll>
 664:	df 5f       	subi	r29, 0xFF	; 255
 666:	d1 31       	cpi	r29, 0x11	; 17
 668:	28 f0       	brcs	.+10     	; 0x674 <initBoard+0x11c>
 66a:	81 e0       	ldi	r24, 0x01	; 1
 66c:	01 11       	cpse	r16, r1
 66e:	80 e0       	ldi	r24, 0x00	; 0
 670:	08 2f       	mov	r16, r24
 672:	d0 e0       	ldi	r29, 0x00	; 0
 674:	ff 20       	and	r15, r15
 676:	11 f0       	breq	.+4      	; 0x67c <initBoard+0x124>
 678:	ce 5f       	subi	r28, 0xFE	; 254
 67a:	01 c0       	rjmp	.+2      	; 0x67e <initBoard+0x126>
 67c:	c2 50       	subi	r28, 0x02	; 2
 67e:	8c 2f       	mov	r24, r28
 680:	67 de       	rcall	.-818    	; 0x350 <lcdLight>
 682:	ce 3f       	cpi	r28, 0xFE	; 254
 684:	09 f4       	brne	.+2      	; 0x688 <initBoard+0x130>
 686:	f1 2c       	mov	r15, r1
 688:	c8 37       	cpi	r28, 0x78	; 120
 68a:	11 f4       	brne	.+4      	; 0x690 <initBoard+0x138>
 68c:	ff 24       	eor	r15, r15
 68e:	f3 94       	inc	r15
 690:	11 11       	cpse	r17, r1
 692:	17 c0       	rjmp	.+46     	; 0x6c2 <initBoard+0x16a>
 694:	b7 dd       	rcall	.-1170   	; 0x204 <buttonReadAllPL>
 696:	83 7c       	andi	r24, 0xC3	; 195
 698:	a1 f0       	breq	.+40     	; 0x6c2 <initBoard+0x16a>
 69a:	40 e0       	ldi	r20, 0x00	; 0
 69c:	50 e0       	ldi	r21, 0x00	; 0
 69e:	66 e2       	ldi	r22, 0x26	; 38
 6a0:	72 e0       	ldi	r23, 0x02	; 2
 6a2:	8f ef       	ldi	r24, 0xFF	; 255
 6a4:	93 e0       	ldi	r25, 0x03	; 3
 6a6:	15 de       	rcall	.-982    	; 0x2d2 <rgbWrite>
 6a8:	8c e5       	ldi	r24, 0x5C	; 92
 6aa:	92 e0       	ldi	r25, 0x02	; 2
 6ac:	9f 93       	push	r25
 6ae:	8f 93       	push	r24
 6b0:	1f 92       	push	r1
 6b2:	83 e0       	ldi	r24, 0x03	; 3
 6b4:	8f 93       	push	r24
 6b6:	de de       	rcall	.-580    	; 0x474 <lcdWriteText>
 6b8:	0f 90       	pop	r0
 6ba:	0f 90       	pop	r0
 6bc:	0f 90       	pop	r0
 6be:	0f 90       	pop	r0
 6c0:	11 e0       	ldi	r17, 0x01	; 1
 6c2:	11 23       	and	r17, r17
 6c4:	19 f0       	breq	.+6      	; 0x6cc <initBoard+0x174>
 6c6:	9e dd       	rcall	.-1220   	; 0x204 <buttonReadAllPL>
 6c8:	83 7c       	andi	r24, 0xC3	; 195
 6ca:	39 f0       	breq	.+14     	; 0x6da <initBoard+0x182>
 6cc:	8f ef       	ldi	r24, 0xFF	; 255
 6ce:	9c e7       	ldi	r25, 0x7C	; 124
 6d0:	01 97       	sbiw	r24, 0x01	; 1
 6d2:	f1 f7       	brne	.-4      	; 0x6d0 <initBoard+0x178>
 6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <initBoard+0x17e>
 6d6:	00 00       	nop
 6d8:	b0 cf       	rjmp	.-160    	; 0x63a <initBoard+0xe2>
 6da:	06 df       	rcall	.-500    	; 0x4e8 <lcdClear>
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	38 de       	rcall	.-912    	; 0x350 <lcdLight>
 6e0:	80 e0       	ldi	r24, 0x00	; 0
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	8c dd       	rcall	.-1256   	; 0x1fe <ledWriteAll>
 6e6:	40 e0       	ldi	r20, 0x00	; 0
 6e8:	50 e0       	ldi	r21, 0x00	; 0
 6ea:	60 e0       	ldi	r22, 0x00	; 0
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	80 e0       	ldi	r24, 0x00	; 0
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	ef dd       	rcall	.-1058   	; 0x2d2 <rgbWrite>
 6f4:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 6f8:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 6fc:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 700:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 704:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 708:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 70c:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 710:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 714:	df 91       	pop	r29
 716:	cf 91       	pop	r28
 718:	1f 91       	pop	r17
 71a:	0f 91       	pop	r16
 71c:	ff 90       	pop	r15
 71e:	08 95       	ret

00000720 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 720:	cf 93       	push	r28
 722:	df 93       	push	r29
 724:	cd b7       	in	r28, 0x3d	; 61
 726:	de b7       	in	r29, 0x3e	; 62
 728:	28 97       	sbiw	r28, 0x08	; 8
 72a:	0f b6       	in	r0, 0x3f	; 63
 72c:	f8 94       	cli
 72e:	de bf       	out	0x3e, r29	; 62
 730:	0f be       	out	0x3f, r0	; 63
 732:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 734:	88 e0       	ldi	r24, 0x08	; 8
 736:	e0 e0       	ldi	r30, 0x00	; 0
 738:	f2 e0       	ldi	r31, 0x02	; 2
 73a:	de 01       	movw	r26, r28
 73c:	11 96       	adiw	r26, 0x01	; 1
 73e:	01 90       	ld	r0, Z+
 740:	0d 92       	st	X+, r0
 742:	8a 95       	dec	r24
 744:	e1 f7       	brne	.-8      	; 0x73e <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 746:	e5 e0       	ldi	r30, 0x05	; 5
 748:	f1 e0       	ldi	r31, 0x01	; 1
 74a:	80 81       	ld	r24, Z
 74c:	8f 7b       	andi	r24, 0xBF	; 191
 74e:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 750:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 754:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 758:	81 e0       	ldi	r24, 0x01	; 1
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	8c 0f       	add	r24, r28
 75e:	9d 1f       	adc	r25, r29
 760:	e8 0f       	add	r30, r24
 762:	f9 1f       	adc	r31, r25
 764:	80 81       	ld	r24, Z
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 76c:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 770:	80 e0       	ldi	r24, 0x00	; 0
 772:	26 c0       	rjmp	.+76     	; 0x7c0 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 774:	e7 e3       	ldi	r30, 0x37	; 55
 776:	f0 e0       	ldi	r31, 0x00	; 0
 778:	e8 1b       	sub	r30, r24
 77a:	f1 09       	sbc	r31, r1
 77c:	ee 0f       	add	r30, r30
 77e:	ff 1f       	adc	r31, r31
 780:	ee 57       	subi	r30, 0x7E	; 126
 782:	fd 4f       	sbci	r31, 0xFD	; 253
 784:	40 81       	ld	r20, Z
 786:	51 81       	ldd	r21, Z+1	; 0x01
 788:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 78c:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 790:	24 23       	and	r18, r20
 792:	35 23       	and	r19, r21
 794:	23 2b       	or	r18, r19
 796:	31 f0       	breq	.+12     	; 0x7a4 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 798:	e5 e0       	ldi	r30, 0x05	; 5
 79a:	f1 e0       	ldi	r31, 0x01	; 1
 79c:	90 81       	ld	r25, Z
 79e:	90 62       	ori	r25, 0x20	; 32
 7a0:	90 83       	st	Z, r25
 7a2:	05 c0       	rjmp	.+10     	; 0x7ae <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7a4:	e5 e0       	ldi	r30, 0x05	; 5
 7a6:	f1 e0       	ldi	r31, 0x01	; 1
 7a8:	90 81       	ld	r25, Z
 7aa:	9f 7d       	andi	r25, 0xDF	; 223
 7ac:	90 83       	st	Z, r25
        }
        CLOCK_1;
 7ae:	e5 e0       	ldi	r30, 0x05	; 5
 7b0:	f1 e0       	ldi	r31, 0x01	; 1
 7b2:	90 81       	ld	r25, Z
 7b4:	90 61       	ori	r25, 0x10	; 16
 7b6:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7b8:	90 81       	ld	r25, Z
 7ba:	9f 7e       	andi	r25, 0xEF	; 239
 7bc:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7be:	8f 5f       	subi	r24, 0xFF	; 255
 7c0:	88 33       	cpi	r24, 0x38	; 56
 7c2:	c0 f2       	brcs	.-80     	; 0x774 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 7c4:	e5 e0       	ldi	r30, 0x05	; 5
 7c6:	f1 e0       	ldi	r31, 0x01	; 1
 7c8:	80 81       	ld	r24, Z
 7ca:	87 7f       	andi	r24, 0xF7	; 247
 7cc:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 7ce:	80 81       	ld	r24, Z
 7d0:	88 7f       	andi	r24, 0xF8	; 248
 7d2:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 7d4:	90 81       	ld	r25, Z
 7d6:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 7da:	89 2b       	or	r24, r25
 7dc:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 7de:	80 81       	ld	r24, Z
 7e0:	80 64       	ori	r24, 0x40	; 64
 7e2:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 7e4:	80 81       	ld	r24, Z
 7e6:	88 60       	ori	r24, 0x08	; 8
 7e8:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 7ea:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 7ee:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 7f2:	87 30       	cpi	r24, 0x07	; 7
 7f4:	91 05       	cpc	r25, r1
 7f6:	30 f4       	brcc	.+12     	; 0x804 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 7f8:	01 96       	adiw	r24, 0x01	; 1
 7fa:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 7fe:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 802:	07 c0       	rjmp	.+14     	; 0x812 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 804:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 808:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 80c:	81 e0       	ldi	r24, 0x01	; 1
 80e:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 812:	28 96       	adiw	r28, 0x08	; 8
 814:	0f b6       	in	r0, 0x3f	; 63
 816:	f8 94       	cli
 818:	de bf       	out	0x3e, r29	; 62
 81a:	0f be       	out	0x3f, r0	; 63
 81c:	cd bf       	out	0x3d, r28	; 61
 81e:	df 91       	pop	r29
 820:	cf 91       	pop	r28
 822:	08 95       	ret

00000824 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 824:	1f 92       	push	r1
 826:	0f 92       	push	r0
 828:	0f b6       	in	r0, 0x3f	; 63
 82a:	0f 92       	push	r0
 82c:	11 24       	eor	r1, r1
 82e:	0b b6       	in	r0, 0x3b	; 59
 830:	0f 92       	push	r0
 832:	2f 93       	push	r18
 834:	3f 93       	push	r19
 836:	4f 93       	push	r20
 838:	5f 93       	push	r21
 83a:	6f 93       	push	r22
 83c:	7f 93       	push	r23
 83e:	8f 93       	push	r24
 840:	9f 93       	push	r25
 842:	af 93       	push	r26
 844:	bf 93       	push	r27
 846:	ef 93       	push	r30
 848:	ff 93       	push	r31
    systemTimeMs += 1;
 84a:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 84e:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 852:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 856:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 85a:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 85e:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 862:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 866:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 86a:	a1 e0       	ldi	r26, 0x01	; 1
 86c:	49 d0       	rcall	.+146    	; 0x900 <__adddi3_s8>
 86e:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 872:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 876:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 87a:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 87e:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 882:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 886:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 88a:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 88e:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 892:	81 11       	cpse	r24, r1
 894:	45 df       	rcall	.-374    	; 0x720 <matrixWriteNextLine>
}
 896:	ff 91       	pop	r31
 898:	ef 91       	pop	r30
 89a:	bf 91       	pop	r27
 89c:	af 91       	pop	r26
 89e:	9f 91       	pop	r25
 8a0:	8f 91       	pop	r24
 8a2:	7f 91       	pop	r23
 8a4:	6f 91       	pop	r22
 8a6:	5f 91       	pop	r21
 8a8:	4f 91       	pop	r20
 8aa:	3f 91       	pop	r19
 8ac:	2f 91       	pop	r18
 8ae:	0f 90       	pop	r0
 8b0:	0b be       	out	0x3b, r0	; 59
 8b2:	0f 90       	pop	r0
 8b4:	0f be       	out	0x3f, r0	; 63
 8b6:	0f 90       	pop	r0
 8b8:	1f 90       	pop	r1
 8ba:	18 95       	reti

000008bc <__udivmodsi4>:
 8bc:	a1 e2       	ldi	r26, 0x21	; 33
 8be:	1a 2e       	mov	r1, r26
 8c0:	aa 1b       	sub	r26, r26
 8c2:	bb 1b       	sub	r27, r27
 8c4:	fd 01       	movw	r30, r26
 8c6:	0d c0       	rjmp	.+26     	; 0x8e2 <__udivmodsi4_ep>

000008c8 <__udivmodsi4_loop>:
 8c8:	aa 1f       	adc	r26, r26
 8ca:	bb 1f       	adc	r27, r27
 8cc:	ee 1f       	adc	r30, r30
 8ce:	ff 1f       	adc	r31, r31
 8d0:	a2 17       	cp	r26, r18
 8d2:	b3 07       	cpc	r27, r19
 8d4:	e4 07       	cpc	r30, r20
 8d6:	f5 07       	cpc	r31, r21
 8d8:	20 f0       	brcs	.+8      	; 0x8e2 <__udivmodsi4_ep>
 8da:	a2 1b       	sub	r26, r18
 8dc:	b3 0b       	sbc	r27, r19
 8de:	e4 0b       	sbc	r30, r20
 8e0:	f5 0b       	sbc	r31, r21

000008e2 <__udivmodsi4_ep>:
 8e2:	66 1f       	adc	r22, r22
 8e4:	77 1f       	adc	r23, r23
 8e6:	88 1f       	adc	r24, r24
 8e8:	99 1f       	adc	r25, r25
 8ea:	1a 94       	dec	r1
 8ec:	69 f7       	brne	.-38     	; 0x8c8 <__udivmodsi4_loop>
 8ee:	60 95       	com	r22
 8f0:	70 95       	com	r23
 8f2:	80 95       	com	r24
 8f4:	90 95       	com	r25
 8f6:	9b 01       	movw	r18, r22
 8f8:	ac 01       	movw	r20, r24
 8fa:	bd 01       	movw	r22, r26
 8fc:	cf 01       	movw	r24, r30
 8fe:	08 95       	ret

00000900 <__adddi3_s8>:
 900:	00 24       	eor	r0, r0
 902:	a7 fd       	sbrc	r26, 7
 904:	00 94       	com	r0
 906:	2a 0f       	add	r18, r26
 908:	30 1d       	adc	r19, r0
 90a:	40 1d       	adc	r20, r0
 90c:	50 1d       	adc	r21, r0
 90e:	60 1d       	adc	r22, r0
 910:	70 1d       	adc	r23, r0
 912:	80 1d       	adc	r24, r0
 914:	90 1d       	adc	r25, r0
 916:	08 95       	ret

00000918 <vsnprintf>:
 918:	0f 93       	push	r16
 91a:	1f 93       	push	r17
 91c:	cf 93       	push	r28
 91e:	df 93       	push	r29
 920:	cd b7       	in	r28, 0x3d	; 61
 922:	de b7       	in	r29, 0x3e	; 62
 924:	2e 97       	sbiw	r28, 0x0e	; 14
 926:	0f b6       	in	r0, 0x3f	; 63
 928:	f8 94       	cli
 92a:	de bf       	out	0x3e, r29	; 62
 92c:	0f be       	out	0x3f, r0	; 63
 92e:	cd bf       	out	0x3d, r28	; 61
 930:	8c 01       	movw	r16, r24
 932:	fa 01       	movw	r30, r20
 934:	86 e0       	ldi	r24, 0x06	; 6
 936:	8c 83       	std	Y+4, r24	; 0x04
 938:	1a 83       	std	Y+2, r17	; 0x02
 93a:	09 83       	std	Y+1, r16	; 0x01
 93c:	77 ff       	sbrs	r23, 7
 93e:	02 c0       	rjmp	.+4      	; 0x944 <vsnprintf+0x2c>
 940:	60 e0       	ldi	r22, 0x00	; 0
 942:	70 e8       	ldi	r23, 0x80	; 128
 944:	cb 01       	movw	r24, r22
 946:	01 97       	sbiw	r24, 0x01	; 1
 948:	9e 83       	std	Y+6, r25	; 0x06
 94a:	8d 83       	std	Y+5, r24	; 0x05
 94c:	a9 01       	movw	r20, r18
 94e:	bf 01       	movw	r22, r30
 950:	ce 01       	movw	r24, r28
 952:	01 96       	adiw	r24, 0x01	; 1
 954:	19 d0       	rcall	.+50     	; 0x988 <vfprintf>
 956:	4d 81       	ldd	r20, Y+5	; 0x05
 958:	5e 81       	ldd	r21, Y+6	; 0x06
 95a:	57 fd       	sbrc	r21, 7
 95c:	0a c0       	rjmp	.+20     	; 0x972 <vsnprintf+0x5a>
 95e:	2f 81       	ldd	r18, Y+7	; 0x07
 960:	38 85       	ldd	r19, Y+8	; 0x08
 962:	42 17       	cp	r20, r18
 964:	53 07       	cpc	r21, r19
 966:	0c f4       	brge	.+2      	; 0x96a <vsnprintf+0x52>
 968:	9a 01       	movw	r18, r20
 96a:	f8 01       	movw	r30, r16
 96c:	e2 0f       	add	r30, r18
 96e:	f3 1f       	adc	r31, r19
 970:	10 82       	st	Z, r1
 972:	2e 96       	adiw	r28, 0x0e	; 14
 974:	0f b6       	in	r0, 0x3f	; 63
 976:	f8 94       	cli
 978:	de bf       	out	0x3e, r29	; 62
 97a:	0f be       	out	0x3f, r0	; 63
 97c:	cd bf       	out	0x3d, r28	; 61
 97e:	df 91       	pop	r29
 980:	cf 91       	pop	r28
 982:	1f 91       	pop	r17
 984:	0f 91       	pop	r16
 986:	08 95       	ret

00000988 <vfprintf>:
 988:	2f 92       	push	r2
 98a:	3f 92       	push	r3
 98c:	4f 92       	push	r4
 98e:	5f 92       	push	r5
 990:	6f 92       	push	r6
 992:	7f 92       	push	r7
 994:	8f 92       	push	r8
 996:	9f 92       	push	r9
 998:	af 92       	push	r10
 99a:	bf 92       	push	r11
 99c:	cf 92       	push	r12
 99e:	df 92       	push	r13
 9a0:	ef 92       	push	r14
 9a2:	ff 92       	push	r15
 9a4:	0f 93       	push	r16
 9a6:	1f 93       	push	r17
 9a8:	cf 93       	push	r28
 9aa:	df 93       	push	r29
 9ac:	cd b7       	in	r28, 0x3d	; 61
 9ae:	de b7       	in	r29, 0x3e	; 62
 9b0:	2b 97       	sbiw	r28, 0x0b	; 11
 9b2:	0f b6       	in	r0, 0x3f	; 63
 9b4:	f8 94       	cli
 9b6:	de bf       	out	0x3e, r29	; 62
 9b8:	0f be       	out	0x3f, r0	; 63
 9ba:	cd bf       	out	0x3d, r28	; 61
 9bc:	6c 01       	movw	r12, r24
 9be:	7b 01       	movw	r14, r22
 9c0:	8a 01       	movw	r16, r20
 9c2:	fc 01       	movw	r30, r24
 9c4:	17 82       	std	Z+7, r1	; 0x07
 9c6:	16 82       	std	Z+6, r1	; 0x06
 9c8:	83 81       	ldd	r24, Z+3	; 0x03
 9ca:	81 ff       	sbrs	r24, 1
 9cc:	bf c1       	rjmp	.+894    	; 0xd4c <vfprintf+0x3c4>
 9ce:	ce 01       	movw	r24, r28
 9d0:	01 96       	adiw	r24, 0x01	; 1
 9d2:	3c 01       	movw	r6, r24
 9d4:	f6 01       	movw	r30, r12
 9d6:	93 81       	ldd	r25, Z+3	; 0x03
 9d8:	f7 01       	movw	r30, r14
 9da:	93 fd       	sbrc	r25, 3
 9dc:	85 91       	lpm	r24, Z+
 9de:	93 ff       	sbrs	r25, 3
 9e0:	81 91       	ld	r24, Z+
 9e2:	7f 01       	movw	r14, r30
 9e4:	88 23       	and	r24, r24
 9e6:	09 f4       	brne	.+2      	; 0x9ea <vfprintf+0x62>
 9e8:	ad c1       	rjmp	.+858    	; 0xd44 <vfprintf+0x3bc>
 9ea:	85 32       	cpi	r24, 0x25	; 37
 9ec:	39 f4       	brne	.+14     	; 0x9fc <vfprintf+0x74>
 9ee:	93 fd       	sbrc	r25, 3
 9f0:	85 91       	lpm	r24, Z+
 9f2:	93 ff       	sbrs	r25, 3
 9f4:	81 91       	ld	r24, Z+
 9f6:	7f 01       	movw	r14, r30
 9f8:	85 32       	cpi	r24, 0x25	; 37
 9fa:	21 f4       	brne	.+8      	; 0xa04 <vfprintf+0x7c>
 9fc:	b6 01       	movw	r22, r12
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	d6 d1       	rcall	.+940    	; 0xdae <fputc>
 a02:	e8 cf       	rjmp	.-48     	; 0x9d4 <vfprintf+0x4c>
 a04:	91 2c       	mov	r9, r1
 a06:	21 2c       	mov	r2, r1
 a08:	31 2c       	mov	r3, r1
 a0a:	ff e1       	ldi	r31, 0x1F	; 31
 a0c:	f3 15       	cp	r31, r3
 a0e:	d8 f0       	brcs	.+54     	; 0xa46 <vfprintf+0xbe>
 a10:	8b 32       	cpi	r24, 0x2B	; 43
 a12:	79 f0       	breq	.+30     	; 0xa32 <vfprintf+0xaa>
 a14:	38 f4       	brcc	.+14     	; 0xa24 <vfprintf+0x9c>
 a16:	80 32       	cpi	r24, 0x20	; 32
 a18:	79 f0       	breq	.+30     	; 0xa38 <vfprintf+0xb0>
 a1a:	83 32       	cpi	r24, 0x23	; 35
 a1c:	a1 f4       	brne	.+40     	; 0xa46 <vfprintf+0xbe>
 a1e:	23 2d       	mov	r18, r3
 a20:	20 61       	ori	r18, 0x10	; 16
 a22:	1d c0       	rjmp	.+58     	; 0xa5e <vfprintf+0xd6>
 a24:	8d 32       	cpi	r24, 0x2D	; 45
 a26:	61 f0       	breq	.+24     	; 0xa40 <vfprintf+0xb8>
 a28:	80 33       	cpi	r24, 0x30	; 48
 a2a:	69 f4       	brne	.+26     	; 0xa46 <vfprintf+0xbe>
 a2c:	23 2d       	mov	r18, r3
 a2e:	21 60       	ori	r18, 0x01	; 1
 a30:	16 c0       	rjmp	.+44     	; 0xa5e <vfprintf+0xd6>
 a32:	83 2d       	mov	r24, r3
 a34:	82 60       	ori	r24, 0x02	; 2
 a36:	38 2e       	mov	r3, r24
 a38:	e3 2d       	mov	r30, r3
 a3a:	e4 60       	ori	r30, 0x04	; 4
 a3c:	3e 2e       	mov	r3, r30
 a3e:	2a c0       	rjmp	.+84     	; 0xa94 <vfprintf+0x10c>
 a40:	f3 2d       	mov	r31, r3
 a42:	f8 60       	ori	r31, 0x08	; 8
 a44:	1d c0       	rjmp	.+58     	; 0xa80 <vfprintf+0xf8>
 a46:	37 fc       	sbrc	r3, 7
 a48:	2d c0       	rjmp	.+90     	; 0xaa4 <vfprintf+0x11c>
 a4a:	20 ed       	ldi	r18, 0xD0	; 208
 a4c:	28 0f       	add	r18, r24
 a4e:	2a 30       	cpi	r18, 0x0A	; 10
 a50:	40 f0       	brcs	.+16     	; 0xa62 <vfprintf+0xda>
 a52:	8e 32       	cpi	r24, 0x2E	; 46
 a54:	b9 f4       	brne	.+46     	; 0xa84 <vfprintf+0xfc>
 a56:	36 fc       	sbrc	r3, 6
 a58:	75 c1       	rjmp	.+746    	; 0xd44 <vfprintf+0x3bc>
 a5a:	23 2d       	mov	r18, r3
 a5c:	20 64       	ori	r18, 0x40	; 64
 a5e:	32 2e       	mov	r3, r18
 a60:	19 c0       	rjmp	.+50     	; 0xa94 <vfprintf+0x10c>
 a62:	36 fe       	sbrs	r3, 6
 a64:	06 c0       	rjmp	.+12     	; 0xa72 <vfprintf+0xea>
 a66:	8a e0       	ldi	r24, 0x0A	; 10
 a68:	98 9e       	mul	r9, r24
 a6a:	20 0d       	add	r18, r0
 a6c:	11 24       	eor	r1, r1
 a6e:	92 2e       	mov	r9, r18
 a70:	11 c0       	rjmp	.+34     	; 0xa94 <vfprintf+0x10c>
 a72:	ea e0       	ldi	r30, 0x0A	; 10
 a74:	2e 9e       	mul	r2, r30
 a76:	20 0d       	add	r18, r0
 a78:	11 24       	eor	r1, r1
 a7a:	22 2e       	mov	r2, r18
 a7c:	f3 2d       	mov	r31, r3
 a7e:	f0 62       	ori	r31, 0x20	; 32
 a80:	3f 2e       	mov	r3, r31
 a82:	08 c0       	rjmp	.+16     	; 0xa94 <vfprintf+0x10c>
 a84:	8c 36       	cpi	r24, 0x6C	; 108
 a86:	21 f4       	brne	.+8      	; 0xa90 <vfprintf+0x108>
 a88:	83 2d       	mov	r24, r3
 a8a:	80 68       	ori	r24, 0x80	; 128
 a8c:	38 2e       	mov	r3, r24
 a8e:	02 c0       	rjmp	.+4      	; 0xa94 <vfprintf+0x10c>
 a90:	88 36       	cpi	r24, 0x68	; 104
 a92:	41 f4       	brne	.+16     	; 0xaa4 <vfprintf+0x11c>
 a94:	f7 01       	movw	r30, r14
 a96:	93 fd       	sbrc	r25, 3
 a98:	85 91       	lpm	r24, Z+
 a9a:	93 ff       	sbrs	r25, 3
 a9c:	81 91       	ld	r24, Z+
 a9e:	7f 01       	movw	r14, r30
 aa0:	81 11       	cpse	r24, r1
 aa2:	b3 cf       	rjmp	.-154    	; 0xa0a <vfprintf+0x82>
 aa4:	98 2f       	mov	r25, r24
 aa6:	9f 7d       	andi	r25, 0xDF	; 223
 aa8:	95 54       	subi	r25, 0x45	; 69
 aaa:	93 30       	cpi	r25, 0x03	; 3
 aac:	28 f4       	brcc	.+10     	; 0xab8 <vfprintf+0x130>
 aae:	0c 5f       	subi	r16, 0xFC	; 252
 ab0:	1f 4f       	sbci	r17, 0xFF	; 255
 ab2:	9f e3       	ldi	r25, 0x3F	; 63
 ab4:	99 83       	std	Y+1, r25	; 0x01
 ab6:	0d c0       	rjmp	.+26     	; 0xad2 <vfprintf+0x14a>
 ab8:	83 36       	cpi	r24, 0x63	; 99
 aba:	31 f0       	breq	.+12     	; 0xac8 <vfprintf+0x140>
 abc:	83 37       	cpi	r24, 0x73	; 115
 abe:	71 f0       	breq	.+28     	; 0xadc <vfprintf+0x154>
 ac0:	83 35       	cpi	r24, 0x53	; 83
 ac2:	09 f0       	breq	.+2      	; 0xac6 <vfprintf+0x13e>
 ac4:	55 c0       	rjmp	.+170    	; 0xb70 <vfprintf+0x1e8>
 ac6:	20 c0       	rjmp	.+64     	; 0xb08 <vfprintf+0x180>
 ac8:	f8 01       	movw	r30, r16
 aca:	80 81       	ld	r24, Z
 acc:	89 83       	std	Y+1, r24	; 0x01
 ace:	0e 5f       	subi	r16, 0xFE	; 254
 ad0:	1f 4f       	sbci	r17, 0xFF	; 255
 ad2:	88 24       	eor	r8, r8
 ad4:	83 94       	inc	r8
 ad6:	91 2c       	mov	r9, r1
 ad8:	53 01       	movw	r10, r6
 ada:	12 c0       	rjmp	.+36     	; 0xb00 <vfprintf+0x178>
 adc:	28 01       	movw	r4, r16
 ade:	f2 e0       	ldi	r31, 0x02	; 2
 ae0:	4f 0e       	add	r4, r31
 ae2:	51 1c       	adc	r5, r1
 ae4:	f8 01       	movw	r30, r16
 ae6:	a0 80       	ld	r10, Z
 ae8:	b1 80       	ldd	r11, Z+1	; 0x01
 aea:	36 fe       	sbrs	r3, 6
 aec:	03 c0       	rjmp	.+6      	; 0xaf4 <vfprintf+0x16c>
 aee:	69 2d       	mov	r22, r9
 af0:	70 e0       	ldi	r23, 0x00	; 0
 af2:	02 c0       	rjmp	.+4      	; 0xaf8 <vfprintf+0x170>
 af4:	6f ef       	ldi	r22, 0xFF	; 255
 af6:	7f ef       	ldi	r23, 0xFF	; 255
 af8:	c5 01       	movw	r24, r10
 afa:	4e d1       	rcall	.+668    	; 0xd98 <strnlen>
 afc:	4c 01       	movw	r8, r24
 afe:	82 01       	movw	r16, r4
 b00:	f3 2d       	mov	r31, r3
 b02:	ff 77       	andi	r31, 0x7F	; 127
 b04:	3f 2e       	mov	r3, r31
 b06:	15 c0       	rjmp	.+42     	; 0xb32 <vfprintf+0x1aa>
 b08:	28 01       	movw	r4, r16
 b0a:	22 e0       	ldi	r18, 0x02	; 2
 b0c:	42 0e       	add	r4, r18
 b0e:	51 1c       	adc	r5, r1
 b10:	f8 01       	movw	r30, r16
 b12:	a0 80       	ld	r10, Z
 b14:	b1 80       	ldd	r11, Z+1	; 0x01
 b16:	36 fe       	sbrs	r3, 6
 b18:	03 c0       	rjmp	.+6      	; 0xb20 <vfprintf+0x198>
 b1a:	69 2d       	mov	r22, r9
 b1c:	70 e0       	ldi	r23, 0x00	; 0
 b1e:	02 c0       	rjmp	.+4      	; 0xb24 <vfprintf+0x19c>
 b20:	6f ef       	ldi	r22, 0xFF	; 255
 b22:	7f ef       	ldi	r23, 0xFF	; 255
 b24:	c5 01       	movw	r24, r10
 b26:	2d d1       	rcall	.+602    	; 0xd82 <strnlen_P>
 b28:	4c 01       	movw	r8, r24
 b2a:	f3 2d       	mov	r31, r3
 b2c:	f0 68       	ori	r31, 0x80	; 128
 b2e:	3f 2e       	mov	r3, r31
 b30:	82 01       	movw	r16, r4
 b32:	33 fc       	sbrc	r3, 3
 b34:	19 c0       	rjmp	.+50     	; 0xb68 <vfprintf+0x1e0>
 b36:	82 2d       	mov	r24, r2
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	88 16       	cp	r8, r24
 b3c:	99 06       	cpc	r9, r25
 b3e:	a0 f4       	brcc	.+40     	; 0xb68 <vfprintf+0x1e0>
 b40:	b6 01       	movw	r22, r12
 b42:	80 e2       	ldi	r24, 0x20	; 32
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	33 d1       	rcall	.+614    	; 0xdae <fputc>
 b48:	2a 94       	dec	r2
 b4a:	f5 cf       	rjmp	.-22     	; 0xb36 <vfprintf+0x1ae>
 b4c:	f5 01       	movw	r30, r10
 b4e:	37 fc       	sbrc	r3, 7
 b50:	85 91       	lpm	r24, Z+
 b52:	37 fe       	sbrs	r3, 7
 b54:	81 91       	ld	r24, Z+
 b56:	5f 01       	movw	r10, r30
 b58:	b6 01       	movw	r22, r12
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	28 d1       	rcall	.+592    	; 0xdae <fputc>
 b5e:	21 10       	cpse	r2, r1
 b60:	2a 94       	dec	r2
 b62:	21 e0       	ldi	r18, 0x01	; 1
 b64:	82 1a       	sub	r8, r18
 b66:	91 08       	sbc	r9, r1
 b68:	81 14       	cp	r8, r1
 b6a:	91 04       	cpc	r9, r1
 b6c:	79 f7       	brne	.-34     	; 0xb4c <vfprintf+0x1c4>
 b6e:	e1 c0       	rjmp	.+450    	; 0xd32 <vfprintf+0x3aa>
 b70:	84 36       	cpi	r24, 0x64	; 100
 b72:	11 f0       	breq	.+4      	; 0xb78 <vfprintf+0x1f0>
 b74:	89 36       	cpi	r24, 0x69	; 105
 b76:	39 f5       	brne	.+78     	; 0xbc6 <vfprintf+0x23e>
 b78:	f8 01       	movw	r30, r16
 b7a:	37 fe       	sbrs	r3, 7
 b7c:	07 c0       	rjmp	.+14     	; 0xb8c <vfprintf+0x204>
 b7e:	60 81       	ld	r22, Z
 b80:	71 81       	ldd	r23, Z+1	; 0x01
 b82:	82 81       	ldd	r24, Z+2	; 0x02
 b84:	93 81       	ldd	r25, Z+3	; 0x03
 b86:	0c 5f       	subi	r16, 0xFC	; 252
 b88:	1f 4f       	sbci	r17, 0xFF	; 255
 b8a:	08 c0       	rjmp	.+16     	; 0xb9c <vfprintf+0x214>
 b8c:	60 81       	ld	r22, Z
 b8e:	71 81       	ldd	r23, Z+1	; 0x01
 b90:	07 2e       	mov	r0, r23
 b92:	00 0c       	add	r0, r0
 b94:	88 0b       	sbc	r24, r24
 b96:	99 0b       	sbc	r25, r25
 b98:	0e 5f       	subi	r16, 0xFE	; 254
 b9a:	1f 4f       	sbci	r17, 0xFF	; 255
 b9c:	f3 2d       	mov	r31, r3
 b9e:	ff 76       	andi	r31, 0x6F	; 111
 ba0:	3f 2e       	mov	r3, r31
 ba2:	97 ff       	sbrs	r25, 7
 ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <vfprintf+0x230>
 ba6:	90 95       	com	r25
 ba8:	80 95       	com	r24
 baa:	70 95       	com	r23
 bac:	61 95       	neg	r22
 bae:	7f 4f       	sbci	r23, 0xFF	; 255
 bb0:	8f 4f       	sbci	r24, 0xFF	; 255
 bb2:	9f 4f       	sbci	r25, 0xFF	; 255
 bb4:	f0 68       	ori	r31, 0x80	; 128
 bb6:	3f 2e       	mov	r3, r31
 bb8:	2a e0       	ldi	r18, 0x0A	; 10
 bba:	30 e0       	ldi	r19, 0x00	; 0
 bbc:	a3 01       	movw	r20, r6
 bbe:	33 d1       	rcall	.+614    	; 0xe26 <__ultoa_invert>
 bc0:	88 2e       	mov	r8, r24
 bc2:	86 18       	sub	r8, r6
 bc4:	44 c0       	rjmp	.+136    	; 0xc4e <vfprintf+0x2c6>
 bc6:	85 37       	cpi	r24, 0x75	; 117
 bc8:	31 f4       	brne	.+12     	; 0xbd6 <vfprintf+0x24e>
 bca:	23 2d       	mov	r18, r3
 bcc:	2f 7e       	andi	r18, 0xEF	; 239
 bce:	b2 2e       	mov	r11, r18
 bd0:	2a e0       	ldi	r18, 0x0A	; 10
 bd2:	30 e0       	ldi	r19, 0x00	; 0
 bd4:	25 c0       	rjmp	.+74     	; 0xc20 <vfprintf+0x298>
 bd6:	93 2d       	mov	r25, r3
 bd8:	99 7f       	andi	r25, 0xF9	; 249
 bda:	b9 2e       	mov	r11, r25
 bdc:	8f 36       	cpi	r24, 0x6F	; 111
 bde:	c1 f0       	breq	.+48     	; 0xc10 <vfprintf+0x288>
 be0:	18 f4       	brcc	.+6      	; 0xbe8 <vfprintf+0x260>
 be2:	88 35       	cpi	r24, 0x58	; 88
 be4:	79 f0       	breq	.+30     	; 0xc04 <vfprintf+0x27c>
 be6:	ae c0       	rjmp	.+348    	; 0xd44 <vfprintf+0x3bc>
 be8:	80 37       	cpi	r24, 0x70	; 112
 bea:	19 f0       	breq	.+6      	; 0xbf2 <vfprintf+0x26a>
 bec:	88 37       	cpi	r24, 0x78	; 120
 bee:	21 f0       	breq	.+8      	; 0xbf8 <vfprintf+0x270>
 bf0:	a9 c0       	rjmp	.+338    	; 0xd44 <vfprintf+0x3bc>
 bf2:	e9 2f       	mov	r30, r25
 bf4:	e0 61       	ori	r30, 0x10	; 16
 bf6:	be 2e       	mov	r11, r30
 bf8:	b4 fe       	sbrs	r11, 4
 bfa:	0d c0       	rjmp	.+26     	; 0xc16 <vfprintf+0x28e>
 bfc:	fb 2d       	mov	r31, r11
 bfe:	f4 60       	ori	r31, 0x04	; 4
 c00:	bf 2e       	mov	r11, r31
 c02:	09 c0       	rjmp	.+18     	; 0xc16 <vfprintf+0x28e>
 c04:	34 fe       	sbrs	r3, 4
 c06:	0a c0       	rjmp	.+20     	; 0xc1c <vfprintf+0x294>
 c08:	29 2f       	mov	r18, r25
 c0a:	26 60       	ori	r18, 0x06	; 6
 c0c:	b2 2e       	mov	r11, r18
 c0e:	06 c0       	rjmp	.+12     	; 0xc1c <vfprintf+0x294>
 c10:	28 e0       	ldi	r18, 0x08	; 8
 c12:	30 e0       	ldi	r19, 0x00	; 0
 c14:	05 c0       	rjmp	.+10     	; 0xc20 <vfprintf+0x298>
 c16:	20 e1       	ldi	r18, 0x10	; 16
 c18:	30 e0       	ldi	r19, 0x00	; 0
 c1a:	02 c0       	rjmp	.+4      	; 0xc20 <vfprintf+0x298>
 c1c:	20 e1       	ldi	r18, 0x10	; 16
 c1e:	32 e0       	ldi	r19, 0x02	; 2
 c20:	f8 01       	movw	r30, r16
 c22:	b7 fe       	sbrs	r11, 7
 c24:	07 c0       	rjmp	.+14     	; 0xc34 <vfprintf+0x2ac>
 c26:	60 81       	ld	r22, Z
 c28:	71 81       	ldd	r23, Z+1	; 0x01
 c2a:	82 81       	ldd	r24, Z+2	; 0x02
 c2c:	93 81       	ldd	r25, Z+3	; 0x03
 c2e:	0c 5f       	subi	r16, 0xFC	; 252
 c30:	1f 4f       	sbci	r17, 0xFF	; 255
 c32:	06 c0       	rjmp	.+12     	; 0xc40 <vfprintf+0x2b8>
 c34:	60 81       	ld	r22, Z
 c36:	71 81       	ldd	r23, Z+1	; 0x01
 c38:	80 e0       	ldi	r24, 0x00	; 0
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	0e 5f       	subi	r16, 0xFE	; 254
 c3e:	1f 4f       	sbci	r17, 0xFF	; 255
 c40:	a3 01       	movw	r20, r6
 c42:	f1 d0       	rcall	.+482    	; 0xe26 <__ultoa_invert>
 c44:	88 2e       	mov	r8, r24
 c46:	86 18       	sub	r8, r6
 c48:	fb 2d       	mov	r31, r11
 c4a:	ff 77       	andi	r31, 0x7F	; 127
 c4c:	3f 2e       	mov	r3, r31
 c4e:	36 fe       	sbrs	r3, 6
 c50:	0d c0       	rjmp	.+26     	; 0xc6c <vfprintf+0x2e4>
 c52:	23 2d       	mov	r18, r3
 c54:	2e 7f       	andi	r18, 0xFE	; 254
 c56:	a2 2e       	mov	r10, r18
 c58:	89 14       	cp	r8, r9
 c5a:	58 f4       	brcc	.+22     	; 0xc72 <vfprintf+0x2ea>
 c5c:	34 fe       	sbrs	r3, 4
 c5e:	0b c0       	rjmp	.+22     	; 0xc76 <vfprintf+0x2ee>
 c60:	32 fc       	sbrc	r3, 2
 c62:	09 c0       	rjmp	.+18     	; 0xc76 <vfprintf+0x2ee>
 c64:	83 2d       	mov	r24, r3
 c66:	8e 7e       	andi	r24, 0xEE	; 238
 c68:	a8 2e       	mov	r10, r24
 c6a:	05 c0       	rjmp	.+10     	; 0xc76 <vfprintf+0x2ee>
 c6c:	b8 2c       	mov	r11, r8
 c6e:	a3 2c       	mov	r10, r3
 c70:	03 c0       	rjmp	.+6      	; 0xc78 <vfprintf+0x2f0>
 c72:	b8 2c       	mov	r11, r8
 c74:	01 c0       	rjmp	.+2      	; 0xc78 <vfprintf+0x2f0>
 c76:	b9 2c       	mov	r11, r9
 c78:	a4 fe       	sbrs	r10, 4
 c7a:	0f c0       	rjmp	.+30     	; 0xc9a <vfprintf+0x312>
 c7c:	fe 01       	movw	r30, r28
 c7e:	e8 0d       	add	r30, r8
 c80:	f1 1d       	adc	r31, r1
 c82:	80 81       	ld	r24, Z
 c84:	80 33       	cpi	r24, 0x30	; 48
 c86:	21 f4       	brne	.+8      	; 0xc90 <vfprintf+0x308>
 c88:	9a 2d       	mov	r25, r10
 c8a:	99 7e       	andi	r25, 0xE9	; 233
 c8c:	a9 2e       	mov	r10, r25
 c8e:	09 c0       	rjmp	.+18     	; 0xca2 <vfprintf+0x31a>
 c90:	a2 fe       	sbrs	r10, 2
 c92:	06 c0       	rjmp	.+12     	; 0xca0 <vfprintf+0x318>
 c94:	b3 94       	inc	r11
 c96:	b3 94       	inc	r11
 c98:	04 c0       	rjmp	.+8      	; 0xca2 <vfprintf+0x31a>
 c9a:	8a 2d       	mov	r24, r10
 c9c:	86 78       	andi	r24, 0x86	; 134
 c9e:	09 f0       	breq	.+2      	; 0xca2 <vfprintf+0x31a>
 ca0:	b3 94       	inc	r11
 ca2:	a3 fc       	sbrc	r10, 3
 ca4:	10 c0       	rjmp	.+32     	; 0xcc6 <vfprintf+0x33e>
 ca6:	a0 fe       	sbrs	r10, 0
 ca8:	06 c0       	rjmp	.+12     	; 0xcb6 <vfprintf+0x32e>
 caa:	b2 14       	cp	r11, r2
 cac:	80 f4       	brcc	.+32     	; 0xcce <vfprintf+0x346>
 cae:	28 0c       	add	r2, r8
 cb0:	92 2c       	mov	r9, r2
 cb2:	9b 18       	sub	r9, r11
 cb4:	0d c0       	rjmp	.+26     	; 0xcd0 <vfprintf+0x348>
 cb6:	b2 14       	cp	r11, r2
 cb8:	58 f4       	brcc	.+22     	; 0xcd0 <vfprintf+0x348>
 cba:	b6 01       	movw	r22, r12
 cbc:	80 e2       	ldi	r24, 0x20	; 32
 cbe:	90 e0       	ldi	r25, 0x00	; 0
 cc0:	76 d0       	rcall	.+236    	; 0xdae <fputc>
 cc2:	b3 94       	inc	r11
 cc4:	f8 cf       	rjmp	.-16     	; 0xcb6 <vfprintf+0x32e>
 cc6:	b2 14       	cp	r11, r2
 cc8:	18 f4       	brcc	.+6      	; 0xcd0 <vfprintf+0x348>
 cca:	2b 18       	sub	r2, r11
 ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <vfprintf+0x34a>
 cce:	98 2c       	mov	r9, r8
 cd0:	21 2c       	mov	r2, r1
 cd2:	a4 fe       	sbrs	r10, 4
 cd4:	0f c0       	rjmp	.+30     	; 0xcf4 <vfprintf+0x36c>
 cd6:	b6 01       	movw	r22, r12
 cd8:	80 e3       	ldi	r24, 0x30	; 48
 cda:	90 e0       	ldi	r25, 0x00	; 0
 cdc:	68 d0       	rcall	.+208    	; 0xdae <fputc>
 cde:	a2 fe       	sbrs	r10, 2
 ce0:	16 c0       	rjmp	.+44     	; 0xd0e <vfprintf+0x386>
 ce2:	a1 fc       	sbrc	r10, 1
 ce4:	03 c0       	rjmp	.+6      	; 0xcec <vfprintf+0x364>
 ce6:	88 e7       	ldi	r24, 0x78	; 120
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	02 c0       	rjmp	.+4      	; 0xcf0 <vfprintf+0x368>
 cec:	88 e5       	ldi	r24, 0x58	; 88
 cee:	90 e0       	ldi	r25, 0x00	; 0
 cf0:	b6 01       	movw	r22, r12
 cf2:	0c c0       	rjmp	.+24     	; 0xd0c <vfprintf+0x384>
 cf4:	8a 2d       	mov	r24, r10
 cf6:	86 78       	andi	r24, 0x86	; 134
 cf8:	51 f0       	breq	.+20     	; 0xd0e <vfprintf+0x386>
 cfa:	a1 fe       	sbrs	r10, 1
 cfc:	02 c0       	rjmp	.+4      	; 0xd02 <vfprintf+0x37a>
 cfe:	8b e2       	ldi	r24, 0x2B	; 43
 d00:	01 c0       	rjmp	.+2      	; 0xd04 <vfprintf+0x37c>
 d02:	80 e2       	ldi	r24, 0x20	; 32
 d04:	a7 fc       	sbrc	r10, 7
 d06:	8d e2       	ldi	r24, 0x2D	; 45
 d08:	b6 01       	movw	r22, r12
 d0a:	90 e0       	ldi	r25, 0x00	; 0
 d0c:	50 d0       	rcall	.+160    	; 0xdae <fputc>
 d0e:	89 14       	cp	r8, r9
 d10:	30 f4       	brcc	.+12     	; 0xd1e <vfprintf+0x396>
 d12:	b6 01       	movw	r22, r12
 d14:	80 e3       	ldi	r24, 0x30	; 48
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	4a d0       	rcall	.+148    	; 0xdae <fputc>
 d1a:	9a 94       	dec	r9
 d1c:	f8 cf       	rjmp	.-16     	; 0xd0e <vfprintf+0x386>
 d1e:	8a 94       	dec	r8
 d20:	f3 01       	movw	r30, r6
 d22:	e8 0d       	add	r30, r8
 d24:	f1 1d       	adc	r31, r1
 d26:	80 81       	ld	r24, Z
 d28:	b6 01       	movw	r22, r12
 d2a:	90 e0       	ldi	r25, 0x00	; 0
 d2c:	40 d0       	rcall	.+128    	; 0xdae <fputc>
 d2e:	81 10       	cpse	r8, r1
 d30:	f6 cf       	rjmp	.-20     	; 0xd1e <vfprintf+0x396>
 d32:	22 20       	and	r2, r2
 d34:	09 f4       	brne	.+2      	; 0xd38 <vfprintf+0x3b0>
 d36:	4e ce       	rjmp	.-868    	; 0x9d4 <vfprintf+0x4c>
 d38:	b6 01       	movw	r22, r12
 d3a:	80 e2       	ldi	r24, 0x20	; 32
 d3c:	90 e0       	ldi	r25, 0x00	; 0
 d3e:	37 d0       	rcall	.+110    	; 0xdae <fputc>
 d40:	2a 94       	dec	r2
 d42:	f7 cf       	rjmp	.-18     	; 0xd32 <vfprintf+0x3aa>
 d44:	f6 01       	movw	r30, r12
 d46:	86 81       	ldd	r24, Z+6	; 0x06
 d48:	97 81       	ldd	r25, Z+7	; 0x07
 d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0x3c8>
 d4c:	8f ef       	ldi	r24, 0xFF	; 255
 d4e:	9f ef       	ldi	r25, 0xFF	; 255
 d50:	2b 96       	adiw	r28, 0x0b	; 11
 d52:	0f b6       	in	r0, 0x3f	; 63
 d54:	f8 94       	cli
 d56:	de bf       	out	0x3e, r29	; 62
 d58:	0f be       	out	0x3f, r0	; 63
 d5a:	cd bf       	out	0x3d, r28	; 61
 d5c:	df 91       	pop	r29
 d5e:	cf 91       	pop	r28
 d60:	1f 91       	pop	r17
 d62:	0f 91       	pop	r16
 d64:	ff 90       	pop	r15
 d66:	ef 90       	pop	r14
 d68:	df 90       	pop	r13
 d6a:	cf 90       	pop	r12
 d6c:	bf 90       	pop	r11
 d6e:	af 90       	pop	r10
 d70:	9f 90       	pop	r9
 d72:	8f 90       	pop	r8
 d74:	7f 90       	pop	r7
 d76:	6f 90       	pop	r6
 d78:	5f 90       	pop	r5
 d7a:	4f 90       	pop	r4
 d7c:	3f 90       	pop	r3
 d7e:	2f 90       	pop	r2
 d80:	08 95       	ret

00000d82 <strnlen_P>:
 d82:	fc 01       	movw	r30, r24
 d84:	05 90       	lpm	r0, Z+
 d86:	61 50       	subi	r22, 0x01	; 1
 d88:	70 40       	sbci	r23, 0x00	; 0
 d8a:	01 10       	cpse	r0, r1
 d8c:	d8 f7       	brcc	.-10     	; 0xd84 <strnlen_P+0x2>
 d8e:	80 95       	com	r24
 d90:	90 95       	com	r25
 d92:	8e 0f       	add	r24, r30
 d94:	9f 1f       	adc	r25, r31
 d96:	08 95       	ret

00000d98 <strnlen>:
 d98:	fc 01       	movw	r30, r24
 d9a:	61 50       	subi	r22, 0x01	; 1
 d9c:	70 40       	sbci	r23, 0x00	; 0
 d9e:	01 90       	ld	r0, Z+
 da0:	01 10       	cpse	r0, r1
 da2:	d8 f7       	brcc	.-10     	; 0xd9a <strnlen+0x2>
 da4:	80 95       	com	r24
 da6:	90 95       	com	r25
 da8:	8e 0f       	add	r24, r30
 daa:	9f 1f       	adc	r25, r31
 dac:	08 95       	ret

00000dae <fputc>:
 dae:	0f 93       	push	r16
 db0:	1f 93       	push	r17
 db2:	cf 93       	push	r28
 db4:	df 93       	push	r29
 db6:	fb 01       	movw	r30, r22
 db8:	23 81       	ldd	r18, Z+3	; 0x03
 dba:	21 fd       	sbrc	r18, 1
 dbc:	03 c0       	rjmp	.+6      	; 0xdc4 <fputc+0x16>
 dbe:	8f ef       	ldi	r24, 0xFF	; 255
 dc0:	9f ef       	ldi	r25, 0xFF	; 255
 dc2:	2c c0       	rjmp	.+88     	; 0xe1c <fputc+0x6e>
 dc4:	22 ff       	sbrs	r18, 2
 dc6:	16 c0       	rjmp	.+44     	; 0xdf4 <fputc+0x46>
 dc8:	46 81       	ldd	r20, Z+6	; 0x06
 dca:	57 81       	ldd	r21, Z+7	; 0x07
 dcc:	24 81       	ldd	r18, Z+4	; 0x04
 dce:	35 81       	ldd	r19, Z+5	; 0x05
 dd0:	42 17       	cp	r20, r18
 dd2:	53 07       	cpc	r21, r19
 dd4:	44 f4       	brge	.+16     	; 0xde6 <fputc+0x38>
 dd6:	a0 81       	ld	r26, Z
 dd8:	b1 81       	ldd	r27, Z+1	; 0x01
 dda:	9d 01       	movw	r18, r26
 ddc:	2f 5f       	subi	r18, 0xFF	; 255
 dde:	3f 4f       	sbci	r19, 0xFF	; 255
 de0:	31 83       	std	Z+1, r19	; 0x01
 de2:	20 83       	st	Z, r18
 de4:	8c 93       	st	X, r24
 de6:	26 81       	ldd	r18, Z+6	; 0x06
 de8:	37 81       	ldd	r19, Z+7	; 0x07
 dea:	2f 5f       	subi	r18, 0xFF	; 255
 dec:	3f 4f       	sbci	r19, 0xFF	; 255
 dee:	37 83       	std	Z+7, r19	; 0x07
 df0:	26 83       	std	Z+6, r18	; 0x06
 df2:	14 c0       	rjmp	.+40     	; 0xe1c <fputc+0x6e>
 df4:	8b 01       	movw	r16, r22
 df6:	ec 01       	movw	r28, r24
 df8:	fb 01       	movw	r30, r22
 dfa:	00 84       	ldd	r0, Z+8	; 0x08
 dfc:	f1 85       	ldd	r31, Z+9	; 0x09
 dfe:	e0 2d       	mov	r30, r0
 e00:	19 95       	eicall
 e02:	89 2b       	or	r24, r25
 e04:	e1 f6       	brne	.-72     	; 0xdbe <fputc+0x10>
 e06:	d8 01       	movw	r26, r16
 e08:	16 96       	adiw	r26, 0x06	; 6
 e0a:	8d 91       	ld	r24, X+
 e0c:	9c 91       	ld	r25, X
 e0e:	17 97       	sbiw	r26, 0x07	; 7
 e10:	01 96       	adiw	r24, 0x01	; 1
 e12:	17 96       	adiw	r26, 0x07	; 7
 e14:	9c 93       	st	X, r25
 e16:	8e 93       	st	-X, r24
 e18:	16 97       	sbiw	r26, 0x06	; 6
 e1a:	ce 01       	movw	r24, r28
 e1c:	df 91       	pop	r29
 e1e:	cf 91       	pop	r28
 e20:	1f 91       	pop	r17
 e22:	0f 91       	pop	r16
 e24:	08 95       	ret

00000e26 <__ultoa_invert>:
 e26:	fa 01       	movw	r30, r20
 e28:	aa 27       	eor	r26, r26
 e2a:	28 30       	cpi	r18, 0x08	; 8
 e2c:	51 f1       	breq	.+84     	; 0xe82 <__ultoa_invert+0x5c>
 e2e:	20 31       	cpi	r18, 0x10	; 16
 e30:	81 f1       	breq	.+96     	; 0xe92 <__ultoa_invert+0x6c>
 e32:	e8 94       	clt
 e34:	6f 93       	push	r22
 e36:	6e 7f       	andi	r22, 0xFE	; 254
 e38:	6e 5f       	subi	r22, 0xFE	; 254
 e3a:	7f 4f       	sbci	r23, 0xFF	; 255
 e3c:	8f 4f       	sbci	r24, 0xFF	; 255
 e3e:	9f 4f       	sbci	r25, 0xFF	; 255
 e40:	af 4f       	sbci	r26, 0xFF	; 255
 e42:	b1 e0       	ldi	r27, 0x01	; 1
 e44:	3e d0       	rcall	.+124    	; 0xec2 <__ultoa_invert+0x9c>
 e46:	b4 e0       	ldi	r27, 0x04	; 4
 e48:	3c d0       	rcall	.+120    	; 0xec2 <__ultoa_invert+0x9c>
 e4a:	67 0f       	add	r22, r23
 e4c:	78 1f       	adc	r23, r24
 e4e:	89 1f       	adc	r24, r25
 e50:	9a 1f       	adc	r25, r26
 e52:	a1 1d       	adc	r26, r1
 e54:	68 0f       	add	r22, r24
 e56:	79 1f       	adc	r23, r25
 e58:	8a 1f       	adc	r24, r26
 e5a:	91 1d       	adc	r25, r1
 e5c:	a1 1d       	adc	r26, r1
 e5e:	6a 0f       	add	r22, r26
 e60:	71 1d       	adc	r23, r1
 e62:	81 1d       	adc	r24, r1
 e64:	91 1d       	adc	r25, r1
 e66:	a1 1d       	adc	r26, r1
 e68:	20 d0       	rcall	.+64     	; 0xeaa <__ultoa_invert+0x84>
 e6a:	09 f4       	brne	.+2      	; 0xe6e <__ultoa_invert+0x48>
 e6c:	68 94       	set
 e6e:	3f 91       	pop	r19
 e70:	2a e0       	ldi	r18, 0x0A	; 10
 e72:	26 9f       	mul	r18, r22
 e74:	11 24       	eor	r1, r1
 e76:	30 19       	sub	r19, r0
 e78:	30 5d       	subi	r19, 0xD0	; 208
 e7a:	31 93       	st	Z+, r19
 e7c:	de f6       	brtc	.-74     	; 0xe34 <__ultoa_invert+0xe>
 e7e:	cf 01       	movw	r24, r30
 e80:	08 95       	ret
 e82:	46 2f       	mov	r20, r22
 e84:	47 70       	andi	r20, 0x07	; 7
 e86:	40 5d       	subi	r20, 0xD0	; 208
 e88:	41 93       	st	Z+, r20
 e8a:	b3 e0       	ldi	r27, 0x03	; 3
 e8c:	0f d0       	rcall	.+30     	; 0xeac <__ultoa_invert+0x86>
 e8e:	c9 f7       	brne	.-14     	; 0xe82 <__ultoa_invert+0x5c>
 e90:	f6 cf       	rjmp	.-20     	; 0xe7e <__ultoa_invert+0x58>
 e92:	46 2f       	mov	r20, r22
 e94:	4f 70       	andi	r20, 0x0F	; 15
 e96:	40 5d       	subi	r20, 0xD0	; 208
 e98:	4a 33       	cpi	r20, 0x3A	; 58
 e9a:	18 f0       	brcs	.+6      	; 0xea2 <__ultoa_invert+0x7c>
 e9c:	49 5d       	subi	r20, 0xD9	; 217
 e9e:	31 fd       	sbrc	r19, 1
 ea0:	40 52       	subi	r20, 0x20	; 32
 ea2:	41 93       	st	Z+, r20
 ea4:	02 d0       	rcall	.+4      	; 0xeaa <__ultoa_invert+0x84>
 ea6:	a9 f7       	brne	.-22     	; 0xe92 <__ultoa_invert+0x6c>
 ea8:	ea cf       	rjmp	.-44     	; 0xe7e <__ultoa_invert+0x58>
 eaa:	b4 e0       	ldi	r27, 0x04	; 4
 eac:	a6 95       	lsr	r26
 eae:	97 95       	ror	r25
 eb0:	87 95       	ror	r24
 eb2:	77 95       	ror	r23
 eb4:	67 95       	ror	r22
 eb6:	ba 95       	dec	r27
 eb8:	c9 f7       	brne	.-14     	; 0xeac <__ultoa_invert+0x86>
 eba:	00 97       	sbiw	r24, 0x00	; 0
 ebc:	61 05       	cpc	r22, r1
 ebe:	71 05       	cpc	r23, r1
 ec0:	08 95       	ret
 ec2:	9b 01       	movw	r18, r22
 ec4:	ac 01       	movw	r20, r24
 ec6:	0a 2e       	mov	r0, r26
 ec8:	06 94       	lsr	r0
 eca:	57 95       	ror	r21
 ecc:	47 95       	ror	r20
 ece:	37 95       	ror	r19
 ed0:	27 95       	ror	r18
 ed2:	ba 95       	dec	r27
 ed4:	c9 f7       	brne	.-14     	; 0xec8 <__ultoa_invert+0xa2>
 ed6:	62 0f       	add	r22, r18
 ed8:	73 1f       	adc	r23, r19
 eda:	84 1f       	adc	r24, r20
 edc:	95 1f       	adc	r25, r21
 ede:	a0 1d       	adc	r26, r0
 ee0:	08 95       	ret

00000ee2 <_exit>:
 ee2:	f8 94       	cli

00000ee4 <__stop_program>:
 ee4:	ff cf       	rjmp	.-2      	; 0xee4 <__stop_program>
