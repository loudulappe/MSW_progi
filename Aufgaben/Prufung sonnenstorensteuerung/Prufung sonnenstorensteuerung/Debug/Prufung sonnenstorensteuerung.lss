
Prufung sonnenstorensteuerung.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000ef0  00000f84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ef0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000ff8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001054  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001094  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026b5  00000000  00000000  00001284  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fc2  00000000  00000000  00003939  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000175e  00000000  00000000  000048fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  0000605c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d86  00000000  00000000  000066e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001f9e  00000000  00000000  00007466  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00009404  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	fb c3       	rjmp	.+2038   	; 0x854 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 ef       	ldi	r30, 0xF0	; 240
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	e5 c6       	rjmp	.+3530   	; 0xeec <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    uint8_t ininlimit=0;
    uint8_t inoutlimit=0;
    uint8_t ausgabe=0;
    uint8_t control=0;
    
    initBoard(0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	30 d2       	rcall	.+1120   	; 0x588 <initBoard>
    uint8_t inpow=0;
    uint8_t insun=0;
    uint8_t inaut=0;
    uint8_t ininlimit=0;
    uint8_t inoutlimit=0;
    uint8_t ausgabe=0;
 128:	d0 e0       	ldi	r29, 0x00	; 0
    uint8_t flagout=0;
    uint16_t blinktimer=0;
    uint8_t swin=0;
    uint8_t bin=0;
    uint8_t flankpos=0;
    uint8_t buttonin=0;
 12a:	f1 2c       	mov	r15, r1
    zustand_t zustand= aus;
    uint8_t flagblink=0;
    uint8_t flagaus=0;
    uint8_t flagread=0;
    uint8_t flagout=0;
    uint16_t blinktimer=0;
 12c:	00 e0       	ldi	r16, 0x00	; 0
 12e:	10 e0       	ldi	r17, 0x00	; 0
    zustand_t;
    zustand_t zustand= aus;
    uint8_t flagblink=0;
    uint8_t flagaus=0;
    uint8_t flagread=0;
    uint8_t flagout=0;
 130:	d1 2c       	mov	r13, r1
{
    typedef enum zustand_t {manuell, automatik, ausschalten, aus}
    zustand_t;
    zustand_t zustand= aus;
    uint8_t flagblink=0;
    uint8_t flagaus=0;
 132:	b1 2c       	mov	r11, r1
int main(void)
{
    typedef enum zustand_t {manuell, automatik, ausschalten, aus}
    zustand_t;
    zustand_t zustand= aus;
    uint8_t flagblink=0;
 134:	c1 2c       	mov	r12, r1
    initBoard(0);
    
    while (1) 
    {
        altbutton=buttonin;
        buttonin=buttonReadAllPL();
 136:	c3 e0       	ldi	r28, 0x03	; 3
 138:	b5 d0       	rcall	.+362    	; 0x2a4 <buttonReadAllPL>
        swin=switchReadAll();
 13a:	e8 2e       	mov	r14, r24
 13c:	b1 d0       	rcall	.+354    	; 0x2a0 <switchReadAll>
        flanks= (altbutton^buttonin)&buttonin;
 13e:	9f 2d       	mov	r25, r15
 140:	90 95       	com	r25
 142:	9e 21       	and	r25, r14
        flankin= flanks&BUTTONIN;
 144:	79 2f       	mov	r23, r25
 146:	70 74       	andi	r23, 0x40	; 64
        flankout= flanks&BUTTONOUT;
 148:	90 78       	andi	r25, 0x80	; 128
        inpow= swin&INPOW;
 14a:	38 2f       	mov	r19, r24
 14c:	31 70       	andi	r19, 0x01	; 1
        ininlimit= swin&ININLIMIT;
        inoutlimit= swin& INOUTLIMIT;
 14e:	28 2f       	mov	r18, r24
 150:	20 78       	andi	r18, 0x80	; 128
        inaut= swin& INAUT;
 152:	58 2f       	mov	r21, r24
 154:	58 70       	andi	r21, 0x08	; 8
        insun= swin& INSUN;
 156:	68 2f       	mov	r22, r24
 158:	62 70       	andi	r22, 0x02	; 2
        if (ininlimit||inoutlimit)
 15a:	48 2f       	mov	r20, r24
 15c:	40 74       	andi	r20, 0x40	; 64
 15e:	86 fd       	sbrc	r24, 6
 160:	04 c0       	rjmp	.+8      	; 0x16a <main+0x46>
 162:	22 23       	and	r18, r18
 164:	21 f0       	breq	.+8      	; 0x16e <main+0x4a>
        {
            flagread=1;
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	03 c0       	rjmp	.+6      	; 0x170 <main+0x4c>
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	01 c0       	rjmp	.+2      	; 0x170 <main+0x4c>
        }
        else
        {
            flagread=0;
 16e:	80 e0       	ldi	r24, 0x00	; 0
        }
        switch (zustand)
 170:	c1 30       	cpi	r28, 0x01	; 1
 172:	39 f1       	breq	.+78     	; 0x1c2 <main+0x9e>
 174:	88 f0       	brcs	.+34     	; 0x198 <main+0x74>
 176:	c2 30       	cpi	r28, 0x02	; 2
 178:	c9 f1       	breq	.+114    	; 0x1ec <main+0xc8>
 17a:	c3 30       	cpi	r28, 0x03	; 3
 17c:	09 f0       	breq	.+2      	; 0x180 <main+0x5c>
 17e:	47 c0       	rjmp	.+142    	; 0x20e <main+0xea>
        {
            case aus: 
            control=1;
            flagaus=1;
            if (inpow&&ininlimit)
 180:	33 23       	and	r19, r19
 182:	c1 f1       	breq	.+112    	; 0x1f4 <main+0xd0>
 184:	44 23       	and	r20, r20
 186:	c9 f1       	breq	.+114    	; 0x1fa <main+0xd6>
            {
                if (inaut)
 188:	55 23       	and	r21, r21
 18a:	11 f0       	breq	.+4      	; 0x190 <main+0x6c>
                {
                    zustand=automatik;
 18c:	c1 e0       	ldi	r28, 0x01	; 1
 18e:	01 c0       	rjmp	.+2      	; 0x192 <main+0x6e>
                }
                else
                {
                    zustand=manuell;
 190:	c0 e0       	ldi	r28, 0x00	; 0
                }
                flagaus=0;
                ausgabe=ausgabe|OUTPOW;  
 192:	d1 60       	ori	r29, 0x01	; 1
                }
                else
                {
                    zustand=manuell;
                }
                flagaus=0;
 194:	b1 2c       	mov	r11, r1
 196:	3b c0       	rjmp	.+118    	; 0x20e <main+0xea>
            control=1;
            break;   
            
            case manuell:
            flagblink=1;
            if (flagread)
 198:	88 23       	and	r24, r24
 19a:	59 f0       	breq	.+22     	; 0x1b2 <main+0x8e>
            {
                if (flankin)
 19c:	71 11       	cpse	r23, r1
                {
                    flagout=0;
 19e:	d1 2c       	mov	r13, r1
                }
                if (flankout)
 1a0:	99 23       	and	r25, r25
 1a2:	11 f0       	breq	.+4      	; 0x1a8 <main+0x84>
                {
                    flagout=1;
 1a4:	dd 24       	eor	r13, r13
 1a6:	d3 94       	inc	r13
                }
                if (inaut)
 1a8:	51 11       	cpse	r21, r1
 1aa:	06 c0       	rjmp	.+12     	; 0x1b8 <main+0x94>
            }
            control=1;
            break;   
            
            case manuell:
            flagblink=1;
 1ac:	cc 24       	eor	r12, r12
 1ae:	c3 94       	inc	r12
 1b0:	05 c0       	rjmp	.+10     	; 0x1bc <main+0x98>
 1b2:	cc 24       	eor	r12, r12
 1b4:	c3 94       	inc	r12
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <main+0x98>
                    flagout=1;
                }
                if (inaut)
                {
                    zustand=automatik;
                    flagblink=0;
 1b8:	c1 2c       	mov	r12, r1
                {
                    flagout=1;
                }
                if (inaut)
                {
                    zustand=automatik;
 1ba:	c1 e0       	ldi	r28, 0x01	; 1
                    flagblink=0;
                }
            }
            if (!inpow)
 1bc:	33 23       	and	r19, r19
 1be:	01 f1       	breq	.+64     	; 0x200 <main+0xdc>
 1c0:	26 c0       	rjmp	.+76     	; 0x20e <main+0xea>
            }
            control=2;
            
            break;
            case automatik:
            ausgabe=ausgabe|OUTAUT;
 1c2:	9d 2f       	mov	r25, r29
 1c4:	94 60       	ori	r25, 0x04	; 4
            if(flagread)
 1c6:	88 23       	and	r24, r24
 1c8:	59 f0       	breq	.+22     	; 0x1e0 <main+0xbc>
            {
                if (insun)
 1ca:	66 23       	and	r22, r22
 1cc:	19 f0       	breq	.+6      	; 0x1d4 <main+0xb0>
                {
                    flagout=1;
 1ce:	dd 24       	eor	r13, r13
 1d0:	d3 94       	inc	r13
 1d2:	01 c0       	rjmp	.+2      	; 0x1d6 <main+0xb2>
                } 
                else
                {
                    flagout=0;
 1d4:	d1 2c       	mov	r13, r1
                }
                if (!inaut)
 1d6:	51 11       	cpse	r21, r1
 1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <main+0xbc>
 1da:	9d 2f       	mov	r25, r29
 1dc:	9b 7f       	andi	r25, 0xFB	; 251
                {
                    zustand=manuell;
 1de:	c0 e0       	ldi	r28, 0x00	; 0
                    ausgabe=ausgabe&~OUTAUT;
                }
            }
            if (!inpow)
 1e0:	31 11       	cpse	r19, r1
 1e2:	11 c0       	rjmp	.+34     	; 0x206 <main+0xe2>
            {
                zustand=ausschalten;
                ausgabe=ausgabe&~OUTAUT;
 1e4:	d9 2f       	mov	r29, r25
 1e6:	db 7f       	andi	r29, 0xFB	; 251
                    ausgabe=ausgabe&~OUTAUT;
                }
            }
            if (!inpow)
            {
                zustand=ausschalten;
 1e8:	c2 e0       	ldi	r28, 0x02	; 2
 1ea:	11 c0       	rjmp	.+34     	; 0x20e <main+0xea>
            break;
            
            case ausschalten:
            
            flagout=0;
            if (ininlimit)
 1ec:	41 11       	cpse	r20, r1
 1ee:	0d c0       	rjmp	.+26     	; 0x20a <main+0xe6>
            control=4;
            break;
            
            case ausschalten:
            
            flagout=0;
 1f0:	d1 2c       	mov	r13, r1
 1f2:	0d c0       	rjmp	.+26     	; 0x20e <main+0xea>
        }
        switch (zustand)
        {
            case aus: 
            control=1;
            flagaus=1;
 1f4:	bb 24       	eor	r11, r11
 1f6:	b3 94       	inc	r11
 1f8:	0a c0       	rjmp	.+20     	; 0x20e <main+0xea>
 1fa:	bb 24       	eor	r11, r11
 1fc:	b3 94       	inc	r11
 1fe:	07 c0       	rjmp	.+14     	; 0x20e <main+0xea>
                }
            }
            if (!inpow)
            {
                zustand=ausschalten;
                flagblink=0;
 200:	c1 2c       	mov	r12, r1
                    flagblink=0;
                }
            }
            if (!inpow)
            {
                zustand=ausschalten;
 202:	c2 e0       	ldi	r28, 0x02	; 2
 204:	04 c0       	rjmp	.+8      	; 0x20e <main+0xea>
 206:	d9 2f       	mov	r29, r25
 208:	02 c0       	rjmp	.+4      	; 0x20e <main+0xea>
            control=4;
            break;
            
            case ausschalten:
            
            flagout=0;
 20a:	d1 2c       	mov	r13, r1
            if (ininlimit)
            {
                zustand=aus;
 20c:	c3 e0       	ldi	r28, 0x03	; 3
            }
            control=8;
            break;
        }
        if (flagaus)
 20e:	b1 10       	cpse	r11, r1
 210:	0f c0       	rjmp	.+30     	; 0x230 <main+0x10c>
        {
            ausgabe=0;
        } 
        else
        {
            if (flagout&&!inoutlimit)
 212:	dd 20       	and	r13, r13
 214:	21 f0       	breq	.+8      	; 0x21e <main+0xfa>
 216:	21 11       	cpse	r18, r1
 218:	02 c0       	rjmp	.+4      	; 0x21e <main+0xfa>
            {
                ausgabe=ausgabe|OUTOUT;
 21a:	d0 68       	ori	r29, 0x80	; 128
 21c:	01 c0       	rjmp	.+2      	; 0x220 <main+0xfc>
            }
            else
            {
                ausgabe=ausgabe&~OUTOUT;
 21e:	df 77       	andi	r29, 0x7F	; 127
            }
            if (!(flagout||ininlimit))
 220:	d1 10       	cpse	r13, r1
 222:	04 c0       	rjmp	.+8      	; 0x22c <main+0x108>
 224:	41 11       	cpse	r20, r1
 226:	02 c0       	rjmp	.+4      	; 0x22c <main+0x108>
            {
                ausgabe=ausgabe|OUTIN;
 228:	d0 64       	ori	r29, 0x40	; 64
 22a:	03 c0       	rjmp	.+6      	; 0x232 <main+0x10e>
            }
            else
            {
                ausgabe=ausgabe&~OUTIN;
 22c:	df 7b       	andi	r29, 0xBF	; 191
 22e:	01 c0       	rjmp	.+2      	; 0x232 <main+0x10e>
            control=8;
            break;
        }
        if (flagaus)
        {
            ausgabe=0;
 230:	d0 e0       	ldi	r29, 0x00	; 0
            else
            {
                ausgabe=ausgabe&~OUTIN;
            }            
        }
        if (flagblink)
 232:	cc 20       	and	r12, r12
 234:	11 f1       	breq	.+68     	; 0x27a <main+0x156>
        {
            if (blinktimer>1000)
 236:	09 3e       	cpi	r16, 0xE9	; 233
 238:	83 e0       	ldi	r24, 0x03	; 3
 23a:	18 07       	cpc	r17, r24
 23c:	10 f0       	brcs	.+4      	; 0x242 <main+0x11e>
            {
                blinktimer=0;
 23e:	00 e0       	ldi	r16, 0x00	; 0
 240:	10 e0       	ldi	r17, 0x00	; 0
            }
            if ((blinktimer%BLINKPERIODE)>(BLINKPERIODE/2))
 242:	98 01       	movw	r18, r16
 244:	36 95       	lsr	r19
 246:	27 95       	ror	r18
 248:	36 95       	lsr	r19
 24a:	27 95       	ror	r18
 24c:	36 95       	lsr	r19
 24e:	27 95       	ror	r18
 250:	ab e7       	ldi	r26, 0x7B	; 123
 252:	b4 e1       	ldi	r27, 0x14	; 20
 254:	4b d3       	rcall	.+1686   	; 0x8ec <__umulhisi3>
 256:	96 95       	lsr	r25
 258:	87 95       	ror	r24
 25a:	48 ec       	ldi	r20, 0xC8	; 200
 25c:	48 9f       	mul	r20, r24
 25e:	90 01       	movw	r18, r0
 260:	49 9f       	mul	r20, r25
 262:	30 0d       	add	r19, r0
 264:	11 24       	eor	r1, r1
 266:	c8 01       	movw	r24, r16
 268:	82 1b       	sub	r24, r18
 26a:	93 0b       	sbc	r25, r19
 26c:	85 36       	cpi	r24, 0x65	; 101
 26e:	91 05       	cpc	r25, r1
 270:	10 f0       	brcs	.+4      	; 0x276 <main+0x152>
            {
                ausgabe=ausgabe|OUTMAN;
 272:	d0 61       	ori	r29, 0x10	; 16
 274:	05 c0       	rjmp	.+10     	; 0x280 <main+0x15c>
            } 
            else
            {
                ausgabe=ausgabe&~OUTMAN;
 276:	df 7e       	andi	r29, 0xEF	; 239
 278:	03 c0       	rjmp	.+6      	; 0x280 <main+0x15c>
            }
        }
        else
        {
            ausgabe=ausgabe&~OUTMAN;
 27a:	df 7e       	andi	r29, 0xEF	; 239
            blinktimer=0;
 27c:	00 e0       	ldi	r16, 0x00	; 0
        }

        ledWriteAll(ausgabe);
 27e:	10 e0       	ldi	r17, 0x00	; 0
 280:	8d 2f       	mov	r24, r29
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0a d0       	rcall	.+20     	; 0x29a <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 286:	8f e3       	ldi	r24, 0x3F	; 63
 288:	9c e9       	ldi	r25, 0x9C	; 156
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <main+0x166>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <main+0x16c>
 290:	00 00       	nop
        _delay_ms(10);
        blinktimer=blinktimer+10;
 292:	06 5f       	subi	r16, 0xF6	; 246
 294:	1f 4f       	sbci	r17, 0xFF	; 255
    initBoard(0);
    
    while (1) 
    {
        altbutton=buttonin;
        buttonin=buttonReadAllPL();
 296:	fe 2c       	mov	r15, r14
        }

        ledWriteAll(ausgabe);
        _delay_ms(10);
        blinktimer=blinktimer+10;
    }
 298:	4f cf       	rjmp	.-354    	; 0x138 <main+0x14>

0000029a <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 29a:	82 b9       	out	0x02, r24	; 2
 29c:	95 b9       	out	0x05, r25	; 5
 29e:	08 95       	ret

000002a0 <switchReadAll>:
 2a0:	86 b1       	in	r24, 0x06	; 6
 2a2:	08 95       	ret

000002a4 <buttonReadAllPL>:
 2a4:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 2a8:	08 95       	ret

000002aa <startSystemTimeMs>:
 2aa:	83 e0       	ldi	r24, 0x03	; 3
 2ac:	84 bd       	out	0x24, r24	; 36
 2ae:	8b e0       	ldi	r24, 0x0B	; 11
 2b0:	85 bd       	out	0x25, r24	; 37
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 2b8:	89 ef       	ldi	r24, 0xF9	; 249
 2ba:	87 bd       	out	0x27, r24	; 39
 2bc:	08 95       	ret

000002be <initAdc>:
 2be:	11 ba       	out	0x11, r1	; 17
 2c0:	10 ba       	out	0x10, r1	; 16
 2c2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 2c6:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 2ca:	80 e4       	ldi	r24, 0x40	; 64
 2cc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 2d0:	8f e0       	ldi	r24, 0x0F	; 15
 2d2:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 2d6:	8f ef       	ldi	r24, 0xFF	; 255
 2d8:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 2dc:	ea e7       	ldi	r30, 0x7A	; 122
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	87 ea       	ldi	r24, 0xA7	; 167
 2e2:	80 83       	st	Z, r24
 2e4:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 2e8:	80 81       	ld	r24, Z
 2ea:	80 64       	ori	r24, 0x40	; 64
 2ec:	80 83       	st	Z, r24
 2ee:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 2f2:	84 ff       	sbrs	r24, 4
 2f4:	fc cf       	rjmp	.-8      	; 0x2ee <initAdc+0x30>
 2f6:	ea e7       	ldi	r30, 0x7A	; 122
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	8f 7e       	andi	r24, 0xEF	; 239
 2fe:	80 83       	st	Z, r24
 300:	08 95       	ret

00000302 <rgbWrite>:
 302:	2f ef       	ldi	r18, 0xFF	; 255
 304:	33 e0       	ldi	r19, 0x03	; 3
 306:	f9 01       	movw	r30, r18
 308:	e8 1b       	sub	r30, r24
 30a:	f9 0b       	sbc	r31, r25
 30c:	c9 01       	movw	r24, r18
 30e:	86 1b       	sub	r24, r22
 310:	97 0b       	sbc	r25, r23
 312:	24 1b       	sub	r18, r20
 314:	35 0b       	sbc	r19, r21
 316:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 31a:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 31e:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 322:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 326:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 32a:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 32e:	08 95       	ret

00000330 <initRgb>:
 330:	8e ef       	ldi	r24, 0xFE	; 254
 332:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 336:	8b e1       	ldi	r24, 0x1B	; 27
 338:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 33c:	83 e0       	ldi	r24, 0x03	; 3
 33e:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 342:	8f ef       	ldi	r24, 0xFF	; 255
 344:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 348:	40 e0       	ldi	r20, 0x00	; 0
 34a:	50 e0       	ldi	r21, 0x00	; 0
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	d6 cf       	rjmp	.-84     	; 0x302 <rgbWrite>
 356:	08 95       	ret

00000358 <lcdSid>:
 358:	88 23       	and	r24, r24
 35a:	21 f0       	breq	.+8      	; 0x364 <lcdSid+0xc>
 35c:	84 b3       	in	r24, 0x14	; 20
 35e:	81 60       	ori	r24, 0x01	; 1
 360:	84 bb       	out	0x14, r24	; 20
 362:	08 95       	ret
 364:	84 b3       	in	r24, 0x14	; 20
 366:	8e 7f       	andi	r24, 0xFE	; 254
 368:	84 bb       	out	0x14, r24	; 20
 36a:	08 95       	ret

0000036c <lcdSclk>:
 36c:	88 23       	and	r24, r24
 36e:	21 f0       	breq	.+8      	; 0x378 <lcdSclk+0xc>
 370:	84 b3       	in	r24, 0x14	; 20
 372:	82 60       	ori	r24, 0x02	; 2
 374:	84 bb       	out	0x14, r24	; 20
 376:	08 95       	ret
 378:	84 b3       	in	r24, 0x14	; 20
 37a:	8d 7f       	andi	r24, 0xFD	; 253
 37c:	84 bb       	out	0x14, r24	; 20
 37e:	08 95       	ret

00000380 <lcdLight>:
 380:	81 11       	cpse	r24, r1
 382:	04 c0       	rjmp	.+8      	; 0x38c <lcdLight+0xc>
 384:	84 b5       	in	r24, 0x24	; 36
 386:	8f 7d       	andi	r24, 0xDF	; 223
 388:	84 bd       	out	0x24, r24	; 36
 38a:	08 95       	ret
 38c:	94 b5       	in	r25, 0x24	; 36
 38e:	90 62       	ori	r25, 0x20	; 32
 390:	94 bd       	out	0x24, r25	; 36
 392:	88 bd       	out	0x28, r24	; 40
 394:	08 95       	ret

00000396 <writeLcdF>:
 396:	ef 92       	push	r14
 398:	ff 92       	push	r15
 39a:	0f 93       	push	r16
 39c:	1f 93       	push	r17
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	7c 01       	movw	r14, r24
 3a4:	eb 01       	movw	r28, r22
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	d7 df       	rcall	.-82     	; 0x358 <lcdSid>
 3aa:	00 e0       	ldi	r16, 0x00	; 0
 3ac:	10 e0       	ldi	r17, 0x00	; 0
 3ae:	06 c0       	rjmp	.+12     	; 0x3bc <writeLcdF+0x26>
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	dc df       	rcall	.-72     	; 0x36c <lcdSclk>
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	da df       	rcall	.-76     	; 0x36c <lcdSclk>
 3b8:	0f 5f       	subi	r16, 0xFF	; 255
 3ba:	1f 4f       	sbci	r17, 0xFF	; 255
 3bc:	05 30       	cpi	r16, 0x05	; 5
 3be:	11 05       	cpc	r17, r1
 3c0:	b8 f3       	brcs	.-18     	; 0x3b0 <writeLcdF+0x1a>
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	c9 df       	rcall	.-110    	; 0x358 <lcdSid>
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	d1 df       	rcall	.-94     	; 0x36c <lcdSclk>
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	cf df       	rcall	.-98     	; 0x36c <lcdSclk>
 3ce:	83 e4       	ldi	r24, 0x43	; 67
 3d0:	e8 16       	cp	r14, r24
 3d2:	f1 04       	cpc	r15, r1
 3d4:	19 f4       	brne	.+6      	; 0x3dc <writeLcdF+0x46>
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	bf df       	rcall	.-130    	; 0x358 <lcdSid>
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <writeLcdF+0x4a>
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	bc df       	rcall	.-136    	; 0x358 <lcdSid>
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	c4 df       	rcall	.-120    	; 0x36c <lcdSclk>
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	c2 df       	rcall	.-124    	; 0x36c <lcdSclk>
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	b6 df       	rcall	.-148    	; 0x358 <lcdSid>
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	be df       	rcall	.-132    	; 0x36c <lcdSclk>
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	bc df       	rcall	.-136    	; 0x36c <lcdSclk>
 3f4:	00 e0       	ldi	r16, 0x00	; 0
 3f6:	10 e0       	ldi	r17, 0x00	; 0
 3f8:	11 c0       	rjmp	.+34     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	b7 df       	rcall	.-146    	; 0x36c <lcdSclk>
 3fe:	c0 ff       	sbrs	r28, 0
 400:	03 c0       	rjmp	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	a9 df       	rcall	.-174    	; 0x358 <lcdSid>
 406:	02 c0       	rjmp	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	a6 df       	rcall	.-180    	; 0x358 <lcdSid>
 40c:	d6 95       	lsr	r29
 40e:	c7 95       	ror	r28
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	ac df       	rcall	.-168    	; 0x36c <lcdSclk>
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	aa df       	rcall	.-172    	; 0x36c <lcdSclk>
 418:	0f 5f       	subi	r16, 0xFF	; 255
 41a:	1f 4f       	sbci	r17, 0xFF	; 255
 41c:	04 30       	cpi	r16, 0x04	; 4
 41e:	11 05       	cpc	r17, r1
 420:	60 f3       	brcs	.-40     	; 0x3fa <writeLcdF+0x64>
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	99 df       	rcall	.-206    	; 0x358 <lcdSid>
 426:	00 e0       	ldi	r16, 0x00	; 0
 428:	10 e0       	ldi	r17, 0x00	; 0
 42a:	06 c0       	rjmp	.+12     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	9e df       	rcall	.-196    	; 0x36c <lcdSclk>
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	9c df       	rcall	.-200    	; 0x36c <lcdSclk>
 434:	0f 5f       	subi	r16, 0xFF	; 255
 436:	1f 4f       	sbci	r17, 0xFF	; 255
 438:	04 30       	cpi	r16, 0x04	; 4
 43a:	11 05       	cpc	r17, r1
 43c:	b8 f3       	brcs	.-18     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 43e:	00 e0       	ldi	r16, 0x00	; 0
 440:	10 e0       	ldi	r17, 0x00	; 0
 442:	11 c0       	rjmp	.+34     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 444:	80 e0       	ldi	r24, 0x00	; 0
 446:	92 df       	rcall	.-220    	; 0x36c <lcdSclk>
 448:	c0 ff       	sbrs	r28, 0
 44a:	03 c0       	rjmp	.+6      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	84 df       	rcall	.-248    	; 0x358 <lcdSid>
 450:	02 c0       	rjmp	.+4      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	81 df       	rcall	.-254    	; 0x358 <lcdSid>
 456:	d6 95       	lsr	r29
 458:	c7 95       	ror	r28
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	87 df       	rcall	.-242    	; 0x36c <lcdSclk>
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	85 df       	rcall	.-246    	; 0x36c <lcdSclk>
 462:	0f 5f       	subi	r16, 0xFF	; 255
 464:	1f 4f       	sbci	r17, 0xFF	; 255
 466:	04 30       	cpi	r16, 0x04	; 4
 468:	11 05       	cpc	r17, r1
 46a:	60 f3       	brcs	.-40     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	74 df       	rcall	.-280    	; 0x358 <lcdSid>
 470:	c0 e0       	ldi	r28, 0x00	; 0
 472:	d0 e0       	ldi	r29, 0x00	; 0
 474:	05 c0       	rjmp	.+10     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	79 df       	rcall	.-270    	; 0x36c <lcdSclk>
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	77 df       	rcall	.-274    	; 0x36c <lcdSclk>
 47e:	21 96       	adiw	r28, 0x01	; 1
 480:	c4 30       	cpi	r28, 0x04	; 4
 482:	d1 05       	cpc	r29, r1
 484:	c0 f3       	brcs	.-16     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	67 df       	rcall	.-306    	; 0x358 <lcdSid>
 48a:	87 ec       	ldi	r24, 0xC7	; 199
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	01 97       	sbiw	r24, 0x01	; 1
 490:	f1 f7       	brne	.-4      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 492:	00 c0       	rjmp	.+0      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 494:	00 00       	nop
 496:	df 91       	pop	r29
 498:	cf 91       	pop	r28
 49a:	1f 91       	pop	r17
 49c:	0f 91       	pop	r16
 49e:	ff 90       	pop	r15
 4a0:	ef 90       	pop	r14
 4a2:	08 95       	ret

000004a4 <lcdWriteText>:
 4a4:	1f 93       	push	r17
 4a6:	cf 93       	push	r28
 4a8:	df 93       	push	r29
 4aa:	cd b7       	in	r28, 0x3d	; 61
 4ac:	de b7       	in	r29, 0x3e	; 62
 4ae:	65 97       	sbiw	r28, 0x15	; 21
 4b0:	0f b6       	in	r0, 0x3f	; 63
 4b2:	f8 94       	cli
 4b4:	de bf       	out	0x3e, r29	; 62
 4b6:	0f be       	out	0x3f, r0	; 63
 4b8:	cd bf       	out	0x3d, r28	; 61
 4ba:	9e 01       	movw	r18, r28
 4bc:	20 5e       	subi	r18, 0xE0	; 224
 4be:	3f 4f       	sbci	r19, 0xFF	; 255
 4c0:	4e 8d       	ldd	r20, Y+30	; 0x1e
 4c2:	5f 8d       	ldd	r21, Y+31	; 0x1f
 4c4:	65 e1       	ldi	r22, 0x15	; 21
 4c6:	70 e0       	ldi	r23, 0x00	; 0
 4c8:	ce 01       	movw	r24, r28
 4ca:	01 96       	adiw	r24, 0x01	; 1
 4cc:	2a d2       	rcall	.+1108   	; 0x922 <vsnprintf>
 4ce:	6d 8d       	ldd	r22, Y+29	; 0x1d
 4d0:	8c 8d       	ldd	r24, Y+28	; 0x1c
 4d2:	90 e2       	ldi	r25, 0x20	; 32
 4d4:	89 9f       	mul	r24, r25
 4d6:	60 0d       	add	r22, r0
 4d8:	11 24       	eor	r1, r1
 4da:	60 68       	ori	r22, 0x80	; 128
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	83 e4       	ldi	r24, 0x43	; 67
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	59 df       	rcall	.-334    	; 0x396 <writeLcdF>
 4e4:	10 e0       	ldi	r17, 0x00	; 0
 4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <lcdWriteText+0x4e>
 4e8:	1f 5f       	subi	r17, 0xFF	; 255
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	84 e4       	ldi	r24, 0x44	; 68
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	52 df       	rcall	.-348    	; 0x396 <writeLcdF>
 4f2:	e1 e0       	ldi	r30, 0x01	; 1
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	ec 0f       	add	r30, r28
 4f8:	fd 1f       	adc	r31, r29
 4fa:	e1 0f       	add	r30, r17
 4fc:	f1 1d       	adc	r31, r1
 4fe:	60 81       	ld	r22, Z
 500:	61 11       	cpse	r22, r1
 502:	f2 cf       	rjmp	.-28     	; 0x4e8 <lcdWriteText+0x44>
 504:	65 96       	adiw	r28, 0x15	; 21
 506:	0f b6       	in	r0, 0x3f	; 63
 508:	f8 94       	cli
 50a:	de bf       	out	0x3e, r29	; 62
 50c:	0f be       	out	0x3f, r0	; 63
 50e:	cd bf       	out	0x3d, r28	; 61
 510:	df 91       	pop	r29
 512:	cf 91       	pop	r28
 514:	1f 91       	pop	r17
 516:	08 95       	ret

00000518 <lcdClear>:
 518:	61 e0       	ldi	r22, 0x01	; 1
 51a:	70 e0       	ldi	r23, 0x00	; 0
 51c:	83 e4       	ldi	r24, 0x43	; 67
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	3a df       	rcall	.-396    	; 0x396 <writeLcdF>
 522:	8f e3       	ldi	r24, 0x3F	; 63
 524:	9f e1       	ldi	r25, 0x1F	; 31
 526:	01 97       	sbiw	r24, 0x01	; 1
 528:	f1 f7       	brne	.-4      	; 0x526 <lcdClear+0xe>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <lcdClear+0x14>
 52c:	00 00       	nop
 52e:	80 e3       	ldi	r24, 0x30	; 48
 530:	92 e0       	ldi	r25, 0x02	; 2
 532:	9f 93       	push	r25
 534:	8f 93       	push	r24
 536:	1f 92       	push	r1
 538:	1f 92       	push	r1
 53a:	b4 df       	rcall	.-152    	; 0x4a4 <lcdWriteText>
 53c:	0f 90       	pop	r0
 53e:	0f 90       	pop	r0
 540:	0f 90       	pop	r0
 542:	0f 90       	pop	r0
 544:	08 95       	ret

00000546 <initLcd>:
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	11 df       	rcall	.-478    	; 0x36c <lcdSclk>
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	05 df       	rcall	.-502    	; 0x358 <lcdSid>
 54e:	64 e3       	ldi	r22, 0x34	; 52
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	83 e4       	ldi	r24, 0x43	; 67
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	1f df       	rcall	.-450    	; 0x396 <writeLcdF>
 558:	69 e0       	ldi	r22, 0x09	; 9
 55a:	70 e0       	ldi	r23, 0x00	; 0
 55c:	83 e4       	ldi	r24, 0x43	; 67
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	1a df       	rcall	.-460    	; 0x396 <writeLcdF>
 562:	60 e3       	ldi	r22, 0x30	; 48
 564:	70 e0       	ldi	r23, 0x00	; 0
 566:	83 e4       	ldi	r24, 0x43	; 67
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	15 df       	rcall	.-470    	; 0x396 <writeLcdF>
 56c:	6c e0       	ldi	r22, 0x0C	; 12
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	83 e4       	ldi	r24, 0x43	; 67
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	10 df       	rcall	.-480    	; 0x396 <writeLcdF>
 576:	d0 df       	rcall	.-96     	; 0x518 <lcdClear>
 578:	67 e0       	ldi	r22, 0x07	; 7
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	83 e4       	ldi	r24, 0x43	; 67
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0a df       	rcall	.-492    	; 0x396 <writeLcdF>
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	fd ce       	rjmp	.-518    	; 0x380 <lcdLight>
 586:	08 95       	ret

00000588 <initBoard>:
 588:	ff 92       	push	r15
 58a:	0f 93       	push	r16
 58c:	1f 93       	push	r17
 58e:	cf 93       	push	r28
 590:	df 93       	push	r29
 592:	c8 2f       	mov	r28, r24
 594:	85 b7       	in	r24, 0x35	; 53
 596:	85 bf       	out	0x35, r24	; 53
 598:	12 b8       	out	0x02, r1	; 2
 59a:	8f ef       	ldi	r24, 0xFF	; 255
 59c:	81 b9       	out	0x01, r24	; 1
 59e:	15 b8       	out	0x05, r1	; 5
 5a0:	84 b9       	out	0x04, r24	; 4
 5a2:	88 b9       	out	0x08, r24	; 8
 5a4:	17 b8       	out	0x07, r1	; 7
 5a6:	8b b9       	out	0x0b, r24	; 11
 5a8:	1a b8       	out	0x0a, r1	; 10
 5aa:	8e b9       	out	0x0e, r24	; 14
 5ac:	1d b8       	out	0x0d, r1	; 13
 5ae:	9e b1       	in	r25, 0x0e	; 14
 5b0:	9b 7f       	andi	r25, 0xFB	; 251
 5b2:	9e b9       	out	0x0e, r25	; 14
 5b4:	11 ba       	out	0x11, r1	; 17
 5b6:	10 ba       	out	0x10, r1	; 16
 5b8:	94 e0       	ldi	r25, 0x04	; 4
 5ba:	94 bb       	out	0x14, r25	; 20
 5bc:	93 b3       	in	r25, 0x13	; 19
 5be:	93 60       	ori	r25, 0x03	; 3
 5c0:	93 bb       	out	0x13, r25	; 19
 5c2:	93 b3       	in	r25, 0x13	; 19
 5c4:	90 62       	ori	r25, 0x20	; 32
 5c6:	93 bb       	out	0x13, r25	; 19
 5c8:	97 ec       	ldi	r25, 0xC7	; 199
 5ca:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 5ce:	98 e3       	ldi	r25, 0x38	; 56
 5d0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 5d4:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 5d8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 5dc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 5e0:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 5e4:	8c e3       	ldi	r24, 0x3C	; 60
 5e6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 5ea:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 5ee:	78 94       	sei
 5f0:	5c de       	rcall	.-840    	; 0x2aa <startSystemTimeMs>
 5f2:	a9 df       	rcall	.-174    	; 0x546 <initLcd>
 5f4:	64 de       	rcall	.-824    	; 0x2be <initAdc>
 5f6:	9c de       	rcall	.-712    	; 0x330 <initRgb>
 5f8:	cc 23       	and	r28, r28
 5fa:	09 f4       	brne	.+2      	; 0x5fe <initBoard+0x76>
 5fc:	a3 c0       	rjmp	.+326    	; 0x744 <initBoard+0x1bc>
 5fe:	8f ef       	ldi	r24, 0xFF	; 255
 600:	bf de       	rcall	.-642    	; 0x380 <lcdLight>
 602:	40 e0       	ldi	r20, 0x00	; 0
 604:	50 e0       	ldi	r21, 0x00	; 0
 606:	6f ef       	ldi	r22, 0xFF	; 255
 608:	73 e0       	ldi	r23, 0x03	; 3
 60a:	80 e0       	ldi	r24, 0x00	; 0
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	79 de       	rcall	.-782    	; 0x302 <rgbWrite>
 610:	8d e1       	ldi	r24, 0x1D	; 29
 612:	92 e0       	ldi	r25, 0x02	; 2
 614:	9f 93       	push	r25
 616:	8f 93       	push	r24
 618:	1f 92       	push	r1
 61a:	1f 92       	push	r1
 61c:	43 df       	rcall	.-378    	; 0x4a4 <lcdWriteText>
 61e:	82 e3       	ldi	r24, 0x32	; 50
 620:	92 e0       	ldi	r25, 0x02	; 2
 622:	9f 93       	push	r25
 624:	8f 93       	push	r24
 626:	1f 92       	push	r1
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	8f 93       	push	r24
 62c:	3b df       	rcall	.-394    	; 0x4a4 <lcdWriteText>
 62e:	88 e0       	ldi	r24, 0x08	; 8
 630:	92 e0       	ldi	r25, 0x02	; 2
 632:	9f 93       	push	r25
 634:	8f 93       	push	r24
 636:	1f 92       	push	r1
 638:	82 e0       	ldi	r24, 0x02	; 2
 63a:	8f 93       	push	r24
 63c:	33 df       	rcall	.-410    	; 0x4a4 <lcdWriteText>
 63e:	87 e4       	ldi	r24, 0x47	; 71
 640:	92 e0       	ldi	r25, 0x02	; 2
 642:	9f 93       	push	r25
 644:	8f 93       	push	r24
 646:	1f 92       	push	r1
 648:	83 e0       	ldi	r24, 0x03	; 3
 64a:	8f 93       	push	r24
 64c:	2b df       	rcall	.-426    	; 0x4a4 <lcdWriteText>
 64e:	8d b7       	in	r24, 0x3d	; 61
 650:	9e b7       	in	r25, 0x3e	; 62
 652:	40 96       	adiw	r24, 0x10	; 16
 654:	0f b6       	in	r0, 0x3f	; 63
 656:	f8 94       	cli
 658:	9e bf       	out	0x3e, r25	; 62
 65a:	0f be       	out	0x3f, r0	; 63
 65c:	8d bf       	out	0x3d, r24	; 61
 65e:	ff 24       	eor	r15, r15
 660:	f3 94       	inc	r15
 662:	c0 e0       	ldi	r28, 0x00	; 0
 664:	10 e0       	ldi	r17, 0x00	; 0
 666:	01 e0       	ldi	r16, 0x01	; 1
 668:	d0 e0       	ldi	r29, 0x00	; 0
 66a:	00 23       	and	r16, r16
 66c:	51 f0       	breq	.+20     	; 0x682 <initBoard+0xfa>
 66e:	80 e0       	ldi	r24, 0x00	; 0
 670:	90 e8       	ldi	r25, 0x80	; 128
 672:	0d 2e       	mov	r0, r29
 674:	02 c0       	rjmp	.+4      	; 0x67a <initBoard+0xf2>
 676:	96 95       	lsr	r25
 678:	87 95       	ror	r24
 67a:	0a 94       	dec	r0
 67c:	e2 f7       	brpl	.-8      	; 0x676 <initBoard+0xee>
 67e:	0d de       	rcall	.-998    	; 0x29a <ledWriteAll>
 680:	09 c0       	rjmp	.+18     	; 0x694 <initBoard+0x10c>
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	0d 2e       	mov	r0, r29
 688:	02 c0       	rjmp	.+4      	; 0x68e <initBoard+0x106>
 68a:	88 0f       	add	r24, r24
 68c:	99 1f       	adc	r25, r25
 68e:	0a 94       	dec	r0
 690:	e2 f7       	brpl	.-8      	; 0x68a <initBoard+0x102>
 692:	03 de       	rcall	.-1018   	; 0x29a <ledWriteAll>
 694:	df 5f       	subi	r29, 0xFF	; 255
 696:	d1 31       	cpi	r29, 0x11	; 17
 698:	28 f0       	brcs	.+10     	; 0x6a4 <initBoard+0x11c>
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	01 11       	cpse	r16, r1
 69e:	80 e0       	ldi	r24, 0x00	; 0
 6a0:	08 2f       	mov	r16, r24
 6a2:	d0 e0       	ldi	r29, 0x00	; 0
 6a4:	ff 20       	and	r15, r15
 6a6:	11 f0       	breq	.+4      	; 0x6ac <initBoard+0x124>
 6a8:	ce 5f       	subi	r28, 0xFE	; 254
 6aa:	01 c0       	rjmp	.+2      	; 0x6ae <initBoard+0x126>
 6ac:	c2 50       	subi	r28, 0x02	; 2
 6ae:	8c 2f       	mov	r24, r28
 6b0:	67 de       	rcall	.-818    	; 0x380 <lcdLight>
 6b2:	ce 3f       	cpi	r28, 0xFE	; 254
 6b4:	09 f4       	brne	.+2      	; 0x6b8 <initBoard+0x130>
 6b6:	f1 2c       	mov	r15, r1
 6b8:	c8 37       	cpi	r28, 0x78	; 120
 6ba:	11 f4       	brne	.+4      	; 0x6c0 <initBoard+0x138>
 6bc:	ff 24       	eor	r15, r15
 6be:	f3 94       	inc	r15
 6c0:	11 11       	cpse	r17, r1
 6c2:	17 c0       	rjmp	.+46     	; 0x6f2 <initBoard+0x16a>
 6c4:	ef dd       	rcall	.-1058   	; 0x2a4 <buttonReadAllPL>
 6c6:	83 7c       	andi	r24, 0xC3	; 195
 6c8:	a1 f0       	breq	.+40     	; 0x6f2 <initBoard+0x16a>
 6ca:	40 e0       	ldi	r20, 0x00	; 0
 6cc:	50 e0       	ldi	r21, 0x00	; 0
 6ce:	66 e2       	ldi	r22, 0x26	; 38
 6d0:	72 e0       	ldi	r23, 0x02	; 2
 6d2:	8f ef       	ldi	r24, 0xFF	; 255
 6d4:	93 e0       	ldi	r25, 0x03	; 3
 6d6:	15 de       	rcall	.-982    	; 0x302 <rgbWrite>
 6d8:	8c e5       	ldi	r24, 0x5C	; 92
 6da:	92 e0       	ldi	r25, 0x02	; 2
 6dc:	9f 93       	push	r25
 6de:	8f 93       	push	r24
 6e0:	1f 92       	push	r1
 6e2:	83 e0       	ldi	r24, 0x03	; 3
 6e4:	8f 93       	push	r24
 6e6:	de de       	rcall	.-580    	; 0x4a4 <lcdWriteText>
 6e8:	0f 90       	pop	r0
 6ea:	0f 90       	pop	r0
 6ec:	0f 90       	pop	r0
 6ee:	0f 90       	pop	r0
 6f0:	11 e0       	ldi	r17, 0x01	; 1
 6f2:	11 23       	and	r17, r17
 6f4:	19 f0       	breq	.+6      	; 0x6fc <initBoard+0x174>
 6f6:	d6 dd       	rcall	.-1108   	; 0x2a4 <buttonReadAllPL>
 6f8:	83 7c       	andi	r24, 0xC3	; 195
 6fa:	39 f0       	breq	.+14     	; 0x70a <initBoard+0x182>
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	9c e7       	ldi	r25, 0x7C	; 124
 700:	01 97       	sbiw	r24, 0x01	; 1
 702:	f1 f7       	brne	.-4      	; 0x700 <initBoard+0x178>
 704:	00 c0       	rjmp	.+0      	; 0x706 <initBoard+0x17e>
 706:	00 00       	nop
 708:	b0 cf       	rjmp	.-160    	; 0x66a <initBoard+0xe2>
 70a:	06 df       	rcall	.-500    	; 0x518 <lcdClear>
 70c:	80 e0       	ldi	r24, 0x00	; 0
 70e:	38 de       	rcall	.-912    	; 0x380 <lcdLight>
 710:	80 e0       	ldi	r24, 0x00	; 0
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	c2 dd       	rcall	.-1148   	; 0x29a <ledWriteAll>
 716:	40 e0       	ldi	r20, 0x00	; 0
 718:	50 e0       	ldi	r21, 0x00	; 0
 71a:	60 e0       	ldi	r22, 0x00	; 0
 71c:	70 e0       	ldi	r23, 0x00	; 0
 71e:	80 e0       	ldi	r24, 0x00	; 0
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	ef dd       	rcall	.-1058   	; 0x302 <rgbWrite>
 724:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 728:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 72c:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 730:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 734:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 738:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 73c:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 740:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 744:	df 91       	pop	r29
 746:	cf 91       	pop	r28
 748:	1f 91       	pop	r17
 74a:	0f 91       	pop	r16
 74c:	ff 90       	pop	r15
 74e:	08 95       	ret

00000750 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 750:	cf 93       	push	r28
 752:	df 93       	push	r29
 754:	cd b7       	in	r28, 0x3d	; 61
 756:	de b7       	in	r29, 0x3e	; 62
 758:	28 97       	sbiw	r28, 0x08	; 8
 75a:	0f b6       	in	r0, 0x3f	; 63
 75c:	f8 94       	cli
 75e:	de bf       	out	0x3e, r29	; 62
 760:	0f be       	out	0x3f, r0	; 63
 762:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 764:	88 e0       	ldi	r24, 0x08	; 8
 766:	e0 e0       	ldi	r30, 0x00	; 0
 768:	f2 e0       	ldi	r31, 0x02	; 2
 76a:	de 01       	movw	r26, r28
 76c:	11 96       	adiw	r26, 0x01	; 1
 76e:	01 90       	ld	r0, Z+
 770:	0d 92       	st	X+, r0
 772:	8a 95       	dec	r24
 774:	e1 f7       	brne	.-8      	; 0x76e <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 776:	e5 e0       	ldi	r30, 0x05	; 5
 778:	f1 e0       	ldi	r31, 0x01	; 1
 77a:	80 81       	ld	r24, Z
 77c:	8f 7b       	andi	r24, 0xBF	; 191
 77e:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 780:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 784:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	8c 0f       	add	r24, r28
 78e:	9d 1f       	adc	r25, r29
 790:	e8 0f       	add	r30, r24
 792:	f9 1f       	adc	r31, r25
 794:	80 81       	ld	r24, Z
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 79c:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	26 c0       	rjmp	.+76     	; 0x7f0 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 7a4:	e7 e3       	ldi	r30, 0x37	; 55
 7a6:	f0 e0       	ldi	r31, 0x00	; 0
 7a8:	e8 1b       	sub	r30, r24
 7aa:	f1 09       	sbc	r31, r1
 7ac:	ee 0f       	add	r30, r30
 7ae:	ff 1f       	adc	r31, r31
 7b0:	ee 57       	subi	r30, 0x7E	; 126
 7b2:	fd 4f       	sbci	r31, 0xFD	; 253
 7b4:	40 81       	ld	r20, Z
 7b6:	51 81       	ldd	r21, Z+1	; 0x01
 7b8:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 7bc:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 7c0:	24 23       	and	r18, r20
 7c2:	35 23       	and	r19, r21
 7c4:	23 2b       	or	r18, r19
 7c6:	31 f0       	breq	.+12     	; 0x7d4 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 7c8:	e5 e0       	ldi	r30, 0x05	; 5
 7ca:	f1 e0       	ldi	r31, 0x01	; 1
 7cc:	90 81       	ld	r25, Z
 7ce:	90 62       	ori	r25, 0x20	; 32
 7d0:	90 83       	st	Z, r25
 7d2:	05 c0       	rjmp	.+10     	; 0x7de <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7d4:	e5 e0       	ldi	r30, 0x05	; 5
 7d6:	f1 e0       	ldi	r31, 0x01	; 1
 7d8:	90 81       	ld	r25, Z
 7da:	9f 7d       	andi	r25, 0xDF	; 223
 7dc:	90 83       	st	Z, r25
        }
        CLOCK_1;
 7de:	e5 e0       	ldi	r30, 0x05	; 5
 7e0:	f1 e0       	ldi	r31, 0x01	; 1
 7e2:	90 81       	ld	r25, Z
 7e4:	90 61       	ori	r25, 0x10	; 16
 7e6:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7e8:	90 81       	ld	r25, Z
 7ea:	9f 7e       	andi	r25, 0xEF	; 239
 7ec:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7ee:	8f 5f       	subi	r24, 0xFF	; 255
 7f0:	88 33       	cpi	r24, 0x38	; 56
 7f2:	c0 f2       	brcs	.-80     	; 0x7a4 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 7f4:	e5 e0       	ldi	r30, 0x05	; 5
 7f6:	f1 e0       	ldi	r31, 0x01	; 1
 7f8:	80 81       	ld	r24, Z
 7fa:	87 7f       	andi	r24, 0xF7	; 247
 7fc:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 7fe:	80 81       	ld	r24, Z
 800:	88 7f       	andi	r24, 0xF8	; 248
 802:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 804:	90 81       	ld	r25, Z
 806:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 80a:	89 2b       	or	r24, r25
 80c:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 80e:	80 81       	ld	r24, Z
 810:	80 64       	ori	r24, 0x40	; 64
 812:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 814:	80 81       	ld	r24, Z
 816:	88 60       	ori	r24, 0x08	; 8
 818:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 81a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 81e:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 822:	87 30       	cpi	r24, 0x07	; 7
 824:	91 05       	cpc	r25, r1
 826:	30 f4       	brcc	.+12     	; 0x834 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 828:	01 96       	adiw	r24, 0x01	; 1
 82a:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 82e:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 832:	07 c0       	rjmp	.+14     	; 0x842 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 834:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 838:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 83c:	81 e0       	ldi	r24, 0x01	; 1
 83e:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 842:	28 96       	adiw	r28, 0x08	; 8
 844:	0f b6       	in	r0, 0x3f	; 63
 846:	f8 94       	cli
 848:	de bf       	out	0x3e, r29	; 62
 84a:	0f be       	out	0x3f, r0	; 63
 84c:	cd bf       	out	0x3d, r28	; 61
 84e:	df 91       	pop	r29
 850:	cf 91       	pop	r28
 852:	08 95       	ret

00000854 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 854:	1f 92       	push	r1
 856:	0f 92       	push	r0
 858:	0f b6       	in	r0, 0x3f	; 63
 85a:	0f 92       	push	r0
 85c:	11 24       	eor	r1, r1
 85e:	0b b6       	in	r0, 0x3b	; 59
 860:	0f 92       	push	r0
 862:	2f 93       	push	r18
 864:	3f 93       	push	r19
 866:	4f 93       	push	r20
 868:	5f 93       	push	r21
 86a:	6f 93       	push	r22
 86c:	7f 93       	push	r23
 86e:	8f 93       	push	r24
 870:	9f 93       	push	r25
 872:	af 93       	push	r26
 874:	bf 93       	push	r27
 876:	ef 93       	push	r30
 878:	ff 93       	push	r31
    systemTimeMs += 1;
 87a:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 87e:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 882:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 886:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 88a:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 88e:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 892:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 896:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 89a:	a1 e0       	ldi	r26, 0x01	; 1
 89c:	36 d0       	rcall	.+108    	; 0x90a <__adddi3_s8>
 89e:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 8a2:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 8a6:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 8aa:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 8ae:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 8b2:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 8b6:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 8ba:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 8be:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 8c2:	81 11       	cpse	r24, r1
 8c4:	45 df       	rcall	.-374    	; 0x750 <matrixWriteNextLine>
}
 8c6:	ff 91       	pop	r31
 8c8:	ef 91       	pop	r30
 8ca:	bf 91       	pop	r27
 8cc:	af 91       	pop	r26
 8ce:	9f 91       	pop	r25
 8d0:	8f 91       	pop	r24
 8d2:	7f 91       	pop	r23
 8d4:	6f 91       	pop	r22
 8d6:	5f 91       	pop	r21
 8d8:	4f 91       	pop	r20
 8da:	3f 91       	pop	r19
 8dc:	2f 91       	pop	r18
 8de:	0f 90       	pop	r0
 8e0:	0b be       	out	0x3b, r0	; 59
 8e2:	0f 90       	pop	r0
 8e4:	0f be       	out	0x3f, r0	; 63
 8e6:	0f 90       	pop	r0
 8e8:	1f 90       	pop	r1
 8ea:	18 95       	reti

000008ec <__umulhisi3>:
 8ec:	a2 9f       	mul	r26, r18
 8ee:	b0 01       	movw	r22, r0
 8f0:	b3 9f       	mul	r27, r19
 8f2:	c0 01       	movw	r24, r0
 8f4:	a3 9f       	mul	r26, r19
 8f6:	70 0d       	add	r23, r0
 8f8:	81 1d       	adc	r24, r1
 8fa:	11 24       	eor	r1, r1
 8fc:	91 1d       	adc	r25, r1
 8fe:	b2 9f       	mul	r27, r18
 900:	70 0d       	add	r23, r0
 902:	81 1d       	adc	r24, r1
 904:	11 24       	eor	r1, r1
 906:	91 1d       	adc	r25, r1
 908:	08 95       	ret

0000090a <__adddi3_s8>:
 90a:	00 24       	eor	r0, r0
 90c:	a7 fd       	sbrc	r26, 7
 90e:	00 94       	com	r0
 910:	2a 0f       	add	r18, r26
 912:	30 1d       	adc	r19, r0
 914:	40 1d       	adc	r20, r0
 916:	50 1d       	adc	r21, r0
 918:	60 1d       	adc	r22, r0
 91a:	70 1d       	adc	r23, r0
 91c:	80 1d       	adc	r24, r0
 91e:	90 1d       	adc	r25, r0
 920:	08 95       	ret

00000922 <vsnprintf>:
 922:	0f 93       	push	r16
 924:	1f 93       	push	r17
 926:	cf 93       	push	r28
 928:	df 93       	push	r29
 92a:	cd b7       	in	r28, 0x3d	; 61
 92c:	de b7       	in	r29, 0x3e	; 62
 92e:	2e 97       	sbiw	r28, 0x0e	; 14
 930:	0f b6       	in	r0, 0x3f	; 63
 932:	f8 94       	cli
 934:	de bf       	out	0x3e, r29	; 62
 936:	0f be       	out	0x3f, r0	; 63
 938:	cd bf       	out	0x3d, r28	; 61
 93a:	8c 01       	movw	r16, r24
 93c:	fa 01       	movw	r30, r20
 93e:	86 e0       	ldi	r24, 0x06	; 6
 940:	8c 83       	std	Y+4, r24	; 0x04
 942:	1a 83       	std	Y+2, r17	; 0x02
 944:	09 83       	std	Y+1, r16	; 0x01
 946:	77 ff       	sbrs	r23, 7
 948:	02 c0       	rjmp	.+4      	; 0x94e <vsnprintf+0x2c>
 94a:	60 e0       	ldi	r22, 0x00	; 0
 94c:	70 e8       	ldi	r23, 0x80	; 128
 94e:	cb 01       	movw	r24, r22
 950:	01 97       	sbiw	r24, 0x01	; 1
 952:	9e 83       	std	Y+6, r25	; 0x06
 954:	8d 83       	std	Y+5, r24	; 0x05
 956:	a9 01       	movw	r20, r18
 958:	bf 01       	movw	r22, r30
 95a:	ce 01       	movw	r24, r28
 95c:	01 96       	adiw	r24, 0x01	; 1
 95e:	19 d0       	rcall	.+50     	; 0x992 <vfprintf>
 960:	4d 81       	ldd	r20, Y+5	; 0x05
 962:	5e 81       	ldd	r21, Y+6	; 0x06
 964:	57 fd       	sbrc	r21, 7
 966:	0a c0       	rjmp	.+20     	; 0x97c <vsnprintf+0x5a>
 968:	2f 81       	ldd	r18, Y+7	; 0x07
 96a:	38 85       	ldd	r19, Y+8	; 0x08
 96c:	42 17       	cp	r20, r18
 96e:	53 07       	cpc	r21, r19
 970:	0c f4       	brge	.+2      	; 0x974 <vsnprintf+0x52>
 972:	9a 01       	movw	r18, r20
 974:	f8 01       	movw	r30, r16
 976:	e2 0f       	add	r30, r18
 978:	f3 1f       	adc	r31, r19
 97a:	10 82       	st	Z, r1
 97c:	2e 96       	adiw	r28, 0x0e	; 14
 97e:	0f b6       	in	r0, 0x3f	; 63
 980:	f8 94       	cli
 982:	de bf       	out	0x3e, r29	; 62
 984:	0f be       	out	0x3f, r0	; 63
 986:	cd bf       	out	0x3d, r28	; 61
 988:	df 91       	pop	r29
 98a:	cf 91       	pop	r28
 98c:	1f 91       	pop	r17
 98e:	0f 91       	pop	r16
 990:	08 95       	ret

00000992 <vfprintf>:
 992:	2f 92       	push	r2
 994:	3f 92       	push	r3
 996:	4f 92       	push	r4
 998:	5f 92       	push	r5
 99a:	6f 92       	push	r6
 99c:	7f 92       	push	r7
 99e:	8f 92       	push	r8
 9a0:	9f 92       	push	r9
 9a2:	af 92       	push	r10
 9a4:	bf 92       	push	r11
 9a6:	cf 92       	push	r12
 9a8:	df 92       	push	r13
 9aa:	ef 92       	push	r14
 9ac:	ff 92       	push	r15
 9ae:	0f 93       	push	r16
 9b0:	1f 93       	push	r17
 9b2:	cf 93       	push	r28
 9b4:	df 93       	push	r29
 9b6:	cd b7       	in	r28, 0x3d	; 61
 9b8:	de b7       	in	r29, 0x3e	; 62
 9ba:	2b 97       	sbiw	r28, 0x0b	; 11
 9bc:	0f b6       	in	r0, 0x3f	; 63
 9be:	f8 94       	cli
 9c0:	de bf       	out	0x3e, r29	; 62
 9c2:	0f be       	out	0x3f, r0	; 63
 9c4:	cd bf       	out	0x3d, r28	; 61
 9c6:	6c 01       	movw	r12, r24
 9c8:	7b 01       	movw	r14, r22
 9ca:	8a 01       	movw	r16, r20
 9cc:	fc 01       	movw	r30, r24
 9ce:	17 82       	std	Z+7, r1	; 0x07
 9d0:	16 82       	std	Z+6, r1	; 0x06
 9d2:	83 81       	ldd	r24, Z+3	; 0x03
 9d4:	81 ff       	sbrs	r24, 1
 9d6:	bf c1       	rjmp	.+894    	; 0xd56 <vfprintf+0x3c4>
 9d8:	ce 01       	movw	r24, r28
 9da:	01 96       	adiw	r24, 0x01	; 1
 9dc:	3c 01       	movw	r6, r24
 9de:	f6 01       	movw	r30, r12
 9e0:	93 81       	ldd	r25, Z+3	; 0x03
 9e2:	f7 01       	movw	r30, r14
 9e4:	93 fd       	sbrc	r25, 3
 9e6:	85 91       	lpm	r24, Z+
 9e8:	93 ff       	sbrs	r25, 3
 9ea:	81 91       	ld	r24, Z+
 9ec:	7f 01       	movw	r14, r30
 9ee:	88 23       	and	r24, r24
 9f0:	09 f4       	brne	.+2      	; 0x9f4 <vfprintf+0x62>
 9f2:	ad c1       	rjmp	.+858    	; 0xd4e <vfprintf+0x3bc>
 9f4:	85 32       	cpi	r24, 0x25	; 37
 9f6:	39 f4       	brne	.+14     	; 0xa06 <vfprintf+0x74>
 9f8:	93 fd       	sbrc	r25, 3
 9fa:	85 91       	lpm	r24, Z+
 9fc:	93 ff       	sbrs	r25, 3
 9fe:	81 91       	ld	r24, Z+
 a00:	7f 01       	movw	r14, r30
 a02:	85 32       	cpi	r24, 0x25	; 37
 a04:	21 f4       	brne	.+8      	; 0xa0e <vfprintf+0x7c>
 a06:	b6 01       	movw	r22, r12
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	d6 d1       	rcall	.+940    	; 0xdb8 <fputc>
 a0c:	e8 cf       	rjmp	.-48     	; 0x9de <vfprintf+0x4c>
 a0e:	91 2c       	mov	r9, r1
 a10:	21 2c       	mov	r2, r1
 a12:	31 2c       	mov	r3, r1
 a14:	ff e1       	ldi	r31, 0x1F	; 31
 a16:	f3 15       	cp	r31, r3
 a18:	d8 f0       	brcs	.+54     	; 0xa50 <vfprintf+0xbe>
 a1a:	8b 32       	cpi	r24, 0x2B	; 43
 a1c:	79 f0       	breq	.+30     	; 0xa3c <vfprintf+0xaa>
 a1e:	38 f4       	brcc	.+14     	; 0xa2e <vfprintf+0x9c>
 a20:	80 32       	cpi	r24, 0x20	; 32
 a22:	79 f0       	breq	.+30     	; 0xa42 <vfprintf+0xb0>
 a24:	83 32       	cpi	r24, 0x23	; 35
 a26:	a1 f4       	brne	.+40     	; 0xa50 <vfprintf+0xbe>
 a28:	23 2d       	mov	r18, r3
 a2a:	20 61       	ori	r18, 0x10	; 16
 a2c:	1d c0       	rjmp	.+58     	; 0xa68 <vfprintf+0xd6>
 a2e:	8d 32       	cpi	r24, 0x2D	; 45
 a30:	61 f0       	breq	.+24     	; 0xa4a <vfprintf+0xb8>
 a32:	80 33       	cpi	r24, 0x30	; 48
 a34:	69 f4       	brne	.+26     	; 0xa50 <vfprintf+0xbe>
 a36:	23 2d       	mov	r18, r3
 a38:	21 60       	ori	r18, 0x01	; 1
 a3a:	16 c0       	rjmp	.+44     	; 0xa68 <vfprintf+0xd6>
 a3c:	83 2d       	mov	r24, r3
 a3e:	82 60       	ori	r24, 0x02	; 2
 a40:	38 2e       	mov	r3, r24
 a42:	e3 2d       	mov	r30, r3
 a44:	e4 60       	ori	r30, 0x04	; 4
 a46:	3e 2e       	mov	r3, r30
 a48:	2a c0       	rjmp	.+84     	; 0xa9e <vfprintf+0x10c>
 a4a:	f3 2d       	mov	r31, r3
 a4c:	f8 60       	ori	r31, 0x08	; 8
 a4e:	1d c0       	rjmp	.+58     	; 0xa8a <vfprintf+0xf8>
 a50:	37 fc       	sbrc	r3, 7
 a52:	2d c0       	rjmp	.+90     	; 0xaae <vfprintf+0x11c>
 a54:	20 ed       	ldi	r18, 0xD0	; 208
 a56:	28 0f       	add	r18, r24
 a58:	2a 30       	cpi	r18, 0x0A	; 10
 a5a:	40 f0       	brcs	.+16     	; 0xa6c <vfprintf+0xda>
 a5c:	8e 32       	cpi	r24, 0x2E	; 46
 a5e:	b9 f4       	brne	.+46     	; 0xa8e <vfprintf+0xfc>
 a60:	36 fc       	sbrc	r3, 6
 a62:	75 c1       	rjmp	.+746    	; 0xd4e <vfprintf+0x3bc>
 a64:	23 2d       	mov	r18, r3
 a66:	20 64       	ori	r18, 0x40	; 64
 a68:	32 2e       	mov	r3, r18
 a6a:	19 c0       	rjmp	.+50     	; 0xa9e <vfprintf+0x10c>
 a6c:	36 fe       	sbrs	r3, 6
 a6e:	06 c0       	rjmp	.+12     	; 0xa7c <vfprintf+0xea>
 a70:	8a e0       	ldi	r24, 0x0A	; 10
 a72:	98 9e       	mul	r9, r24
 a74:	20 0d       	add	r18, r0
 a76:	11 24       	eor	r1, r1
 a78:	92 2e       	mov	r9, r18
 a7a:	11 c0       	rjmp	.+34     	; 0xa9e <vfprintf+0x10c>
 a7c:	ea e0       	ldi	r30, 0x0A	; 10
 a7e:	2e 9e       	mul	r2, r30
 a80:	20 0d       	add	r18, r0
 a82:	11 24       	eor	r1, r1
 a84:	22 2e       	mov	r2, r18
 a86:	f3 2d       	mov	r31, r3
 a88:	f0 62       	ori	r31, 0x20	; 32
 a8a:	3f 2e       	mov	r3, r31
 a8c:	08 c0       	rjmp	.+16     	; 0xa9e <vfprintf+0x10c>
 a8e:	8c 36       	cpi	r24, 0x6C	; 108
 a90:	21 f4       	brne	.+8      	; 0xa9a <vfprintf+0x108>
 a92:	83 2d       	mov	r24, r3
 a94:	80 68       	ori	r24, 0x80	; 128
 a96:	38 2e       	mov	r3, r24
 a98:	02 c0       	rjmp	.+4      	; 0xa9e <vfprintf+0x10c>
 a9a:	88 36       	cpi	r24, 0x68	; 104
 a9c:	41 f4       	brne	.+16     	; 0xaae <vfprintf+0x11c>
 a9e:	f7 01       	movw	r30, r14
 aa0:	93 fd       	sbrc	r25, 3
 aa2:	85 91       	lpm	r24, Z+
 aa4:	93 ff       	sbrs	r25, 3
 aa6:	81 91       	ld	r24, Z+
 aa8:	7f 01       	movw	r14, r30
 aaa:	81 11       	cpse	r24, r1
 aac:	b3 cf       	rjmp	.-154    	; 0xa14 <vfprintf+0x82>
 aae:	98 2f       	mov	r25, r24
 ab0:	9f 7d       	andi	r25, 0xDF	; 223
 ab2:	95 54       	subi	r25, 0x45	; 69
 ab4:	93 30       	cpi	r25, 0x03	; 3
 ab6:	28 f4       	brcc	.+10     	; 0xac2 <vfprintf+0x130>
 ab8:	0c 5f       	subi	r16, 0xFC	; 252
 aba:	1f 4f       	sbci	r17, 0xFF	; 255
 abc:	9f e3       	ldi	r25, 0x3F	; 63
 abe:	99 83       	std	Y+1, r25	; 0x01
 ac0:	0d c0       	rjmp	.+26     	; 0xadc <vfprintf+0x14a>
 ac2:	83 36       	cpi	r24, 0x63	; 99
 ac4:	31 f0       	breq	.+12     	; 0xad2 <vfprintf+0x140>
 ac6:	83 37       	cpi	r24, 0x73	; 115
 ac8:	71 f0       	breq	.+28     	; 0xae6 <vfprintf+0x154>
 aca:	83 35       	cpi	r24, 0x53	; 83
 acc:	09 f0       	breq	.+2      	; 0xad0 <vfprintf+0x13e>
 ace:	55 c0       	rjmp	.+170    	; 0xb7a <vfprintf+0x1e8>
 ad0:	20 c0       	rjmp	.+64     	; 0xb12 <vfprintf+0x180>
 ad2:	f8 01       	movw	r30, r16
 ad4:	80 81       	ld	r24, Z
 ad6:	89 83       	std	Y+1, r24	; 0x01
 ad8:	0e 5f       	subi	r16, 0xFE	; 254
 ada:	1f 4f       	sbci	r17, 0xFF	; 255
 adc:	88 24       	eor	r8, r8
 ade:	83 94       	inc	r8
 ae0:	91 2c       	mov	r9, r1
 ae2:	53 01       	movw	r10, r6
 ae4:	12 c0       	rjmp	.+36     	; 0xb0a <vfprintf+0x178>
 ae6:	28 01       	movw	r4, r16
 ae8:	f2 e0       	ldi	r31, 0x02	; 2
 aea:	4f 0e       	add	r4, r31
 aec:	51 1c       	adc	r5, r1
 aee:	f8 01       	movw	r30, r16
 af0:	a0 80       	ld	r10, Z
 af2:	b1 80       	ldd	r11, Z+1	; 0x01
 af4:	36 fe       	sbrs	r3, 6
 af6:	03 c0       	rjmp	.+6      	; 0xafe <vfprintf+0x16c>
 af8:	69 2d       	mov	r22, r9
 afa:	70 e0       	ldi	r23, 0x00	; 0
 afc:	02 c0       	rjmp	.+4      	; 0xb02 <vfprintf+0x170>
 afe:	6f ef       	ldi	r22, 0xFF	; 255
 b00:	7f ef       	ldi	r23, 0xFF	; 255
 b02:	c5 01       	movw	r24, r10
 b04:	4e d1       	rcall	.+668    	; 0xda2 <strnlen>
 b06:	4c 01       	movw	r8, r24
 b08:	82 01       	movw	r16, r4
 b0a:	f3 2d       	mov	r31, r3
 b0c:	ff 77       	andi	r31, 0x7F	; 127
 b0e:	3f 2e       	mov	r3, r31
 b10:	15 c0       	rjmp	.+42     	; 0xb3c <vfprintf+0x1aa>
 b12:	28 01       	movw	r4, r16
 b14:	22 e0       	ldi	r18, 0x02	; 2
 b16:	42 0e       	add	r4, r18
 b18:	51 1c       	adc	r5, r1
 b1a:	f8 01       	movw	r30, r16
 b1c:	a0 80       	ld	r10, Z
 b1e:	b1 80       	ldd	r11, Z+1	; 0x01
 b20:	36 fe       	sbrs	r3, 6
 b22:	03 c0       	rjmp	.+6      	; 0xb2a <vfprintf+0x198>
 b24:	69 2d       	mov	r22, r9
 b26:	70 e0       	ldi	r23, 0x00	; 0
 b28:	02 c0       	rjmp	.+4      	; 0xb2e <vfprintf+0x19c>
 b2a:	6f ef       	ldi	r22, 0xFF	; 255
 b2c:	7f ef       	ldi	r23, 0xFF	; 255
 b2e:	c5 01       	movw	r24, r10
 b30:	2d d1       	rcall	.+602    	; 0xd8c <strnlen_P>
 b32:	4c 01       	movw	r8, r24
 b34:	f3 2d       	mov	r31, r3
 b36:	f0 68       	ori	r31, 0x80	; 128
 b38:	3f 2e       	mov	r3, r31
 b3a:	82 01       	movw	r16, r4
 b3c:	33 fc       	sbrc	r3, 3
 b3e:	19 c0       	rjmp	.+50     	; 0xb72 <vfprintf+0x1e0>
 b40:	82 2d       	mov	r24, r2
 b42:	90 e0       	ldi	r25, 0x00	; 0
 b44:	88 16       	cp	r8, r24
 b46:	99 06       	cpc	r9, r25
 b48:	a0 f4       	brcc	.+40     	; 0xb72 <vfprintf+0x1e0>
 b4a:	b6 01       	movw	r22, r12
 b4c:	80 e2       	ldi	r24, 0x20	; 32
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	33 d1       	rcall	.+614    	; 0xdb8 <fputc>
 b52:	2a 94       	dec	r2
 b54:	f5 cf       	rjmp	.-22     	; 0xb40 <vfprintf+0x1ae>
 b56:	f5 01       	movw	r30, r10
 b58:	37 fc       	sbrc	r3, 7
 b5a:	85 91       	lpm	r24, Z+
 b5c:	37 fe       	sbrs	r3, 7
 b5e:	81 91       	ld	r24, Z+
 b60:	5f 01       	movw	r10, r30
 b62:	b6 01       	movw	r22, r12
 b64:	90 e0       	ldi	r25, 0x00	; 0
 b66:	28 d1       	rcall	.+592    	; 0xdb8 <fputc>
 b68:	21 10       	cpse	r2, r1
 b6a:	2a 94       	dec	r2
 b6c:	21 e0       	ldi	r18, 0x01	; 1
 b6e:	82 1a       	sub	r8, r18
 b70:	91 08       	sbc	r9, r1
 b72:	81 14       	cp	r8, r1
 b74:	91 04       	cpc	r9, r1
 b76:	79 f7       	brne	.-34     	; 0xb56 <vfprintf+0x1c4>
 b78:	e1 c0       	rjmp	.+450    	; 0xd3c <vfprintf+0x3aa>
 b7a:	84 36       	cpi	r24, 0x64	; 100
 b7c:	11 f0       	breq	.+4      	; 0xb82 <vfprintf+0x1f0>
 b7e:	89 36       	cpi	r24, 0x69	; 105
 b80:	39 f5       	brne	.+78     	; 0xbd0 <vfprintf+0x23e>
 b82:	f8 01       	movw	r30, r16
 b84:	37 fe       	sbrs	r3, 7
 b86:	07 c0       	rjmp	.+14     	; 0xb96 <vfprintf+0x204>
 b88:	60 81       	ld	r22, Z
 b8a:	71 81       	ldd	r23, Z+1	; 0x01
 b8c:	82 81       	ldd	r24, Z+2	; 0x02
 b8e:	93 81       	ldd	r25, Z+3	; 0x03
 b90:	0c 5f       	subi	r16, 0xFC	; 252
 b92:	1f 4f       	sbci	r17, 0xFF	; 255
 b94:	08 c0       	rjmp	.+16     	; 0xba6 <vfprintf+0x214>
 b96:	60 81       	ld	r22, Z
 b98:	71 81       	ldd	r23, Z+1	; 0x01
 b9a:	07 2e       	mov	r0, r23
 b9c:	00 0c       	add	r0, r0
 b9e:	88 0b       	sbc	r24, r24
 ba0:	99 0b       	sbc	r25, r25
 ba2:	0e 5f       	subi	r16, 0xFE	; 254
 ba4:	1f 4f       	sbci	r17, 0xFF	; 255
 ba6:	f3 2d       	mov	r31, r3
 ba8:	ff 76       	andi	r31, 0x6F	; 111
 baa:	3f 2e       	mov	r3, r31
 bac:	97 ff       	sbrs	r25, 7
 bae:	09 c0       	rjmp	.+18     	; 0xbc2 <vfprintf+0x230>
 bb0:	90 95       	com	r25
 bb2:	80 95       	com	r24
 bb4:	70 95       	com	r23
 bb6:	61 95       	neg	r22
 bb8:	7f 4f       	sbci	r23, 0xFF	; 255
 bba:	8f 4f       	sbci	r24, 0xFF	; 255
 bbc:	9f 4f       	sbci	r25, 0xFF	; 255
 bbe:	f0 68       	ori	r31, 0x80	; 128
 bc0:	3f 2e       	mov	r3, r31
 bc2:	2a e0       	ldi	r18, 0x0A	; 10
 bc4:	30 e0       	ldi	r19, 0x00	; 0
 bc6:	a3 01       	movw	r20, r6
 bc8:	33 d1       	rcall	.+614    	; 0xe30 <__ultoa_invert>
 bca:	88 2e       	mov	r8, r24
 bcc:	86 18       	sub	r8, r6
 bce:	44 c0       	rjmp	.+136    	; 0xc58 <vfprintf+0x2c6>
 bd0:	85 37       	cpi	r24, 0x75	; 117
 bd2:	31 f4       	brne	.+12     	; 0xbe0 <vfprintf+0x24e>
 bd4:	23 2d       	mov	r18, r3
 bd6:	2f 7e       	andi	r18, 0xEF	; 239
 bd8:	b2 2e       	mov	r11, r18
 bda:	2a e0       	ldi	r18, 0x0A	; 10
 bdc:	30 e0       	ldi	r19, 0x00	; 0
 bde:	25 c0       	rjmp	.+74     	; 0xc2a <vfprintf+0x298>
 be0:	93 2d       	mov	r25, r3
 be2:	99 7f       	andi	r25, 0xF9	; 249
 be4:	b9 2e       	mov	r11, r25
 be6:	8f 36       	cpi	r24, 0x6F	; 111
 be8:	c1 f0       	breq	.+48     	; 0xc1a <vfprintf+0x288>
 bea:	18 f4       	brcc	.+6      	; 0xbf2 <vfprintf+0x260>
 bec:	88 35       	cpi	r24, 0x58	; 88
 bee:	79 f0       	breq	.+30     	; 0xc0e <vfprintf+0x27c>
 bf0:	ae c0       	rjmp	.+348    	; 0xd4e <vfprintf+0x3bc>
 bf2:	80 37       	cpi	r24, 0x70	; 112
 bf4:	19 f0       	breq	.+6      	; 0xbfc <vfprintf+0x26a>
 bf6:	88 37       	cpi	r24, 0x78	; 120
 bf8:	21 f0       	breq	.+8      	; 0xc02 <vfprintf+0x270>
 bfa:	a9 c0       	rjmp	.+338    	; 0xd4e <vfprintf+0x3bc>
 bfc:	e9 2f       	mov	r30, r25
 bfe:	e0 61       	ori	r30, 0x10	; 16
 c00:	be 2e       	mov	r11, r30
 c02:	b4 fe       	sbrs	r11, 4
 c04:	0d c0       	rjmp	.+26     	; 0xc20 <vfprintf+0x28e>
 c06:	fb 2d       	mov	r31, r11
 c08:	f4 60       	ori	r31, 0x04	; 4
 c0a:	bf 2e       	mov	r11, r31
 c0c:	09 c0       	rjmp	.+18     	; 0xc20 <vfprintf+0x28e>
 c0e:	34 fe       	sbrs	r3, 4
 c10:	0a c0       	rjmp	.+20     	; 0xc26 <vfprintf+0x294>
 c12:	29 2f       	mov	r18, r25
 c14:	26 60       	ori	r18, 0x06	; 6
 c16:	b2 2e       	mov	r11, r18
 c18:	06 c0       	rjmp	.+12     	; 0xc26 <vfprintf+0x294>
 c1a:	28 e0       	ldi	r18, 0x08	; 8
 c1c:	30 e0       	ldi	r19, 0x00	; 0
 c1e:	05 c0       	rjmp	.+10     	; 0xc2a <vfprintf+0x298>
 c20:	20 e1       	ldi	r18, 0x10	; 16
 c22:	30 e0       	ldi	r19, 0x00	; 0
 c24:	02 c0       	rjmp	.+4      	; 0xc2a <vfprintf+0x298>
 c26:	20 e1       	ldi	r18, 0x10	; 16
 c28:	32 e0       	ldi	r19, 0x02	; 2
 c2a:	f8 01       	movw	r30, r16
 c2c:	b7 fe       	sbrs	r11, 7
 c2e:	07 c0       	rjmp	.+14     	; 0xc3e <vfprintf+0x2ac>
 c30:	60 81       	ld	r22, Z
 c32:	71 81       	ldd	r23, Z+1	; 0x01
 c34:	82 81       	ldd	r24, Z+2	; 0x02
 c36:	93 81       	ldd	r25, Z+3	; 0x03
 c38:	0c 5f       	subi	r16, 0xFC	; 252
 c3a:	1f 4f       	sbci	r17, 0xFF	; 255
 c3c:	06 c0       	rjmp	.+12     	; 0xc4a <vfprintf+0x2b8>
 c3e:	60 81       	ld	r22, Z
 c40:	71 81       	ldd	r23, Z+1	; 0x01
 c42:	80 e0       	ldi	r24, 0x00	; 0
 c44:	90 e0       	ldi	r25, 0x00	; 0
 c46:	0e 5f       	subi	r16, 0xFE	; 254
 c48:	1f 4f       	sbci	r17, 0xFF	; 255
 c4a:	a3 01       	movw	r20, r6
 c4c:	f1 d0       	rcall	.+482    	; 0xe30 <__ultoa_invert>
 c4e:	88 2e       	mov	r8, r24
 c50:	86 18       	sub	r8, r6
 c52:	fb 2d       	mov	r31, r11
 c54:	ff 77       	andi	r31, 0x7F	; 127
 c56:	3f 2e       	mov	r3, r31
 c58:	36 fe       	sbrs	r3, 6
 c5a:	0d c0       	rjmp	.+26     	; 0xc76 <vfprintf+0x2e4>
 c5c:	23 2d       	mov	r18, r3
 c5e:	2e 7f       	andi	r18, 0xFE	; 254
 c60:	a2 2e       	mov	r10, r18
 c62:	89 14       	cp	r8, r9
 c64:	58 f4       	brcc	.+22     	; 0xc7c <vfprintf+0x2ea>
 c66:	34 fe       	sbrs	r3, 4
 c68:	0b c0       	rjmp	.+22     	; 0xc80 <vfprintf+0x2ee>
 c6a:	32 fc       	sbrc	r3, 2
 c6c:	09 c0       	rjmp	.+18     	; 0xc80 <vfprintf+0x2ee>
 c6e:	83 2d       	mov	r24, r3
 c70:	8e 7e       	andi	r24, 0xEE	; 238
 c72:	a8 2e       	mov	r10, r24
 c74:	05 c0       	rjmp	.+10     	; 0xc80 <vfprintf+0x2ee>
 c76:	b8 2c       	mov	r11, r8
 c78:	a3 2c       	mov	r10, r3
 c7a:	03 c0       	rjmp	.+6      	; 0xc82 <vfprintf+0x2f0>
 c7c:	b8 2c       	mov	r11, r8
 c7e:	01 c0       	rjmp	.+2      	; 0xc82 <vfprintf+0x2f0>
 c80:	b9 2c       	mov	r11, r9
 c82:	a4 fe       	sbrs	r10, 4
 c84:	0f c0       	rjmp	.+30     	; 0xca4 <vfprintf+0x312>
 c86:	fe 01       	movw	r30, r28
 c88:	e8 0d       	add	r30, r8
 c8a:	f1 1d       	adc	r31, r1
 c8c:	80 81       	ld	r24, Z
 c8e:	80 33       	cpi	r24, 0x30	; 48
 c90:	21 f4       	brne	.+8      	; 0xc9a <vfprintf+0x308>
 c92:	9a 2d       	mov	r25, r10
 c94:	99 7e       	andi	r25, 0xE9	; 233
 c96:	a9 2e       	mov	r10, r25
 c98:	09 c0       	rjmp	.+18     	; 0xcac <vfprintf+0x31a>
 c9a:	a2 fe       	sbrs	r10, 2
 c9c:	06 c0       	rjmp	.+12     	; 0xcaa <vfprintf+0x318>
 c9e:	b3 94       	inc	r11
 ca0:	b3 94       	inc	r11
 ca2:	04 c0       	rjmp	.+8      	; 0xcac <vfprintf+0x31a>
 ca4:	8a 2d       	mov	r24, r10
 ca6:	86 78       	andi	r24, 0x86	; 134
 ca8:	09 f0       	breq	.+2      	; 0xcac <vfprintf+0x31a>
 caa:	b3 94       	inc	r11
 cac:	a3 fc       	sbrc	r10, 3
 cae:	10 c0       	rjmp	.+32     	; 0xcd0 <vfprintf+0x33e>
 cb0:	a0 fe       	sbrs	r10, 0
 cb2:	06 c0       	rjmp	.+12     	; 0xcc0 <vfprintf+0x32e>
 cb4:	b2 14       	cp	r11, r2
 cb6:	80 f4       	brcc	.+32     	; 0xcd8 <vfprintf+0x346>
 cb8:	28 0c       	add	r2, r8
 cba:	92 2c       	mov	r9, r2
 cbc:	9b 18       	sub	r9, r11
 cbe:	0d c0       	rjmp	.+26     	; 0xcda <vfprintf+0x348>
 cc0:	b2 14       	cp	r11, r2
 cc2:	58 f4       	brcc	.+22     	; 0xcda <vfprintf+0x348>
 cc4:	b6 01       	movw	r22, r12
 cc6:	80 e2       	ldi	r24, 0x20	; 32
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	76 d0       	rcall	.+236    	; 0xdb8 <fputc>
 ccc:	b3 94       	inc	r11
 cce:	f8 cf       	rjmp	.-16     	; 0xcc0 <vfprintf+0x32e>
 cd0:	b2 14       	cp	r11, r2
 cd2:	18 f4       	brcc	.+6      	; 0xcda <vfprintf+0x348>
 cd4:	2b 18       	sub	r2, r11
 cd6:	02 c0       	rjmp	.+4      	; 0xcdc <vfprintf+0x34a>
 cd8:	98 2c       	mov	r9, r8
 cda:	21 2c       	mov	r2, r1
 cdc:	a4 fe       	sbrs	r10, 4
 cde:	0f c0       	rjmp	.+30     	; 0xcfe <vfprintf+0x36c>
 ce0:	b6 01       	movw	r22, r12
 ce2:	80 e3       	ldi	r24, 0x30	; 48
 ce4:	90 e0       	ldi	r25, 0x00	; 0
 ce6:	68 d0       	rcall	.+208    	; 0xdb8 <fputc>
 ce8:	a2 fe       	sbrs	r10, 2
 cea:	16 c0       	rjmp	.+44     	; 0xd18 <vfprintf+0x386>
 cec:	a1 fc       	sbrc	r10, 1
 cee:	03 c0       	rjmp	.+6      	; 0xcf6 <vfprintf+0x364>
 cf0:	88 e7       	ldi	r24, 0x78	; 120
 cf2:	90 e0       	ldi	r25, 0x00	; 0
 cf4:	02 c0       	rjmp	.+4      	; 0xcfa <vfprintf+0x368>
 cf6:	88 e5       	ldi	r24, 0x58	; 88
 cf8:	90 e0       	ldi	r25, 0x00	; 0
 cfa:	b6 01       	movw	r22, r12
 cfc:	0c c0       	rjmp	.+24     	; 0xd16 <vfprintf+0x384>
 cfe:	8a 2d       	mov	r24, r10
 d00:	86 78       	andi	r24, 0x86	; 134
 d02:	51 f0       	breq	.+20     	; 0xd18 <vfprintf+0x386>
 d04:	a1 fe       	sbrs	r10, 1
 d06:	02 c0       	rjmp	.+4      	; 0xd0c <vfprintf+0x37a>
 d08:	8b e2       	ldi	r24, 0x2B	; 43
 d0a:	01 c0       	rjmp	.+2      	; 0xd0e <vfprintf+0x37c>
 d0c:	80 e2       	ldi	r24, 0x20	; 32
 d0e:	a7 fc       	sbrc	r10, 7
 d10:	8d e2       	ldi	r24, 0x2D	; 45
 d12:	b6 01       	movw	r22, r12
 d14:	90 e0       	ldi	r25, 0x00	; 0
 d16:	50 d0       	rcall	.+160    	; 0xdb8 <fputc>
 d18:	89 14       	cp	r8, r9
 d1a:	30 f4       	brcc	.+12     	; 0xd28 <vfprintf+0x396>
 d1c:	b6 01       	movw	r22, r12
 d1e:	80 e3       	ldi	r24, 0x30	; 48
 d20:	90 e0       	ldi	r25, 0x00	; 0
 d22:	4a d0       	rcall	.+148    	; 0xdb8 <fputc>
 d24:	9a 94       	dec	r9
 d26:	f8 cf       	rjmp	.-16     	; 0xd18 <vfprintf+0x386>
 d28:	8a 94       	dec	r8
 d2a:	f3 01       	movw	r30, r6
 d2c:	e8 0d       	add	r30, r8
 d2e:	f1 1d       	adc	r31, r1
 d30:	80 81       	ld	r24, Z
 d32:	b6 01       	movw	r22, r12
 d34:	90 e0       	ldi	r25, 0x00	; 0
 d36:	40 d0       	rcall	.+128    	; 0xdb8 <fputc>
 d38:	81 10       	cpse	r8, r1
 d3a:	f6 cf       	rjmp	.-20     	; 0xd28 <vfprintf+0x396>
 d3c:	22 20       	and	r2, r2
 d3e:	09 f4       	brne	.+2      	; 0xd42 <vfprintf+0x3b0>
 d40:	4e ce       	rjmp	.-868    	; 0x9de <vfprintf+0x4c>
 d42:	b6 01       	movw	r22, r12
 d44:	80 e2       	ldi	r24, 0x20	; 32
 d46:	90 e0       	ldi	r25, 0x00	; 0
 d48:	37 d0       	rcall	.+110    	; 0xdb8 <fputc>
 d4a:	2a 94       	dec	r2
 d4c:	f7 cf       	rjmp	.-18     	; 0xd3c <vfprintf+0x3aa>
 d4e:	f6 01       	movw	r30, r12
 d50:	86 81       	ldd	r24, Z+6	; 0x06
 d52:	97 81       	ldd	r25, Z+7	; 0x07
 d54:	02 c0       	rjmp	.+4      	; 0xd5a <vfprintf+0x3c8>
 d56:	8f ef       	ldi	r24, 0xFF	; 255
 d58:	9f ef       	ldi	r25, 0xFF	; 255
 d5a:	2b 96       	adiw	r28, 0x0b	; 11
 d5c:	0f b6       	in	r0, 0x3f	; 63
 d5e:	f8 94       	cli
 d60:	de bf       	out	0x3e, r29	; 62
 d62:	0f be       	out	0x3f, r0	; 63
 d64:	cd bf       	out	0x3d, r28	; 61
 d66:	df 91       	pop	r29
 d68:	cf 91       	pop	r28
 d6a:	1f 91       	pop	r17
 d6c:	0f 91       	pop	r16
 d6e:	ff 90       	pop	r15
 d70:	ef 90       	pop	r14
 d72:	df 90       	pop	r13
 d74:	cf 90       	pop	r12
 d76:	bf 90       	pop	r11
 d78:	af 90       	pop	r10
 d7a:	9f 90       	pop	r9
 d7c:	8f 90       	pop	r8
 d7e:	7f 90       	pop	r7
 d80:	6f 90       	pop	r6
 d82:	5f 90       	pop	r5
 d84:	4f 90       	pop	r4
 d86:	3f 90       	pop	r3
 d88:	2f 90       	pop	r2
 d8a:	08 95       	ret

00000d8c <strnlen_P>:
 d8c:	fc 01       	movw	r30, r24
 d8e:	05 90       	lpm	r0, Z+
 d90:	61 50       	subi	r22, 0x01	; 1
 d92:	70 40       	sbci	r23, 0x00	; 0
 d94:	01 10       	cpse	r0, r1
 d96:	d8 f7       	brcc	.-10     	; 0xd8e <strnlen_P+0x2>
 d98:	80 95       	com	r24
 d9a:	90 95       	com	r25
 d9c:	8e 0f       	add	r24, r30
 d9e:	9f 1f       	adc	r25, r31
 da0:	08 95       	ret

00000da2 <strnlen>:
 da2:	fc 01       	movw	r30, r24
 da4:	61 50       	subi	r22, 0x01	; 1
 da6:	70 40       	sbci	r23, 0x00	; 0
 da8:	01 90       	ld	r0, Z+
 daa:	01 10       	cpse	r0, r1
 dac:	d8 f7       	brcc	.-10     	; 0xda4 <strnlen+0x2>
 dae:	80 95       	com	r24
 db0:	90 95       	com	r25
 db2:	8e 0f       	add	r24, r30
 db4:	9f 1f       	adc	r25, r31
 db6:	08 95       	ret

00000db8 <fputc>:
 db8:	0f 93       	push	r16
 dba:	1f 93       	push	r17
 dbc:	cf 93       	push	r28
 dbe:	df 93       	push	r29
 dc0:	fb 01       	movw	r30, r22
 dc2:	23 81       	ldd	r18, Z+3	; 0x03
 dc4:	21 fd       	sbrc	r18, 1
 dc6:	03 c0       	rjmp	.+6      	; 0xdce <fputc+0x16>
 dc8:	8f ef       	ldi	r24, 0xFF	; 255
 dca:	9f ef       	ldi	r25, 0xFF	; 255
 dcc:	2c c0       	rjmp	.+88     	; 0xe26 <fputc+0x6e>
 dce:	22 ff       	sbrs	r18, 2
 dd0:	16 c0       	rjmp	.+44     	; 0xdfe <fputc+0x46>
 dd2:	46 81       	ldd	r20, Z+6	; 0x06
 dd4:	57 81       	ldd	r21, Z+7	; 0x07
 dd6:	24 81       	ldd	r18, Z+4	; 0x04
 dd8:	35 81       	ldd	r19, Z+5	; 0x05
 dda:	42 17       	cp	r20, r18
 ddc:	53 07       	cpc	r21, r19
 dde:	44 f4       	brge	.+16     	; 0xdf0 <fputc+0x38>
 de0:	a0 81       	ld	r26, Z
 de2:	b1 81       	ldd	r27, Z+1	; 0x01
 de4:	9d 01       	movw	r18, r26
 de6:	2f 5f       	subi	r18, 0xFF	; 255
 de8:	3f 4f       	sbci	r19, 0xFF	; 255
 dea:	31 83       	std	Z+1, r19	; 0x01
 dec:	20 83       	st	Z, r18
 dee:	8c 93       	st	X, r24
 df0:	26 81       	ldd	r18, Z+6	; 0x06
 df2:	37 81       	ldd	r19, Z+7	; 0x07
 df4:	2f 5f       	subi	r18, 0xFF	; 255
 df6:	3f 4f       	sbci	r19, 0xFF	; 255
 df8:	37 83       	std	Z+7, r19	; 0x07
 dfa:	26 83       	std	Z+6, r18	; 0x06
 dfc:	14 c0       	rjmp	.+40     	; 0xe26 <fputc+0x6e>
 dfe:	8b 01       	movw	r16, r22
 e00:	ec 01       	movw	r28, r24
 e02:	fb 01       	movw	r30, r22
 e04:	00 84       	ldd	r0, Z+8	; 0x08
 e06:	f1 85       	ldd	r31, Z+9	; 0x09
 e08:	e0 2d       	mov	r30, r0
 e0a:	19 95       	eicall
 e0c:	89 2b       	or	r24, r25
 e0e:	e1 f6       	brne	.-72     	; 0xdc8 <fputc+0x10>
 e10:	d8 01       	movw	r26, r16
 e12:	16 96       	adiw	r26, 0x06	; 6
 e14:	8d 91       	ld	r24, X+
 e16:	9c 91       	ld	r25, X
 e18:	17 97       	sbiw	r26, 0x07	; 7
 e1a:	01 96       	adiw	r24, 0x01	; 1
 e1c:	17 96       	adiw	r26, 0x07	; 7
 e1e:	9c 93       	st	X, r25
 e20:	8e 93       	st	-X, r24
 e22:	16 97       	sbiw	r26, 0x06	; 6
 e24:	ce 01       	movw	r24, r28
 e26:	df 91       	pop	r29
 e28:	cf 91       	pop	r28
 e2a:	1f 91       	pop	r17
 e2c:	0f 91       	pop	r16
 e2e:	08 95       	ret

00000e30 <__ultoa_invert>:
 e30:	fa 01       	movw	r30, r20
 e32:	aa 27       	eor	r26, r26
 e34:	28 30       	cpi	r18, 0x08	; 8
 e36:	51 f1       	breq	.+84     	; 0xe8c <__ultoa_invert+0x5c>
 e38:	20 31       	cpi	r18, 0x10	; 16
 e3a:	81 f1       	breq	.+96     	; 0xe9c <__ultoa_invert+0x6c>
 e3c:	e8 94       	clt
 e3e:	6f 93       	push	r22
 e40:	6e 7f       	andi	r22, 0xFE	; 254
 e42:	6e 5f       	subi	r22, 0xFE	; 254
 e44:	7f 4f       	sbci	r23, 0xFF	; 255
 e46:	8f 4f       	sbci	r24, 0xFF	; 255
 e48:	9f 4f       	sbci	r25, 0xFF	; 255
 e4a:	af 4f       	sbci	r26, 0xFF	; 255
 e4c:	b1 e0       	ldi	r27, 0x01	; 1
 e4e:	3e d0       	rcall	.+124    	; 0xecc <__ultoa_invert+0x9c>
 e50:	b4 e0       	ldi	r27, 0x04	; 4
 e52:	3c d0       	rcall	.+120    	; 0xecc <__ultoa_invert+0x9c>
 e54:	67 0f       	add	r22, r23
 e56:	78 1f       	adc	r23, r24
 e58:	89 1f       	adc	r24, r25
 e5a:	9a 1f       	adc	r25, r26
 e5c:	a1 1d       	adc	r26, r1
 e5e:	68 0f       	add	r22, r24
 e60:	79 1f       	adc	r23, r25
 e62:	8a 1f       	adc	r24, r26
 e64:	91 1d       	adc	r25, r1
 e66:	a1 1d       	adc	r26, r1
 e68:	6a 0f       	add	r22, r26
 e6a:	71 1d       	adc	r23, r1
 e6c:	81 1d       	adc	r24, r1
 e6e:	91 1d       	adc	r25, r1
 e70:	a1 1d       	adc	r26, r1
 e72:	20 d0       	rcall	.+64     	; 0xeb4 <__ultoa_invert+0x84>
 e74:	09 f4       	brne	.+2      	; 0xe78 <__ultoa_invert+0x48>
 e76:	68 94       	set
 e78:	3f 91       	pop	r19
 e7a:	2a e0       	ldi	r18, 0x0A	; 10
 e7c:	26 9f       	mul	r18, r22
 e7e:	11 24       	eor	r1, r1
 e80:	30 19       	sub	r19, r0
 e82:	30 5d       	subi	r19, 0xD0	; 208
 e84:	31 93       	st	Z+, r19
 e86:	de f6       	brtc	.-74     	; 0xe3e <__ultoa_invert+0xe>
 e88:	cf 01       	movw	r24, r30
 e8a:	08 95       	ret
 e8c:	46 2f       	mov	r20, r22
 e8e:	47 70       	andi	r20, 0x07	; 7
 e90:	40 5d       	subi	r20, 0xD0	; 208
 e92:	41 93       	st	Z+, r20
 e94:	b3 e0       	ldi	r27, 0x03	; 3
 e96:	0f d0       	rcall	.+30     	; 0xeb6 <__ultoa_invert+0x86>
 e98:	c9 f7       	brne	.-14     	; 0xe8c <__ultoa_invert+0x5c>
 e9a:	f6 cf       	rjmp	.-20     	; 0xe88 <__ultoa_invert+0x58>
 e9c:	46 2f       	mov	r20, r22
 e9e:	4f 70       	andi	r20, 0x0F	; 15
 ea0:	40 5d       	subi	r20, 0xD0	; 208
 ea2:	4a 33       	cpi	r20, 0x3A	; 58
 ea4:	18 f0       	brcs	.+6      	; 0xeac <__ultoa_invert+0x7c>
 ea6:	49 5d       	subi	r20, 0xD9	; 217
 ea8:	31 fd       	sbrc	r19, 1
 eaa:	40 52       	subi	r20, 0x20	; 32
 eac:	41 93       	st	Z+, r20
 eae:	02 d0       	rcall	.+4      	; 0xeb4 <__ultoa_invert+0x84>
 eb0:	a9 f7       	brne	.-22     	; 0xe9c <__ultoa_invert+0x6c>
 eb2:	ea cf       	rjmp	.-44     	; 0xe88 <__ultoa_invert+0x58>
 eb4:	b4 e0       	ldi	r27, 0x04	; 4
 eb6:	a6 95       	lsr	r26
 eb8:	97 95       	ror	r25
 eba:	87 95       	ror	r24
 ebc:	77 95       	ror	r23
 ebe:	67 95       	ror	r22
 ec0:	ba 95       	dec	r27
 ec2:	c9 f7       	brne	.-14     	; 0xeb6 <__ultoa_invert+0x86>
 ec4:	00 97       	sbiw	r24, 0x00	; 0
 ec6:	61 05       	cpc	r22, r1
 ec8:	71 05       	cpc	r23, r1
 eca:	08 95       	ret
 ecc:	9b 01       	movw	r18, r22
 ece:	ac 01       	movw	r20, r24
 ed0:	0a 2e       	mov	r0, r26
 ed2:	06 94       	lsr	r0
 ed4:	57 95       	ror	r21
 ed6:	47 95       	ror	r20
 ed8:	37 95       	ror	r19
 eda:	27 95       	ror	r18
 edc:	ba 95       	dec	r27
 ede:	c9 f7       	brne	.-14     	; 0xed2 <__ultoa_invert+0xa2>
 ee0:	62 0f       	add	r22, r18
 ee2:	73 1f       	adc	r23, r19
 ee4:	84 1f       	adc	r24, r20
 ee6:	95 1f       	adc	r25, r21
 ee8:	a0 1d       	adc	r26, r0
 eea:	08 95       	ret

00000eec <_exit>:
 eec:	f8 94       	cli

00000eee <__stop_program>:
 eee:	ff cf       	rjmp	.-2      	; 0xeee <__stop_program>
