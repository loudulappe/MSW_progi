
prufungsh.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000f5a  00000fee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00001062  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001062  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000260e  00000000  00000000  000012f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f81  00000000  00000000  000038fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000163d  00000000  00000000  0000487f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  00005ebc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ce6  00000000  00000000  00006540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d5c  00000000  00000000  00007226  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008f82  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	fa c3       	rjmp	.+2036   	; 0x852 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e5       	ldi	r30, 0x5A	; 90
  fc:	ff e0       	ldi	r31, 0x0F	; 15
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	1a c7       	rjmp	.+3636   	; 0xf56 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#define OUTSENS     0b1111110000000000
#define FLANKLED    0b0000000010000000 

int main(void)
{
    initBoard(0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	2f d2       	rcall	.+1118   	; 0x586 <initBoard>
    uint8_t flaghys=0;
    uint32_t pot2proz=0;
    uint16_t out2=0;
    uint8_t flagflank=0;
    uint16_t flanktimer=0;
    uint8_t button1=0;
 128:	a1 2c       	mov	r10, r1
    uint16_t ledout=0;
    uint8_t flaghys=0;
    uint32_t pot2proz=0;
    uint16_t out2=0;
    uint8_t flagflank=0;
    uint16_t flanktimer=0;
 12a:	c0 e0       	ldi	r28, 0x00	; 0
 12c:	d0 e0       	ldi	r29, 0x00	; 0
    uint8_t outproz1=0;
    uint16_t ledout=0;
    uint8_t flaghys=0;
    uint32_t pot2proz=0;
    uint16_t out2=0;
    uint8_t flagflank=0;
 12e:	b1 2c       	mov	r11, r1
{
    initBoard(0);
    uint32_t pot1proz=0;
    uint8_t outproz1=0;
    uint16_t ledout=0;
    uint8_t flaghys=0;
 130:	00 e0       	ldi	r16, 0x00	; 0
 132:	01 c0       	rjmp	.+2      	; 0x136 <main+0x12>
 134:	a1 2e       	mov	r10, r17
    
    
    
    while (1) 
    {
        pot1proz=(uint32_t) adcRead(8)*100/1013;
 136:	88 e0       	ldi	r24, 0x08	; 8
 138:	ab d0       	rcall	.+342    	; 0x290 <adcRead>
 13a:	9c 01       	movw	r18, r24
 13c:	a4 e6       	ldi	r26, 0x64	; 100
 13e:	b0 e0       	ldi	r27, 0x00	; 0
 140:	0a d4       	rcall	.+2068   	; 0x956 <__umulhisi3>
 142:	25 ef       	ldi	r18, 0xF5	; 245
 144:	33 e0       	ldi	r19, 0x03	; 3
 146:	40 e0       	ldi	r20, 0x00	; 0
 148:	50 e0       	ldi	r21, 0x00	; 0
 14a:	e3 d3       	rcall	.+1990   	; 0x912 <__udivmodsi4>
 14c:	92 2e       	mov	r9, r18
 14e:	42 2e       	mov	r4, r18
 150:	53 2e       	mov	r5, r19
 152:	64 2e       	mov	r6, r20
 154:	75 2e       	mov	r7, r21
        pot2proz=adcRead(9)*50/1012;
 156:	89 e0       	ldi	r24, 0x09	; 9
 158:	9b d0       	rcall	.+310    	; 0x290 <adcRead>
 15a:	22 e3       	ldi	r18, 0x32	; 50
 15c:	ac 01       	movw	r20, r24
 15e:	24 9f       	mul	r18, r20
 160:	c0 01       	movw	r24, r0
 162:	25 9f       	mul	r18, r21
 164:	90 0d       	add	r25, r0
 166:	11 24       	eor	r1, r1
 168:	64 ef       	ldi	r22, 0xF4	; 244
 16a:	73 e0       	ldi	r23, 0x03	; 3
 16c:	be d3       	rcall	.+1916   	; 0x8ea <__udivmodhi4>
 16e:	6b 01       	movw	r12, r22
 170:	e1 2c       	mov	r14, r1
 172:	f1 2c       	mov	r15, r1
        altbutton1=button1;
        button1=buttonReadAllPL()&1;
 174:	5e d0       	rcall	.+188    	; 0x232 <buttonReadAllPL>
 176:	18 2f       	mov	r17, r24
 178:	11 70       	andi	r17, 0x01	; 1
 17a:	29 2d       	mov	r18, r9
        outproz1=pot1proz&0x7F;
 17c:	2f 77       	andi	r18, 0x7F	; 127
 17e:	30 e0       	ldi	r19, 0x00	; 0
        ledout=outproz1&0x7f;
 180:	53 e3       	ldi	r21, 0x33	; 51
        
        if (pot1proz>50)
 182:	45 16       	cp	r4, r21
 184:	51 04       	cpc	r5, r1
 186:	61 04       	cpc	r6, r1
 188:	71 04       	cpc	r7, r1
 18a:	08 f0       	brcs	.+2      	; 0x18e <main+0x6a>
 18c:	31 60       	ori	r19, 0x01	; 1
        {
            ledout=ledout|OUTHALF;
 18e:	88 e3       	ldi	r24, 0x38	; 56
        }
        else
        {
            ledout=ledout&~OUTHALF;
        } 
        if (pot1proz>55)
 190:	48 16       	cp	r4, r24
 192:	51 04       	cpc	r5, r1
 194:	61 04       	cpc	r6, r1
 196:	71 04       	cpc	r7, r1
 198:	08 f0       	brcs	.+2      	; 0x19c <main+0x78>
 19a:	01 e0       	ldi	r16, 0x01	; 1
        {
            flaghys=1;
 19c:	9d e2       	ldi	r25, 0x2D	; 45
        }
        if (pot1proz<45)
 19e:	49 16       	cp	r4, r25
 1a0:	51 04       	cpc	r5, r1
 1a2:	61 04       	cpc	r6, r1
 1a4:	71 04       	cpc	r7, r1
 1a6:	08 f4       	brcc	.+2      	; 0x1aa <main+0x86>
 1a8:	00 e0       	ldi	r16, 0x00	; 0
        {
            flaghys=0;
 1aa:	00 23       	and	r16, r16
        }
        if (flaghys)
 1ac:	11 f0       	breq	.+4      	; 0x1b2 <main+0x8e>
 1ae:	32 60       	ori	r19, 0x02	; 2
        {
            ledout=ledout|OUTHYS;
 1b0:	01 c0       	rjmp	.+2      	; 0x1b4 <main+0x90>
 1b2:	3d 7f       	andi	r19, 0xFD	; 253
        }
        else
        {
            ledout=ledout&~OUTHYS;
 1b4:	d7 01       	movw	r26, r14
        } 
        range2=(pot2proz*2)-10;
 1b6:	c6 01       	movw	r24, r12
 1b8:	05 97       	sbiw	r24, 0x05	; 5
 1ba:	a1 09       	sbc	r26, r1
 1bc:	b0 48       	sbci	r27, 0x80	; 128
 1be:	88 0f       	add	r24, r24
 1c0:	99 1f       	adc	r25, r25
 1c2:	4a e0       	ldi	r20, 0x0A	; 10
        if (pot2proz<10)
 1c4:	c4 16       	cp	r12, r20
 1c6:	d1 04       	cpc	r13, r1
 1c8:	e1 04       	cpc	r14, r1
 1ca:	f1 04       	cpc	r15, r1
 1cc:	48 f0       	brcs	.+18     	; 0x1e0 <main+0xbc>
 1ce:	5f e1       	ldi	r21, 0x1F	; 31
        {
            out2=10;
        }
        else if (pot2proz>30)
 1d0:	c5 16       	cp	r12, r21
 1d2:	d1 04       	cpc	r13, r1
 1d4:	e1 04       	cpc	r14, r1
 1d6:	f1 04       	cpc	r15, r1
 1d8:	28 f0       	brcs	.+10     	; 0x1e4 <main+0xc0>
 1da:	82 e3       	ldi	r24, 0x32	; 50
        {
            out2=50;
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <main+0xc0>
 1e0:	8a e0       	ldi	r24, 0x0A	; 10
            ledout=ledout&~OUTHYS;
        } 
        range2=(pot2proz*2)-10;
        if (pot2proz<10)
        {
            out2=10;
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	a1 16       	cp	r10, r17
        }
        else
        {
            out2=range2;
        }
        if (altbutton1<button1)
 1e6:	20 f4       	brcc	.+8      	; 0x1f0 <main+0xcc>
 1e8:	cc e2       	ldi	r28, 0x2C	; 44
        {
            flagflank=1;
            flanktimer=300;
 1ea:	d1 e0       	ldi	r29, 0x01	; 1
 1ec:	bb 24       	eor	r11, r11
        {
            out2=range2;
        }
        if (altbutton1<button1)
        {
            flagflank=1;
 1ee:	b3 94       	inc	r11
 1f0:	20 97       	sbiw	r28, 0x00	; 0
            flanktimer=300;
        }
        if (!flanktimer)
 1f2:	09 f4       	brne	.+2      	; 0x1f6 <main+0xd2>
 1f4:	b1 2c       	mov	r11, r1
        {
            flagflank=0;
 1f6:	98 2f       	mov	r25, r24
        }
        ledout=ledout|((out2<<10)&OUTSENS);
 1f8:	88 27       	eor	r24, r24
 1fa:	99 0f       	add	r25, r25
 1fc:	99 0f       	add	r25, r25
 1fe:	28 2b       	or	r18, r24
 200:	39 2b       	or	r19, r25
 202:	8b 2d       	mov	r24, r11
        ledout=ledout|flagflank<<7;
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	96 95       	lsr	r25
 208:	98 2f       	mov	r25, r24
 20a:	88 27       	eor	r24, r24
 20c:	97 95       	ror	r25
 20e:	87 95       	ror	r24
        ledWriteAll(ledout);
 210:	82 2b       	or	r24, r18
 212:	93 2b       	or	r25, r19
 214:	0b d0       	rcall	.+22     	; 0x22c <ledWriteAll>
 216:	20 97       	sbiw	r28, 0x00	; 0
        
        if (flanktimer)
 218:	09 f4       	brne	.+2      	; 0x21c <main+0xf8>
 21a:	8c cf       	rjmp	.-232    	; 0x134 <main+0x10>
 21c:	8f e3       	ldi	r24, 0x3F	; 63
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21e:	9c e9       	ldi	r25, 0x9C	; 156
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <main+0xfc>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x102>
 226:	00 00       	nop
 228:	21 97       	sbiw	r28, 0x01	; 1
        {
            _delay_ms(10);
            flanktimer=flanktimer-1;
 22a:	84 cf       	rjmp	.-248    	; 0x134 <main+0x10>

0000022c <ledWriteAll>:
 22c:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 22e:	95 b9       	out	0x05, r25	; 5
 230:	08 95       	ret

00000232 <buttonReadAllPL>:
 232:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 236:	08 95       	ret

00000238 <startSystemTimeMs>:
 238:	83 e0       	ldi	r24, 0x03	; 3
 23a:	84 bd       	out	0x24, r24	; 36
 23c:	8b e0       	ldi	r24, 0x0B	; 11
 23e:	85 bd       	out	0x25, r24	; 37
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 246:	89 ef       	ldi	r24, 0xF9	; 249
 248:	87 bd       	out	0x27, r24	; 39
 24a:	08 95       	ret

0000024c <initAdc>:
 24c:	11 ba       	out	0x11, r1	; 17
 24e:	10 ba       	out	0x10, r1	; 16
 250:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 254:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 258:	80 e4       	ldi	r24, 0x40	; 64
 25a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 25e:	8f e0       	ldi	r24, 0x0F	; 15
 260:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 264:	8f ef       	ldi	r24, 0xFF	; 255
 266:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 26a:	ea e7       	ldi	r30, 0x7A	; 122
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	87 ea       	ldi	r24, 0xA7	; 167
 270:	80 83       	st	Z, r24
 272:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 276:	80 81       	ld	r24, Z
 278:	80 64       	ori	r24, 0x40	; 64
 27a:	80 83       	st	Z, r24
 27c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 280:	84 ff       	sbrs	r24, 4
 282:	fc cf       	rjmp	.-8      	; 0x27c <initAdc+0x30>
 284:	ea e7       	ldi	r30, 0x7A	; 122
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	80 81       	ld	r24, Z
 28a:	8f 7e       	andi	r24, 0xEF	; 239
 28c:	80 83       	st	Z, r24
 28e:	08 95       	ret

00000290 <adcRead>:
 290:	90 e4       	ldi	r25, 0x40	; 64
 292:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 296:	88 30       	cpi	r24, 0x08	; 8
 298:	60 f0       	brcs	.+24     	; 0x2b2 <adcRead+0x22>
 29a:	ec e7       	ldi	r30, 0x7C	; 124
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	90 81       	ld	r25, Z
 2a0:	88 50       	subi	r24, 0x08	; 8
 2a2:	89 2b       	or	r24, r25
 2a4:	80 83       	st	Z, r24
 2a6:	eb e7       	ldi	r30, 0x7B	; 123
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	80 81       	ld	r24, Z
 2ac:	88 61       	ori	r24, 0x18	; 24
 2ae:	80 83       	st	Z, r24
 2b0:	0a c0       	rjmp	.+20     	; 0x2c6 <adcRead+0x36>
 2b2:	ec e7       	ldi	r30, 0x7C	; 124
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	90 81       	ld	r25, Z
 2b8:	89 2b       	or	r24, r25
 2ba:	80 83       	st	Z, r24
 2bc:	eb e7       	ldi	r30, 0x7B	; 123
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	87 7e       	andi	r24, 0xE7	; 231
 2c4:	80 83       	st	Z, r24
 2c6:	ea e7       	ldi	r30, 0x7A	; 122
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	80 64       	ori	r24, 0x40	; 64
 2ce:	80 83       	st	Z, r24
 2d0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 2d4:	84 ff       	sbrs	r24, 4
 2d6:	fc cf       	rjmp	.-8      	; 0x2d0 <adcRead+0x40>
 2d8:	8f ea       	ldi	r24, 0xAF	; 175
 2da:	94 e0       	ldi	r25, 0x04	; 4
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <adcRead+0x4c>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <adcRead+0x52>
 2e2:	00 00       	nop
 2e4:	30 91 78 00 	lds	r19, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 2e8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	98 2f       	mov	r25, r24
 2f0:	88 27       	eor	r24, r24
 2f2:	ea e7       	ldi	r30, 0x7A	; 122
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	20 81       	ld	r18, Z
 2f8:	2f 7e       	andi	r18, 0xEF	; 239
 2fa:	20 83       	st	Z, r18
 2fc:	83 2b       	or	r24, r19
 2fe:	08 95       	ret

00000300 <rgbWrite>:
 300:	2f ef       	ldi	r18, 0xFF	; 255
 302:	33 e0       	ldi	r19, 0x03	; 3
 304:	f9 01       	movw	r30, r18
 306:	e8 1b       	sub	r30, r24
 308:	f9 0b       	sbc	r31, r25
 30a:	c9 01       	movw	r24, r18
 30c:	86 1b       	sub	r24, r22
 30e:	97 0b       	sbc	r25, r23
 310:	24 1b       	sub	r18, r20
 312:	35 0b       	sbc	r19, r21
 314:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 318:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 31c:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 320:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 324:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 328:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 32c:	08 95       	ret

0000032e <initRgb>:
 32e:	8e ef       	ldi	r24, 0xFE	; 254
 330:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 334:	8b e1       	ldi	r24, 0x1B	; 27
 336:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 33a:	83 e0       	ldi	r24, 0x03	; 3
 33c:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 340:	8f ef       	ldi	r24, 0xFF	; 255
 342:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 346:	40 e0       	ldi	r20, 0x00	; 0
 348:	50 e0       	ldi	r21, 0x00	; 0
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	d6 cf       	rjmp	.-84     	; 0x300 <rgbWrite>
 354:	08 95       	ret

00000356 <lcdSid>:
 356:	88 23       	and	r24, r24
 358:	21 f0       	breq	.+8      	; 0x362 <lcdSid+0xc>
 35a:	84 b3       	in	r24, 0x14	; 20
 35c:	81 60       	ori	r24, 0x01	; 1
 35e:	84 bb       	out	0x14, r24	; 20
 360:	08 95       	ret
 362:	84 b3       	in	r24, 0x14	; 20
 364:	8e 7f       	andi	r24, 0xFE	; 254
 366:	84 bb       	out	0x14, r24	; 20
 368:	08 95       	ret

0000036a <lcdSclk>:
 36a:	88 23       	and	r24, r24
 36c:	21 f0       	breq	.+8      	; 0x376 <lcdSclk+0xc>
 36e:	84 b3       	in	r24, 0x14	; 20
 370:	82 60       	ori	r24, 0x02	; 2
 372:	84 bb       	out	0x14, r24	; 20
 374:	08 95       	ret
 376:	84 b3       	in	r24, 0x14	; 20
 378:	8d 7f       	andi	r24, 0xFD	; 253
 37a:	84 bb       	out	0x14, r24	; 20
 37c:	08 95       	ret

0000037e <lcdLight>:
 37e:	81 11       	cpse	r24, r1
 380:	04 c0       	rjmp	.+8      	; 0x38a <lcdLight+0xc>
 382:	84 b5       	in	r24, 0x24	; 36
 384:	8f 7d       	andi	r24, 0xDF	; 223
 386:	84 bd       	out	0x24, r24	; 36
 388:	08 95       	ret
 38a:	94 b5       	in	r25, 0x24	; 36
 38c:	90 62       	ori	r25, 0x20	; 32
 38e:	94 bd       	out	0x24, r25	; 36
 390:	88 bd       	out	0x28, r24	; 40
 392:	08 95       	ret

00000394 <writeLcdF>:
 394:	ef 92       	push	r14
 396:	ff 92       	push	r15
 398:	0f 93       	push	r16
 39a:	1f 93       	push	r17
 39c:	cf 93       	push	r28
 39e:	df 93       	push	r29
 3a0:	7c 01       	movw	r14, r24
 3a2:	eb 01       	movw	r28, r22
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	d7 df       	rcall	.-82     	; 0x356 <lcdSid>
 3a8:	00 e0       	ldi	r16, 0x00	; 0
 3aa:	10 e0       	ldi	r17, 0x00	; 0
 3ac:	06 c0       	rjmp	.+12     	; 0x3ba <writeLcdF+0x26>
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	dc df       	rcall	.-72     	; 0x36a <lcdSclk>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	da df       	rcall	.-76     	; 0x36a <lcdSclk>
 3b6:	0f 5f       	subi	r16, 0xFF	; 255
 3b8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ba:	05 30       	cpi	r16, 0x05	; 5
 3bc:	11 05       	cpc	r17, r1
 3be:	b8 f3       	brcs	.-18     	; 0x3ae <writeLcdF+0x1a>
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	c9 df       	rcall	.-110    	; 0x356 <lcdSid>
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	d1 df       	rcall	.-94     	; 0x36a <lcdSclk>
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	cf df       	rcall	.-98     	; 0x36a <lcdSclk>
 3cc:	83 e4       	ldi	r24, 0x43	; 67
 3ce:	e8 16       	cp	r14, r24
 3d0:	f1 04       	cpc	r15, r1
 3d2:	19 f4       	brne	.+6      	; 0x3da <writeLcdF+0x46>
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	bf df       	rcall	.-130    	; 0x356 <lcdSid>
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <writeLcdF+0x4a>
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	bc df       	rcall	.-136    	; 0x356 <lcdSid>
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	c4 df       	rcall	.-120    	; 0x36a <lcdSclk>
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	c2 df       	rcall	.-124    	; 0x36a <lcdSclk>
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	b6 df       	rcall	.-148    	; 0x356 <lcdSid>
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	be df       	rcall	.-132    	; 0x36a <lcdSclk>
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	bc df       	rcall	.-136    	; 0x36a <lcdSclk>
 3f2:	00 e0       	ldi	r16, 0x00	; 0
 3f4:	10 e0       	ldi	r17, 0x00	; 0
 3f6:	11 c0       	rjmp	.+34     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	b7 df       	rcall	.-146    	; 0x36a <lcdSclk>
 3fc:	c0 ff       	sbrs	r28, 0
 3fe:	03 c0       	rjmp	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	a9 df       	rcall	.-174    	; 0x356 <lcdSid>
 404:	02 c0       	rjmp	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 406:	80 e0       	ldi	r24, 0x00	; 0
 408:	a6 df       	rcall	.-180    	; 0x356 <lcdSid>
 40a:	d6 95       	lsr	r29
 40c:	c7 95       	ror	r28
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	ac df       	rcall	.-168    	; 0x36a <lcdSclk>
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	aa df       	rcall	.-172    	; 0x36a <lcdSclk>
 416:	0f 5f       	subi	r16, 0xFF	; 255
 418:	1f 4f       	sbci	r17, 0xFF	; 255
 41a:	04 30       	cpi	r16, 0x04	; 4
 41c:	11 05       	cpc	r17, r1
 41e:	60 f3       	brcs	.-40     	; 0x3f8 <writeLcdF+0x64>
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	99 df       	rcall	.-206    	; 0x356 <lcdSid>
 424:	00 e0       	ldi	r16, 0x00	; 0
 426:	10 e0       	ldi	r17, 0x00	; 0
 428:	06 c0       	rjmp	.+12     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	9e df       	rcall	.-196    	; 0x36a <lcdSclk>
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	9c df       	rcall	.-200    	; 0x36a <lcdSclk>
 432:	0f 5f       	subi	r16, 0xFF	; 255
 434:	1f 4f       	sbci	r17, 0xFF	; 255
 436:	04 30       	cpi	r16, 0x04	; 4
 438:	11 05       	cpc	r17, r1
 43a:	b8 f3       	brcs	.-18     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 43c:	00 e0       	ldi	r16, 0x00	; 0
 43e:	10 e0       	ldi	r17, 0x00	; 0
 440:	11 c0       	rjmp	.+34     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 442:	80 e0       	ldi	r24, 0x00	; 0
 444:	92 df       	rcall	.-220    	; 0x36a <lcdSclk>
 446:	c0 ff       	sbrs	r28, 0
 448:	03 c0       	rjmp	.+6      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	84 df       	rcall	.-248    	; 0x356 <lcdSid>
 44e:	02 c0       	rjmp	.+4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	81 df       	rcall	.-254    	; 0x356 <lcdSid>
 454:	d6 95       	lsr	r29
 456:	c7 95       	ror	r28
 458:	80 e0       	ldi	r24, 0x00	; 0
 45a:	87 df       	rcall	.-242    	; 0x36a <lcdSclk>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	85 df       	rcall	.-246    	; 0x36a <lcdSclk>
 460:	0f 5f       	subi	r16, 0xFF	; 255
 462:	1f 4f       	sbci	r17, 0xFF	; 255
 464:	04 30       	cpi	r16, 0x04	; 4
 466:	11 05       	cpc	r17, r1
 468:	60 f3       	brcs	.-40     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	74 df       	rcall	.-280    	; 0x356 <lcdSid>
 46e:	c0 e0       	ldi	r28, 0x00	; 0
 470:	d0 e0       	ldi	r29, 0x00	; 0
 472:	05 c0       	rjmp	.+10     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 474:	80 e0       	ldi	r24, 0x00	; 0
 476:	79 df       	rcall	.-270    	; 0x36a <lcdSclk>
 478:	81 e0       	ldi	r24, 0x01	; 1
 47a:	77 df       	rcall	.-274    	; 0x36a <lcdSclk>
 47c:	21 96       	adiw	r28, 0x01	; 1
 47e:	c4 30       	cpi	r28, 0x04	; 4
 480:	d1 05       	cpc	r29, r1
 482:	c0 f3       	brcs	.-16     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	67 df       	rcall	.-306    	; 0x356 <lcdSid>
 488:	87 ec       	ldi	r24, 0xC7	; 199
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	01 97       	sbiw	r24, 0x01	; 1
 48e:	f1 f7       	brne	.-4      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 490:	00 c0       	rjmp	.+0      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 492:	00 00       	nop
 494:	df 91       	pop	r29
 496:	cf 91       	pop	r28
 498:	1f 91       	pop	r17
 49a:	0f 91       	pop	r16
 49c:	ff 90       	pop	r15
 49e:	ef 90       	pop	r14
 4a0:	08 95       	ret

000004a2 <lcdWriteText>:
 4a2:	1f 93       	push	r17
 4a4:	cf 93       	push	r28
 4a6:	df 93       	push	r29
 4a8:	cd b7       	in	r28, 0x3d	; 61
 4aa:	de b7       	in	r29, 0x3e	; 62
 4ac:	65 97       	sbiw	r28, 0x15	; 21
 4ae:	0f b6       	in	r0, 0x3f	; 63
 4b0:	f8 94       	cli
 4b2:	de bf       	out	0x3e, r29	; 62
 4b4:	0f be       	out	0x3f, r0	; 63
 4b6:	cd bf       	out	0x3d, r28	; 61
 4b8:	9e 01       	movw	r18, r28
 4ba:	20 5e       	subi	r18, 0xE0	; 224
 4bc:	3f 4f       	sbci	r19, 0xFF	; 255
 4be:	4e 8d       	ldd	r20, Y+30	; 0x1e
 4c0:	5f 8d       	ldd	r21, Y+31	; 0x1f
 4c2:	65 e1       	ldi	r22, 0x15	; 21
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	ce 01       	movw	r24, r28
 4c8:	01 96       	adiw	r24, 0x01	; 1
 4ca:	60 d2       	rcall	.+1216   	; 0x98c <vsnprintf>
 4cc:	6d 8d       	ldd	r22, Y+29	; 0x1d
 4ce:	8c 8d       	ldd	r24, Y+28	; 0x1c
 4d0:	90 e2       	ldi	r25, 0x20	; 32
 4d2:	89 9f       	mul	r24, r25
 4d4:	60 0d       	add	r22, r0
 4d6:	11 24       	eor	r1, r1
 4d8:	60 68       	ori	r22, 0x80	; 128
 4da:	70 e0       	ldi	r23, 0x00	; 0
 4dc:	83 e4       	ldi	r24, 0x43	; 67
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	59 df       	rcall	.-334    	; 0x394 <writeLcdF>
 4e2:	10 e0       	ldi	r17, 0x00	; 0
 4e4:	05 c0       	rjmp	.+10     	; 0x4f0 <lcdWriteText+0x4e>
 4e6:	1f 5f       	subi	r17, 0xFF	; 255
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	84 e4       	ldi	r24, 0x44	; 68
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	52 df       	rcall	.-348    	; 0x394 <writeLcdF>
 4f0:	e1 e0       	ldi	r30, 0x01	; 1
 4f2:	f0 e0       	ldi	r31, 0x00	; 0
 4f4:	ec 0f       	add	r30, r28
 4f6:	fd 1f       	adc	r31, r29
 4f8:	e1 0f       	add	r30, r17
 4fa:	f1 1d       	adc	r31, r1
 4fc:	60 81       	ld	r22, Z
 4fe:	61 11       	cpse	r22, r1
 500:	f2 cf       	rjmp	.-28     	; 0x4e6 <lcdWriteText+0x44>
 502:	65 96       	adiw	r28, 0x15	; 21
 504:	0f b6       	in	r0, 0x3f	; 63
 506:	f8 94       	cli
 508:	de bf       	out	0x3e, r29	; 62
 50a:	0f be       	out	0x3f, r0	; 63
 50c:	cd bf       	out	0x3d, r28	; 61
 50e:	df 91       	pop	r29
 510:	cf 91       	pop	r28
 512:	1f 91       	pop	r17
 514:	08 95       	ret

00000516 <lcdClear>:
 516:	61 e0       	ldi	r22, 0x01	; 1
 518:	70 e0       	ldi	r23, 0x00	; 0
 51a:	83 e4       	ldi	r24, 0x43	; 67
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	3a df       	rcall	.-396    	; 0x394 <writeLcdF>
 520:	8f e3       	ldi	r24, 0x3F	; 63
 522:	9f e1       	ldi	r25, 0x1F	; 31
 524:	01 97       	sbiw	r24, 0x01	; 1
 526:	f1 f7       	brne	.-4      	; 0x524 <lcdClear+0xe>
 528:	00 c0       	rjmp	.+0      	; 0x52a <lcdClear+0x14>
 52a:	00 00       	nop
 52c:	80 e3       	ldi	r24, 0x30	; 48
 52e:	92 e0       	ldi	r25, 0x02	; 2
 530:	9f 93       	push	r25
 532:	8f 93       	push	r24
 534:	1f 92       	push	r1
 536:	1f 92       	push	r1
 538:	b4 df       	rcall	.-152    	; 0x4a2 <lcdWriteText>
 53a:	0f 90       	pop	r0
 53c:	0f 90       	pop	r0
 53e:	0f 90       	pop	r0
 540:	0f 90       	pop	r0
 542:	08 95       	ret

00000544 <initLcd>:
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	11 df       	rcall	.-478    	; 0x36a <lcdSclk>
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	05 df       	rcall	.-502    	; 0x356 <lcdSid>
 54c:	64 e3       	ldi	r22, 0x34	; 52
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	83 e4       	ldi	r24, 0x43	; 67
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	1f df       	rcall	.-450    	; 0x394 <writeLcdF>
 556:	69 e0       	ldi	r22, 0x09	; 9
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	83 e4       	ldi	r24, 0x43	; 67
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	1a df       	rcall	.-460    	; 0x394 <writeLcdF>
 560:	60 e3       	ldi	r22, 0x30	; 48
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	83 e4       	ldi	r24, 0x43	; 67
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	15 df       	rcall	.-470    	; 0x394 <writeLcdF>
 56a:	6c e0       	ldi	r22, 0x0C	; 12
 56c:	70 e0       	ldi	r23, 0x00	; 0
 56e:	83 e4       	ldi	r24, 0x43	; 67
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	10 df       	rcall	.-480    	; 0x394 <writeLcdF>
 574:	d0 df       	rcall	.-96     	; 0x516 <lcdClear>
 576:	67 e0       	ldi	r22, 0x07	; 7
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	83 e4       	ldi	r24, 0x43	; 67
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0a df       	rcall	.-492    	; 0x394 <writeLcdF>
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	fd ce       	rjmp	.-518    	; 0x37e <lcdLight>
 584:	08 95       	ret

00000586 <initBoard>:
 586:	ff 92       	push	r15
 588:	0f 93       	push	r16
 58a:	1f 93       	push	r17
 58c:	cf 93       	push	r28
 58e:	df 93       	push	r29
 590:	c8 2f       	mov	r28, r24
 592:	85 b7       	in	r24, 0x35	; 53
 594:	85 bf       	out	0x35, r24	; 53
 596:	12 b8       	out	0x02, r1	; 2
 598:	8f ef       	ldi	r24, 0xFF	; 255
 59a:	81 b9       	out	0x01, r24	; 1
 59c:	15 b8       	out	0x05, r1	; 5
 59e:	84 b9       	out	0x04, r24	; 4
 5a0:	88 b9       	out	0x08, r24	; 8
 5a2:	17 b8       	out	0x07, r1	; 7
 5a4:	8b b9       	out	0x0b, r24	; 11
 5a6:	1a b8       	out	0x0a, r1	; 10
 5a8:	8e b9       	out	0x0e, r24	; 14
 5aa:	1d b8       	out	0x0d, r1	; 13
 5ac:	9e b1       	in	r25, 0x0e	; 14
 5ae:	9b 7f       	andi	r25, 0xFB	; 251
 5b0:	9e b9       	out	0x0e, r25	; 14
 5b2:	11 ba       	out	0x11, r1	; 17
 5b4:	10 ba       	out	0x10, r1	; 16
 5b6:	94 e0       	ldi	r25, 0x04	; 4
 5b8:	94 bb       	out	0x14, r25	; 20
 5ba:	93 b3       	in	r25, 0x13	; 19
 5bc:	93 60       	ori	r25, 0x03	; 3
 5be:	93 bb       	out	0x13, r25	; 19
 5c0:	93 b3       	in	r25, 0x13	; 19
 5c2:	90 62       	ori	r25, 0x20	; 32
 5c4:	93 bb       	out	0x13, r25	; 19
 5c6:	97 ec       	ldi	r25, 0xC7	; 199
 5c8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 5cc:	98 e3       	ldi	r25, 0x38	; 56
 5ce:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 5d2:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 5d6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 5da:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 5de:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 5e2:	8c e3       	ldi	r24, 0x3C	; 60
 5e4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 5e8:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 5ec:	78 94       	sei
 5ee:	24 de       	rcall	.-952    	; 0x238 <startSystemTimeMs>
 5f0:	a9 df       	rcall	.-174    	; 0x544 <initLcd>
 5f2:	2c de       	rcall	.-936    	; 0x24c <initAdc>
 5f4:	9c de       	rcall	.-712    	; 0x32e <initRgb>
 5f6:	cc 23       	and	r28, r28
 5f8:	09 f4       	brne	.+2      	; 0x5fc <initBoard+0x76>
 5fa:	a3 c0       	rjmp	.+326    	; 0x742 <initBoard+0x1bc>
 5fc:	8f ef       	ldi	r24, 0xFF	; 255
 5fe:	bf de       	rcall	.-642    	; 0x37e <lcdLight>
 600:	40 e0       	ldi	r20, 0x00	; 0
 602:	50 e0       	ldi	r21, 0x00	; 0
 604:	6f ef       	ldi	r22, 0xFF	; 255
 606:	73 e0       	ldi	r23, 0x03	; 3
 608:	80 e0       	ldi	r24, 0x00	; 0
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	79 de       	rcall	.-782    	; 0x300 <rgbWrite>
 60e:	8d e1       	ldi	r24, 0x1D	; 29
 610:	92 e0       	ldi	r25, 0x02	; 2
 612:	9f 93       	push	r25
 614:	8f 93       	push	r24
 616:	1f 92       	push	r1
 618:	1f 92       	push	r1
 61a:	43 df       	rcall	.-378    	; 0x4a2 <lcdWriteText>
 61c:	82 e3       	ldi	r24, 0x32	; 50
 61e:	92 e0       	ldi	r25, 0x02	; 2
 620:	9f 93       	push	r25
 622:	8f 93       	push	r24
 624:	1f 92       	push	r1
 626:	81 e0       	ldi	r24, 0x01	; 1
 628:	8f 93       	push	r24
 62a:	3b df       	rcall	.-394    	; 0x4a2 <lcdWriteText>
 62c:	88 e0       	ldi	r24, 0x08	; 8
 62e:	92 e0       	ldi	r25, 0x02	; 2
 630:	9f 93       	push	r25
 632:	8f 93       	push	r24
 634:	1f 92       	push	r1
 636:	82 e0       	ldi	r24, 0x02	; 2
 638:	8f 93       	push	r24
 63a:	33 df       	rcall	.-410    	; 0x4a2 <lcdWriteText>
 63c:	87 e4       	ldi	r24, 0x47	; 71
 63e:	92 e0       	ldi	r25, 0x02	; 2
 640:	9f 93       	push	r25
 642:	8f 93       	push	r24
 644:	1f 92       	push	r1
 646:	83 e0       	ldi	r24, 0x03	; 3
 648:	8f 93       	push	r24
 64a:	2b df       	rcall	.-426    	; 0x4a2 <lcdWriteText>
 64c:	8d b7       	in	r24, 0x3d	; 61
 64e:	9e b7       	in	r25, 0x3e	; 62
 650:	40 96       	adiw	r24, 0x10	; 16
 652:	0f b6       	in	r0, 0x3f	; 63
 654:	f8 94       	cli
 656:	9e bf       	out	0x3e, r25	; 62
 658:	0f be       	out	0x3f, r0	; 63
 65a:	8d bf       	out	0x3d, r24	; 61
 65c:	ff 24       	eor	r15, r15
 65e:	f3 94       	inc	r15
 660:	c0 e0       	ldi	r28, 0x00	; 0
 662:	10 e0       	ldi	r17, 0x00	; 0
 664:	01 e0       	ldi	r16, 0x01	; 1
 666:	d0 e0       	ldi	r29, 0x00	; 0
 668:	00 23       	and	r16, r16
 66a:	51 f0       	breq	.+20     	; 0x680 <initBoard+0xfa>
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	90 e8       	ldi	r25, 0x80	; 128
 670:	0d 2e       	mov	r0, r29
 672:	02 c0       	rjmp	.+4      	; 0x678 <initBoard+0xf2>
 674:	96 95       	lsr	r25
 676:	87 95       	ror	r24
 678:	0a 94       	dec	r0
 67a:	e2 f7       	brpl	.-8      	; 0x674 <initBoard+0xee>
 67c:	d7 dd       	rcall	.-1106   	; 0x22c <ledWriteAll>
 67e:	09 c0       	rjmp	.+18     	; 0x692 <initBoard+0x10c>
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	0d 2e       	mov	r0, r29
 686:	02 c0       	rjmp	.+4      	; 0x68c <initBoard+0x106>
 688:	88 0f       	add	r24, r24
 68a:	99 1f       	adc	r25, r25
 68c:	0a 94       	dec	r0
 68e:	e2 f7       	brpl	.-8      	; 0x688 <initBoard+0x102>
 690:	cd dd       	rcall	.-1126   	; 0x22c <ledWriteAll>
 692:	df 5f       	subi	r29, 0xFF	; 255
 694:	d1 31       	cpi	r29, 0x11	; 17
 696:	28 f0       	brcs	.+10     	; 0x6a2 <initBoard+0x11c>
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	01 11       	cpse	r16, r1
 69c:	80 e0       	ldi	r24, 0x00	; 0
 69e:	08 2f       	mov	r16, r24
 6a0:	d0 e0       	ldi	r29, 0x00	; 0
 6a2:	ff 20       	and	r15, r15
 6a4:	11 f0       	breq	.+4      	; 0x6aa <initBoard+0x124>
 6a6:	ce 5f       	subi	r28, 0xFE	; 254
 6a8:	01 c0       	rjmp	.+2      	; 0x6ac <initBoard+0x126>
 6aa:	c2 50       	subi	r28, 0x02	; 2
 6ac:	8c 2f       	mov	r24, r28
 6ae:	67 de       	rcall	.-818    	; 0x37e <lcdLight>
 6b0:	ce 3f       	cpi	r28, 0xFE	; 254
 6b2:	09 f4       	brne	.+2      	; 0x6b6 <initBoard+0x130>
 6b4:	f1 2c       	mov	r15, r1
 6b6:	c8 37       	cpi	r28, 0x78	; 120
 6b8:	11 f4       	brne	.+4      	; 0x6be <initBoard+0x138>
 6ba:	ff 24       	eor	r15, r15
 6bc:	f3 94       	inc	r15
 6be:	11 11       	cpse	r17, r1
 6c0:	17 c0       	rjmp	.+46     	; 0x6f0 <initBoard+0x16a>
 6c2:	b7 dd       	rcall	.-1170   	; 0x232 <buttonReadAllPL>
 6c4:	83 7c       	andi	r24, 0xC3	; 195
 6c6:	a1 f0       	breq	.+40     	; 0x6f0 <initBoard+0x16a>
 6c8:	40 e0       	ldi	r20, 0x00	; 0
 6ca:	50 e0       	ldi	r21, 0x00	; 0
 6cc:	66 e2       	ldi	r22, 0x26	; 38
 6ce:	72 e0       	ldi	r23, 0x02	; 2
 6d0:	8f ef       	ldi	r24, 0xFF	; 255
 6d2:	93 e0       	ldi	r25, 0x03	; 3
 6d4:	15 de       	rcall	.-982    	; 0x300 <rgbWrite>
 6d6:	8c e5       	ldi	r24, 0x5C	; 92
 6d8:	92 e0       	ldi	r25, 0x02	; 2
 6da:	9f 93       	push	r25
 6dc:	8f 93       	push	r24
 6de:	1f 92       	push	r1
 6e0:	83 e0       	ldi	r24, 0x03	; 3
 6e2:	8f 93       	push	r24
 6e4:	de de       	rcall	.-580    	; 0x4a2 <lcdWriteText>
 6e6:	0f 90       	pop	r0
 6e8:	0f 90       	pop	r0
 6ea:	0f 90       	pop	r0
 6ec:	0f 90       	pop	r0
 6ee:	11 e0       	ldi	r17, 0x01	; 1
 6f0:	11 23       	and	r17, r17
 6f2:	19 f0       	breq	.+6      	; 0x6fa <initBoard+0x174>
 6f4:	9e dd       	rcall	.-1220   	; 0x232 <buttonReadAllPL>
 6f6:	83 7c       	andi	r24, 0xC3	; 195
 6f8:	39 f0       	breq	.+14     	; 0x708 <initBoard+0x182>
 6fa:	8f ef       	ldi	r24, 0xFF	; 255
 6fc:	9c e7       	ldi	r25, 0x7C	; 124
 6fe:	01 97       	sbiw	r24, 0x01	; 1
 700:	f1 f7       	brne	.-4      	; 0x6fe <initBoard+0x178>
 702:	00 c0       	rjmp	.+0      	; 0x704 <initBoard+0x17e>
 704:	00 00       	nop
 706:	b0 cf       	rjmp	.-160    	; 0x668 <initBoard+0xe2>
 708:	06 df       	rcall	.-500    	; 0x516 <lcdClear>
 70a:	80 e0       	ldi	r24, 0x00	; 0
 70c:	38 de       	rcall	.-912    	; 0x37e <lcdLight>
 70e:	80 e0       	ldi	r24, 0x00	; 0
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	8c dd       	rcall	.-1256   	; 0x22c <ledWriteAll>
 714:	40 e0       	ldi	r20, 0x00	; 0
 716:	50 e0       	ldi	r21, 0x00	; 0
 718:	60 e0       	ldi	r22, 0x00	; 0
 71a:	70 e0       	ldi	r23, 0x00	; 0
 71c:	80 e0       	ldi	r24, 0x00	; 0
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	ef dd       	rcall	.-1058   	; 0x300 <rgbWrite>
 722:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 726:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 72a:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 72e:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 732:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 736:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 73a:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 73e:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 742:	df 91       	pop	r29
 744:	cf 91       	pop	r28
 746:	1f 91       	pop	r17
 748:	0f 91       	pop	r16
 74a:	ff 90       	pop	r15
 74c:	08 95       	ret

0000074e <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 74e:	cf 93       	push	r28
 750:	df 93       	push	r29
 752:	cd b7       	in	r28, 0x3d	; 61
 754:	de b7       	in	r29, 0x3e	; 62
 756:	28 97       	sbiw	r28, 0x08	; 8
 758:	0f b6       	in	r0, 0x3f	; 63
 75a:	f8 94       	cli
 75c:	de bf       	out	0x3e, r29	; 62
 75e:	0f be       	out	0x3f, r0	; 63
 760:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 762:	88 e0       	ldi	r24, 0x08	; 8
 764:	e0 e0       	ldi	r30, 0x00	; 0
 766:	f2 e0       	ldi	r31, 0x02	; 2
 768:	de 01       	movw	r26, r28
 76a:	11 96       	adiw	r26, 0x01	; 1
 76c:	01 90       	ld	r0, Z+
 76e:	0d 92       	st	X+, r0
 770:	8a 95       	dec	r24
 772:	e1 f7       	brne	.-8      	; 0x76c <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 774:	e5 e0       	ldi	r30, 0x05	; 5
 776:	f1 e0       	ldi	r31, 0x01	; 1
 778:	80 81       	ld	r24, Z
 77a:	8f 7b       	andi	r24, 0xBF	; 191
 77c:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 77e:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 782:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 786:	81 e0       	ldi	r24, 0x01	; 1
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	8c 0f       	add	r24, r28
 78c:	9d 1f       	adc	r25, r29
 78e:	e8 0f       	add	r30, r24
 790:	f9 1f       	adc	r31, r25
 792:	80 81       	ld	r24, Z
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 79a:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 79e:	80 e0       	ldi	r24, 0x00	; 0
 7a0:	26 c0       	rjmp	.+76     	; 0x7ee <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 7a2:	e7 e3       	ldi	r30, 0x37	; 55
 7a4:	f0 e0       	ldi	r31, 0x00	; 0
 7a6:	e8 1b       	sub	r30, r24
 7a8:	f1 09       	sbc	r31, r1
 7aa:	ee 0f       	add	r30, r30
 7ac:	ff 1f       	adc	r31, r31
 7ae:	ee 57       	subi	r30, 0x7E	; 126
 7b0:	fd 4f       	sbci	r31, 0xFD	; 253
 7b2:	40 81       	ld	r20, Z
 7b4:	51 81       	ldd	r21, Z+1	; 0x01
 7b6:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 7ba:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 7be:	24 23       	and	r18, r20
 7c0:	35 23       	and	r19, r21
 7c2:	23 2b       	or	r18, r19
 7c4:	31 f0       	breq	.+12     	; 0x7d2 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 7c6:	e5 e0       	ldi	r30, 0x05	; 5
 7c8:	f1 e0       	ldi	r31, 0x01	; 1
 7ca:	90 81       	ld	r25, Z
 7cc:	90 62       	ori	r25, 0x20	; 32
 7ce:	90 83       	st	Z, r25
 7d0:	05 c0       	rjmp	.+10     	; 0x7dc <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7d2:	e5 e0       	ldi	r30, 0x05	; 5
 7d4:	f1 e0       	ldi	r31, 0x01	; 1
 7d6:	90 81       	ld	r25, Z
 7d8:	9f 7d       	andi	r25, 0xDF	; 223
 7da:	90 83       	st	Z, r25
        }
        CLOCK_1;
 7dc:	e5 e0       	ldi	r30, 0x05	; 5
 7de:	f1 e0       	ldi	r31, 0x01	; 1
 7e0:	90 81       	ld	r25, Z
 7e2:	90 61       	ori	r25, 0x10	; 16
 7e4:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7e6:	90 81       	ld	r25, Z
 7e8:	9f 7e       	andi	r25, 0xEF	; 239
 7ea:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7ec:	8f 5f       	subi	r24, 0xFF	; 255
 7ee:	88 33       	cpi	r24, 0x38	; 56
 7f0:	c0 f2       	brcs	.-80     	; 0x7a2 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 7f2:	e5 e0       	ldi	r30, 0x05	; 5
 7f4:	f1 e0       	ldi	r31, 0x01	; 1
 7f6:	80 81       	ld	r24, Z
 7f8:	87 7f       	andi	r24, 0xF7	; 247
 7fa:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 7fc:	80 81       	ld	r24, Z
 7fe:	88 7f       	andi	r24, 0xF8	; 248
 800:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 802:	90 81       	ld	r25, Z
 804:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 808:	89 2b       	or	r24, r25
 80a:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 80c:	80 81       	ld	r24, Z
 80e:	80 64       	ori	r24, 0x40	; 64
 810:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 812:	80 81       	ld	r24, Z
 814:	88 60       	ori	r24, 0x08	; 8
 816:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 818:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 81c:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 820:	87 30       	cpi	r24, 0x07	; 7
 822:	91 05       	cpc	r25, r1
 824:	30 f4       	brcc	.+12     	; 0x832 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 826:	01 96       	adiw	r24, 0x01	; 1
 828:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 82c:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 830:	07 c0       	rjmp	.+14     	; 0x840 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 832:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 836:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 83a:	81 e0       	ldi	r24, 0x01	; 1
 83c:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 840:	28 96       	adiw	r28, 0x08	; 8
 842:	0f b6       	in	r0, 0x3f	; 63
 844:	f8 94       	cli
 846:	de bf       	out	0x3e, r29	; 62
 848:	0f be       	out	0x3f, r0	; 63
 84a:	cd bf       	out	0x3d, r28	; 61
 84c:	df 91       	pop	r29
 84e:	cf 91       	pop	r28
 850:	08 95       	ret

00000852 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 852:	1f 92       	push	r1
 854:	0f 92       	push	r0
 856:	0f b6       	in	r0, 0x3f	; 63
 858:	0f 92       	push	r0
 85a:	11 24       	eor	r1, r1
 85c:	0b b6       	in	r0, 0x3b	; 59
 85e:	0f 92       	push	r0
 860:	2f 93       	push	r18
 862:	3f 93       	push	r19
 864:	4f 93       	push	r20
 866:	5f 93       	push	r21
 868:	6f 93       	push	r22
 86a:	7f 93       	push	r23
 86c:	8f 93       	push	r24
 86e:	9f 93       	push	r25
 870:	af 93       	push	r26
 872:	bf 93       	push	r27
 874:	ef 93       	push	r30
 876:	ff 93       	push	r31
    systemTimeMs += 1;
 878:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 87c:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 880:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 884:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 888:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 88c:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 890:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 894:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 898:	a1 e0       	ldi	r26, 0x01	; 1
 89a:	6c d0       	rcall	.+216    	; 0x974 <__adddi3_s8>
 89c:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 8a0:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 8a4:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 8a8:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 8ac:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 8b0:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 8b4:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 8b8:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 8bc:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 8c0:	81 11       	cpse	r24, r1
 8c2:	45 df       	rcall	.-374    	; 0x74e <matrixWriteNextLine>
}
 8c4:	ff 91       	pop	r31
 8c6:	ef 91       	pop	r30
 8c8:	bf 91       	pop	r27
 8ca:	af 91       	pop	r26
 8cc:	9f 91       	pop	r25
 8ce:	8f 91       	pop	r24
 8d0:	7f 91       	pop	r23
 8d2:	6f 91       	pop	r22
 8d4:	5f 91       	pop	r21
 8d6:	4f 91       	pop	r20
 8d8:	3f 91       	pop	r19
 8da:	2f 91       	pop	r18
 8dc:	0f 90       	pop	r0
 8de:	0b be       	out	0x3b, r0	; 59
 8e0:	0f 90       	pop	r0
 8e2:	0f be       	out	0x3f, r0	; 63
 8e4:	0f 90       	pop	r0
 8e6:	1f 90       	pop	r1
 8e8:	18 95       	reti

000008ea <__udivmodhi4>:
 8ea:	aa 1b       	sub	r26, r26
 8ec:	bb 1b       	sub	r27, r27
 8ee:	51 e1       	ldi	r21, 0x11	; 17
 8f0:	07 c0       	rjmp	.+14     	; 0x900 <__udivmodhi4_ep>

000008f2 <__udivmodhi4_loop>:
 8f2:	aa 1f       	adc	r26, r26
 8f4:	bb 1f       	adc	r27, r27
 8f6:	a6 17       	cp	r26, r22
 8f8:	b7 07       	cpc	r27, r23
 8fa:	10 f0       	brcs	.+4      	; 0x900 <__udivmodhi4_ep>
 8fc:	a6 1b       	sub	r26, r22
 8fe:	b7 0b       	sbc	r27, r23

00000900 <__udivmodhi4_ep>:
 900:	88 1f       	adc	r24, r24
 902:	99 1f       	adc	r25, r25
 904:	5a 95       	dec	r21
 906:	a9 f7       	brne	.-22     	; 0x8f2 <__udivmodhi4_loop>
 908:	80 95       	com	r24
 90a:	90 95       	com	r25
 90c:	bc 01       	movw	r22, r24
 90e:	cd 01       	movw	r24, r26
 910:	08 95       	ret

00000912 <__udivmodsi4>:
 912:	a1 e2       	ldi	r26, 0x21	; 33
 914:	1a 2e       	mov	r1, r26
 916:	aa 1b       	sub	r26, r26
 918:	bb 1b       	sub	r27, r27
 91a:	fd 01       	movw	r30, r26
 91c:	0d c0       	rjmp	.+26     	; 0x938 <__udivmodsi4_ep>

0000091e <__udivmodsi4_loop>:
 91e:	aa 1f       	adc	r26, r26
 920:	bb 1f       	adc	r27, r27
 922:	ee 1f       	adc	r30, r30
 924:	ff 1f       	adc	r31, r31
 926:	a2 17       	cp	r26, r18
 928:	b3 07       	cpc	r27, r19
 92a:	e4 07       	cpc	r30, r20
 92c:	f5 07       	cpc	r31, r21
 92e:	20 f0       	brcs	.+8      	; 0x938 <__udivmodsi4_ep>
 930:	a2 1b       	sub	r26, r18
 932:	b3 0b       	sbc	r27, r19
 934:	e4 0b       	sbc	r30, r20
 936:	f5 0b       	sbc	r31, r21

00000938 <__udivmodsi4_ep>:
 938:	66 1f       	adc	r22, r22
 93a:	77 1f       	adc	r23, r23
 93c:	88 1f       	adc	r24, r24
 93e:	99 1f       	adc	r25, r25
 940:	1a 94       	dec	r1
 942:	69 f7       	brne	.-38     	; 0x91e <__udivmodsi4_loop>
 944:	60 95       	com	r22
 946:	70 95       	com	r23
 948:	80 95       	com	r24
 94a:	90 95       	com	r25
 94c:	9b 01       	movw	r18, r22
 94e:	ac 01       	movw	r20, r24
 950:	bd 01       	movw	r22, r26
 952:	cf 01       	movw	r24, r30
 954:	08 95       	ret

00000956 <__umulhisi3>:
 956:	a2 9f       	mul	r26, r18
 958:	b0 01       	movw	r22, r0
 95a:	b3 9f       	mul	r27, r19
 95c:	c0 01       	movw	r24, r0
 95e:	a3 9f       	mul	r26, r19
 960:	70 0d       	add	r23, r0
 962:	81 1d       	adc	r24, r1
 964:	11 24       	eor	r1, r1
 966:	91 1d       	adc	r25, r1
 968:	b2 9f       	mul	r27, r18
 96a:	70 0d       	add	r23, r0
 96c:	81 1d       	adc	r24, r1
 96e:	11 24       	eor	r1, r1
 970:	91 1d       	adc	r25, r1
 972:	08 95       	ret

00000974 <__adddi3_s8>:
 974:	00 24       	eor	r0, r0
 976:	a7 fd       	sbrc	r26, 7
 978:	00 94       	com	r0
 97a:	2a 0f       	add	r18, r26
 97c:	30 1d       	adc	r19, r0
 97e:	40 1d       	adc	r20, r0
 980:	50 1d       	adc	r21, r0
 982:	60 1d       	adc	r22, r0
 984:	70 1d       	adc	r23, r0
 986:	80 1d       	adc	r24, r0
 988:	90 1d       	adc	r25, r0
 98a:	08 95       	ret

0000098c <vsnprintf>:
 98c:	0f 93       	push	r16
 98e:	1f 93       	push	r17
 990:	cf 93       	push	r28
 992:	df 93       	push	r29
 994:	cd b7       	in	r28, 0x3d	; 61
 996:	de b7       	in	r29, 0x3e	; 62
 998:	2e 97       	sbiw	r28, 0x0e	; 14
 99a:	0f b6       	in	r0, 0x3f	; 63
 99c:	f8 94       	cli
 99e:	de bf       	out	0x3e, r29	; 62
 9a0:	0f be       	out	0x3f, r0	; 63
 9a2:	cd bf       	out	0x3d, r28	; 61
 9a4:	8c 01       	movw	r16, r24
 9a6:	fa 01       	movw	r30, r20
 9a8:	86 e0       	ldi	r24, 0x06	; 6
 9aa:	8c 83       	std	Y+4, r24	; 0x04
 9ac:	1a 83       	std	Y+2, r17	; 0x02
 9ae:	09 83       	std	Y+1, r16	; 0x01
 9b0:	77 ff       	sbrs	r23, 7
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <vsnprintf+0x2c>
 9b4:	60 e0       	ldi	r22, 0x00	; 0
 9b6:	70 e8       	ldi	r23, 0x80	; 128
 9b8:	cb 01       	movw	r24, r22
 9ba:	01 97       	sbiw	r24, 0x01	; 1
 9bc:	9e 83       	std	Y+6, r25	; 0x06
 9be:	8d 83       	std	Y+5, r24	; 0x05
 9c0:	a9 01       	movw	r20, r18
 9c2:	bf 01       	movw	r22, r30
 9c4:	ce 01       	movw	r24, r28
 9c6:	01 96       	adiw	r24, 0x01	; 1
 9c8:	19 d0       	rcall	.+50     	; 0x9fc <vfprintf>
 9ca:	4d 81       	ldd	r20, Y+5	; 0x05
 9cc:	5e 81       	ldd	r21, Y+6	; 0x06
 9ce:	57 fd       	sbrc	r21, 7
 9d0:	0a c0       	rjmp	.+20     	; 0x9e6 <vsnprintf+0x5a>
 9d2:	2f 81       	ldd	r18, Y+7	; 0x07
 9d4:	38 85       	ldd	r19, Y+8	; 0x08
 9d6:	42 17       	cp	r20, r18
 9d8:	53 07       	cpc	r21, r19
 9da:	0c f4       	brge	.+2      	; 0x9de <vsnprintf+0x52>
 9dc:	9a 01       	movw	r18, r20
 9de:	f8 01       	movw	r30, r16
 9e0:	e2 0f       	add	r30, r18
 9e2:	f3 1f       	adc	r31, r19
 9e4:	10 82       	st	Z, r1
 9e6:	2e 96       	adiw	r28, 0x0e	; 14
 9e8:	0f b6       	in	r0, 0x3f	; 63
 9ea:	f8 94       	cli
 9ec:	de bf       	out	0x3e, r29	; 62
 9ee:	0f be       	out	0x3f, r0	; 63
 9f0:	cd bf       	out	0x3d, r28	; 61
 9f2:	df 91       	pop	r29
 9f4:	cf 91       	pop	r28
 9f6:	1f 91       	pop	r17
 9f8:	0f 91       	pop	r16
 9fa:	08 95       	ret

000009fc <vfprintf>:
 9fc:	2f 92       	push	r2
 9fe:	3f 92       	push	r3
 a00:	4f 92       	push	r4
 a02:	5f 92       	push	r5
 a04:	6f 92       	push	r6
 a06:	7f 92       	push	r7
 a08:	8f 92       	push	r8
 a0a:	9f 92       	push	r9
 a0c:	af 92       	push	r10
 a0e:	bf 92       	push	r11
 a10:	cf 92       	push	r12
 a12:	df 92       	push	r13
 a14:	ef 92       	push	r14
 a16:	ff 92       	push	r15
 a18:	0f 93       	push	r16
 a1a:	1f 93       	push	r17
 a1c:	cf 93       	push	r28
 a1e:	df 93       	push	r29
 a20:	cd b7       	in	r28, 0x3d	; 61
 a22:	de b7       	in	r29, 0x3e	; 62
 a24:	2b 97       	sbiw	r28, 0x0b	; 11
 a26:	0f b6       	in	r0, 0x3f	; 63
 a28:	f8 94       	cli
 a2a:	de bf       	out	0x3e, r29	; 62
 a2c:	0f be       	out	0x3f, r0	; 63
 a2e:	cd bf       	out	0x3d, r28	; 61
 a30:	6c 01       	movw	r12, r24
 a32:	7b 01       	movw	r14, r22
 a34:	8a 01       	movw	r16, r20
 a36:	fc 01       	movw	r30, r24
 a38:	17 82       	std	Z+7, r1	; 0x07
 a3a:	16 82       	std	Z+6, r1	; 0x06
 a3c:	83 81       	ldd	r24, Z+3	; 0x03
 a3e:	81 ff       	sbrs	r24, 1
 a40:	bf c1       	rjmp	.+894    	; 0xdc0 <vfprintf+0x3c4>
 a42:	ce 01       	movw	r24, r28
 a44:	01 96       	adiw	r24, 0x01	; 1
 a46:	3c 01       	movw	r6, r24
 a48:	f6 01       	movw	r30, r12
 a4a:	93 81       	ldd	r25, Z+3	; 0x03
 a4c:	f7 01       	movw	r30, r14
 a4e:	93 fd       	sbrc	r25, 3
 a50:	85 91       	lpm	r24, Z+
 a52:	93 ff       	sbrs	r25, 3
 a54:	81 91       	ld	r24, Z+
 a56:	7f 01       	movw	r14, r30
 a58:	88 23       	and	r24, r24
 a5a:	09 f4       	brne	.+2      	; 0xa5e <vfprintf+0x62>
 a5c:	ad c1       	rjmp	.+858    	; 0xdb8 <vfprintf+0x3bc>
 a5e:	85 32       	cpi	r24, 0x25	; 37
 a60:	39 f4       	brne	.+14     	; 0xa70 <vfprintf+0x74>
 a62:	93 fd       	sbrc	r25, 3
 a64:	85 91       	lpm	r24, Z+
 a66:	93 ff       	sbrs	r25, 3
 a68:	81 91       	ld	r24, Z+
 a6a:	7f 01       	movw	r14, r30
 a6c:	85 32       	cpi	r24, 0x25	; 37
 a6e:	21 f4       	brne	.+8      	; 0xa78 <vfprintf+0x7c>
 a70:	b6 01       	movw	r22, r12
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	d6 d1       	rcall	.+940    	; 0xe22 <fputc>
 a76:	e8 cf       	rjmp	.-48     	; 0xa48 <vfprintf+0x4c>
 a78:	91 2c       	mov	r9, r1
 a7a:	21 2c       	mov	r2, r1
 a7c:	31 2c       	mov	r3, r1
 a7e:	ff e1       	ldi	r31, 0x1F	; 31
 a80:	f3 15       	cp	r31, r3
 a82:	d8 f0       	brcs	.+54     	; 0xaba <vfprintf+0xbe>
 a84:	8b 32       	cpi	r24, 0x2B	; 43
 a86:	79 f0       	breq	.+30     	; 0xaa6 <vfprintf+0xaa>
 a88:	38 f4       	brcc	.+14     	; 0xa98 <vfprintf+0x9c>
 a8a:	80 32       	cpi	r24, 0x20	; 32
 a8c:	79 f0       	breq	.+30     	; 0xaac <vfprintf+0xb0>
 a8e:	83 32       	cpi	r24, 0x23	; 35
 a90:	a1 f4       	brne	.+40     	; 0xaba <vfprintf+0xbe>
 a92:	23 2d       	mov	r18, r3
 a94:	20 61       	ori	r18, 0x10	; 16
 a96:	1d c0       	rjmp	.+58     	; 0xad2 <vfprintf+0xd6>
 a98:	8d 32       	cpi	r24, 0x2D	; 45
 a9a:	61 f0       	breq	.+24     	; 0xab4 <vfprintf+0xb8>
 a9c:	80 33       	cpi	r24, 0x30	; 48
 a9e:	69 f4       	brne	.+26     	; 0xaba <vfprintf+0xbe>
 aa0:	23 2d       	mov	r18, r3
 aa2:	21 60       	ori	r18, 0x01	; 1
 aa4:	16 c0       	rjmp	.+44     	; 0xad2 <vfprintf+0xd6>
 aa6:	83 2d       	mov	r24, r3
 aa8:	82 60       	ori	r24, 0x02	; 2
 aaa:	38 2e       	mov	r3, r24
 aac:	e3 2d       	mov	r30, r3
 aae:	e4 60       	ori	r30, 0x04	; 4
 ab0:	3e 2e       	mov	r3, r30
 ab2:	2a c0       	rjmp	.+84     	; 0xb08 <vfprintf+0x10c>
 ab4:	f3 2d       	mov	r31, r3
 ab6:	f8 60       	ori	r31, 0x08	; 8
 ab8:	1d c0       	rjmp	.+58     	; 0xaf4 <vfprintf+0xf8>
 aba:	37 fc       	sbrc	r3, 7
 abc:	2d c0       	rjmp	.+90     	; 0xb18 <vfprintf+0x11c>
 abe:	20 ed       	ldi	r18, 0xD0	; 208
 ac0:	28 0f       	add	r18, r24
 ac2:	2a 30       	cpi	r18, 0x0A	; 10
 ac4:	40 f0       	brcs	.+16     	; 0xad6 <vfprintf+0xda>
 ac6:	8e 32       	cpi	r24, 0x2E	; 46
 ac8:	b9 f4       	brne	.+46     	; 0xaf8 <vfprintf+0xfc>
 aca:	36 fc       	sbrc	r3, 6
 acc:	75 c1       	rjmp	.+746    	; 0xdb8 <vfprintf+0x3bc>
 ace:	23 2d       	mov	r18, r3
 ad0:	20 64       	ori	r18, 0x40	; 64
 ad2:	32 2e       	mov	r3, r18
 ad4:	19 c0       	rjmp	.+50     	; 0xb08 <vfprintf+0x10c>
 ad6:	36 fe       	sbrs	r3, 6
 ad8:	06 c0       	rjmp	.+12     	; 0xae6 <vfprintf+0xea>
 ada:	8a e0       	ldi	r24, 0x0A	; 10
 adc:	98 9e       	mul	r9, r24
 ade:	20 0d       	add	r18, r0
 ae0:	11 24       	eor	r1, r1
 ae2:	92 2e       	mov	r9, r18
 ae4:	11 c0       	rjmp	.+34     	; 0xb08 <vfprintf+0x10c>
 ae6:	ea e0       	ldi	r30, 0x0A	; 10
 ae8:	2e 9e       	mul	r2, r30
 aea:	20 0d       	add	r18, r0
 aec:	11 24       	eor	r1, r1
 aee:	22 2e       	mov	r2, r18
 af0:	f3 2d       	mov	r31, r3
 af2:	f0 62       	ori	r31, 0x20	; 32
 af4:	3f 2e       	mov	r3, r31
 af6:	08 c0       	rjmp	.+16     	; 0xb08 <vfprintf+0x10c>
 af8:	8c 36       	cpi	r24, 0x6C	; 108
 afa:	21 f4       	brne	.+8      	; 0xb04 <vfprintf+0x108>
 afc:	83 2d       	mov	r24, r3
 afe:	80 68       	ori	r24, 0x80	; 128
 b00:	38 2e       	mov	r3, r24
 b02:	02 c0       	rjmp	.+4      	; 0xb08 <vfprintf+0x10c>
 b04:	88 36       	cpi	r24, 0x68	; 104
 b06:	41 f4       	brne	.+16     	; 0xb18 <vfprintf+0x11c>
 b08:	f7 01       	movw	r30, r14
 b0a:	93 fd       	sbrc	r25, 3
 b0c:	85 91       	lpm	r24, Z+
 b0e:	93 ff       	sbrs	r25, 3
 b10:	81 91       	ld	r24, Z+
 b12:	7f 01       	movw	r14, r30
 b14:	81 11       	cpse	r24, r1
 b16:	b3 cf       	rjmp	.-154    	; 0xa7e <vfprintf+0x82>
 b18:	98 2f       	mov	r25, r24
 b1a:	9f 7d       	andi	r25, 0xDF	; 223
 b1c:	95 54       	subi	r25, 0x45	; 69
 b1e:	93 30       	cpi	r25, 0x03	; 3
 b20:	28 f4       	brcc	.+10     	; 0xb2c <vfprintf+0x130>
 b22:	0c 5f       	subi	r16, 0xFC	; 252
 b24:	1f 4f       	sbci	r17, 0xFF	; 255
 b26:	9f e3       	ldi	r25, 0x3F	; 63
 b28:	99 83       	std	Y+1, r25	; 0x01
 b2a:	0d c0       	rjmp	.+26     	; 0xb46 <vfprintf+0x14a>
 b2c:	83 36       	cpi	r24, 0x63	; 99
 b2e:	31 f0       	breq	.+12     	; 0xb3c <vfprintf+0x140>
 b30:	83 37       	cpi	r24, 0x73	; 115
 b32:	71 f0       	breq	.+28     	; 0xb50 <vfprintf+0x154>
 b34:	83 35       	cpi	r24, 0x53	; 83
 b36:	09 f0       	breq	.+2      	; 0xb3a <vfprintf+0x13e>
 b38:	55 c0       	rjmp	.+170    	; 0xbe4 <vfprintf+0x1e8>
 b3a:	20 c0       	rjmp	.+64     	; 0xb7c <vfprintf+0x180>
 b3c:	f8 01       	movw	r30, r16
 b3e:	80 81       	ld	r24, Z
 b40:	89 83       	std	Y+1, r24	; 0x01
 b42:	0e 5f       	subi	r16, 0xFE	; 254
 b44:	1f 4f       	sbci	r17, 0xFF	; 255
 b46:	88 24       	eor	r8, r8
 b48:	83 94       	inc	r8
 b4a:	91 2c       	mov	r9, r1
 b4c:	53 01       	movw	r10, r6
 b4e:	12 c0       	rjmp	.+36     	; 0xb74 <vfprintf+0x178>
 b50:	28 01       	movw	r4, r16
 b52:	f2 e0       	ldi	r31, 0x02	; 2
 b54:	4f 0e       	add	r4, r31
 b56:	51 1c       	adc	r5, r1
 b58:	f8 01       	movw	r30, r16
 b5a:	a0 80       	ld	r10, Z
 b5c:	b1 80       	ldd	r11, Z+1	; 0x01
 b5e:	36 fe       	sbrs	r3, 6
 b60:	03 c0       	rjmp	.+6      	; 0xb68 <vfprintf+0x16c>
 b62:	69 2d       	mov	r22, r9
 b64:	70 e0       	ldi	r23, 0x00	; 0
 b66:	02 c0       	rjmp	.+4      	; 0xb6c <vfprintf+0x170>
 b68:	6f ef       	ldi	r22, 0xFF	; 255
 b6a:	7f ef       	ldi	r23, 0xFF	; 255
 b6c:	c5 01       	movw	r24, r10
 b6e:	4e d1       	rcall	.+668    	; 0xe0c <strnlen>
 b70:	4c 01       	movw	r8, r24
 b72:	82 01       	movw	r16, r4
 b74:	f3 2d       	mov	r31, r3
 b76:	ff 77       	andi	r31, 0x7F	; 127
 b78:	3f 2e       	mov	r3, r31
 b7a:	15 c0       	rjmp	.+42     	; 0xba6 <vfprintf+0x1aa>
 b7c:	28 01       	movw	r4, r16
 b7e:	22 e0       	ldi	r18, 0x02	; 2
 b80:	42 0e       	add	r4, r18
 b82:	51 1c       	adc	r5, r1
 b84:	f8 01       	movw	r30, r16
 b86:	a0 80       	ld	r10, Z
 b88:	b1 80       	ldd	r11, Z+1	; 0x01
 b8a:	36 fe       	sbrs	r3, 6
 b8c:	03 c0       	rjmp	.+6      	; 0xb94 <vfprintf+0x198>
 b8e:	69 2d       	mov	r22, r9
 b90:	70 e0       	ldi	r23, 0x00	; 0
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <vfprintf+0x19c>
 b94:	6f ef       	ldi	r22, 0xFF	; 255
 b96:	7f ef       	ldi	r23, 0xFF	; 255
 b98:	c5 01       	movw	r24, r10
 b9a:	2d d1       	rcall	.+602    	; 0xdf6 <strnlen_P>
 b9c:	4c 01       	movw	r8, r24
 b9e:	f3 2d       	mov	r31, r3
 ba0:	f0 68       	ori	r31, 0x80	; 128
 ba2:	3f 2e       	mov	r3, r31
 ba4:	82 01       	movw	r16, r4
 ba6:	33 fc       	sbrc	r3, 3
 ba8:	19 c0       	rjmp	.+50     	; 0xbdc <vfprintf+0x1e0>
 baa:	82 2d       	mov	r24, r2
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	88 16       	cp	r8, r24
 bb0:	99 06       	cpc	r9, r25
 bb2:	a0 f4       	brcc	.+40     	; 0xbdc <vfprintf+0x1e0>
 bb4:	b6 01       	movw	r22, r12
 bb6:	80 e2       	ldi	r24, 0x20	; 32
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	33 d1       	rcall	.+614    	; 0xe22 <fputc>
 bbc:	2a 94       	dec	r2
 bbe:	f5 cf       	rjmp	.-22     	; 0xbaa <vfprintf+0x1ae>
 bc0:	f5 01       	movw	r30, r10
 bc2:	37 fc       	sbrc	r3, 7
 bc4:	85 91       	lpm	r24, Z+
 bc6:	37 fe       	sbrs	r3, 7
 bc8:	81 91       	ld	r24, Z+
 bca:	5f 01       	movw	r10, r30
 bcc:	b6 01       	movw	r22, r12
 bce:	90 e0       	ldi	r25, 0x00	; 0
 bd0:	28 d1       	rcall	.+592    	; 0xe22 <fputc>
 bd2:	21 10       	cpse	r2, r1
 bd4:	2a 94       	dec	r2
 bd6:	21 e0       	ldi	r18, 0x01	; 1
 bd8:	82 1a       	sub	r8, r18
 bda:	91 08       	sbc	r9, r1
 bdc:	81 14       	cp	r8, r1
 bde:	91 04       	cpc	r9, r1
 be0:	79 f7       	brne	.-34     	; 0xbc0 <vfprintf+0x1c4>
 be2:	e1 c0       	rjmp	.+450    	; 0xda6 <vfprintf+0x3aa>
 be4:	84 36       	cpi	r24, 0x64	; 100
 be6:	11 f0       	breq	.+4      	; 0xbec <vfprintf+0x1f0>
 be8:	89 36       	cpi	r24, 0x69	; 105
 bea:	39 f5       	brne	.+78     	; 0xc3a <vfprintf+0x23e>
 bec:	f8 01       	movw	r30, r16
 bee:	37 fe       	sbrs	r3, 7
 bf0:	07 c0       	rjmp	.+14     	; 0xc00 <vfprintf+0x204>
 bf2:	60 81       	ld	r22, Z
 bf4:	71 81       	ldd	r23, Z+1	; 0x01
 bf6:	82 81       	ldd	r24, Z+2	; 0x02
 bf8:	93 81       	ldd	r25, Z+3	; 0x03
 bfa:	0c 5f       	subi	r16, 0xFC	; 252
 bfc:	1f 4f       	sbci	r17, 0xFF	; 255
 bfe:	08 c0       	rjmp	.+16     	; 0xc10 <vfprintf+0x214>
 c00:	60 81       	ld	r22, Z
 c02:	71 81       	ldd	r23, Z+1	; 0x01
 c04:	07 2e       	mov	r0, r23
 c06:	00 0c       	add	r0, r0
 c08:	88 0b       	sbc	r24, r24
 c0a:	99 0b       	sbc	r25, r25
 c0c:	0e 5f       	subi	r16, 0xFE	; 254
 c0e:	1f 4f       	sbci	r17, 0xFF	; 255
 c10:	f3 2d       	mov	r31, r3
 c12:	ff 76       	andi	r31, 0x6F	; 111
 c14:	3f 2e       	mov	r3, r31
 c16:	97 ff       	sbrs	r25, 7
 c18:	09 c0       	rjmp	.+18     	; 0xc2c <vfprintf+0x230>
 c1a:	90 95       	com	r25
 c1c:	80 95       	com	r24
 c1e:	70 95       	com	r23
 c20:	61 95       	neg	r22
 c22:	7f 4f       	sbci	r23, 0xFF	; 255
 c24:	8f 4f       	sbci	r24, 0xFF	; 255
 c26:	9f 4f       	sbci	r25, 0xFF	; 255
 c28:	f0 68       	ori	r31, 0x80	; 128
 c2a:	3f 2e       	mov	r3, r31
 c2c:	2a e0       	ldi	r18, 0x0A	; 10
 c2e:	30 e0       	ldi	r19, 0x00	; 0
 c30:	a3 01       	movw	r20, r6
 c32:	33 d1       	rcall	.+614    	; 0xe9a <__ultoa_invert>
 c34:	88 2e       	mov	r8, r24
 c36:	86 18       	sub	r8, r6
 c38:	44 c0       	rjmp	.+136    	; 0xcc2 <vfprintf+0x2c6>
 c3a:	85 37       	cpi	r24, 0x75	; 117
 c3c:	31 f4       	brne	.+12     	; 0xc4a <vfprintf+0x24e>
 c3e:	23 2d       	mov	r18, r3
 c40:	2f 7e       	andi	r18, 0xEF	; 239
 c42:	b2 2e       	mov	r11, r18
 c44:	2a e0       	ldi	r18, 0x0A	; 10
 c46:	30 e0       	ldi	r19, 0x00	; 0
 c48:	25 c0       	rjmp	.+74     	; 0xc94 <vfprintf+0x298>
 c4a:	93 2d       	mov	r25, r3
 c4c:	99 7f       	andi	r25, 0xF9	; 249
 c4e:	b9 2e       	mov	r11, r25
 c50:	8f 36       	cpi	r24, 0x6F	; 111
 c52:	c1 f0       	breq	.+48     	; 0xc84 <vfprintf+0x288>
 c54:	18 f4       	brcc	.+6      	; 0xc5c <vfprintf+0x260>
 c56:	88 35       	cpi	r24, 0x58	; 88
 c58:	79 f0       	breq	.+30     	; 0xc78 <vfprintf+0x27c>
 c5a:	ae c0       	rjmp	.+348    	; 0xdb8 <vfprintf+0x3bc>
 c5c:	80 37       	cpi	r24, 0x70	; 112
 c5e:	19 f0       	breq	.+6      	; 0xc66 <vfprintf+0x26a>
 c60:	88 37       	cpi	r24, 0x78	; 120
 c62:	21 f0       	breq	.+8      	; 0xc6c <vfprintf+0x270>
 c64:	a9 c0       	rjmp	.+338    	; 0xdb8 <vfprintf+0x3bc>
 c66:	e9 2f       	mov	r30, r25
 c68:	e0 61       	ori	r30, 0x10	; 16
 c6a:	be 2e       	mov	r11, r30
 c6c:	b4 fe       	sbrs	r11, 4
 c6e:	0d c0       	rjmp	.+26     	; 0xc8a <vfprintf+0x28e>
 c70:	fb 2d       	mov	r31, r11
 c72:	f4 60       	ori	r31, 0x04	; 4
 c74:	bf 2e       	mov	r11, r31
 c76:	09 c0       	rjmp	.+18     	; 0xc8a <vfprintf+0x28e>
 c78:	34 fe       	sbrs	r3, 4
 c7a:	0a c0       	rjmp	.+20     	; 0xc90 <vfprintf+0x294>
 c7c:	29 2f       	mov	r18, r25
 c7e:	26 60       	ori	r18, 0x06	; 6
 c80:	b2 2e       	mov	r11, r18
 c82:	06 c0       	rjmp	.+12     	; 0xc90 <vfprintf+0x294>
 c84:	28 e0       	ldi	r18, 0x08	; 8
 c86:	30 e0       	ldi	r19, 0x00	; 0
 c88:	05 c0       	rjmp	.+10     	; 0xc94 <vfprintf+0x298>
 c8a:	20 e1       	ldi	r18, 0x10	; 16
 c8c:	30 e0       	ldi	r19, 0x00	; 0
 c8e:	02 c0       	rjmp	.+4      	; 0xc94 <vfprintf+0x298>
 c90:	20 e1       	ldi	r18, 0x10	; 16
 c92:	32 e0       	ldi	r19, 0x02	; 2
 c94:	f8 01       	movw	r30, r16
 c96:	b7 fe       	sbrs	r11, 7
 c98:	07 c0       	rjmp	.+14     	; 0xca8 <vfprintf+0x2ac>
 c9a:	60 81       	ld	r22, Z
 c9c:	71 81       	ldd	r23, Z+1	; 0x01
 c9e:	82 81       	ldd	r24, Z+2	; 0x02
 ca0:	93 81       	ldd	r25, Z+3	; 0x03
 ca2:	0c 5f       	subi	r16, 0xFC	; 252
 ca4:	1f 4f       	sbci	r17, 0xFF	; 255
 ca6:	06 c0       	rjmp	.+12     	; 0xcb4 <vfprintf+0x2b8>
 ca8:	60 81       	ld	r22, Z
 caa:	71 81       	ldd	r23, Z+1	; 0x01
 cac:	80 e0       	ldi	r24, 0x00	; 0
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	0e 5f       	subi	r16, 0xFE	; 254
 cb2:	1f 4f       	sbci	r17, 0xFF	; 255
 cb4:	a3 01       	movw	r20, r6
 cb6:	f1 d0       	rcall	.+482    	; 0xe9a <__ultoa_invert>
 cb8:	88 2e       	mov	r8, r24
 cba:	86 18       	sub	r8, r6
 cbc:	fb 2d       	mov	r31, r11
 cbe:	ff 77       	andi	r31, 0x7F	; 127
 cc0:	3f 2e       	mov	r3, r31
 cc2:	36 fe       	sbrs	r3, 6
 cc4:	0d c0       	rjmp	.+26     	; 0xce0 <vfprintf+0x2e4>
 cc6:	23 2d       	mov	r18, r3
 cc8:	2e 7f       	andi	r18, 0xFE	; 254
 cca:	a2 2e       	mov	r10, r18
 ccc:	89 14       	cp	r8, r9
 cce:	58 f4       	brcc	.+22     	; 0xce6 <vfprintf+0x2ea>
 cd0:	34 fe       	sbrs	r3, 4
 cd2:	0b c0       	rjmp	.+22     	; 0xcea <vfprintf+0x2ee>
 cd4:	32 fc       	sbrc	r3, 2
 cd6:	09 c0       	rjmp	.+18     	; 0xcea <vfprintf+0x2ee>
 cd8:	83 2d       	mov	r24, r3
 cda:	8e 7e       	andi	r24, 0xEE	; 238
 cdc:	a8 2e       	mov	r10, r24
 cde:	05 c0       	rjmp	.+10     	; 0xcea <vfprintf+0x2ee>
 ce0:	b8 2c       	mov	r11, r8
 ce2:	a3 2c       	mov	r10, r3
 ce4:	03 c0       	rjmp	.+6      	; 0xcec <vfprintf+0x2f0>
 ce6:	b8 2c       	mov	r11, r8
 ce8:	01 c0       	rjmp	.+2      	; 0xcec <vfprintf+0x2f0>
 cea:	b9 2c       	mov	r11, r9
 cec:	a4 fe       	sbrs	r10, 4
 cee:	0f c0       	rjmp	.+30     	; 0xd0e <vfprintf+0x312>
 cf0:	fe 01       	movw	r30, r28
 cf2:	e8 0d       	add	r30, r8
 cf4:	f1 1d       	adc	r31, r1
 cf6:	80 81       	ld	r24, Z
 cf8:	80 33       	cpi	r24, 0x30	; 48
 cfa:	21 f4       	brne	.+8      	; 0xd04 <vfprintf+0x308>
 cfc:	9a 2d       	mov	r25, r10
 cfe:	99 7e       	andi	r25, 0xE9	; 233
 d00:	a9 2e       	mov	r10, r25
 d02:	09 c0       	rjmp	.+18     	; 0xd16 <vfprintf+0x31a>
 d04:	a2 fe       	sbrs	r10, 2
 d06:	06 c0       	rjmp	.+12     	; 0xd14 <vfprintf+0x318>
 d08:	b3 94       	inc	r11
 d0a:	b3 94       	inc	r11
 d0c:	04 c0       	rjmp	.+8      	; 0xd16 <vfprintf+0x31a>
 d0e:	8a 2d       	mov	r24, r10
 d10:	86 78       	andi	r24, 0x86	; 134
 d12:	09 f0       	breq	.+2      	; 0xd16 <vfprintf+0x31a>
 d14:	b3 94       	inc	r11
 d16:	a3 fc       	sbrc	r10, 3
 d18:	10 c0       	rjmp	.+32     	; 0xd3a <vfprintf+0x33e>
 d1a:	a0 fe       	sbrs	r10, 0
 d1c:	06 c0       	rjmp	.+12     	; 0xd2a <vfprintf+0x32e>
 d1e:	b2 14       	cp	r11, r2
 d20:	80 f4       	brcc	.+32     	; 0xd42 <vfprintf+0x346>
 d22:	28 0c       	add	r2, r8
 d24:	92 2c       	mov	r9, r2
 d26:	9b 18       	sub	r9, r11
 d28:	0d c0       	rjmp	.+26     	; 0xd44 <vfprintf+0x348>
 d2a:	b2 14       	cp	r11, r2
 d2c:	58 f4       	brcc	.+22     	; 0xd44 <vfprintf+0x348>
 d2e:	b6 01       	movw	r22, r12
 d30:	80 e2       	ldi	r24, 0x20	; 32
 d32:	90 e0       	ldi	r25, 0x00	; 0
 d34:	76 d0       	rcall	.+236    	; 0xe22 <fputc>
 d36:	b3 94       	inc	r11
 d38:	f8 cf       	rjmp	.-16     	; 0xd2a <vfprintf+0x32e>
 d3a:	b2 14       	cp	r11, r2
 d3c:	18 f4       	brcc	.+6      	; 0xd44 <vfprintf+0x348>
 d3e:	2b 18       	sub	r2, r11
 d40:	02 c0       	rjmp	.+4      	; 0xd46 <vfprintf+0x34a>
 d42:	98 2c       	mov	r9, r8
 d44:	21 2c       	mov	r2, r1
 d46:	a4 fe       	sbrs	r10, 4
 d48:	0f c0       	rjmp	.+30     	; 0xd68 <vfprintf+0x36c>
 d4a:	b6 01       	movw	r22, r12
 d4c:	80 e3       	ldi	r24, 0x30	; 48
 d4e:	90 e0       	ldi	r25, 0x00	; 0
 d50:	68 d0       	rcall	.+208    	; 0xe22 <fputc>
 d52:	a2 fe       	sbrs	r10, 2
 d54:	16 c0       	rjmp	.+44     	; 0xd82 <vfprintf+0x386>
 d56:	a1 fc       	sbrc	r10, 1
 d58:	03 c0       	rjmp	.+6      	; 0xd60 <vfprintf+0x364>
 d5a:	88 e7       	ldi	r24, 0x78	; 120
 d5c:	90 e0       	ldi	r25, 0x00	; 0
 d5e:	02 c0       	rjmp	.+4      	; 0xd64 <vfprintf+0x368>
 d60:	88 e5       	ldi	r24, 0x58	; 88
 d62:	90 e0       	ldi	r25, 0x00	; 0
 d64:	b6 01       	movw	r22, r12
 d66:	0c c0       	rjmp	.+24     	; 0xd80 <vfprintf+0x384>
 d68:	8a 2d       	mov	r24, r10
 d6a:	86 78       	andi	r24, 0x86	; 134
 d6c:	51 f0       	breq	.+20     	; 0xd82 <vfprintf+0x386>
 d6e:	a1 fe       	sbrs	r10, 1
 d70:	02 c0       	rjmp	.+4      	; 0xd76 <vfprintf+0x37a>
 d72:	8b e2       	ldi	r24, 0x2B	; 43
 d74:	01 c0       	rjmp	.+2      	; 0xd78 <vfprintf+0x37c>
 d76:	80 e2       	ldi	r24, 0x20	; 32
 d78:	a7 fc       	sbrc	r10, 7
 d7a:	8d e2       	ldi	r24, 0x2D	; 45
 d7c:	b6 01       	movw	r22, r12
 d7e:	90 e0       	ldi	r25, 0x00	; 0
 d80:	50 d0       	rcall	.+160    	; 0xe22 <fputc>
 d82:	89 14       	cp	r8, r9
 d84:	30 f4       	brcc	.+12     	; 0xd92 <vfprintf+0x396>
 d86:	b6 01       	movw	r22, r12
 d88:	80 e3       	ldi	r24, 0x30	; 48
 d8a:	90 e0       	ldi	r25, 0x00	; 0
 d8c:	4a d0       	rcall	.+148    	; 0xe22 <fputc>
 d8e:	9a 94       	dec	r9
 d90:	f8 cf       	rjmp	.-16     	; 0xd82 <vfprintf+0x386>
 d92:	8a 94       	dec	r8
 d94:	f3 01       	movw	r30, r6
 d96:	e8 0d       	add	r30, r8
 d98:	f1 1d       	adc	r31, r1
 d9a:	80 81       	ld	r24, Z
 d9c:	b6 01       	movw	r22, r12
 d9e:	90 e0       	ldi	r25, 0x00	; 0
 da0:	40 d0       	rcall	.+128    	; 0xe22 <fputc>
 da2:	81 10       	cpse	r8, r1
 da4:	f6 cf       	rjmp	.-20     	; 0xd92 <vfprintf+0x396>
 da6:	22 20       	and	r2, r2
 da8:	09 f4       	brne	.+2      	; 0xdac <vfprintf+0x3b0>
 daa:	4e ce       	rjmp	.-868    	; 0xa48 <vfprintf+0x4c>
 dac:	b6 01       	movw	r22, r12
 dae:	80 e2       	ldi	r24, 0x20	; 32
 db0:	90 e0       	ldi	r25, 0x00	; 0
 db2:	37 d0       	rcall	.+110    	; 0xe22 <fputc>
 db4:	2a 94       	dec	r2
 db6:	f7 cf       	rjmp	.-18     	; 0xda6 <vfprintf+0x3aa>
 db8:	f6 01       	movw	r30, r12
 dba:	86 81       	ldd	r24, Z+6	; 0x06
 dbc:	97 81       	ldd	r25, Z+7	; 0x07
 dbe:	02 c0       	rjmp	.+4      	; 0xdc4 <vfprintf+0x3c8>
 dc0:	8f ef       	ldi	r24, 0xFF	; 255
 dc2:	9f ef       	ldi	r25, 0xFF	; 255
 dc4:	2b 96       	adiw	r28, 0x0b	; 11
 dc6:	0f b6       	in	r0, 0x3f	; 63
 dc8:	f8 94       	cli
 dca:	de bf       	out	0x3e, r29	; 62
 dcc:	0f be       	out	0x3f, r0	; 63
 dce:	cd bf       	out	0x3d, r28	; 61
 dd0:	df 91       	pop	r29
 dd2:	cf 91       	pop	r28
 dd4:	1f 91       	pop	r17
 dd6:	0f 91       	pop	r16
 dd8:	ff 90       	pop	r15
 dda:	ef 90       	pop	r14
 ddc:	df 90       	pop	r13
 dde:	cf 90       	pop	r12
 de0:	bf 90       	pop	r11
 de2:	af 90       	pop	r10
 de4:	9f 90       	pop	r9
 de6:	8f 90       	pop	r8
 de8:	7f 90       	pop	r7
 dea:	6f 90       	pop	r6
 dec:	5f 90       	pop	r5
 dee:	4f 90       	pop	r4
 df0:	3f 90       	pop	r3
 df2:	2f 90       	pop	r2
 df4:	08 95       	ret

00000df6 <strnlen_P>:
 df6:	fc 01       	movw	r30, r24
 df8:	05 90       	lpm	r0, Z+
 dfa:	61 50       	subi	r22, 0x01	; 1
 dfc:	70 40       	sbci	r23, 0x00	; 0
 dfe:	01 10       	cpse	r0, r1
 e00:	d8 f7       	brcc	.-10     	; 0xdf8 <strnlen_P+0x2>
 e02:	80 95       	com	r24
 e04:	90 95       	com	r25
 e06:	8e 0f       	add	r24, r30
 e08:	9f 1f       	adc	r25, r31
 e0a:	08 95       	ret

00000e0c <strnlen>:
 e0c:	fc 01       	movw	r30, r24
 e0e:	61 50       	subi	r22, 0x01	; 1
 e10:	70 40       	sbci	r23, 0x00	; 0
 e12:	01 90       	ld	r0, Z+
 e14:	01 10       	cpse	r0, r1
 e16:	d8 f7       	brcc	.-10     	; 0xe0e <strnlen+0x2>
 e18:	80 95       	com	r24
 e1a:	90 95       	com	r25
 e1c:	8e 0f       	add	r24, r30
 e1e:	9f 1f       	adc	r25, r31
 e20:	08 95       	ret

00000e22 <fputc>:
 e22:	0f 93       	push	r16
 e24:	1f 93       	push	r17
 e26:	cf 93       	push	r28
 e28:	df 93       	push	r29
 e2a:	fb 01       	movw	r30, r22
 e2c:	23 81       	ldd	r18, Z+3	; 0x03
 e2e:	21 fd       	sbrc	r18, 1
 e30:	03 c0       	rjmp	.+6      	; 0xe38 <fputc+0x16>
 e32:	8f ef       	ldi	r24, 0xFF	; 255
 e34:	9f ef       	ldi	r25, 0xFF	; 255
 e36:	2c c0       	rjmp	.+88     	; 0xe90 <fputc+0x6e>
 e38:	22 ff       	sbrs	r18, 2
 e3a:	16 c0       	rjmp	.+44     	; 0xe68 <fputc+0x46>
 e3c:	46 81       	ldd	r20, Z+6	; 0x06
 e3e:	57 81       	ldd	r21, Z+7	; 0x07
 e40:	24 81       	ldd	r18, Z+4	; 0x04
 e42:	35 81       	ldd	r19, Z+5	; 0x05
 e44:	42 17       	cp	r20, r18
 e46:	53 07       	cpc	r21, r19
 e48:	44 f4       	brge	.+16     	; 0xe5a <fputc+0x38>
 e4a:	a0 81       	ld	r26, Z
 e4c:	b1 81       	ldd	r27, Z+1	; 0x01
 e4e:	9d 01       	movw	r18, r26
 e50:	2f 5f       	subi	r18, 0xFF	; 255
 e52:	3f 4f       	sbci	r19, 0xFF	; 255
 e54:	31 83       	std	Z+1, r19	; 0x01
 e56:	20 83       	st	Z, r18
 e58:	8c 93       	st	X, r24
 e5a:	26 81       	ldd	r18, Z+6	; 0x06
 e5c:	37 81       	ldd	r19, Z+7	; 0x07
 e5e:	2f 5f       	subi	r18, 0xFF	; 255
 e60:	3f 4f       	sbci	r19, 0xFF	; 255
 e62:	37 83       	std	Z+7, r19	; 0x07
 e64:	26 83       	std	Z+6, r18	; 0x06
 e66:	14 c0       	rjmp	.+40     	; 0xe90 <fputc+0x6e>
 e68:	8b 01       	movw	r16, r22
 e6a:	ec 01       	movw	r28, r24
 e6c:	fb 01       	movw	r30, r22
 e6e:	00 84       	ldd	r0, Z+8	; 0x08
 e70:	f1 85       	ldd	r31, Z+9	; 0x09
 e72:	e0 2d       	mov	r30, r0
 e74:	19 95       	eicall
 e76:	89 2b       	or	r24, r25
 e78:	e1 f6       	brne	.-72     	; 0xe32 <fputc+0x10>
 e7a:	d8 01       	movw	r26, r16
 e7c:	16 96       	adiw	r26, 0x06	; 6
 e7e:	8d 91       	ld	r24, X+
 e80:	9c 91       	ld	r25, X
 e82:	17 97       	sbiw	r26, 0x07	; 7
 e84:	01 96       	adiw	r24, 0x01	; 1
 e86:	17 96       	adiw	r26, 0x07	; 7
 e88:	9c 93       	st	X, r25
 e8a:	8e 93       	st	-X, r24
 e8c:	16 97       	sbiw	r26, 0x06	; 6
 e8e:	ce 01       	movw	r24, r28
 e90:	df 91       	pop	r29
 e92:	cf 91       	pop	r28
 e94:	1f 91       	pop	r17
 e96:	0f 91       	pop	r16
 e98:	08 95       	ret

00000e9a <__ultoa_invert>:
 e9a:	fa 01       	movw	r30, r20
 e9c:	aa 27       	eor	r26, r26
 e9e:	28 30       	cpi	r18, 0x08	; 8
 ea0:	51 f1       	breq	.+84     	; 0xef6 <__ultoa_invert+0x5c>
 ea2:	20 31       	cpi	r18, 0x10	; 16
 ea4:	81 f1       	breq	.+96     	; 0xf06 <__ultoa_invert+0x6c>
 ea6:	e8 94       	clt
 ea8:	6f 93       	push	r22
 eaa:	6e 7f       	andi	r22, 0xFE	; 254
 eac:	6e 5f       	subi	r22, 0xFE	; 254
 eae:	7f 4f       	sbci	r23, 0xFF	; 255
 eb0:	8f 4f       	sbci	r24, 0xFF	; 255
 eb2:	9f 4f       	sbci	r25, 0xFF	; 255
 eb4:	af 4f       	sbci	r26, 0xFF	; 255
 eb6:	b1 e0       	ldi	r27, 0x01	; 1
 eb8:	3e d0       	rcall	.+124    	; 0xf36 <__ultoa_invert+0x9c>
 eba:	b4 e0       	ldi	r27, 0x04	; 4
 ebc:	3c d0       	rcall	.+120    	; 0xf36 <__ultoa_invert+0x9c>
 ebe:	67 0f       	add	r22, r23
 ec0:	78 1f       	adc	r23, r24
 ec2:	89 1f       	adc	r24, r25
 ec4:	9a 1f       	adc	r25, r26
 ec6:	a1 1d       	adc	r26, r1
 ec8:	68 0f       	add	r22, r24
 eca:	79 1f       	adc	r23, r25
 ecc:	8a 1f       	adc	r24, r26
 ece:	91 1d       	adc	r25, r1
 ed0:	a1 1d       	adc	r26, r1
 ed2:	6a 0f       	add	r22, r26
 ed4:	71 1d       	adc	r23, r1
 ed6:	81 1d       	adc	r24, r1
 ed8:	91 1d       	adc	r25, r1
 eda:	a1 1d       	adc	r26, r1
 edc:	20 d0       	rcall	.+64     	; 0xf1e <__ultoa_invert+0x84>
 ede:	09 f4       	brne	.+2      	; 0xee2 <__ultoa_invert+0x48>
 ee0:	68 94       	set
 ee2:	3f 91       	pop	r19
 ee4:	2a e0       	ldi	r18, 0x0A	; 10
 ee6:	26 9f       	mul	r18, r22
 ee8:	11 24       	eor	r1, r1
 eea:	30 19       	sub	r19, r0
 eec:	30 5d       	subi	r19, 0xD0	; 208
 eee:	31 93       	st	Z+, r19
 ef0:	de f6       	brtc	.-74     	; 0xea8 <__ultoa_invert+0xe>
 ef2:	cf 01       	movw	r24, r30
 ef4:	08 95       	ret
 ef6:	46 2f       	mov	r20, r22
 ef8:	47 70       	andi	r20, 0x07	; 7
 efa:	40 5d       	subi	r20, 0xD0	; 208
 efc:	41 93       	st	Z+, r20
 efe:	b3 e0       	ldi	r27, 0x03	; 3
 f00:	0f d0       	rcall	.+30     	; 0xf20 <__ultoa_invert+0x86>
 f02:	c9 f7       	brne	.-14     	; 0xef6 <__ultoa_invert+0x5c>
 f04:	f6 cf       	rjmp	.-20     	; 0xef2 <__ultoa_invert+0x58>
 f06:	46 2f       	mov	r20, r22
 f08:	4f 70       	andi	r20, 0x0F	; 15
 f0a:	40 5d       	subi	r20, 0xD0	; 208
 f0c:	4a 33       	cpi	r20, 0x3A	; 58
 f0e:	18 f0       	brcs	.+6      	; 0xf16 <__ultoa_invert+0x7c>
 f10:	49 5d       	subi	r20, 0xD9	; 217
 f12:	31 fd       	sbrc	r19, 1
 f14:	40 52       	subi	r20, 0x20	; 32
 f16:	41 93       	st	Z+, r20
 f18:	02 d0       	rcall	.+4      	; 0xf1e <__ultoa_invert+0x84>
 f1a:	a9 f7       	brne	.-22     	; 0xf06 <__ultoa_invert+0x6c>
 f1c:	ea cf       	rjmp	.-44     	; 0xef2 <__ultoa_invert+0x58>
 f1e:	b4 e0       	ldi	r27, 0x04	; 4
 f20:	a6 95       	lsr	r26
 f22:	97 95       	ror	r25
 f24:	87 95       	ror	r24
 f26:	77 95       	ror	r23
 f28:	67 95       	ror	r22
 f2a:	ba 95       	dec	r27
 f2c:	c9 f7       	brne	.-14     	; 0xf20 <__ultoa_invert+0x86>
 f2e:	00 97       	sbiw	r24, 0x00	; 0
 f30:	61 05       	cpc	r22, r1
 f32:	71 05       	cpc	r23, r1
 f34:	08 95       	ret
 f36:	9b 01       	movw	r18, r22
 f38:	ac 01       	movw	r20, r24
 f3a:	0a 2e       	mov	r0, r26
 f3c:	06 94       	lsr	r0
 f3e:	57 95       	ror	r21
 f40:	47 95       	ror	r20
 f42:	37 95       	ror	r19
 f44:	27 95       	ror	r18
 f46:	ba 95       	dec	r27
 f48:	c9 f7       	brne	.-14     	; 0xf3c <__ultoa_invert+0xa2>
 f4a:	62 0f       	add	r22, r18
 f4c:	73 1f       	adc	r23, r19
 f4e:	84 1f       	adc	r24, r20
 f50:	95 1f       	adc	r25, r21
 f52:	a0 1d       	adc	r26, r0
 f54:	08 95       	ret

00000f56 <_exit>:
 f56:	f8 94       	cli

00000f58 <__stop_program>:
 f58:	ff cf       	rjmp	.-2      	; 0xf58 <__stop_program>
