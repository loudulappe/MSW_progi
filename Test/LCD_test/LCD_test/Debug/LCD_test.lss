
LCD_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000088  00800200  00000ee2  00000f76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ee2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800288  00800288  00000ffe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ffe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000105c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  0000109c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002462  00000000  00000000  0000128c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000edf  00000000  00000000  000036ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001506  00000000  00000000  000045cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006a8  00000000  00000000  00005ad4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c8f  00000000  00000000  0000617c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b8c  00000000  00000000  00006e0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008997  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	f4 c3       	rjmp	.+2024   	; 0x846 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 ee       	ldi	r30, 0xE2	; 226
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 38       	cpi	r26, 0x88	; 136
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a8 e8       	ldi	r26, 0x88	; 136
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 30       	cpi	r26, 0x06	; 6
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	de c6       	rjmp	.+3516   	; 0xede <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#include "ucBoardDriver.h"


int main(void)
{
    initBoard(1); 
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	29 d2       	rcall	.+1106   	; 0x57a <initBoard>
    uint16_t zeit=0;   
    while (1) 
    {
        zeit=getSystemTimeMs();
 128:	4f d0       	rcall	.+158    	; 0x1c8 <getSystemTimeMs>
 12a:	c3 2f       	mov	r28, r19
 12c:	42 2f       	mov	r20, r18
 12e:	5c 2f       	mov	r21, r28
 130:	9a 01       	movw	r18, r20
        lcdShowText("time: %02u:%02u:%02u",zeit/60000,(zeit/100)%60,zeit);
 132:	36 95       	lsr	r19
 134:	27 95       	ror	r18
 136:	36 95       	lsr	r19
 138:	27 95       	ror	r18
 13a:	ab e7       	ldi	r26, 0x7B	; 123
 13c:	b4 e1       	ldi	r27, 0x14	; 20
 13e:	cf d3       	rcall	.+1950   	; 0x8de <__umulhisi3>
 140:	fc 01       	movw	r30, r24
 142:	f6 95       	lsr	r31
 144:	e7 95       	ror	r30
 146:	cf 93       	push	r28
 148:	4f 93       	push	r20
 14a:	9f 01       	movw	r18, r30
 14c:	a9 e8       	ldi	r26, 0x89	; 137
 14e:	b8 e8       	ldi	r27, 0x88	; 136
 150:	c6 d3       	rcall	.+1932   	; 0x8de <__umulhisi3>
 152:	96 95       	lsr	r25
 154:	87 95       	ror	r24
 156:	92 95       	swap	r25
 158:	82 95       	swap	r24
 15a:	8f 70       	andi	r24, 0x0F	; 15
 15c:	89 27       	eor	r24, r25
 15e:	9f 70       	andi	r25, 0x0F	; 15
 160:	89 27       	eor	r24, r25
 162:	6c e3       	ldi	r22, 0x3C	; 60
 164:	68 9f       	mul	r22, r24
 166:	90 01       	movw	r18, r0
 168:	69 9f       	mul	r22, r25
 16a:	30 0d       	add	r19, r0
 16c:	11 24       	eor	r1, r1
 16e:	e2 1b       	sub	r30, r18
 170:	f3 0b       	sbc	r31, r19
 172:	ff 93       	push	r31
 174:	ef 93       	push	r30
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	40 36       	cpi	r20, 0x60	; 96
 17c:	5a 4e       	sbci	r21, 0xEA	; 234
 17e:	10 f4       	brcc	.+4      	; 0x184 <main+0x60>
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	1f 92       	push	r1
 186:	1f 92       	push	r1
 188:	9f 93       	push	r25
 18a:	8f 93       	push	r24
 18c:	88 e0       	ldi	r24, 0x08	; 8
 18e:	92 e0       	ldi	r25, 0x02	; 2
 190:	9f 93       	push	r25
 192:	8f 93       	push	r24
 194:	57 d1       	rcall	.+686    	; 0x444 <lcdShowText>
 196:	8d b7       	in	r24, 0x3d	; 61
 198:	9e b7       	in	r25, 0x3e	; 62
 19a:	0a 96       	adiw	r24, 0x0a	; 10
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	f8 94       	cli
 1a0:	9e bf       	out	0x3e, r25	; 62
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	8d bf       	out	0x3d, r24	; 61
 1a6:	c0 cf       	rjmp	.-128    	; 0x128 <main+0x4>

000001a8 <ledWriteAll>:
 1a8:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1aa:	95 b9       	out	0x05, r25	; 5
 1ac:	08 95       	ret

000001ae <buttonReadAllPL>:
 1ae:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 1b2:	08 95       	ret

000001b4 <startSystemTimeMs>:
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	84 bd       	out	0x24, r24	; 36
 1b8:	8b e0       	ldi	r24, 0x0B	; 11
 1ba:	85 bd       	out	0x25, r24	; 37
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 1c2:	89 ef       	ldi	r24, 0xF9	; 249
 1c4:	87 bd       	out	0x27, r24	; 39
 1c6:	08 95       	ret

000001c8 <getSystemTimeMs>:
 1c8:	20 91 8d 02 	lds	r18, 0x028D	; 0x80028d <systemTimeMs>
 1cc:	30 91 8e 02 	lds	r19, 0x028E	; 0x80028e <systemTimeMs+0x1>
 1d0:	40 91 8f 02 	lds	r20, 0x028F	; 0x80028f <systemTimeMs+0x2>
 1d4:	50 91 90 02 	lds	r21, 0x0290	; 0x800290 <systemTimeMs+0x3>
 1d8:	60 91 91 02 	lds	r22, 0x0291	; 0x800291 <systemTimeMs+0x4>
 1dc:	70 91 92 02 	lds	r23, 0x0292	; 0x800292 <systemTimeMs+0x5>
 1e0:	80 91 93 02 	lds	r24, 0x0293	; 0x800293 <systemTimeMs+0x6>
 1e4:	90 91 94 02 	lds	r25, 0x0294	; 0x800294 <systemTimeMs+0x7>
 1e8:	08 95       	ret

000001ea <initAdc>:
 1ea:	11 ba       	out	0x11, r1	; 17
 1ec:	10 ba       	out	0x10, r1	; 16
 1ee:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 1f2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 1f6:	80 e4       	ldi	r24, 0x40	; 64
 1f8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 1fc:	8f e0       	ldi	r24, 0x0F	; 15
 1fe:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 208:	ea e7       	ldi	r30, 0x7A	; 122
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	87 ea       	ldi	r24, 0xA7	; 167
 20e:	80 83       	st	Z, r24
 210:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 214:	80 81       	ld	r24, Z
 216:	80 64       	ori	r24, 0x40	; 64
 218:	80 83       	st	Z, r24
 21a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 21e:	84 ff       	sbrs	r24, 4
 220:	fc cf       	rjmp	.-8      	; 0x21a <initAdc+0x30>
 222:	ea e7       	ldi	r30, 0x7A	; 122
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	8f 7e       	andi	r24, 0xEF	; 239
 22a:	80 83       	st	Z, r24
 22c:	08 95       	ret

0000022e <rgbWrite>:
 22e:	2f ef       	ldi	r18, 0xFF	; 255
 230:	33 e0       	ldi	r19, 0x03	; 3
 232:	f9 01       	movw	r30, r18
 234:	e8 1b       	sub	r30, r24
 236:	f9 0b       	sbc	r31, r25
 238:	c9 01       	movw	r24, r18
 23a:	86 1b       	sub	r24, r22
 23c:	97 0b       	sbc	r25, r23
 23e:	24 1b       	sub	r18, r20
 240:	35 0b       	sbc	r19, r21
 242:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 246:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 24a:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 24e:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 252:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 256:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 25a:	08 95       	ret

0000025c <initRgb>:
 25c:	8e ef       	ldi	r24, 0xFE	; 254
 25e:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 262:	8b e1       	ldi	r24, 0x1B	; 27
 264:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 268:	83 e0       	ldi	r24, 0x03	; 3
 26a:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 26e:	8f ef       	ldi	r24, 0xFF	; 255
 270:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	50 e0       	ldi	r21, 0x00	; 0
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	d6 cf       	rjmp	.-84     	; 0x22e <rgbWrite>
 282:	08 95       	ret

00000284 <lcdSid>:
 284:	88 23       	and	r24, r24
 286:	21 f0       	breq	.+8      	; 0x290 <lcdSid+0xc>
 288:	84 b3       	in	r24, 0x14	; 20
 28a:	81 60       	ori	r24, 0x01	; 1
 28c:	84 bb       	out	0x14, r24	; 20
 28e:	08 95       	ret
 290:	84 b3       	in	r24, 0x14	; 20
 292:	8e 7f       	andi	r24, 0xFE	; 254
 294:	84 bb       	out	0x14, r24	; 20
 296:	08 95       	ret

00000298 <lcdSclk>:
 298:	88 23       	and	r24, r24
 29a:	21 f0       	breq	.+8      	; 0x2a4 <lcdSclk+0xc>
 29c:	84 b3       	in	r24, 0x14	; 20
 29e:	82 60       	ori	r24, 0x02	; 2
 2a0:	84 bb       	out	0x14, r24	; 20
 2a2:	08 95       	ret
 2a4:	84 b3       	in	r24, 0x14	; 20
 2a6:	8d 7f       	andi	r24, 0xFD	; 253
 2a8:	84 bb       	out	0x14, r24	; 20
 2aa:	08 95       	ret

000002ac <lcdLight>:
 2ac:	81 11       	cpse	r24, r1
 2ae:	04 c0       	rjmp	.+8      	; 0x2b8 <lcdLight+0xc>
 2b0:	84 b5       	in	r24, 0x24	; 36
 2b2:	8f 7d       	andi	r24, 0xDF	; 223
 2b4:	84 bd       	out	0x24, r24	; 36
 2b6:	08 95       	ret
 2b8:	94 b5       	in	r25, 0x24	; 36
 2ba:	90 62       	ori	r25, 0x20	; 32
 2bc:	94 bd       	out	0x24, r25	; 36
 2be:	88 bd       	out	0x28, r24	; 40
 2c0:	08 95       	ret

000002c2 <writeLcdF>:
 2c2:	ef 92       	push	r14
 2c4:	ff 92       	push	r15
 2c6:	0f 93       	push	r16
 2c8:	1f 93       	push	r17
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	7c 01       	movw	r14, r24
 2d0:	eb 01       	movw	r28, r22
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	d7 df       	rcall	.-82     	; 0x284 <lcdSid>
 2d6:	00 e0       	ldi	r16, 0x00	; 0
 2d8:	10 e0       	ldi	r17, 0x00	; 0
 2da:	06 c0       	rjmp	.+12     	; 0x2e8 <writeLcdF+0x26>
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	dc df       	rcall	.-72     	; 0x298 <lcdSclk>
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	da df       	rcall	.-76     	; 0x298 <lcdSclk>
 2e4:	0f 5f       	subi	r16, 0xFF	; 255
 2e6:	1f 4f       	sbci	r17, 0xFF	; 255
 2e8:	05 30       	cpi	r16, 0x05	; 5
 2ea:	11 05       	cpc	r17, r1
 2ec:	b8 f3       	brcs	.-18     	; 0x2dc <writeLcdF+0x1a>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	c9 df       	rcall	.-110    	; 0x284 <lcdSid>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	d1 df       	rcall	.-94     	; 0x298 <lcdSclk>
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	cf df       	rcall	.-98     	; 0x298 <lcdSclk>
 2fa:	83 e4       	ldi	r24, 0x43	; 67
 2fc:	e8 16       	cp	r14, r24
 2fe:	f1 04       	cpc	r15, r1
 300:	19 f4       	brne	.+6      	; 0x308 <writeLcdF+0x46>
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	bf df       	rcall	.-130    	; 0x284 <lcdSid>
 306:	02 c0       	rjmp	.+4      	; 0x30c <writeLcdF+0x4a>
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	bc df       	rcall	.-136    	; 0x284 <lcdSid>
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	c4 df       	rcall	.-120    	; 0x298 <lcdSclk>
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	c2 df       	rcall	.-124    	; 0x298 <lcdSclk>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	b6 df       	rcall	.-148    	; 0x284 <lcdSid>
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	be df       	rcall	.-132    	; 0x298 <lcdSclk>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	bc df       	rcall	.-136    	; 0x298 <lcdSclk>
 320:	00 e0       	ldi	r16, 0x00	; 0
 322:	10 e0       	ldi	r17, 0x00	; 0
 324:	11 c0       	rjmp	.+34     	; 0x348 <writeLcdF+0x86>
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	b7 df       	rcall	.-146    	; 0x298 <lcdSclk>
 32a:	c0 ff       	sbrs	r28, 0
 32c:	03 c0       	rjmp	.+6      	; 0x334 <writeLcdF+0x72>
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	a9 df       	rcall	.-174    	; 0x284 <lcdSid>
 332:	02 c0       	rjmp	.+4      	; 0x338 <writeLcdF+0x76>
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	a6 df       	rcall	.-180    	; 0x284 <lcdSid>
 338:	d6 95       	lsr	r29
 33a:	c7 95       	ror	r28
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	ac df       	rcall	.-168    	; 0x298 <lcdSclk>
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	aa df       	rcall	.-172    	; 0x298 <lcdSclk>
 344:	0f 5f       	subi	r16, 0xFF	; 255
 346:	1f 4f       	sbci	r17, 0xFF	; 255
 348:	04 30       	cpi	r16, 0x04	; 4
 34a:	11 05       	cpc	r17, r1
 34c:	60 f3       	brcs	.-40     	; 0x326 <writeLcdF+0x64>
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	99 df       	rcall	.-206    	; 0x284 <lcdSid>
 352:	00 e0       	ldi	r16, 0x00	; 0
 354:	10 e0       	ldi	r17, 0x00	; 0
 356:	06 c0       	rjmp	.+12     	; 0x364 <writeLcdF+0xa2>
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	9e df       	rcall	.-196    	; 0x298 <lcdSclk>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	9c df       	rcall	.-200    	; 0x298 <lcdSclk>
 360:	0f 5f       	subi	r16, 0xFF	; 255
 362:	1f 4f       	sbci	r17, 0xFF	; 255
 364:	04 30       	cpi	r16, 0x04	; 4
 366:	11 05       	cpc	r17, r1
 368:	b8 f3       	brcs	.-18     	; 0x358 <writeLcdF+0x96>
 36a:	00 e0       	ldi	r16, 0x00	; 0
 36c:	10 e0       	ldi	r17, 0x00	; 0
 36e:	11 c0       	rjmp	.+34     	; 0x392 <writeLcdF+0xd0>
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	92 df       	rcall	.-220    	; 0x298 <lcdSclk>
 374:	c0 ff       	sbrs	r28, 0
 376:	03 c0       	rjmp	.+6      	; 0x37e <writeLcdF+0xbc>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	84 df       	rcall	.-248    	; 0x284 <lcdSid>
 37c:	02 c0       	rjmp	.+4      	; 0x382 <writeLcdF+0xc0>
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	81 df       	rcall	.-254    	; 0x284 <lcdSid>
 382:	d6 95       	lsr	r29
 384:	c7 95       	ror	r28
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	87 df       	rcall	.-242    	; 0x298 <lcdSclk>
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	85 df       	rcall	.-246    	; 0x298 <lcdSclk>
 38e:	0f 5f       	subi	r16, 0xFF	; 255
 390:	1f 4f       	sbci	r17, 0xFF	; 255
 392:	04 30       	cpi	r16, 0x04	; 4
 394:	11 05       	cpc	r17, r1
 396:	60 f3       	brcs	.-40     	; 0x370 <writeLcdF+0xae>
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	74 df       	rcall	.-280    	; 0x284 <lcdSid>
 39c:	c0 e0       	ldi	r28, 0x00	; 0
 39e:	d0 e0       	ldi	r29, 0x00	; 0
 3a0:	05 c0       	rjmp	.+10     	; 0x3ac <writeLcdF+0xea>
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	79 df       	rcall	.-270    	; 0x298 <lcdSclk>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	77 df       	rcall	.-274    	; 0x298 <lcdSclk>
 3aa:	21 96       	adiw	r28, 0x01	; 1
 3ac:	c4 30       	cpi	r28, 0x04	; 4
 3ae:	d1 05       	cpc	r29, r1
 3b0:	c0 f3       	brcs	.-16     	; 0x3a2 <writeLcdF+0xe0>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	67 df       	rcall	.-306    	; 0x284 <lcdSid>
 3b6:	87 ec       	ldi	r24, 0xC7	; 199
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	01 97       	sbiw	r24, 0x01	; 1
 3bc:	f1 f7       	brne	.-4      	; 0x3ba <writeLcdF+0xf8>
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <writeLcdF+0xfe>
 3c0:	00 00       	nop
 3c2:	df 91       	pop	r29
 3c4:	cf 91       	pop	r28
 3c6:	1f 91       	pop	r17
 3c8:	0f 91       	pop	r16
 3ca:	ff 90       	pop	r15
 3cc:	ef 90       	pop	r14
 3ce:	08 95       	ret

000003d0 <lcdWriteText>:
 3d0:	1f 93       	push	r17
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	cd b7       	in	r28, 0x3d	; 61
 3d8:	de b7       	in	r29, 0x3e	; 62
 3da:	65 97       	sbiw	r28, 0x15	; 21
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	f8 94       	cli
 3e0:	de bf       	out	0x3e, r29	; 62
 3e2:	0f be       	out	0x3f, r0	; 63
 3e4:	cd bf       	out	0x3d, r28	; 61
 3e6:	9e 01       	movw	r18, r28
 3e8:	20 5e       	subi	r18, 0xE0	; 224
 3ea:	3f 4f       	sbci	r19, 0xFF	; 255
 3ec:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3ee:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3f0:	65 e1       	ldi	r22, 0x15	; 21
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	ce 01       	movw	r24, r28
 3f6:	01 96       	adiw	r24, 0x01	; 1
 3f8:	8d d2       	rcall	.+1306   	; 0x914 <vsnprintf>
 3fa:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3fc:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3fe:	90 e2       	ldi	r25, 0x20	; 32
 400:	89 9f       	mul	r24, r25
 402:	60 0d       	add	r22, r0
 404:	11 24       	eor	r1, r1
 406:	60 68       	ori	r22, 0x80	; 128
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	83 e4       	ldi	r24, 0x43	; 67
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	59 df       	rcall	.-334    	; 0x2c2 <writeLcdF>
 410:	10 e0       	ldi	r17, 0x00	; 0
 412:	05 c0       	rjmp	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	1f 5f       	subi	r17, 0xFF	; 255
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	84 e4       	ldi	r24, 0x44	; 68
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	52 df       	rcall	.-348    	; 0x2c2 <writeLcdF>
 41e:	e1 e0       	ldi	r30, 0x01	; 1
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	ec 0f       	add	r30, r28
 424:	fd 1f       	adc	r31, r29
 426:	e1 0f       	add	r30, r17
 428:	f1 1d       	adc	r31, r1
 42a:	60 81       	ld	r22, Z
 42c:	61 11       	cpse	r22, r1
 42e:	f2 cf       	rjmp	.-28     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 430:	65 96       	adiw	r28, 0x15	; 21
 432:	0f b6       	in	r0, 0x3f	; 63
 434:	f8 94       	cli
 436:	de bf       	out	0x3e, r29	; 62
 438:	0f be       	out	0x3f, r0	; 63
 43a:	cd bf       	out	0x3d, r28	; 61
 43c:	df 91       	pop	r29
 43e:	cf 91       	pop	r28
 440:	1f 91       	pop	r17
 442:	08 95       	ret

00000444 <lcdShowText>:
 444:	0f 93       	push	r16
 446:	1f 93       	push	r17
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	cd b7       	in	r28, 0x3d	; 61
 44e:	de b7       	in	r29, 0x3e	; 62
 450:	c1 55       	subi	r28, 0x51	; 81
 452:	d1 09       	sbc	r29, r1
 454:	0f b6       	in	r0, 0x3f	; 63
 456:	f8 94       	cli
 458:	de bf       	out	0x3e, r29	; 62
 45a:	0f be       	out	0x3f, r0	; 63
 45c:	cd bf       	out	0x3d, r28	; 61
 45e:	9e 01       	movw	r18, r28
 460:	27 5a       	subi	r18, 0xA7	; 167
 462:	3f 4f       	sbci	r19, 0xFF	; 255
 464:	f9 01       	movw	r30, r18
 466:	41 91       	ld	r20, Z+
 468:	51 91       	ld	r21, Z+
 46a:	9f 01       	movw	r18, r30
 46c:	61 e5       	ldi	r22, 0x51	; 81
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	8e 01       	movw	r16, r28
 472:	0f 5f       	subi	r16, 0xFF	; 255
 474:	1f 4f       	sbci	r17, 0xFF	; 255
 476:	c8 01       	movw	r24, r16
 478:	4d d2       	rcall	.+1178   	; 0x914 <vsnprintf>
 47a:	f8 01       	movw	r30, r16
 47c:	01 90       	ld	r0, Z+
 47e:	00 20       	and	r0, r0
 480:	e9 f7       	brne	.-6      	; 0x47c <lcdShowText+0x38>
 482:	31 97       	sbiw	r30, 0x01	; 1
 484:	cf 01       	movw	r24, r30
 486:	80 1b       	sub	r24, r16
 488:	91 0b       	sbc	r25, r17
 48a:	09 c0       	rjmp	.+18     	; 0x49e <lcdShowText+0x5a>
 48c:	e1 e0       	ldi	r30, 0x01	; 1
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	ec 0f       	add	r30, r28
 492:	fd 1f       	adc	r31, r29
 494:	e8 0f       	add	r30, r24
 496:	f9 1f       	adc	r31, r25
 498:	20 e2       	ldi	r18, 0x20	; 32
 49a:	20 83       	st	Z, r18
 49c:	01 96       	adiw	r24, 0x01	; 1
 49e:	81 35       	cpi	r24, 0x51	; 81
 4a0:	91 05       	cpc	r25, r1
 4a2:	a0 f3       	brcs	.-24     	; 0x48c <lcdShowText+0x48>
 4a4:	62 96       	adiw	r28, 0x12	; 18
 4a6:	1f ae       	std	Y+63, r1	; 0x3f
 4a8:	62 97       	sbiw	r28, 0x12	; 18
 4aa:	ce 01       	movw	r24, r28
 4ac:	01 96       	adiw	r24, 0x01	; 1
 4ae:	9f 93       	push	r25
 4b0:	8f 93       	push	r24
 4b2:	1f 92       	push	r1
 4b4:	1f 92       	push	r1
 4b6:	8c df       	rcall	.-232    	; 0x3d0 <lcdWriteText>
 4b8:	ce 01       	movw	r24, r28
 4ba:	45 96       	adiw	r24, 0x15	; 21
 4bc:	9f 93       	push	r25
 4be:	8f 93       	push	r24
 4c0:	1f 92       	push	r1
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	8f 93       	push	r24
 4c6:	84 df       	rcall	.-248    	; 0x3d0 <lcdWriteText>
 4c8:	ce 01       	movw	r24, r28
 4ca:	89 96       	adiw	r24, 0x29	; 41
 4cc:	9f 93       	push	r25
 4ce:	8f 93       	push	r24
 4d0:	1f 92       	push	r1
 4d2:	82 e0       	ldi	r24, 0x02	; 2
 4d4:	8f 93       	push	r24
 4d6:	7c df       	rcall	.-264    	; 0x3d0 <lcdWriteText>
 4d8:	ce 01       	movw	r24, r28
 4da:	cd 96       	adiw	r24, 0x3d	; 61
 4dc:	9f 93       	push	r25
 4de:	8f 93       	push	r24
 4e0:	1f 92       	push	r1
 4e2:	83 e0       	ldi	r24, 0x03	; 3
 4e4:	8f 93       	push	r24
 4e6:	74 df       	rcall	.-280    	; 0x3d0 <lcdWriteText>
 4e8:	0f b6       	in	r0, 0x3f	; 63
 4ea:	f8 94       	cli
 4ec:	de bf       	out	0x3e, r29	; 62
 4ee:	0f be       	out	0x3f, r0	; 63
 4f0:	cd bf       	out	0x3d, r28	; 61
 4f2:	cf 5a       	subi	r28, 0xAF	; 175
 4f4:	df 4f       	sbci	r29, 0xFF	; 255
 4f6:	0f b6       	in	r0, 0x3f	; 63
 4f8:	f8 94       	cli
 4fa:	de bf       	out	0x3e, r29	; 62
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	cd bf       	out	0x3d, r28	; 61
 500:	df 91       	pop	r29
 502:	cf 91       	pop	r28
 504:	1f 91       	pop	r17
 506:	0f 91       	pop	r16
 508:	08 95       	ret

0000050a <lcdClear>:
 50a:	61 e0       	ldi	r22, 0x01	; 1
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	83 e4       	ldi	r24, 0x43	; 67
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	d7 de       	rcall	.-594    	; 0x2c2 <writeLcdF>
 514:	8f e3       	ldi	r24, 0x3F	; 63
 516:	9f e1       	ldi	r25, 0x1F	; 31
 518:	01 97       	sbiw	r24, 0x01	; 1
 51a:	f1 f7       	brne	.-4      	; 0x518 <lcdClear+0xe>
 51c:	00 c0       	rjmp	.+0      	; 0x51e <lcdClear+0x14>
 51e:	00 00       	nop
 520:	85 e4       	ldi	r24, 0x45	; 69
 522:	92 e0       	ldi	r25, 0x02	; 2
 524:	9f 93       	push	r25
 526:	8f 93       	push	r24
 528:	1f 92       	push	r1
 52a:	1f 92       	push	r1
 52c:	51 df       	rcall	.-350    	; 0x3d0 <lcdWriteText>
 52e:	0f 90       	pop	r0
 530:	0f 90       	pop	r0
 532:	0f 90       	pop	r0
 534:	0f 90       	pop	r0
 536:	08 95       	ret

00000538 <initLcd>:
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	ae de       	rcall	.-676    	; 0x298 <lcdSclk>
 53c:	80 e0       	ldi	r24, 0x00	; 0
 53e:	a2 de       	rcall	.-700    	; 0x284 <lcdSid>
 540:	64 e3       	ldi	r22, 0x34	; 52
 542:	70 e0       	ldi	r23, 0x00	; 0
 544:	83 e4       	ldi	r24, 0x43	; 67
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	bc de       	rcall	.-648    	; 0x2c2 <writeLcdF>
 54a:	69 e0       	ldi	r22, 0x09	; 9
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	83 e4       	ldi	r24, 0x43	; 67
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	b7 de       	rcall	.-658    	; 0x2c2 <writeLcdF>
 554:	60 e3       	ldi	r22, 0x30	; 48
 556:	70 e0       	ldi	r23, 0x00	; 0
 558:	83 e4       	ldi	r24, 0x43	; 67
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	b2 de       	rcall	.-668    	; 0x2c2 <writeLcdF>
 55e:	6c e0       	ldi	r22, 0x0C	; 12
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	83 e4       	ldi	r24, 0x43	; 67
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	ad de       	rcall	.-678    	; 0x2c2 <writeLcdF>
 568:	d0 df       	rcall	.-96     	; 0x50a <lcdClear>
 56a:	67 e0       	ldi	r22, 0x07	; 7
 56c:	70 e0       	ldi	r23, 0x00	; 0
 56e:	83 e4       	ldi	r24, 0x43	; 67
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	a7 de       	rcall	.-690    	; 0x2c2 <writeLcdF>
 574:	80 e0       	ldi	r24, 0x00	; 0
 576:	9a ce       	rjmp	.-716    	; 0x2ac <lcdLight>
 578:	08 95       	ret

0000057a <initBoard>:
 57a:	ff 92       	push	r15
 57c:	0f 93       	push	r16
 57e:	1f 93       	push	r17
 580:	cf 93       	push	r28
 582:	df 93       	push	r29
 584:	c8 2f       	mov	r28, r24
 586:	85 b7       	in	r24, 0x35	; 53
 588:	85 bf       	out	0x35, r24	; 53
 58a:	12 b8       	out	0x02, r1	; 2
 58c:	8f ef       	ldi	r24, 0xFF	; 255
 58e:	81 b9       	out	0x01, r24	; 1
 590:	15 b8       	out	0x05, r1	; 5
 592:	84 b9       	out	0x04, r24	; 4
 594:	88 b9       	out	0x08, r24	; 8
 596:	17 b8       	out	0x07, r1	; 7
 598:	8b b9       	out	0x0b, r24	; 11
 59a:	1a b8       	out	0x0a, r1	; 10
 59c:	8e b9       	out	0x0e, r24	; 14
 59e:	1d b8       	out	0x0d, r1	; 13
 5a0:	9e b1       	in	r25, 0x0e	; 14
 5a2:	9b 7f       	andi	r25, 0xFB	; 251
 5a4:	9e b9       	out	0x0e, r25	; 14
 5a6:	11 ba       	out	0x11, r1	; 17
 5a8:	10 ba       	out	0x10, r1	; 16
 5aa:	94 e0       	ldi	r25, 0x04	; 4
 5ac:	94 bb       	out	0x14, r25	; 20
 5ae:	93 b3       	in	r25, 0x13	; 19
 5b0:	93 60       	ori	r25, 0x03	; 3
 5b2:	93 bb       	out	0x13, r25	; 19
 5b4:	93 b3       	in	r25, 0x13	; 19
 5b6:	90 62       	ori	r25, 0x20	; 32
 5b8:	93 bb       	out	0x13, r25	; 19
 5ba:	97 ec       	ldi	r25, 0xC7	; 199
 5bc:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 5c0:	98 e3       	ldi	r25, 0x38	; 56
 5c2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 5c6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 5ca:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 5ce:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 5d2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 5d6:	8c e3       	ldi	r24, 0x3C	; 60
 5d8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 5dc:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 5e0:	78 94       	sei
 5e2:	e8 dd       	rcall	.-1072   	; 0x1b4 <startSystemTimeMs>
 5e4:	a9 df       	rcall	.-174    	; 0x538 <initLcd>
 5e6:	01 de       	rcall	.-1022   	; 0x1ea <initAdc>
 5e8:	39 de       	rcall	.-910    	; 0x25c <initRgb>
 5ea:	cc 23       	and	r28, r28
 5ec:	09 f4       	brne	.+2      	; 0x5f0 <initBoard+0x76>
 5ee:	a3 c0       	rjmp	.+326    	; 0x736 <initBoard+0x1bc>
 5f0:	8f ef       	ldi	r24, 0xFF	; 255
 5f2:	5c de       	rcall	.-840    	; 0x2ac <lcdLight>
 5f4:	40 e0       	ldi	r20, 0x00	; 0
 5f6:	50 e0       	ldi	r21, 0x00	; 0
 5f8:	6f ef       	ldi	r22, 0xFF	; 255
 5fa:	73 e0       	ldi	r23, 0x03	; 3
 5fc:	80 e0       	ldi	r24, 0x00	; 0
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	16 de       	rcall	.-980    	; 0x22e <rgbWrite>
 602:	82 e3       	ldi	r24, 0x32	; 50
 604:	92 e0       	ldi	r25, 0x02	; 2
 606:	9f 93       	push	r25
 608:	8f 93       	push	r24
 60a:	1f 92       	push	r1
 60c:	1f 92       	push	r1
 60e:	e0 de       	rcall	.-576    	; 0x3d0 <lcdWriteText>
 610:	87 e4       	ldi	r24, 0x47	; 71
 612:	92 e0       	ldi	r25, 0x02	; 2
 614:	9f 93       	push	r25
 616:	8f 93       	push	r24
 618:	1f 92       	push	r1
 61a:	81 e0       	ldi	r24, 0x01	; 1
 61c:	8f 93       	push	r24
 61e:	d8 de       	rcall	.-592    	; 0x3d0 <lcdWriteText>
 620:	8d e1       	ldi	r24, 0x1D	; 29
 622:	92 e0       	ldi	r25, 0x02	; 2
 624:	9f 93       	push	r25
 626:	8f 93       	push	r24
 628:	1f 92       	push	r1
 62a:	82 e0       	ldi	r24, 0x02	; 2
 62c:	8f 93       	push	r24
 62e:	d0 de       	rcall	.-608    	; 0x3d0 <lcdWriteText>
 630:	8c e5       	ldi	r24, 0x5C	; 92
 632:	92 e0       	ldi	r25, 0x02	; 2
 634:	9f 93       	push	r25
 636:	8f 93       	push	r24
 638:	1f 92       	push	r1
 63a:	83 e0       	ldi	r24, 0x03	; 3
 63c:	8f 93       	push	r24
 63e:	c8 de       	rcall	.-624    	; 0x3d0 <lcdWriteText>
 640:	8d b7       	in	r24, 0x3d	; 61
 642:	9e b7       	in	r25, 0x3e	; 62
 644:	40 96       	adiw	r24, 0x10	; 16
 646:	0f b6       	in	r0, 0x3f	; 63
 648:	f8 94       	cli
 64a:	9e bf       	out	0x3e, r25	; 62
 64c:	0f be       	out	0x3f, r0	; 63
 64e:	8d bf       	out	0x3d, r24	; 61
 650:	ff 24       	eor	r15, r15
 652:	f3 94       	inc	r15
 654:	c0 e0       	ldi	r28, 0x00	; 0
 656:	10 e0       	ldi	r17, 0x00	; 0
 658:	01 e0       	ldi	r16, 0x01	; 1
 65a:	d0 e0       	ldi	r29, 0x00	; 0
 65c:	00 23       	and	r16, r16
 65e:	51 f0       	breq	.+20     	; 0x674 <initBoard+0xfa>
 660:	80 e0       	ldi	r24, 0x00	; 0
 662:	90 e8       	ldi	r25, 0x80	; 128
 664:	0d 2e       	mov	r0, r29
 666:	02 c0       	rjmp	.+4      	; 0x66c <initBoard+0xf2>
 668:	96 95       	lsr	r25
 66a:	87 95       	ror	r24
 66c:	0a 94       	dec	r0
 66e:	e2 f7       	brpl	.-8      	; 0x668 <initBoard+0xee>
 670:	9b dd       	rcall	.-1226   	; 0x1a8 <ledWriteAll>
 672:	09 c0       	rjmp	.+18     	; 0x686 <initBoard+0x10c>
 674:	81 e0       	ldi	r24, 0x01	; 1
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	0d 2e       	mov	r0, r29
 67a:	02 c0       	rjmp	.+4      	; 0x680 <initBoard+0x106>
 67c:	88 0f       	add	r24, r24
 67e:	99 1f       	adc	r25, r25
 680:	0a 94       	dec	r0
 682:	e2 f7       	brpl	.-8      	; 0x67c <initBoard+0x102>
 684:	91 dd       	rcall	.-1246   	; 0x1a8 <ledWriteAll>
 686:	df 5f       	subi	r29, 0xFF	; 255
 688:	d1 31       	cpi	r29, 0x11	; 17
 68a:	28 f0       	brcs	.+10     	; 0x696 <initBoard+0x11c>
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	01 11       	cpse	r16, r1
 690:	80 e0       	ldi	r24, 0x00	; 0
 692:	08 2f       	mov	r16, r24
 694:	d0 e0       	ldi	r29, 0x00	; 0
 696:	ff 20       	and	r15, r15
 698:	11 f0       	breq	.+4      	; 0x69e <initBoard+0x124>
 69a:	ce 5f       	subi	r28, 0xFE	; 254
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <initBoard+0x126>
 69e:	c2 50       	subi	r28, 0x02	; 2
 6a0:	8c 2f       	mov	r24, r28
 6a2:	04 de       	rcall	.-1016   	; 0x2ac <lcdLight>
 6a4:	ce 3f       	cpi	r28, 0xFE	; 254
 6a6:	09 f4       	brne	.+2      	; 0x6aa <initBoard+0x130>
 6a8:	f1 2c       	mov	r15, r1
 6aa:	c8 37       	cpi	r28, 0x78	; 120
 6ac:	11 f4       	brne	.+4      	; 0x6b2 <initBoard+0x138>
 6ae:	ff 24       	eor	r15, r15
 6b0:	f3 94       	inc	r15
 6b2:	11 11       	cpse	r17, r1
 6b4:	17 c0       	rjmp	.+46     	; 0x6e4 <initBoard+0x16a>
 6b6:	7b dd       	rcall	.-1290   	; 0x1ae <buttonReadAllPL>
 6b8:	83 7c       	andi	r24, 0xC3	; 195
 6ba:	a1 f0       	breq	.+40     	; 0x6e4 <initBoard+0x16a>
 6bc:	40 e0       	ldi	r20, 0x00	; 0
 6be:	50 e0       	ldi	r21, 0x00	; 0
 6c0:	66 e2       	ldi	r22, 0x26	; 38
 6c2:	72 e0       	ldi	r23, 0x02	; 2
 6c4:	8f ef       	ldi	r24, 0xFF	; 255
 6c6:	93 e0       	ldi	r25, 0x03	; 3
 6c8:	b2 dd       	rcall	.-1180   	; 0x22e <rgbWrite>
 6ca:	81 e7       	ldi	r24, 0x71	; 113
 6cc:	92 e0       	ldi	r25, 0x02	; 2
 6ce:	9f 93       	push	r25
 6d0:	8f 93       	push	r24
 6d2:	1f 92       	push	r1
 6d4:	83 e0       	ldi	r24, 0x03	; 3
 6d6:	8f 93       	push	r24
 6d8:	7b de       	rcall	.-778    	; 0x3d0 <lcdWriteText>
 6da:	0f 90       	pop	r0
 6dc:	0f 90       	pop	r0
 6de:	0f 90       	pop	r0
 6e0:	0f 90       	pop	r0
 6e2:	11 e0       	ldi	r17, 0x01	; 1
 6e4:	11 23       	and	r17, r17
 6e6:	19 f0       	breq	.+6      	; 0x6ee <initBoard+0x174>
 6e8:	62 dd       	rcall	.-1340   	; 0x1ae <buttonReadAllPL>
 6ea:	83 7c       	andi	r24, 0xC3	; 195
 6ec:	39 f0       	breq	.+14     	; 0x6fc <initBoard+0x182>
 6ee:	8f ef       	ldi	r24, 0xFF	; 255
 6f0:	9c e7       	ldi	r25, 0x7C	; 124
 6f2:	01 97       	sbiw	r24, 0x01	; 1
 6f4:	f1 f7       	brne	.-4      	; 0x6f2 <initBoard+0x178>
 6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <initBoard+0x17e>
 6f8:	00 00       	nop
 6fa:	b0 cf       	rjmp	.-160    	; 0x65c <initBoard+0xe2>
 6fc:	06 df       	rcall	.-500    	; 0x50a <lcdClear>
 6fe:	80 e0       	ldi	r24, 0x00	; 0
 700:	d5 dd       	rcall	.-1110   	; 0x2ac <lcdLight>
 702:	80 e0       	ldi	r24, 0x00	; 0
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	50 dd       	rcall	.-1376   	; 0x1a8 <ledWriteAll>
 708:	40 e0       	ldi	r20, 0x00	; 0
 70a:	50 e0       	ldi	r21, 0x00	; 0
 70c:	60 e0       	ldi	r22, 0x00	; 0
 70e:	70 e0       	ldi	r23, 0x00	; 0
 710:	80 e0       	ldi	r24, 0x00	; 0
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	8c dd       	rcall	.-1256   	; 0x22e <rgbWrite>
 716:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <systemTimeMs>
 71a:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <systemTimeMs+0x1>
 71e:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <systemTimeMs+0x2>
 722:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <systemTimeMs+0x3>
 726:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <systemTimeMs+0x4>
 72a:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <systemTimeMs+0x5>
 72e:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <systemTimeMs+0x6>
 732:	10 92 94 02 	sts	0x0294, r1	; 0x800294 <systemTimeMs+0x7>
 736:	df 91       	pop	r29
 738:	cf 91       	pop	r28
 73a:	1f 91       	pop	r17
 73c:	0f 91       	pop	r16
 73e:	ff 90       	pop	r15
 740:	08 95       	ret

00000742 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 742:	cf 93       	push	r28
 744:	df 93       	push	r29
 746:	cd b7       	in	r28, 0x3d	; 61
 748:	de b7       	in	r29, 0x3e	; 62
 74a:	28 97       	sbiw	r28, 0x08	; 8
 74c:	0f b6       	in	r0, 0x3f	; 63
 74e:	f8 94       	cli
 750:	de bf       	out	0x3e, r29	; 62
 752:	0f be       	out	0x3f, r0	; 63
 754:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 756:	88 e0       	ldi	r24, 0x08	; 8
 758:	e0 e0       	ldi	r30, 0x00	; 0
 75a:	f2 e0       	ldi	r31, 0x02	; 2
 75c:	de 01       	movw	r26, r28
 75e:	11 96       	adiw	r26, 0x01	; 1
 760:	01 90       	ld	r0, Z+
 762:	0d 92       	st	X+, r0
 764:	8a 95       	dec	r24
 766:	e1 f7       	brne	.-8      	; 0x760 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 768:	e5 e0       	ldi	r30, 0x05	; 5
 76a:	f1 e0       	ldi	r31, 0x01	; 1
 76c:	80 81       	ld	r24, Z
 76e:	8f 7b       	andi	r24, 0xBF	; 191
 770:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 772:	e0 91 8a 02 	lds	r30, 0x028A	; 0x80028a <Zeilen_Nr.2743>
 776:	f0 91 8b 02 	lds	r31, 0x028B	; 0x80028b <Zeilen_Nr.2743+0x1>
 77a:	81 e0       	ldi	r24, 0x01	; 1
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	8c 0f       	add	r24, r28
 780:	9d 1f       	adc	r25, r29
 782:	e8 0f       	add	r30, r24
 784:	f9 1f       	adc	r31, r25
 786:	80 81       	ld	r24, Z
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	90 93 89 02 	sts	0x0289, r25	; 0x800289 <__data_end+0x1>
 78e:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 792:	80 e0       	ldi	r24, 0x00	; 0
 794:	26 c0       	rjmp	.+76     	; 0x7e2 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 796:	e7 e3       	ldi	r30, 0x37	; 55
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	e8 1b       	sub	r30, r24
 79c:	f1 09       	sbc	r31, r1
 79e:	ee 0f       	add	r30, r30
 7a0:	ff 1f       	adc	r31, r31
 7a2:	ea 56       	subi	r30, 0x6A	; 106
 7a4:	fd 4f       	sbci	r31, 0xFD	; 253
 7a6:	40 81       	ld	r20, Z
 7a8:	51 81       	ldd	r21, Z+1	; 0x01
 7aa:	20 91 88 02 	lds	r18, 0x0288	; 0x800288 <__data_end>
 7ae:	30 91 89 02 	lds	r19, 0x0289	; 0x800289 <__data_end+0x1>
 7b2:	24 23       	and	r18, r20
 7b4:	35 23       	and	r19, r21
 7b6:	23 2b       	or	r18, r19
 7b8:	31 f0       	breq	.+12     	; 0x7c6 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 7ba:	e5 e0       	ldi	r30, 0x05	; 5
 7bc:	f1 e0       	ldi	r31, 0x01	; 1
 7be:	90 81       	ld	r25, Z
 7c0:	90 62       	ori	r25, 0x20	; 32
 7c2:	90 83       	st	Z, r25
 7c4:	05 c0       	rjmp	.+10     	; 0x7d0 <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7c6:	e5 e0       	ldi	r30, 0x05	; 5
 7c8:	f1 e0       	ldi	r31, 0x01	; 1
 7ca:	90 81       	ld	r25, Z
 7cc:	9f 7d       	andi	r25, 0xDF	; 223
 7ce:	90 83       	st	Z, r25
        }
        CLOCK_1;
 7d0:	e5 e0       	ldi	r30, 0x05	; 5
 7d2:	f1 e0       	ldi	r31, 0x01	; 1
 7d4:	90 81       	ld	r25, Z
 7d6:	90 61       	ori	r25, 0x10	; 16
 7d8:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7da:	90 81       	ld	r25, Z
 7dc:	9f 7e       	andi	r25, 0xEF	; 239
 7de:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7e0:	8f 5f       	subi	r24, 0xFF	; 255
 7e2:	88 33       	cpi	r24, 0x38	; 56
 7e4:	c0 f2       	brcs	.-80     	; 0x796 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 7e6:	e5 e0       	ldi	r30, 0x05	; 5
 7e8:	f1 e0       	ldi	r31, 0x01	; 1
 7ea:	80 81       	ld	r24, Z
 7ec:	87 7f       	andi	r24, 0xF7	; 247
 7ee:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 7f0:	80 81       	ld	r24, Z
 7f2:	88 7f       	andi	r24, 0xF8	; 248
 7f4:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 7f6:	90 81       	ld	r25, Z
 7f8:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <Zeilen_Nr.2743>
 7fc:	89 2b       	or	r24, r25
 7fe:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 800:	80 81       	ld	r24, Z
 802:	80 64       	ori	r24, 0x40	; 64
 804:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 806:	80 81       	ld	r24, Z
 808:	88 60       	ori	r24, 0x08	; 8
 80a:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 80c:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <Zeilen_Nr.2743>
 810:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <Zeilen_Nr.2743+0x1>
 814:	87 30       	cpi	r24, 0x07	; 7
 816:	91 05       	cpc	r25, r1
 818:	30 f4       	brcc	.+12     	; 0x826 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 81a:	01 96       	adiw	r24, 0x01	; 1
 81c:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <Zeilen_Nr.2743+0x1>
 820:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <Zeilen_Nr.2743>
 824:	07 c0       	rjmp	.+14     	; 0x834 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 826:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <Zeilen_Nr.2743+0x1>
 82a:	10 92 8a 02 	sts	0x028A, r1	; 0x80028a <Zeilen_Nr.2743>
        writeTextFinished = 1;
 82e:	81 e0       	ldi	r24, 0x01	; 1
 830:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <writeTextFinished>
    }
    
 834:	28 96       	adiw	r28, 0x08	; 8
 836:	0f b6       	in	r0, 0x3f	; 63
 838:	f8 94       	cli
 83a:	de bf       	out	0x3e, r29	; 62
 83c:	0f be       	out	0x3f, r0	; 63
 83e:	cd bf       	out	0x3d, r28	; 61
 840:	df 91       	pop	r29
 842:	cf 91       	pop	r28
 844:	08 95       	ret

00000846 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 846:	1f 92       	push	r1
 848:	0f 92       	push	r0
 84a:	0f b6       	in	r0, 0x3f	; 63
 84c:	0f 92       	push	r0
 84e:	11 24       	eor	r1, r1
 850:	0b b6       	in	r0, 0x3b	; 59
 852:	0f 92       	push	r0
 854:	2f 93       	push	r18
 856:	3f 93       	push	r19
 858:	4f 93       	push	r20
 85a:	5f 93       	push	r21
 85c:	6f 93       	push	r22
 85e:	7f 93       	push	r23
 860:	8f 93       	push	r24
 862:	9f 93       	push	r25
 864:	af 93       	push	r26
 866:	bf 93       	push	r27
 868:	ef 93       	push	r30
 86a:	ff 93       	push	r31
    systemTimeMs += 1;
 86c:	20 91 8d 02 	lds	r18, 0x028D	; 0x80028d <systemTimeMs>
 870:	30 91 8e 02 	lds	r19, 0x028E	; 0x80028e <systemTimeMs+0x1>
 874:	40 91 8f 02 	lds	r20, 0x028F	; 0x80028f <systemTimeMs+0x2>
 878:	50 91 90 02 	lds	r21, 0x0290	; 0x800290 <systemTimeMs+0x3>
 87c:	60 91 91 02 	lds	r22, 0x0291	; 0x800291 <systemTimeMs+0x4>
 880:	70 91 92 02 	lds	r23, 0x0292	; 0x800292 <systemTimeMs+0x5>
 884:	80 91 93 02 	lds	r24, 0x0293	; 0x800293 <systemTimeMs+0x6>
 888:	90 91 94 02 	lds	r25, 0x0294	; 0x800294 <systemTimeMs+0x7>
 88c:	a1 e0       	ldi	r26, 0x01	; 1
 88e:	36 d0       	rcall	.+108    	; 0x8fc <__adddi3_s8>
 890:	20 93 8d 02 	sts	0x028D, r18	; 0x80028d <systemTimeMs>
 894:	30 93 8e 02 	sts	0x028E, r19	; 0x80028e <systemTimeMs+0x1>
 898:	40 93 8f 02 	sts	0x028F, r20	; 0x80028f <systemTimeMs+0x2>
 89c:	50 93 90 02 	sts	0x0290, r21	; 0x800290 <systemTimeMs+0x3>
 8a0:	60 93 91 02 	sts	0x0291, r22	; 0x800291 <systemTimeMs+0x4>
 8a4:	70 93 92 02 	sts	0x0292, r23	; 0x800292 <systemTimeMs+0x5>
 8a8:	80 93 93 02 	sts	0x0293, r24	; 0x800293 <systemTimeMs+0x6>
 8ac:	90 93 94 02 	sts	0x0294, r25	; 0x800294 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 8b0:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <matrixRunning>
 8b4:	81 11       	cpse	r24, r1
 8b6:	45 df       	rcall	.-374    	; 0x742 <matrixWriteNextLine>
}
 8b8:	ff 91       	pop	r31
 8ba:	ef 91       	pop	r30
 8bc:	bf 91       	pop	r27
 8be:	af 91       	pop	r26
 8c0:	9f 91       	pop	r25
 8c2:	8f 91       	pop	r24
 8c4:	7f 91       	pop	r23
 8c6:	6f 91       	pop	r22
 8c8:	5f 91       	pop	r21
 8ca:	4f 91       	pop	r20
 8cc:	3f 91       	pop	r19
 8ce:	2f 91       	pop	r18
 8d0:	0f 90       	pop	r0
 8d2:	0b be       	out	0x3b, r0	; 59
 8d4:	0f 90       	pop	r0
 8d6:	0f be       	out	0x3f, r0	; 63
 8d8:	0f 90       	pop	r0
 8da:	1f 90       	pop	r1
 8dc:	18 95       	reti

000008de <__umulhisi3>:
 8de:	a2 9f       	mul	r26, r18
 8e0:	b0 01       	movw	r22, r0
 8e2:	b3 9f       	mul	r27, r19
 8e4:	c0 01       	movw	r24, r0
 8e6:	a3 9f       	mul	r26, r19
 8e8:	70 0d       	add	r23, r0
 8ea:	81 1d       	adc	r24, r1
 8ec:	11 24       	eor	r1, r1
 8ee:	91 1d       	adc	r25, r1
 8f0:	b2 9f       	mul	r27, r18
 8f2:	70 0d       	add	r23, r0
 8f4:	81 1d       	adc	r24, r1
 8f6:	11 24       	eor	r1, r1
 8f8:	91 1d       	adc	r25, r1
 8fa:	08 95       	ret

000008fc <__adddi3_s8>:
 8fc:	00 24       	eor	r0, r0
 8fe:	a7 fd       	sbrc	r26, 7
 900:	00 94       	com	r0
 902:	2a 0f       	add	r18, r26
 904:	30 1d       	adc	r19, r0
 906:	40 1d       	adc	r20, r0
 908:	50 1d       	adc	r21, r0
 90a:	60 1d       	adc	r22, r0
 90c:	70 1d       	adc	r23, r0
 90e:	80 1d       	adc	r24, r0
 910:	90 1d       	adc	r25, r0
 912:	08 95       	ret

00000914 <vsnprintf>:
 914:	0f 93       	push	r16
 916:	1f 93       	push	r17
 918:	cf 93       	push	r28
 91a:	df 93       	push	r29
 91c:	cd b7       	in	r28, 0x3d	; 61
 91e:	de b7       	in	r29, 0x3e	; 62
 920:	2e 97       	sbiw	r28, 0x0e	; 14
 922:	0f b6       	in	r0, 0x3f	; 63
 924:	f8 94       	cli
 926:	de bf       	out	0x3e, r29	; 62
 928:	0f be       	out	0x3f, r0	; 63
 92a:	cd bf       	out	0x3d, r28	; 61
 92c:	8c 01       	movw	r16, r24
 92e:	fa 01       	movw	r30, r20
 930:	86 e0       	ldi	r24, 0x06	; 6
 932:	8c 83       	std	Y+4, r24	; 0x04
 934:	1a 83       	std	Y+2, r17	; 0x02
 936:	09 83       	std	Y+1, r16	; 0x01
 938:	77 ff       	sbrs	r23, 7
 93a:	02 c0       	rjmp	.+4      	; 0x940 <vsnprintf+0x2c>
 93c:	60 e0       	ldi	r22, 0x00	; 0
 93e:	70 e8       	ldi	r23, 0x80	; 128
 940:	cb 01       	movw	r24, r22
 942:	01 97       	sbiw	r24, 0x01	; 1
 944:	9e 83       	std	Y+6, r25	; 0x06
 946:	8d 83       	std	Y+5, r24	; 0x05
 948:	a9 01       	movw	r20, r18
 94a:	bf 01       	movw	r22, r30
 94c:	ce 01       	movw	r24, r28
 94e:	01 96       	adiw	r24, 0x01	; 1
 950:	19 d0       	rcall	.+50     	; 0x984 <vfprintf>
 952:	4d 81       	ldd	r20, Y+5	; 0x05
 954:	5e 81       	ldd	r21, Y+6	; 0x06
 956:	57 fd       	sbrc	r21, 7
 958:	0a c0       	rjmp	.+20     	; 0x96e <vsnprintf+0x5a>
 95a:	2f 81       	ldd	r18, Y+7	; 0x07
 95c:	38 85       	ldd	r19, Y+8	; 0x08
 95e:	42 17       	cp	r20, r18
 960:	53 07       	cpc	r21, r19
 962:	0c f4       	brge	.+2      	; 0x966 <vsnprintf+0x52>
 964:	9a 01       	movw	r18, r20
 966:	f8 01       	movw	r30, r16
 968:	e2 0f       	add	r30, r18
 96a:	f3 1f       	adc	r31, r19
 96c:	10 82       	st	Z, r1
 96e:	2e 96       	adiw	r28, 0x0e	; 14
 970:	0f b6       	in	r0, 0x3f	; 63
 972:	f8 94       	cli
 974:	de bf       	out	0x3e, r29	; 62
 976:	0f be       	out	0x3f, r0	; 63
 978:	cd bf       	out	0x3d, r28	; 61
 97a:	df 91       	pop	r29
 97c:	cf 91       	pop	r28
 97e:	1f 91       	pop	r17
 980:	0f 91       	pop	r16
 982:	08 95       	ret

00000984 <vfprintf>:
 984:	2f 92       	push	r2
 986:	3f 92       	push	r3
 988:	4f 92       	push	r4
 98a:	5f 92       	push	r5
 98c:	6f 92       	push	r6
 98e:	7f 92       	push	r7
 990:	8f 92       	push	r8
 992:	9f 92       	push	r9
 994:	af 92       	push	r10
 996:	bf 92       	push	r11
 998:	cf 92       	push	r12
 99a:	df 92       	push	r13
 99c:	ef 92       	push	r14
 99e:	ff 92       	push	r15
 9a0:	0f 93       	push	r16
 9a2:	1f 93       	push	r17
 9a4:	cf 93       	push	r28
 9a6:	df 93       	push	r29
 9a8:	cd b7       	in	r28, 0x3d	; 61
 9aa:	de b7       	in	r29, 0x3e	; 62
 9ac:	2b 97       	sbiw	r28, 0x0b	; 11
 9ae:	0f b6       	in	r0, 0x3f	; 63
 9b0:	f8 94       	cli
 9b2:	de bf       	out	0x3e, r29	; 62
 9b4:	0f be       	out	0x3f, r0	; 63
 9b6:	cd bf       	out	0x3d, r28	; 61
 9b8:	6c 01       	movw	r12, r24
 9ba:	7b 01       	movw	r14, r22
 9bc:	8a 01       	movw	r16, r20
 9be:	fc 01       	movw	r30, r24
 9c0:	17 82       	std	Z+7, r1	; 0x07
 9c2:	16 82       	std	Z+6, r1	; 0x06
 9c4:	83 81       	ldd	r24, Z+3	; 0x03
 9c6:	81 ff       	sbrs	r24, 1
 9c8:	bf c1       	rjmp	.+894    	; 0xd48 <vfprintf+0x3c4>
 9ca:	ce 01       	movw	r24, r28
 9cc:	01 96       	adiw	r24, 0x01	; 1
 9ce:	3c 01       	movw	r6, r24
 9d0:	f6 01       	movw	r30, r12
 9d2:	93 81       	ldd	r25, Z+3	; 0x03
 9d4:	f7 01       	movw	r30, r14
 9d6:	93 fd       	sbrc	r25, 3
 9d8:	85 91       	lpm	r24, Z+
 9da:	93 ff       	sbrs	r25, 3
 9dc:	81 91       	ld	r24, Z+
 9de:	7f 01       	movw	r14, r30
 9e0:	88 23       	and	r24, r24
 9e2:	09 f4       	brne	.+2      	; 0x9e6 <vfprintf+0x62>
 9e4:	ad c1       	rjmp	.+858    	; 0xd40 <vfprintf+0x3bc>
 9e6:	85 32       	cpi	r24, 0x25	; 37
 9e8:	39 f4       	brne	.+14     	; 0x9f8 <vfprintf+0x74>
 9ea:	93 fd       	sbrc	r25, 3
 9ec:	85 91       	lpm	r24, Z+
 9ee:	93 ff       	sbrs	r25, 3
 9f0:	81 91       	ld	r24, Z+
 9f2:	7f 01       	movw	r14, r30
 9f4:	85 32       	cpi	r24, 0x25	; 37
 9f6:	21 f4       	brne	.+8      	; 0xa00 <vfprintf+0x7c>
 9f8:	b6 01       	movw	r22, r12
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	d6 d1       	rcall	.+940    	; 0xdaa <fputc>
 9fe:	e8 cf       	rjmp	.-48     	; 0x9d0 <vfprintf+0x4c>
 a00:	91 2c       	mov	r9, r1
 a02:	21 2c       	mov	r2, r1
 a04:	31 2c       	mov	r3, r1
 a06:	ff e1       	ldi	r31, 0x1F	; 31
 a08:	f3 15       	cp	r31, r3
 a0a:	d8 f0       	brcs	.+54     	; 0xa42 <vfprintf+0xbe>
 a0c:	8b 32       	cpi	r24, 0x2B	; 43
 a0e:	79 f0       	breq	.+30     	; 0xa2e <vfprintf+0xaa>
 a10:	38 f4       	brcc	.+14     	; 0xa20 <vfprintf+0x9c>
 a12:	80 32       	cpi	r24, 0x20	; 32
 a14:	79 f0       	breq	.+30     	; 0xa34 <vfprintf+0xb0>
 a16:	83 32       	cpi	r24, 0x23	; 35
 a18:	a1 f4       	brne	.+40     	; 0xa42 <vfprintf+0xbe>
 a1a:	23 2d       	mov	r18, r3
 a1c:	20 61       	ori	r18, 0x10	; 16
 a1e:	1d c0       	rjmp	.+58     	; 0xa5a <vfprintf+0xd6>
 a20:	8d 32       	cpi	r24, 0x2D	; 45
 a22:	61 f0       	breq	.+24     	; 0xa3c <vfprintf+0xb8>
 a24:	80 33       	cpi	r24, 0x30	; 48
 a26:	69 f4       	brne	.+26     	; 0xa42 <vfprintf+0xbe>
 a28:	23 2d       	mov	r18, r3
 a2a:	21 60       	ori	r18, 0x01	; 1
 a2c:	16 c0       	rjmp	.+44     	; 0xa5a <vfprintf+0xd6>
 a2e:	83 2d       	mov	r24, r3
 a30:	82 60       	ori	r24, 0x02	; 2
 a32:	38 2e       	mov	r3, r24
 a34:	e3 2d       	mov	r30, r3
 a36:	e4 60       	ori	r30, 0x04	; 4
 a38:	3e 2e       	mov	r3, r30
 a3a:	2a c0       	rjmp	.+84     	; 0xa90 <vfprintf+0x10c>
 a3c:	f3 2d       	mov	r31, r3
 a3e:	f8 60       	ori	r31, 0x08	; 8
 a40:	1d c0       	rjmp	.+58     	; 0xa7c <vfprintf+0xf8>
 a42:	37 fc       	sbrc	r3, 7
 a44:	2d c0       	rjmp	.+90     	; 0xaa0 <vfprintf+0x11c>
 a46:	20 ed       	ldi	r18, 0xD0	; 208
 a48:	28 0f       	add	r18, r24
 a4a:	2a 30       	cpi	r18, 0x0A	; 10
 a4c:	40 f0       	brcs	.+16     	; 0xa5e <vfprintf+0xda>
 a4e:	8e 32       	cpi	r24, 0x2E	; 46
 a50:	b9 f4       	brne	.+46     	; 0xa80 <vfprintf+0xfc>
 a52:	36 fc       	sbrc	r3, 6
 a54:	75 c1       	rjmp	.+746    	; 0xd40 <vfprintf+0x3bc>
 a56:	23 2d       	mov	r18, r3
 a58:	20 64       	ori	r18, 0x40	; 64
 a5a:	32 2e       	mov	r3, r18
 a5c:	19 c0       	rjmp	.+50     	; 0xa90 <vfprintf+0x10c>
 a5e:	36 fe       	sbrs	r3, 6
 a60:	06 c0       	rjmp	.+12     	; 0xa6e <vfprintf+0xea>
 a62:	8a e0       	ldi	r24, 0x0A	; 10
 a64:	98 9e       	mul	r9, r24
 a66:	20 0d       	add	r18, r0
 a68:	11 24       	eor	r1, r1
 a6a:	92 2e       	mov	r9, r18
 a6c:	11 c0       	rjmp	.+34     	; 0xa90 <vfprintf+0x10c>
 a6e:	ea e0       	ldi	r30, 0x0A	; 10
 a70:	2e 9e       	mul	r2, r30
 a72:	20 0d       	add	r18, r0
 a74:	11 24       	eor	r1, r1
 a76:	22 2e       	mov	r2, r18
 a78:	f3 2d       	mov	r31, r3
 a7a:	f0 62       	ori	r31, 0x20	; 32
 a7c:	3f 2e       	mov	r3, r31
 a7e:	08 c0       	rjmp	.+16     	; 0xa90 <vfprintf+0x10c>
 a80:	8c 36       	cpi	r24, 0x6C	; 108
 a82:	21 f4       	brne	.+8      	; 0xa8c <vfprintf+0x108>
 a84:	83 2d       	mov	r24, r3
 a86:	80 68       	ori	r24, 0x80	; 128
 a88:	38 2e       	mov	r3, r24
 a8a:	02 c0       	rjmp	.+4      	; 0xa90 <vfprintf+0x10c>
 a8c:	88 36       	cpi	r24, 0x68	; 104
 a8e:	41 f4       	brne	.+16     	; 0xaa0 <vfprintf+0x11c>
 a90:	f7 01       	movw	r30, r14
 a92:	93 fd       	sbrc	r25, 3
 a94:	85 91       	lpm	r24, Z+
 a96:	93 ff       	sbrs	r25, 3
 a98:	81 91       	ld	r24, Z+
 a9a:	7f 01       	movw	r14, r30
 a9c:	81 11       	cpse	r24, r1
 a9e:	b3 cf       	rjmp	.-154    	; 0xa06 <vfprintf+0x82>
 aa0:	98 2f       	mov	r25, r24
 aa2:	9f 7d       	andi	r25, 0xDF	; 223
 aa4:	95 54       	subi	r25, 0x45	; 69
 aa6:	93 30       	cpi	r25, 0x03	; 3
 aa8:	28 f4       	brcc	.+10     	; 0xab4 <vfprintf+0x130>
 aaa:	0c 5f       	subi	r16, 0xFC	; 252
 aac:	1f 4f       	sbci	r17, 0xFF	; 255
 aae:	9f e3       	ldi	r25, 0x3F	; 63
 ab0:	99 83       	std	Y+1, r25	; 0x01
 ab2:	0d c0       	rjmp	.+26     	; 0xace <vfprintf+0x14a>
 ab4:	83 36       	cpi	r24, 0x63	; 99
 ab6:	31 f0       	breq	.+12     	; 0xac4 <vfprintf+0x140>
 ab8:	83 37       	cpi	r24, 0x73	; 115
 aba:	71 f0       	breq	.+28     	; 0xad8 <vfprintf+0x154>
 abc:	83 35       	cpi	r24, 0x53	; 83
 abe:	09 f0       	breq	.+2      	; 0xac2 <vfprintf+0x13e>
 ac0:	55 c0       	rjmp	.+170    	; 0xb6c <vfprintf+0x1e8>
 ac2:	20 c0       	rjmp	.+64     	; 0xb04 <vfprintf+0x180>
 ac4:	f8 01       	movw	r30, r16
 ac6:	80 81       	ld	r24, Z
 ac8:	89 83       	std	Y+1, r24	; 0x01
 aca:	0e 5f       	subi	r16, 0xFE	; 254
 acc:	1f 4f       	sbci	r17, 0xFF	; 255
 ace:	88 24       	eor	r8, r8
 ad0:	83 94       	inc	r8
 ad2:	91 2c       	mov	r9, r1
 ad4:	53 01       	movw	r10, r6
 ad6:	12 c0       	rjmp	.+36     	; 0xafc <vfprintf+0x178>
 ad8:	28 01       	movw	r4, r16
 ada:	f2 e0       	ldi	r31, 0x02	; 2
 adc:	4f 0e       	add	r4, r31
 ade:	51 1c       	adc	r5, r1
 ae0:	f8 01       	movw	r30, r16
 ae2:	a0 80       	ld	r10, Z
 ae4:	b1 80       	ldd	r11, Z+1	; 0x01
 ae6:	36 fe       	sbrs	r3, 6
 ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <vfprintf+0x16c>
 aea:	69 2d       	mov	r22, r9
 aec:	70 e0       	ldi	r23, 0x00	; 0
 aee:	02 c0       	rjmp	.+4      	; 0xaf4 <vfprintf+0x170>
 af0:	6f ef       	ldi	r22, 0xFF	; 255
 af2:	7f ef       	ldi	r23, 0xFF	; 255
 af4:	c5 01       	movw	r24, r10
 af6:	4e d1       	rcall	.+668    	; 0xd94 <strnlen>
 af8:	4c 01       	movw	r8, r24
 afa:	82 01       	movw	r16, r4
 afc:	f3 2d       	mov	r31, r3
 afe:	ff 77       	andi	r31, 0x7F	; 127
 b00:	3f 2e       	mov	r3, r31
 b02:	15 c0       	rjmp	.+42     	; 0xb2e <vfprintf+0x1aa>
 b04:	28 01       	movw	r4, r16
 b06:	22 e0       	ldi	r18, 0x02	; 2
 b08:	42 0e       	add	r4, r18
 b0a:	51 1c       	adc	r5, r1
 b0c:	f8 01       	movw	r30, r16
 b0e:	a0 80       	ld	r10, Z
 b10:	b1 80       	ldd	r11, Z+1	; 0x01
 b12:	36 fe       	sbrs	r3, 6
 b14:	03 c0       	rjmp	.+6      	; 0xb1c <vfprintf+0x198>
 b16:	69 2d       	mov	r22, r9
 b18:	70 e0       	ldi	r23, 0x00	; 0
 b1a:	02 c0       	rjmp	.+4      	; 0xb20 <vfprintf+0x19c>
 b1c:	6f ef       	ldi	r22, 0xFF	; 255
 b1e:	7f ef       	ldi	r23, 0xFF	; 255
 b20:	c5 01       	movw	r24, r10
 b22:	2d d1       	rcall	.+602    	; 0xd7e <strnlen_P>
 b24:	4c 01       	movw	r8, r24
 b26:	f3 2d       	mov	r31, r3
 b28:	f0 68       	ori	r31, 0x80	; 128
 b2a:	3f 2e       	mov	r3, r31
 b2c:	82 01       	movw	r16, r4
 b2e:	33 fc       	sbrc	r3, 3
 b30:	19 c0       	rjmp	.+50     	; 0xb64 <vfprintf+0x1e0>
 b32:	82 2d       	mov	r24, r2
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	88 16       	cp	r8, r24
 b38:	99 06       	cpc	r9, r25
 b3a:	a0 f4       	brcc	.+40     	; 0xb64 <vfprintf+0x1e0>
 b3c:	b6 01       	movw	r22, r12
 b3e:	80 e2       	ldi	r24, 0x20	; 32
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	33 d1       	rcall	.+614    	; 0xdaa <fputc>
 b44:	2a 94       	dec	r2
 b46:	f5 cf       	rjmp	.-22     	; 0xb32 <vfprintf+0x1ae>
 b48:	f5 01       	movw	r30, r10
 b4a:	37 fc       	sbrc	r3, 7
 b4c:	85 91       	lpm	r24, Z+
 b4e:	37 fe       	sbrs	r3, 7
 b50:	81 91       	ld	r24, Z+
 b52:	5f 01       	movw	r10, r30
 b54:	b6 01       	movw	r22, r12
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	28 d1       	rcall	.+592    	; 0xdaa <fputc>
 b5a:	21 10       	cpse	r2, r1
 b5c:	2a 94       	dec	r2
 b5e:	21 e0       	ldi	r18, 0x01	; 1
 b60:	82 1a       	sub	r8, r18
 b62:	91 08       	sbc	r9, r1
 b64:	81 14       	cp	r8, r1
 b66:	91 04       	cpc	r9, r1
 b68:	79 f7       	brne	.-34     	; 0xb48 <vfprintf+0x1c4>
 b6a:	e1 c0       	rjmp	.+450    	; 0xd2e <vfprintf+0x3aa>
 b6c:	84 36       	cpi	r24, 0x64	; 100
 b6e:	11 f0       	breq	.+4      	; 0xb74 <vfprintf+0x1f0>
 b70:	89 36       	cpi	r24, 0x69	; 105
 b72:	39 f5       	brne	.+78     	; 0xbc2 <vfprintf+0x23e>
 b74:	f8 01       	movw	r30, r16
 b76:	37 fe       	sbrs	r3, 7
 b78:	07 c0       	rjmp	.+14     	; 0xb88 <vfprintf+0x204>
 b7a:	60 81       	ld	r22, Z
 b7c:	71 81       	ldd	r23, Z+1	; 0x01
 b7e:	82 81       	ldd	r24, Z+2	; 0x02
 b80:	93 81       	ldd	r25, Z+3	; 0x03
 b82:	0c 5f       	subi	r16, 0xFC	; 252
 b84:	1f 4f       	sbci	r17, 0xFF	; 255
 b86:	08 c0       	rjmp	.+16     	; 0xb98 <vfprintf+0x214>
 b88:	60 81       	ld	r22, Z
 b8a:	71 81       	ldd	r23, Z+1	; 0x01
 b8c:	07 2e       	mov	r0, r23
 b8e:	00 0c       	add	r0, r0
 b90:	88 0b       	sbc	r24, r24
 b92:	99 0b       	sbc	r25, r25
 b94:	0e 5f       	subi	r16, 0xFE	; 254
 b96:	1f 4f       	sbci	r17, 0xFF	; 255
 b98:	f3 2d       	mov	r31, r3
 b9a:	ff 76       	andi	r31, 0x6F	; 111
 b9c:	3f 2e       	mov	r3, r31
 b9e:	97 ff       	sbrs	r25, 7
 ba0:	09 c0       	rjmp	.+18     	; 0xbb4 <vfprintf+0x230>
 ba2:	90 95       	com	r25
 ba4:	80 95       	com	r24
 ba6:	70 95       	com	r23
 ba8:	61 95       	neg	r22
 baa:	7f 4f       	sbci	r23, 0xFF	; 255
 bac:	8f 4f       	sbci	r24, 0xFF	; 255
 bae:	9f 4f       	sbci	r25, 0xFF	; 255
 bb0:	f0 68       	ori	r31, 0x80	; 128
 bb2:	3f 2e       	mov	r3, r31
 bb4:	2a e0       	ldi	r18, 0x0A	; 10
 bb6:	30 e0       	ldi	r19, 0x00	; 0
 bb8:	a3 01       	movw	r20, r6
 bba:	33 d1       	rcall	.+614    	; 0xe22 <__ultoa_invert>
 bbc:	88 2e       	mov	r8, r24
 bbe:	86 18       	sub	r8, r6
 bc0:	44 c0       	rjmp	.+136    	; 0xc4a <vfprintf+0x2c6>
 bc2:	85 37       	cpi	r24, 0x75	; 117
 bc4:	31 f4       	brne	.+12     	; 0xbd2 <vfprintf+0x24e>
 bc6:	23 2d       	mov	r18, r3
 bc8:	2f 7e       	andi	r18, 0xEF	; 239
 bca:	b2 2e       	mov	r11, r18
 bcc:	2a e0       	ldi	r18, 0x0A	; 10
 bce:	30 e0       	ldi	r19, 0x00	; 0
 bd0:	25 c0       	rjmp	.+74     	; 0xc1c <vfprintf+0x298>
 bd2:	93 2d       	mov	r25, r3
 bd4:	99 7f       	andi	r25, 0xF9	; 249
 bd6:	b9 2e       	mov	r11, r25
 bd8:	8f 36       	cpi	r24, 0x6F	; 111
 bda:	c1 f0       	breq	.+48     	; 0xc0c <vfprintf+0x288>
 bdc:	18 f4       	brcc	.+6      	; 0xbe4 <vfprintf+0x260>
 bde:	88 35       	cpi	r24, 0x58	; 88
 be0:	79 f0       	breq	.+30     	; 0xc00 <vfprintf+0x27c>
 be2:	ae c0       	rjmp	.+348    	; 0xd40 <vfprintf+0x3bc>
 be4:	80 37       	cpi	r24, 0x70	; 112
 be6:	19 f0       	breq	.+6      	; 0xbee <vfprintf+0x26a>
 be8:	88 37       	cpi	r24, 0x78	; 120
 bea:	21 f0       	breq	.+8      	; 0xbf4 <vfprintf+0x270>
 bec:	a9 c0       	rjmp	.+338    	; 0xd40 <vfprintf+0x3bc>
 bee:	e9 2f       	mov	r30, r25
 bf0:	e0 61       	ori	r30, 0x10	; 16
 bf2:	be 2e       	mov	r11, r30
 bf4:	b4 fe       	sbrs	r11, 4
 bf6:	0d c0       	rjmp	.+26     	; 0xc12 <vfprintf+0x28e>
 bf8:	fb 2d       	mov	r31, r11
 bfa:	f4 60       	ori	r31, 0x04	; 4
 bfc:	bf 2e       	mov	r11, r31
 bfe:	09 c0       	rjmp	.+18     	; 0xc12 <vfprintf+0x28e>
 c00:	34 fe       	sbrs	r3, 4
 c02:	0a c0       	rjmp	.+20     	; 0xc18 <vfprintf+0x294>
 c04:	29 2f       	mov	r18, r25
 c06:	26 60       	ori	r18, 0x06	; 6
 c08:	b2 2e       	mov	r11, r18
 c0a:	06 c0       	rjmp	.+12     	; 0xc18 <vfprintf+0x294>
 c0c:	28 e0       	ldi	r18, 0x08	; 8
 c0e:	30 e0       	ldi	r19, 0x00	; 0
 c10:	05 c0       	rjmp	.+10     	; 0xc1c <vfprintf+0x298>
 c12:	20 e1       	ldi	r18, 0x10	; 16
 c14:	30 e0       	ldi	r19, 0x00	; 0
 c16:	02 c0       	rjmp	.+4      	; 0xc1c <vfprintf+0x298>
 c18:	20 e1       	ldi	r18, 0x10	; 16
 c1a:	32 e0       	ldi	r19, 0x02	; 2
 c1c:	f8 01       	movw	r30, r16
 c1e:	b7 fe       	sbrs	r11, 7
 c20:	07 c0       	rjmp	.+14     	; 0xc30 <vfprintf+0x2ac>
 c22:	60 81       	ld	r22, Z
 c24:	71 81       	ldd	r23, Z+1	; 0x01
 c26:	82 81       	ldd	r24, Z+2	; 0x02
 c28:	93 81       	ldd	r25, Z+3	; 0x03
 c2a:	0c 5f       	subi	r16, 0xFC	; 252
 c2c:	1f 4f       	sbci	r17, 0xFF	; 255
 c2e:	06 c0       	rjmp	.+12     	; 0xc3c <vfprintf+0x2b8>
 c30:	60 81       	ld	r22, Z
 c32:	71 81       	ldd	r23, Z+1	; 0x01
 c34:	80 e0       	ldi	r24, 0x00	; 0
 c36:	90 e0       	ldi	r25, 0x00	; 0
 c38:	0e 5f       	subi	r16, 0xFE	; 254
 c3a:	1f 4f       	sbci	r17, 0xFF	; 255
 c3c:	a3 01       	movw	r20, r6
 c3e:	f1 d0       	rcall	.+482    	; 0xe22 <__ultoa_invert>
 c40:	88 2e       	mov	r8, r24
 c42:	86 18       	sub	r8, r6
 c44:	fb 2d       	mov	r31, r11
 c46:	ff 77       	andi	r31, 0x7F	; 127
 c48:	3f 2e       	mov	r3, r31
 c4a:	36 fe       	sbrs	r3, 6
 c4c:	0d c0       	rjmp	.+26     	; 0xc68 <vfprintf+0x2e4>
 c4e:	23 2d       	mov	r18, r3
 c50:	2e 7f       	andi	r18, 0xFE	; 254
 c52:	a2 2e       	mov	r10, r18
 c54:	89 14       	cp	r8, r9
 c56:	58 f4       	brcc	.+22     	; 0xc6e <vfprintf+0x2ea>
 c58:	34 fe       	sbrs	r3, 4
 c5a:	0b c0       	rjmp	.+22     	; 0xc72 <vfprintf+0x2ee>
 c5c:	32 fc       	sbrc	r3, 2
 c5e:	09 c0       	rjmp	.+18     	; 0xc72 <vfprintf+0x2ee>
 c60:	83 2d       	mov	r24, r3
 c62:	8e 7e       	andi	r24, 0xEE	; 238
 c64:	a8 2e       	mov	r10, r24
 c66:	05 c0       	rjmp	.+10     	; 0xc72 <vfprintf+0x2ee>
 c68:	b8 2c       	mov	r11, r8
 c6a:	a3 2c       	mov	r10, r3
 c6c:	03 c0       	rjmp	.+6      	; 0xc74 <vfprintf+0x2f0>
 c6e:	b8 2c       	mov	r11, r8
 c70:	01 c0       	rjmp	.+2      	; 0xc74 <vfprintf+0x2f0>
 c72:	b9 2c       	mov	r11, r9
 c74:	a4 fe       	sbrs	r10, 4
 c76:	0f c0       	rjmp	.+30     	; 0xc96 <vfprintf+0x312>
 c78:	fe 01       	movw	r30, r28
 c7a:	e8 0d       	add	r30, r8
 c7c:	f1 1d       	adc	r31, r1
 c7e:	80 81       	ld	r24, Z
 c80:	80 33       	cpi	r24, 0x30	; 48
 c82:	21 f4       	brne	.+8      	; 0xc8c <vfprintf+0x308>
 c84:	9a 2d       	mov	r25, r10
 c86:	99 7e       	andi	r25, 0xE9	; 233
 c88:	a9 2e       	mov	r10, r25
 c8a:	09 c0       	rjmp	.+18     	; 0xc9e <vfprintf+0x31a>
 c8c:	a2 fe       	sbrs	r10, 2
 c8e:	06 c0       	rjmp	.+12     	; 0xc9c <vfprintf+0x318>
 c90:	b3 94       	inc	r11
 c92:	b3 94       	inc	r11
 c94:	04 c0       	rjmp	.+8      	; 0xc9e <vfprintf+0x31a>
 c96:	8a 2d       	mov	r24, r10
 c98:	86 78       	andi	r24, 0x86	; 134
 c9a:	09 f0       	breq	.+2      	; 0xc9e <vfprintf+0x31a>
 c9c:	b3 94       	inc	r11
 c9e:	a3 fc       	sbrc	r10, 3
 ca0:	10 c0       	rjmp	.+32     	; 0xcc2 <vfprintf+0x33e>
 ca2:	a0 fe       	sbrs	r10, 0
 ca4:	06 c0       	rjmp	.+12     	; 0xcb2 <vfprintf+0x32e>
 ca6:	b2 14       	cp	r11, r2
 ca8:	80 f4       	brcc	.+32     	; 0xcca <vfprintf+0x346>
 caa:	28 0c       	add	r2, r8
 cac:	92 2c       	mov	r9, r2
 cae:	9b 18       	sub	r9, r11
 cb0:	0d c0       	rjmp	.+26     	; 0xccc <vfprintf+0x348>
 cb2:	b2 14       	cp	r11, r2
 cb4:	58 f4       	brcc	.+22     	; 0xccc <vfprintf+0x348>
 cb6:	b6 01       	movw	r22, r12
 cb8:	80 e2       	ldi	r24, 0x20	; 32
 cba:	90 e0       	ldi	r25, 0x00	; 0
 cbc:	76 d0       	rcall	.+236    	; 0xdaa <fputc>
 cbe:	b3 94       	inc	r11
 cc0:	f8 cf       	rjmp	.-16     	; 0xcb2 <vfprintf+0x32e>
 cc2:	b2 14       	cp	r11, r2
 cc4:	18 f4       	brcc	.+6      	; 0xccc <vfprintf+0x348>
 cc6:	2b 18       	sub	r2, r11
 cc8:	02 c0       	rjmp	.+4      	; 0xcce <vfprintf+0x34a>
 cca:	98 2c       	mov	r9, r8
 ccc:	21 2c       	mov	r2, r1
 cce:	a4 fe       	sbrs	r10, 4
 cd0:	0f c0       	rjmp	.+30     	; 0xcf0 <vfprintf+0x36c>
 cd2:	b6 01       	movw	r22, r12
 cd4:	80 e3       	ldi	r24, 0x30	; 48
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	68 d0       	rcall	.+208    	; 0xdaa <fputc>
 cda:	a2 fe       	sbrs	r10, 2
 cdc:	16 c0       	rjmp	.+44     	; 0xd0a <vfprintf+0x386>
 cde:	a1 fc       	sbrc	r10, 1
 ce0:	03 c0       	rjmp	.+6      	; 0xce8 <vfprintf+0x364>
 ce2:	88 e7       	ldi	r24, 0x78	; 120
 ce4:	90 e0       	ldi	r25, 0x00	; 0
 ce6:	02 c0       	rjmp	.+4      	; 0xcec <vfprintf+0x368>
 ce8:	88 e5       	ldi	r24, 0x58	; 88
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	b6 01       	movw	r22, r12
 cee:	0c c0       	rjmp	.+24     	; 0xd08 <vfprintf+0x384>
 cf0:	8a 2d       	mov	r24, r10
 cf2:	86 78       	andi	r24, 0x86	; 134
 cf4:	51 f0       	breq	.+20     	; 0xd0a <vfprintf+0x386>
 cf6:	a1 fe       	sbrs	r10, 1
 cf8:	02 c0       	rjmp	.+4      	; 0xcfe <vfprintf+0x37a>
 cfa:	8b e2       	ldi	r24, 0x2B	; 43
 cfc:	01 c0       	rjmp	.+2      	; 0xd00 <vfprintf+0x37c>
 cfe:	80 e2       	ldi	r24, 0x20	; 32
 d00:	a7 fc       	sbrc	r10, 7
 d02:	8d e2       	ldi	r24, 0x2D	; 45
 d04:	b6 01       	movw	r22, r12
 d06:	90 e0       	ldi	r25, 0x00	; 0
 d08:	50 d0       	rcall	.+160    	; 0xdaa <fputc>
 d0a:	89 14       	cp	r8, r9
 d0c:	30 f4       	brcc	.+12     	; 0xd1a <vfprintf+0x396>
 d0e:	b6 01       	movw	r22, r12
 d10:	80 e3       	ldi	r24, 0x30	; 48
 d12:	90 e0       	ldi	r25, 0x00	; 0
 d14:	4a d0       	rcall	.+148    	; 0xdaa <fputc>
 d16:	9a 94       	dec	r9
 d18:	f8 cf       	rjmp	.-16     	; 0xd0a <vfprintf+0x386>
 d1a:	8a 94       	dec	r8
 d1c:	f3 01       	movw	r30, r6
 d1e:	e8 0d       	add	r30, r8
 d20:	f1 1d       	adc	r31, r1
 d22:	80 81       	ld	r24, Z
 d24:	b6 01       	movw	r22, r12
 d26:	90 e0       	ldi	r25, 0x00	; 0
 d28:	40 d0       	rcall	.+128    	; 0xdaa <fputc>
 d2a:	81 10       	cpse	r8, r1
 d2c:	f6 cf       	rjmp	.-20     	; 0xd1a <vfprintf+0x396>
 d2e:	22 20       	and	r2, r2
 d30:	09 f4       	brne	.+2      	; 0xd34 <vfprintf+0x3b0>
 d32:	4e ce       	rjmp	.-868    	; 0x9d0 <vfprintf+0x4c>
 d34:	b6 01       	movw	r22, r12
 d36:	80 e2       	ldi	r24, 0x20	; 32
 d38:	90 e0       	ldi	r25, 0x00	; 0
 d3a:	37 d0       	rcall	.+110    	; 0xdaa <fputc>
 d3c:	2a 94       	dec	r2
 d3e:	f7 cf       	rjmp	.-18     	; 0xd2e <vfprintf+0x3aa>
 d40:	f6 01       	movw	r30, r12
 d42:	86 81       	ldd	r24, Z+6	; 0x06
 d44:	97 81       	ldd	r25, Z+7	; 0x07
 d46:	02 c0       	rjmp	.+4      	; 0xd4c <vfprintf+0x3c8>
 d48:	8f ef       	ldi	r24, 0xFF	; 255
 d4a:	9f ef       	ldi	r25, 0xFF	; 255
 d4c:	2b 96       	adiw	r28, 0x0b	; 11
 d4e:	0f b6       	in	r0, 0x3f	; 63
 d50:	f8 94       	cli
 d52:	de bf       	out	0x3e, r29	; 62
 d54:	0f be       	out	0x3f, r0	; 63
 d56:	cd bf       	out	0x3d, r28	; 61
 d58:	df 91       	pop	r29
 d5a:	cf 91       	pop	r28
 d5c:	1f 91       	pop	r17
 d5e:	0f 91       	pop	r16
 d60:	ff 90       	pop	r15
 d62:	ef 90       	pop	r14
 d64:	df 90       	pop	r13
 d66:	cf 90       	pop	r12
 d68:	bf 90       	pop	r11
 d6a:	af 90       	pop	r10
 d6c:	9f 90       	pop	r9
 d6e:	8f 90       	pop	r8
 d70:	7f 90       	pop	r7
 d72:	6f 90       	pop	r6
 d74:	5f 90       	pop	r5
 d76:	4f 90       	pop	r4
 d78:	3f 90       	pop	r3
 d7a:	2f 90       	pop	r2
 d7c:	08 95       	ret

00000d7e <strnlen_P>:
 d7e:	fc 01       	movw	r30, r24
 d80:	05 90       	lpm	r0, Z+
 d82:	61 50       	subi	r22, 0x01	; 1
 d84:	70 40       	sbci	r23, 0x00	; 0
 d86:	01 10       	cpse	r0, r1
 d88:	d8 f7       	brcc	.-10     	; 0xd80 <strnlen_P+0x2>
 d8a:	80 95       	com	r24
 d8c:	90 95       	com	r25
 d8e:	8e 0f       	add	r24, r30
 d90:	9f 1f       	adc	r25, r31
 d92:	08 95       	ret

00000d94 <strnlen>:
 d94:	fc 01       	movw	r30, r24
 d96:	61 50       	subi	r22, 0x01	; 1
 d98:	70 40       	sbci	r23, 0x00	; 0
 d9a:	01 90       	ld	r0, Z+
 d9c:	01 10       	cpse	r0, r1
 d9e:	d8 f7       	brcc	.-10     	; 0xd96 <strnlen+0x2>
 da0:	80 95       	com	r24
 da2:	90 95       	com	r25
 da4:	8e 0f       	add	r24, r30
 da6:	9f 1f       	adc	r25, r31
 da8:	08 95       	ret

00000daa <fputc>:
 daa:	0f 93       	push	r16
 dac:	1f 93       	push	r17
 dae:	cf 93       	push	r28
 db0:	df 93       	push	r29
 db2:	fb 01       	movw	r30, r22
 db4:	23 81       	ldd	r18, Z+3	; 0x03
 db6:	21 fd       	sbrc	r18, 1
 db8:	03 c0       	rjmp	.+6      	; 0xdc0 <fputc+0x16>
 dba:	8f ef       	ldi	r24, 0xFF	; 255
 dbc:	9f ef       	ldi	r25, 0xFF	; 255
 dbe:	2c c0       	rjmp	.+88     	; 0xe18 <fputc+0x6e>
 dc0:	22 ff       	sbrs	r18, 2
 dc2:	16 c0       	rjmp	.+44     	; 0xdf0 <fputc+0x46>
 dc4:	46 81       	ldd	r20, Z+6	; 0x06
 dc6:	57 81       	ldd	r21, Z+7	; 0x07
 dc8:	24 81       	ldd	r18, Z+4	; 0x04
 dca:	35 81       	ldd	r19, Z+5	; 0x05
 dcc:	42 17       	cp	r20, r18
 dce:	53 07       	cpc	r21, r19
 dd0:	44 f4       	brge	.+16     	; 0xde2 <fputc+0x38>
 dd2:	a0 81       	ld	r26, Z
 dd4:	b1 81       	ldd	r27, Z+1	; 0x01
 dd6:	9d 01       	movw	r18, r26
 dd8:	2f 5f       	subi	r18, 0xFF	; 255
 dda:	3f 4f       	sbci	r19, 0xFF	; 255
 ddc:	31 83       	std	Z+1, r19	; 0x01
 dde:	20 83       	st	Z, r18
 de0:	8c 93       	st	X, r24
 de2:	26 81       	ldd	r18, Z+6	; 0x06
 de4:	37 81       	ldd	r19, Z+7	; 0x07
 de6:	2f 5f       	subi	r18, 0xFF	; 255
 de8:	3f 4f       	sbci	r19, 0xFF	; 255
 dea:	37 83       	std	Z+7, r19	; 0x07
 dec:	26 83       	std	Z+6, r18	; 0x06
 dee:	14 c0       	rjmp	.+40     	; 0xe18 <fputc+0x6e>
 df0:	8b 01       	movw	r16, r22
 df2:	ec 01       	movw	r28, r24
 df4:	fb 01       	movw	r30, r22
 df6:	00 84       	ldd	r0, Z+8	; 0x08
 df8:	f1 85       	ldd	r31, Z+9	; 0x09
 dfa:	e0 2d       	mov	r30, r0
 dfc:	19 95       	eicall
 dfe:	89 2b       	or	r24, r25
 e00:	e1 f6       	brne	.-72     	; 0xdba <fputc+0x10>
 e02:	d8 01       	movw	r26, r16
 e04:	16 96       	adiw	r26, 0x06	; 6
 e06:	8d 91       	ld	r24, X+
 e08:	9c 91       	ld	r25, X
 e0a:	17 97       	sbiw	r26, 0x07	; 7
 e0c:	01 96       	adiw	r24, 0x01	; 1
 e0e:	17 96       	adiw	r26, 0x07	; 7
 e10:	9c 93       	st	X, r25
 e12:	8e 93       	st	-X, r24
 e14:	16 97       	sbiw	r26, 0x06	; 6
 e16:	ce 01       	movw	r24, r28
 e18:	df 91       	pop	r29
 e1a:	cf 91       	pop	r28
 e1c:	1f 91       	pop	r17
 e1e:	0f 91       	pop	r16
 e20:	08 95       	ret

00000e22 <__ultoa_invert>:
 e22:	fa 01       	movw	r30, r20
 e24:	aa 27       	eor	r26, r26
 e26:	28 30       	cpi	r18, 0x08	; 8
 e28:	51 f1       	breq	.+84     	; 0xe7e <__ultoa_invert+0x5c>
 e2a:	20 31       	cpi	r18, 0x10	; 16
 e2c:	81 f1       	breq	.+96     	; 0xe8e <__ultoa_invert+0x6c>
 e2e:	e8 94       	clt
 e30:	6f 93       	push	r22
 e32:	6e 7f       	andi	r22, 0xFE	; 254
 e34:	6e 5f       	subi	r22, 0xFE	; 254
 e36:	7f 4f       	sbci	r23, 0xFF	; 255
 e38:	8f 4f       	sbci	r24, 0xFF	; 255
 e3a:	9f 4f       	sbci	r25, 0xFF	; 255
 e3c:	af 4f       	sbci	r26, 0xFF	; 255
 e3e:	b1 e0       	ldi	r27, 0x01	; 1
 e40:	3e d0       	rcall	.+124    	; 0xebe <__ultoa_invert+0x9c>
 e42:	b4 e0       	ldi	r27, 0x04	; 4
 e44:	3c d0       	rcall	.+120    	; 0xebe <__ultoa_invert+0x9c>
 e46:	67 0f       	add	r22, r23
 e48:	78 1f       	adc	r23, r24
 e4a:	89 1f       	adc	r24, r25
 e4c:	9a 1f       	adc	r25, r26
 e4e:	a1 1d       	adc	r26, r1
 e50:	68 0f       	add	r22, r24
 e52:	79 1f       	adc	r23, r25
 e54:	8a 1f       	adc	r24, r26
 e56:	91 1d       	adc	r25, r1
 e58:	a1 1d       	adc	r26, r1
 e5a:	6a 0f       	add	r22, r26
 e5c:	71 1d       	adc	r23, r1
 e5e:	81 1d       	adc	r24, r1
 e60:	91 1d       	adc	r25, r1
 e62:	a1 1d       	adc	r26, r1
 e64:	20 d0       	rcall	.+64     	; 0xea6 <__ultoa_invert+0x84>
 e66:	09 f4       	brne	.+2      	; 0xe6a <__ultoa_invert+0x48>
 e68:	68 94       	set
 e6a:	3f 91       	pop	r19
 e6c:	2a e0       	ldi	r18, 0x0A	; 10
 e6e:	26 9f       	mul	r18, r22
 e70:	11 24       	eor	r1, r1
 e72:	30 19       	sub	r19, r0
 e74:	30 5d       	subi	r19, 0xD0	; 208
 e76:	31 93       	st	Z+, r19
 e78:	de f6       	brtc	.-74     	; 0xe30 <__ultoa_invert+0xe>
 e7a:	cf 01       	movw	r24, r30
 e7c:	08 95       	ret
 e7e:	46 2f       	mov	r20, r22
 e80:	47 70       	andi	r20, 0x07	; 7
 e82:	40 5d       	subi	r20, 0xD0	; 208
 e84:	41 93       	st	Z+, r20
 e86:	b3 e0       	ldi	r27, 0x03	; 3
 e88:	0f d0       	rcall	.+30     	; 0xea8 <__ultoa_invert+0x86>
 e8a:	c9 f7       	brne	.-14     	; 0xe7e <__ultoa_invert+0x5c>
 e8c:	f6 cf       	rjmp	.-20     	; 0xe7a <__ultoa_invert+0x58>
 e8e:	46 2f       	mov	r20, r22
 e90:	4f 70       	andi	r20, 0x0F	; 15
 e92:	40 5d       	subi	r20, 0xD0	; 208
 e94:	4a 33       	cpi	r20, 0x3A	; 58
 e96:	18 f0       	brcs	.+6      	; 0xe9e <__ultoa_invert+0x7c>
 e98:	49 5d       	subi	r20, 0xD9	; 217
 e9a:	31 fd       	sbrc	r19, 1
 e9c:	40 52       	subi	r20, 0x20	; 32
 e9e:	41 93       	st	Z+, r20
 ea0:	02 d0       	rcall	.+4      	; 0xea6 <__ultoa_invert+0x84>
 ea2:	a9 f7       	brne	.-22     	; 0xe8e <__ultoa_invert+0x6c>
 ea4:	ea cf       	rjmp	.-44     	; 0xe7a <__ultoa_invert+0x58>
 ea6:	b4 e0       	ldi	r27, 0x04	; 4
 ea8:	a6 95       	lsr	r26
 eaa:	97 95       	ror	r25
 eac:	87 95       	ror	r24
 eae:	77 95       	ror	r23
 eb0:	67 95       	ror	r22
 eb2:	ba 95       	dec	r27
 eb4:	c9 f7       	brne	.-14     	; 0xea8 <__ultoa_invert+0x86>
 eb6:	00 97       	sbiw	r24, 0x00	; 0
 eb8:	61 05       	cpc	r22, r1
 eba:	71 05       	cpc	r23, r1
 ebc:	08 95       	ret
 ebe:	9b 01       	movw	r18, r22
 ec0:	ac 01       	movw	r20, r24
 ec2:	0a 2e       	mov	r0, r26
 ec4:	06 94       	lsr	r0
 ec6:	57 95       	ror	r21
 ec8:	47 95       	ror	r20
 eca:	37 95       	ror	r19
 ecc:	27 95       	ror	r18
 ece:	ba 95       	dec	r27
 ed0:	c9 f7       	brne	.-14     	; 0xec4 <__ultoa_invert+0xa2>
 ed2:	62 0f       	add	r22, r18
 ed4:	73 1f       	adc	r23, r19
 ed6:	84 1f       	adc	r24, r20
 ed8:	95 1f       	adc	r25, r21
 eda:	a0 1d       	adc	r26, r0
 edc:	08 95       	ret

00000ede <_exit>:
 ede:	f8 94       	cli

00000ee0 <__stop_program>:
 ee0:	ff cf       	rjmp	.-2      	; 0xee0 <__stop_program>
