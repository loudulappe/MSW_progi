
LCD_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000d5e  00000df2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000e66  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ec4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000246c  00000000  00000000  000010f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ef0  00000000  00000000  00003560  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014a3  00000000  00000000  00004450  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  000058f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c8a  00000000  00000000  00005f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ae8  00000000  00000000  00006c02  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  000086ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	41 c3       	rjmp	.+1666   	; 0x6e0 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e5       	ldi	r30, 0x5E	; 94
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	1c c6       	rjmp	.+3128   	; 0xd5a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#include "ucBoardDriver.h"


int main(void)
{
    initBoard(1);    
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	76 d1       	rcall	.+748    	; 0x414 <initBoard>
 128:	ff cf       	rjmp	.-2      	; 0x128 <main+0x4>

0000012a <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 12a:	82 b9       	out	0x02, r24	; 2
 12c:	95 b9       	out	0x05, r25	; 5
 12e:	08 95       	ret

00000130 <buttonReadAllPL>:
 130:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 134:	08 95       	ret

00000136 <startSystemTimeMs>:
 136:	83 e0       	ldi	r24, 0x03	; 3
 138:	84 bd       	out	0x24, r24	; 36
 13a:	8b e0       	ldi	r24, 0x0B	; 11
 13c:	85 bd       	out	0x25, r24	; 37
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 144:	89 ef       	ldi	r24, 0xF9	; 249
 146:	87 bd       	out	0x27, r24	; 39
 148:	08 95       	ret

0000014a <initAdc>:
 14a:	11 ba       	out	0x11, r1	; 17
 14c:	10 ba       	out	0x10, r1	; 16
 14e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 152:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 156:	80 e4       	ldi	r24, 0x40	; 64
 158:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 15c:	8f e0       	ldi	r24, 0x0F	; 15
 15e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 162:	8f ef       	ldi	r24, 0xFF	; 255
 164:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 168:	ea e7       	ldi	r30, 0x7A	; 122
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	87 ea       	ldi	r24, 0xA7	; 167
 16e:	80 83       	st	Z, r24
 170:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 174:	80 81       	ld	r24, Z
 176:	80 64       	ori	r24, 0x40	; 64
 178:	80 83       	st	Z, r24
 17a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 17e:	84 ff       	sbrs	r24, 4
 180:	fc cf       	rjmp	.-8      	; 0x17a <initAdc+0x30>
 182:	ea e7       	ldi	r30, 0x7A	; 122
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	8f 7e       	andi	r24, 0xEF	; 239
 18a:	80 83       	st	Z, r24
 18c:	08 95       	ret

0000018e <rgbWrite>:
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	33 e0       	ldi	r19, 0x03	; 3
 192:	f9 01       	movw	r30, r18
 194:	e8 1b       	sub	r30, r24
 196:	f9 0b       	sbc	r31, r25
 198:	c9 01       	movw	r24, r18
 19a:	86 1b       	sub	r24, r22
 19c:	97 0b       	sbc	r25, r23
 19e:	24 1b       	sub	r18, r20
 1a0:	35 0b       	sbc	r19, r21
 1a2:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 1a6:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 1aa:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 1ae:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 1b2:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 1b6:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 1ba:	08 95       	ret

000001bc <initRgb>:
 1bc:	8e ef       	ldi	r24, 0xFE	; 254
 1be:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 1c2:	8b e1       	ldi	r24, 0x1B	; 27
 1c4:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 1c8:	83 e0       	ldi	r24, 0x03	; 3
 1ca:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 1ce:	8f ef       	ldi	r24, 0xFF	; 255
 1d0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 1d4:	40 e0       	ldi	r20, 0x00	; 0
 1d6:	50 e0       	ldi	r21, 0x00	; 0
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	70 e0       	ldi	r23, 0x00	; 0
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	d6 cf       	rjmp	.-84     	; 0x18e <rgbWrite>
 1e2:	08 95       	ret

000001e4 <lcdSid>:
 1e4:	88 23       	and	r24, r24
 1e6:	21 f0       	breq	.+8      	; 0x1f0 <lcdSid+0xc>
 1e8:	84 b3       	in	r24, 0x14	; 20
 1ea:	81 60       	ori	r24, 0x01	; 1
 1ec:	84 bb       	out	0x14, r24	; 20
 1ee:	08 95       	ret
 1f0:	84 b3       	in	r24, 0x14	; 20
 1f2:	8e 7f       	andi	r24, 0xFE	; 254
 1f4:	84 bb       	out	0x14, r24	; 20
 1f6:	08 95       	ret

000001f8 <lcdSclk>:
 1f8:	88 23       	and	r24, r24
 1fa:	21 f0       	breq	.+8      	; 0x204 <lcdSclk+0xc>
 1fc:	84 b3       	in	r24, 0x14	; 20
 1fe:	82 60       	ori	r24, 0x02	; 2
 200:	84 bb       	out	0x14, r24	; 20
 202:	08 95       	ret
 204:	84 b3       	in	r24, 0x14	; 20
 206:	8d 7f       	andi	r24, 0xFD	; 253
 208:	84 bb       	out	0x14, r24	; 20
 20a:	08 95       	ret

0000020c <lcdLight>:
 20c:	81 11       	cpse	r24, r1
 20e:	04 c0       	rjmp	.+8      	; 0x218 <lcdLight+0xc>
 210:	84 b5       	in	r24, 0x24	; 36
 212:	8f 7d       	andi	r24, 0xDF	; 223
 214:	84 bd       	out	0x24, r24	; 36
 216:	08 95       	ret
 218:	94 b5       	in	r25, 0x24	; 36
 21a:	90 62       	ori	r25, 0x20	; 32
 21c:	94 bd       	out	0x24, r25	; 36
 21e:	88 bd       	out	0x28, r24	; 40
 220:	08 95       	ret

00000222 <writeLcdF>:
 222:	ef 92       	push	r14
 224:	ff 92       	push	r15
 226:	0f 93       	push	r16
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	7c 01       	movw	r14, r24
 230:	eb 01       	movw	r28, r22
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	d7 df       	rcall	.-82     	; 0x1e4 <lcdSid>
 236:	00 e0       	ldi	r16, 0x00	; 0
 238:	10 e0       	ldi	r17, 0x00	; 0
 23a:	06 c0       	rjmp	.+12     	; 0x248 <writeLcdF+0x26>
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	dc df       	rcall	.-72     	; 0x1f8 <lcdSclk>
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	da df       	rcall	.-76     	; 0x1f8 <lcdSclk>
 244:	0f 5f       	subi	r16, 0xFF	; 255
 246:	1f 4f       	sbci	r17, 0xFF	; 255
 248:	05 30       	cpi	r16, 0x05	; 5
 24a:	11 05       	cpc	r17, r1
 24c:	b8 f3       	brcs	.-18     	; 0x23c <writeLcdF+0x1a>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	c9 df       	rcall	.-110    	; 0x1e4 <lcdSid>
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	d1 df       	rcall	.-94     	; 0x1f8 <lcdSclk>
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	cf df       	rcall	.-98     	; 0x1f8 <lcdSclk>
 25a:	83 e4       	ldi	r24, 0x43	; 67
 25c:	e8 16       	cp	r14, r24
 25e:	f1 04       	cpc	r15, r1
 260:	19 f4       	brne	.+6      	; 0x268 <writeLcdF+0x46>
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	bf df       	rcall	.-130    	; 0x1e4 <lcdSid>
 266:	02 c0       	rjmp	.+4      	; 0x26c <writeLcdF+0x4a>
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	bc df       	rcall	.-136    	; 0x1e4 <lcdSid>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	c4 df       	rcall	.-120    	; 0x1f8 <lcdSclk>
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	c2 df       	rcall	.-124    	; 0x1f8 <lcdSclk>
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	b6 df       	rcall	.-148    	; 0x1e4 <lcdSid>
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	be df       	rcall	.-132    	; 0x1f8 <lcdSclk>
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	bc df       	rcall	.-136    	; 0x1f8 <lcdSclk>
 280:	00 e0       	ldi	r16, 0x00	; 0
 282:	10 e0       	ldi	r17, 0x00	; 0
 284:	11 c0       	rjmp	.+34     	; 0x2a8 <writeLcdF+0x86>
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	b7 df       	rcall	.-146    	; 0x1f8 <lcdSclk>
 28a:	c0 ff       	sbrs	r28, 0
 28c:	03 c0       	rjmp	.+6      	; 0x294 <writeLcdF+0x72>
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	a9 df       	rcall	.-174    	; 0x1e4 <lcdSid>
 292:	02 c0       	rjmp	.+4      	; 0x298 <writeLcdF+0x76>
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	a6 df       	rcall	.-180    	; 0x1e4 <lcdSid>
 298:	d6 95       	lsr	r29
 29a:	c7 95       	ror	r28
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	ac df       	rcall	.-168    	; 0x1f8 <lcdSclk>
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	aa df       	rcall	.-172    	; 0x1f8 <lcdSclk>
 2a4:	0f 5f       	subi	r16, 0xFF	; 255
 2a6:	1f 4f       	sbci	r17, 0xFF	; 255
 2a8:	04 30       	cpi	r16, 0x04	; 4
 2aa:	11 05       	cpc	r17, r1
 2ac:	60 f3       	brcs	.-40     	; 0x286 <writeLcdF+0x64>
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	99 df       	rcall	.-206    	; 0x1e4 <lcdSid>
 2b2:	00 e0       	ldi	r16, 0x00	; 0
 2b4:	10 e0       	ldi	r17, 0x00	; 0
 2b6:	06 c0       	rjmp	.+12     	; 0x2c4 <writeLcdF+0xa2>
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	9e df       	rcall	.-196    	; 0x1f8 <lcdSclk>
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	9c df       	rcall	.-200    	; 0x1f8 <lcdSclk>
 2c0:	0f 5f       	subi	r16, 0xFF	; 255
 2c2:	1f 4f       	sbci	r17, 0xFF	; 255
 2c4:	04 30       	cpi	r16, 0x04	; 4
 2c6:	11 05       	cpc	r17, r1
 2c8:	b8 f3       	brcs	.-18     	; 0x2b8 <writeLcdF+0x96>
 2ca:	00 e0       	ldi	r16, 0x00	; 0
 2cc:	10 e0       	ldi	r17, 0x00	; 0
 2ce:	11 c0       	rjmp	.+34     	; 0x2f2 <writeLcdF+0xd0>
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	92 df       	rcall	.-220    	; 0x1f8 <lcdSclk>
 2d4:	c0 ff       	sbrs	r28, 0
 2d6:	03 c0       	rjmp	.+6      	; 0x2de <writeLcdF+0xbc>
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	84 df       	rcall	.-248    	; 0x1e4 <lcdSid>
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <writeLcdF+0xc0>
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	81 df       	rcall	.-254    	; 0x1e4 <lcdSid>
 2e2:	d6 95       	lsr	r29
 2e4:	c7 95       	ror	r28
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	87 df       	rcall	.-242    	; 0x1f8 <lcdSclk>
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	85 df       	rcall	.-246    	; 0x1f8 <lcdSclk>
 2ee:	0f 5f       	subi	r16, 0xFF	; 255
 2f0:	1f 4f       	sbci	r17, 0xFF	; 255
 2f2:	04 30       	cpi	r16, 0x04	; 4
 2f4:	11 05       	cpc	r17, r1
 2f6:	60 f3       	brcs	.-40     	; 0x2d0 <writeLcdF+0xae>
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	74 df       	rcall	.-280    	; 0x1e4 <lcdSid>
 2fc:	c0 e0       	ldi	r28, 0x00	; 0
 2fe:	d0 e0       	ldi	r29, 0x00	; 0
 300:	05 c0       	rjmp	.+10     	; 0x30c <writeLcdF+0xea>
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	79 df       	rcall	.-270    	; 0x1f8 <lcdSclk>
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	77 df       	rcall	.-274    	; 0x1f8 <lcdSclk>
 30a:	21 96       	adiw	r28, 0x01	; 1
 30c:	c4 30       	cpi	r28, 0x04	; 4
 30e:	d1 05       	cpc	r29, r1
 310:	c0 f3       	brcs	.-16     	; 0x302 <writeLcdF+0xe0>
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	67 df       	rcall	.-306    	; 0x1e4 <lcdSid>
 316:	87 ec       	ldi	r24, 0xC7	; 199
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <writeLcdF+0xf8>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <writeLcdF+0xfe>
 320:	00 00       	nop
 322:	df 91       	pop	r29
 324:	cf 91       	pop	r28
 326:	1f 91       	pop	r17
 328:	0f 91       	pop	r16
 32a:	ff 90       	pop	r15
 32c:	ef 90       	pop	r14
 32e:	08 95       	ret

00000330 <lcdWriteText>:
 330:	1f 93       	push	r17
 332:	cf 93       	push	r28
 334:	df 93       	push	r29
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	65 97       	sbiw	r28, 0x15	; 21
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	f8 94       	cli
 340:	de bf       	out	0x3e, r29	; 62
 342:	0f be       	out	0x3f, r0	; 63
 344:	cd bf       	out	0x3d, r28	; 61
 346:	9e 01       	movw	r18, r28
 348:	20 5e       	subi	r18, 0xE0	; 224
 34a:	3f 4f       	sbci	r19, 0xFF	; 255
 34c:	4e 8d       	ldd	r20, Y+30	; 0x1e
 34e:	5f 8d       	ldd	r21, Y+31	; 0x1f
 350:	65 e1       	ldi	r22, 0x15	; 21
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	ce 01       	movw	r24, r28
 356:	01 96       	adiw	r24, 0x01	; 1
 358:	1b d2       	rcall	.+1078   	; 0x790 <vsnprintf>
 35a:	6d 8d       	ldd	r22, Y+29	; 0x1d
 35c:	8c 8d       	ldd	r24, Y+28	; 0x1c
 35e:	90 e2       	ldi	r25, 0x20	; 32
 360:	89 9f       	mul	r24, r25
 362:	60 0d       	add	r22, r0
 364:	11 24       	eor	r1, r1
 366:	60 68       	ori	r22, 0x80	; 128
 368:	70 e0       	ldi	r23, 0x00	; 0
 36a:	83 e4       	ldi	r24, 0x43	; 67
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	59 df       	rcall	.-334    	; 0x222 <writeLcdF>
 370:	10 e0       	ldi	r17, 0x00	; 0
 372:	05 c0       	rjmp	.+10     	; 0x37e <lcdWriteText+0x4e>
 374:	1f 5f       	subi	r17, 0xFF	; 255
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	84 e4       	ldi	r24, 0x44	; 68
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	52 df       	rcall	.-348    	; 0x222 <writeLcdF>
 37e:	e1 e0       	ldi	r30, 0x01	; 1
 380:	f0 e0       	ldi	r31, 0x00	; 0
 382:	ec 0f       	add	r30, r28
 384:	fd 1f       	adc	r31, r29
 386:	e1 0f       	add	r30, r17
 388:	f1 1d       	adc	r31, r1
 38a:	60 81       	ld	r22, Z
 38c:	61 11       	cpse	r22, r1
 38e:	f2 cf       	rjmp	.-28     	; 0x374 <lcdWriteText+0x44>
 390:	65 96       	adiw	r28, 0x15	; 21
 392:	0f b6       	in	r0, 0x3f	; 63
 394:	f8 94       	cli
 396:	de bf       	out	0x3e, r29	; 62
 398:	0f be       	out	0x3f, r0	; 63
 39a:	cd bf       	out	0x3d, r28	; 61
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	1f 91       	pop	r17
 3a2:	08 95       	ret

000003a4 <lcdClear>:
 3a4:	61 e0       	ldi	r22, 0x01	; 1
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	83 e4       	ldi	r24, 0x43	; 67
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	3a df       	rcall	.-396    	; 0x222 <writeLcdF>
 3ae:	8f e3       	ldi	r24, 0x3F	; 63
 3b0:	9f e1       	ldi	r25, 0x1F	; 31
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <lcdClear+0xe>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <lcdClear+0x14>
 3b8:	00 00       	nop
 3ba:	80 e3       	ldi	r24, 0x30	; 48
 3bc:	92 e0       	ldi	r25, 0x02	; 2
 3be:	9f 93       	push	r25
 3c0:	8f 93       	push	r24
 3c2:	1f 92       	push	r1
 3c4:	1f 92       	push	r1
 3c6:	b4 df       	rcall	.-152    	; 0x330 <lcdWriteText>
 3c8:	0f 90       	pop	r0
 3ca:	0f 90       	pop	r0
 3cc:	0f 90       	pop	r0
 3ce:	0f 90       	pop	r0
 3d0:	08 95       	ret

000003d2 <initLcd>:
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	11 df       	rcall	.-478    	; 0x1f8 <lcdSclk>
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	05 df       	rcall	.-502    	; 0x1e4 <lcdSid>
 3da:	64 e3       	ldi	r22, 0x34	; 52
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	83 e4       	ldi	r24, 0x43	; 67
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	1f df       	rcall	.-450    	; 0x222 <writeLcdF>
 3e4:	69 e0       	ldi	r22, 0x09	; 9
 3e6:	70 e0       	ldi	r23, 0x00	; 0
 3e8:	83 e4       	ldi	r24, 0x43	; 67
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	1a df       	rcall	.-460    	; 0x222 <writeLcdF>
 3ee:	60 e3       	ldi	r22, 0x30	; 48
 3f0:	70 e0       	ldi	r23, 0x00	; 0
 3f2:	83 e4       	ldi	r24, 0x43	; 67
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	15 df       	rcall	.-470    	; 0x222 <writeLcdF>
 3f8:	6c e0       	ldi	r22, 0x0C	; 12
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	83 e4       	ldi	r24, 0x43	; 67
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	10 df       	rcall	.-480    	; 0x222 <writeLcdF>
 402:	d0 df       	rcall	.-96     	; 0x3a4 <lcdClear>
 404:	67 e0       	ldi	r22, 0x07	; 7
 406:	70 e0       	ldi	r23, 0x00	; 0
 408:	83 e4       	ldi	r24, 0x43	; 67
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	0a df       	rcall	.-492    	; 0x222 <writeLcdF>
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	fd ce       	rjmp	.-518    	; 0x20c <lcdLight>
 412:	08 95       	ret

00000414 <initBoard>:
 414:	ff 92       	push	r15
 416:	0f 93       	push	r16
 418:	1f 93       	push	r17
 41a:	cf 93       	push	r28
 41c:	df 93       	push	r29
 41e:	c8 2f       	mov	r28, r24
 420:	85 b7       	in	r24, 0x35	; 53
 422:	85 bf       	out	0x35, r24	; 53
 424:	12 b8       	out	0x02, r1	; 2
 426:	8f ef       	ldi	r24, 0xFF	; 255
 428:	81 b9       	out	0x01, r24	; 1
 42a:	15 b8       	out	0x05, r1	; 5
 42c:	84 b9       	out	0x04, r24	; 4
 42e:	88 b9       	out	0x08, r24	; 8
 430:	17 b8       	out	0x07, r1	; 7
 432:	8b b9       	out	0x0b, r24	; 11
 434:	1a b8       	out	0x0a, r1	; 10
 436:	8e b9       	out	0x0e, r24	; 14
 438:	1d b8       	out	0x0d, r1	; 13
 43a:	9e b1       	in	r25, 0x0e	; 14
 43c:	9b 7f       	andi	r25, 0xFB	; 251
 43e:	9e b9       	out	0x0e, r25	; 14
 440:	11 ba       	out	0x11, r1	; 17
 442:	10 ba       	out	0x10, r1	; 16
 444:	94 e0       	ldi	r25, 0x04	; 4
 446:	94 bb       	out	0x14, r25	; 20
 448:	93 b3       	in	r25, 0x13	; 19
 44a:	93 60       	ori	r25, 0x03	; 3
 44c:	93 bb       	out	0x13, r25	; 19
 44e:	93 b3       	in	r25, 0x13	; 19
 450:	90 62       	ori	r25, 0x20	; 32
 452:	93 bb       	out	0x13, r25	; 19
 454:	97 ec       	ldi	r25, 0xC7	; 199
 456:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 45a:	98 e3       	ldi	r25, 0x38	; 56
 45c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 460:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 464:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 468:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 46c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 470:	8c e3       	ldi	r24, 0x3C	; 60
 472:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 476:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 47a:	78 94       	sei
 47c:	5c de       	rcall	.-840    	; 0x136 <startSystemTimeMs>
 47e:	a9 df       	rcall	.-174    	; 0x3d2 <initLcd>
 480:	64 de       	rcall	.-824    	; 0x14a <initAdc>
 482:	9c de       	rcall	.-712    	; 0x1bc <initRgb>
 484:	cc 23       	and	r28, r28
 486:	09 f4       	brne	.+2      	; 0x48a <initBoard+0x76>
 488:	a3 c0       	rjmp	.+326    	; 0x5d0 <initBoard+0x1bc>
 48a:	8f ef       	ldi	r24, 0xFF	; 255
 48c:	bf de       	rcall	.-642    	; 0x20c <lcdLight>
 48e:	40 e0       	ldi	r20, 0x00	; 0
 490:	50 e0       	ldi	r21, 0x00	; 0
 492:	6f ef       	ldi	r22, 0xFF	; 255
 494:	73 e0       	ldi	r23, 0x03	; 3
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	79 de       	rcall	.-782    	; 0x18e <rgbWrite>
 49c:	8d e1       	ldi	r24, 0x1D	; 29
 49e:	92 e0       	ldi	r25, 0x02	; 2
 4a0:	9f 93       	push	r25
 4a2:	8f 93       	push	r24
 4a4:	1f 92       	push	r1
 4a6:	1f 92       	push	r1
 4a8:	43 df       	rcall	.-378    	; 0x330 <lcdWriteText>
 4aa:	82 e3       	ldi	r24, 0x32	; 50
 4ac:	92 e0       	ldi	r25, 0x02	; 2
 4ae:	9f 93       	push	r25
 4b0:	8f 93       	push	r24
 4b2:	1f 92       	push	r1
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	8f 93       	push	r24
 4b8:	3b df       	rcall	.-394    	; 0x330 <lcdWriteText>
 4ba:	88 e0       	ldi	r24, 0x08	; 8
 4bc:	92 e0       	ldi	r25, 0x02	; 2
 4be:	9f 93       	push	r25
 4c0:	8f 93       	push	r24
 4c2:	1f 92       	push	r1
 4c4:	82 e0       	ldi	r24, 0x02	; 2
 4c6:	8f 93       	push	r24
 4c8:	33 df       	rcall	.-410    	; 0x330 <lcdWriteText>
 4ca:	87 e4       	ldi	r24, 0x47	; 71
 4cc:	92 e0       	ldi	r25, 0x02	; 2
 4ce:	9f 93       	push	r25
 4d0:	8f 93       	push	r24
 4d2:	1f 92       	push	r1
 4d4:	83 e0       	ldi	r24, 0x03	; 3
 4d6:	8f 93       	push	r24
 4d8:	2b df       	rcall	.-426    	; 0x330 <lcdWriteText>
 4da:	8d b7       	in	r24, 0x3d	; 61
 4dc:	9e b7       	in	r25, 0x3e	; 62
 4de:	40 96       	adiw	r24, 0x10	; 16
 4e0:	0f b6       	in	r0, 0x3f	; 63
 4e2:	f8 94       	cli
 4e4:	9e bf       	out	0x3e, r25	; 62
 4e6:	0f be       	out	0x3f, r0	; 63
 4e8:	8d bf       	out	0x3d, r24	; 61
 4ea:	ff 24       	eor	r15, r15
 4ec:	f3 94       	inc	r15
 4ee:	c0 e0       	ldi	r28, 0x00	; 0
 4f0:	10 e0       	ldi	r17, 0x00	; 0
 4f2:	01 e0       	ldi	r16, 0x01	; 1
 4f4:	d0 e0       	ldi	r29, 0x00	; 0
 4f6:	00 23       	and	r16, r16
 4f8:	51 f0       	breq	.+20     	; 0x50e <initBoard+0xfa>
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	90 e8       	ldi	r25, 0x80	; 128
 4fe:	0d 2e       	mov	r0, r29
 500:	02 c0       	rjmp	.+4      	; 0x506 <initBoard+0xf2>
 502:	96 95       	lsr	r25
 504:	87 95       	ror	r24
 506:	0a 94       	dec	r0
 508:	e2 f7       	brpl	.-8      	; 0x502 <initBoard+0xee>
 50a:	0f de       	rcall	.-994    	; 0x12a <ledWriteAll>
 50c:	09 c0       	rjmp	.+18     	; 0x520 <initBoard+0x10c>
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0d 2e       	mov	r0, r29
 514:	02 c0       	rjmp	.+4      	; 0x51a <initBoard+0x106>
 516:	88 0f       	add	r24, r24
 518:	99 1f       	adc	r25, r25
 51a:	0a 94       	dec	r0
 51c:	e2 f7       	brpl	.-8      	; 0x516 <initBoard+0x102>
 51e:	05 de       	rcall	.-1014   	; 0x12a <ledWriteAll>
 520:	df 5f       	subi	r29, 0xFF	; 255
 522:	d1 31       	cpi	r29, 0x11	; 17
 524:	28 f0       	brcs	.+10     	; 0x530 <initBoard+0x11c>
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	01 11       	cpse	r16, r1
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	08 2f       	mov	r16, r24
 52e:	d0 e0       	ldi	r29, 0x00	; 0
 530:	ff 20       	and	r15, r15
 532:	11 f0       	breq	.+4      	; 0x538 <initBoard+0x124>
 534:	ce 5f       	subi	r28, 0xFE	; 254
 536:	01 c0       	rjmp	.+2      	; 0x53a <initBoard+0x126>
 538:	c2 50       	subi	r28, 0x02	; 2
 53a:	8c 2f       	mov	r24, r28
 53c:	67 de       	rcall	.-818    	; 0x20c <lcdLight>
 53e:	ce 3f       	cpi	r28, 0xFE	; 254
 540:	09 f4       	brne	.+2      	; 0x544 <initBoard+0x130>
 542:	f1 2c       	mov	r15, r1
 544:	c8 37       	cpi	r28, 0x78	; 120
 546:	11 f4       	brne	.+4      	; 0x54c <initBoard+0x138>
 548:	ff 24       	eor	r15, r15
 54a:	f3 94       	inc	r15
 54c:	11 11       	cpse	r17, r1
 54e:	17 c0       	rjmp	.+46     	; 0x57e <initBoard+0x16a>
 550:	ef dd       	rcall	.-1058   	; 0x130 <buttonReadAllPL>
 552:	83 7c       	andi	r24, 0xC3	; 195
 554:	a1 f0       	breq	.+40     	; 0x57e <initBoard+0x16a>
 556:	40 e0       	ldi	r20, 0x00	; 0
 558:	50 e0       	ldi	r21, 0x00	; 0
 55a:	66 e2       	ldi	r22, 0x26	; 38
 55c:	72 e0       	ldi	r23, 0x02	; 2
 55e:	8f ef       	ldi	r24, 0xFF	; 255
 560:	93 e0       	ldi	r25, 0x03	; 3
 562:	15 de       	rcall	.-982    	; 0x18e <rgbWrite>
 564:	8c e5       	ldi	r24, 0x5C	; 92
 566:	92 e0       	ldi	r25, 0x02	; 2
 568:	9f 93       	push	r25
 56a:	8f 93       	push	r24
 56c:	1f 92       	push	r1
 56e:	83 e0       	ldi	r24, 0x03	; 3
 570:	8f 93       	push	r24
 572:	de de       	rcall	.-580    	; 0x330 <lcdWriteText>
 574:	0f 90       	pop	r0
 576:	0f 90       	pop	r0
 578:	0f 90       	pop	r0
 57a:	0f 90       	pop	r0
 57c:	11 e0       	ldi	r17, 0x01	; 1
 57e:	11 23       	and	r17, r17
 580:	19 f0       	breq	.+6      	; 0x588 <initBoard+0x174>
 582:	d6 dd       	rcall	.-1108   	; 0x130 <buttonReadAllPL>
 584:	83 7c       	andi	r24, 0xC3	; 195
 586:	39 f0       	breq	.+14     	; 0x596 <initBoard+0x182>
 588:	8f ef       	ldi	r24, 0xFF	; 255
 58a:	9c e7       	ldi	r25, 0x7C	; 124
 58c:	01 97       	sbiw	r24, 0x01	; 1
 58e:	f1 f7       	brne	.-4      	; 0x58c <initBoard+0x178>
 590:	00 c0       	rjmp	.+0      	; 0x592 <initBoard+0x17e>
 592:	00 00       	nop
 594:	b0 cf       	rjmp	.-160    	; 0x4f6 <initBoard+0xe2>
 596:	06 df       	rcall	.-500    	; 0x3a4 <lcdClear>
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	38 de       	rcall	.-912    	; 0x20c <lcdLight>
 59c:	80 e0       	ldi	r24, 0x00	; 0
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	c4 dd       	rcall	.-1144   	; 0x12a <ledWriteAll>
 5a2:	40 e0       	ldi	r20, 0x00	; 0
 5a4:	50 e0       	ldi	r21, 0x00	; 0
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	70 e0       	ldi	r23, 0x00	; 0
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	ef dd       	rcall	.-1058   	; 0x18e <rgbWrite>
 5b0:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 5b4:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 5b8:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 5bc:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 5c0:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 5c4:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 5c8:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 5cc:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 5d0:	df 91       	pop	r29
 5d2:	cf 91       	pop	r28
 5d4:	1f 91       	pop	r17
 5d6:	0f 91       	pop	r16
 5d8:	ff 90       	pop	r15
 5da:	08 95       	ret

000005dc <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 5dc:	cf 93       	push	r28
 5de:	df 93       	push	r29
 5e0:	cd b7       	in	r28, 0x3d	; 61
 5e2:	de b7       	in	r29, 0x3e	; 62
 5e4:	28 97       	sbiw	r28, 0x08	; 8
 5e6:	0f b6       	in	r0, 0x3f	; 63
 5e8:	f8 94       	cli
 5ea:	de bf       	out	0x3e, r29	; 62
 5ec:	0f be       	out	0x3f, r0	; 63
 5ee:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 5f0:	88 e0       	ldi	r24, 0x08	; 8
 5f2:	e0 e0       	ldi	r30, 0x00	; 0
 5f4:	f2 e0       	ldi	r31, 0x02	; 2
 5f6:	de 01       	movw	r26, r28
 5f8:	11 96       	adiw	r26, 0x01	; 1
 5fa:	01 90       	ld	r0, Z+
 5fc:	0d 92       	st	X+, r0
 5fe:	8a 95       	dec	r24
 600:	e1 f7       	brne	.-8      	; 0x5fa <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 602:	e5 e0       	ldi	r30, 0x05	; 5
 604:	f1 e0       	ldi	r31, 0x01	; 1
 606:	80 81       	ld	r24, Z
 608:	8f 7b       	andi	r24, 0xBF	; 191
 60a:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 60c:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 610:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	8c 0f       	add	r24, r28
 61a:	9d 1f       	adc	r25, r29
 61c:	e8 0f       	add	r30, r24
 61e:	f9 1f       	adc	r31, r25
 620:	80 81       	ld	r24, Z
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 628:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	26 c0       	rjmp	.+76     	; 0x67c <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 630:	e7 e3       	ldi	r30, 0x37	; 55
 632:	f0 e0       	ldi	r31, 0x00	; 0
 634:	e8 1b       	sub	r30, r24
 636:	f1 09       	sbc	r31, r1
 638:	ee 0f       	add	r30, r30
 63a:	ff 1f       	adc	r31, r31
 63c:	ee 57       	subi	r30, 0x7E	; 126
 63e:	fd 4f       	sbci	r31, 0xFD	; 253
 640:	40 81       	ld	r20, Z
 642:	51 81       	ldd	r21, Z+1	; 0x01
 644:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 648:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 64c:	24 23       	and	r18, r20
 64e:	35 23       	and	r19, r21
 650:	23 2b       	or	r18, r19
 652:	31 f0       	breq	.+12     	; 0x660 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 654:	e5 e0       	ldi	r30, 0x05	; 5
 656:	f1 e0       	ldi	r31, 0x01	; 1
 658:	90 81       	ld	r25, Z
 65a:	90 62       	ori	r25, 0x20	; 32
 65c:	90 83       	st	Z, r25
 65e:	05 c0       	rjmp	.+10     	; 0x66a <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 660:	e5 e0       	ldi	r30, 0x05	; 5
 662:	f1 e0       	ldi	r31, 0x01	; 1
 664:	90 81       	ld	r25, Z
 666:	9f 7d       	andi	r25, 0xDF	; 223
 668:	90 83       	st	Z, r25
        }
        CLOCK_1;
 66a:	e5 e0       	ldi	r30, 0x05	; 5
 66c:	f1 e0       	ldi	r31, 0x01	; 1
 66e:	90 81       	ld	r25, Z
 670:	90 61       	ori	r25, 0x10	; 16
 672:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 674:	90 81       	ld	r25, Z
 676:	9f 7e       	andi	r25, 0xEF	; 239
 678:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 67a:	8f 5f       	subi	r24, 0xFF	; 255
 67c:	88 33       	cpi	r24, 0x38	; 56
 67e:	c0 f2       	brcs	.-80     	; 0x630 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 680:	e5 e0       	ldi	r30, 0x05	; 5
 682:	f1 e0       	ldi	r31, 0x01	; 1
 684:	80 81       	ld	r24, Z
 686:	87 7f       	andi	r24, 0xF7	; 247
 688:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 68a:	80 81       	ld	r24, Z
 68c:	88 7f       	andi	r24, 0xF8	; 248
 68e:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 690:	90 81       	ld	r25, Z
 692:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 696:	89 2b       	or	r24, r25
 698:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 69a:	80 81       	ld	r24, Z
 69c:	80 64       	ori	r24, 0x40	; 64
 69e:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 6a0:	80 81       	ld	r24, Z
 6a2:	88 60       	ori	r24, 0x08	; 8
 6a4:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 6a6:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 6aa:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 6ae:	87 30       	cpi	r24, 0x07	; 7
 6b0:	91 05       	cpc	r25, r1
 6b2:	30 f4       	brcc	.+12     	; 0x6c0 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 6b4:	01 96       	adiw	r24, 0x01	; 1
 6b6:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 6ba:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 6be:	07 c0       	rjmp	.+14     	; 0x6ce <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 6c0:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 6c4:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 6c8:	81 e0       	ldi	r24, 0x01	; 1
 6ca:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 6ce:	28 96       	adiw	r28, 0x08	; 8
 6d0:	0f b6       	in	r0, 0x3f	; 63
 6d2:	f8 94       	cli
 6d4:	de bf       	out	0x3e, r29	; 62
 6d6:	0f be       	out	0x3f, r0	; 63
 6d8:	cd bf       	out	0x3d, r28	; 61
 6da:	df 91       	pop	r29
 6dc:	cf 91       	pop	r28
 6de:	08 95       	ret

000006e0 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 6e0:	1f 92       	push	r1
 6e2:	0f 92       	push	r0
 6e4:	0f b6       	in	r0, 0x3f	; 63
 6e6:	0f 92       	push	r0
 6e8:	11 24       	eor	r1, r1
 6ea:	0b b6       	in	r0, 0x3b	; 59
 6ec:	0f 92       	push	r0
 6ee:	2f 93       	push	r18
 6f0:	3f 93       	push	r19
 6f2:	4f 93       	push	r20
 6f4:	5f 93       	push	r21
 6f6:	6f 93       	push	r22
 6f8:	7f 93       	push	r23
 6fa:	8f 93       	push	r24
 6fc:	9f 93       	push	r25
 6fe:	af 93       	push	r26
 700:	bf 93       	push	r27
 702:	ef 93       	push	r30
 704:	ff 93       	push	r31
    systemTimeMs += 1;
 706:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 70a:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 70e:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 712:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 716:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 71a:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 71e:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 722:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 726:	a1 e0       	ldi	r26, 0x01	; 1
 728:	27 d0       	rcall	.+78     	; 0x778 <__adddi3_s8>
 72a:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 72e:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 732:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 736:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 73a:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 73e:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 742:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 746:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 74a:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 74e:	81 11       	cpse	r24, r1
 750:	45 df       	rcall	.-374    	; 0x5dc <matrixWriteNextLine>
}
 752:	ff 91       	pop	r31
 754:	ef 91       	pop	r30
 756:	bf 91       	pop	r27
 758:	af 91       	pop	r26
 75a:	9f 91       	pop	r25
 75c:	8f 91       	pop	r24
 75e:	7f 91       	pop	r23
 760:	6f 91       	pop	r22
 762:	5f 91       	pop	r21
 764:	4f 91       	pop	r20
 766:	3f 91       	pop	r19
 768:	2f 91       	pop	r18
 76a:	0f 90       	pop	r0
 76c:	0b be       	out	0x3b, r0	; 59
 76e:	0f 90       	pop	r0
 770:	0f be       	out	0x3f, r0	; 63
 772:	0f 90       	pop	r0
 774:	1f 90       	pop	r1
 776:	18 95       	reti

00000778 <__adddi3_s8>:
 778:	00 24       	eor	r0, r0
 77a:	a7 fd       	sbrc	r26, 7
 77c:	00 94       	com	r0
 77e:	2a 0f       	add	r18, r26
 780:	30 1d       	adc	r19, r0
 782:	40 1d       	adc	r20, r0
 784:	50 1d       	adc	r21, r0
 786:	60 1d       	adc	r22, r0
 788:	70 1d       	adc	r23, r0
 78a:	80 1d       	adc	r24, r0
 78c:	90 1d       	adc	r25, r0
 78e:	08 95       	ret

00000790 <vsnprintf>:
 790:	0f 93       	push	r16
 792:	1f 93       	push	r17
 794:	cf 93       	push	r28
 796:	df 93       	push	r29
 798:	cd b7       	in	r28, 0x3d	; 61
 79a:	de b7       	in	r29, 0x3e	; 62
 79c:	2e 97       	sbiw	r28, 0x0e	; 14
 79e:	0f b6       	in	r0, 0x3f	; 63
 7a0:	f8 94       	cli
 7a2:	de bf       	out	0x3e, r29	; 62
 7a4:	0f be       	out	0x3f, r0	; 63
 7a6:	cd bf       	out	0x3d, r28	; 61
 7a8:	8c 01       	movw	r16, r24
 7aa:	fa 01       	movw	r30, r20
 7ac:	86 e0       	ldi	r24, 0x06	; 6
 7ae:	8c 83       	std	Y+4, r24	; 0x04
 7b0:	1a 83       	std	Y+2, r17	; 0x02
 7b2:	09 83       	std	Y+1, r16	; 0x01
 7b4:	77 ff       	sbrs	r23, 7
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vsnprintf+0x2c>
 7b8:	60 e0       	ldi	r22, 0x00	; 0
 7ba:	70 e8       	ldi	r23, 0x80	; 128
 7bc:	cb 01       	movw	r24, r22
 7be:	01 97       	sbiw	r24, 0x01	; 1
 7c0:	9e 83       	std	Y+6, r25	; 0x06
 7c2:	8d 83       	std	Y+5, r24	; 0x05
 7c4:	a9 01       	movw	r20, r18
 7c6:	bf 01       	movw	r22, r30
 7c8:	ce 01       	movw	r24, r28
 7ca:	01 96       	adiw	r24, 0x01	; 1
 7cc:	19 d0       	rcall	.+50     	; 0x800 <vfprintf>
 7ce:	4d 81       	ldd	r20, Y+5	; 0x05
 7d0:	5e 81       	ldd	r21, Y+6	; 0x06
 7d2:	57 fd       	sbrc	r21, 7
 7d4:	0a c0       	rjmp	.+20     	; 0x7ea <vsnprintf+0x5a>
 7d6:	2f 81       	ldd	r18, Y+7	; 0x07
 7d8:	38 85       	ldd	r19, Y+8	; 0x08
 7da:	42 17       	cp	r20, r18
 7dc:	53 07       	cpc	r21, r19
 7de:	0c f4       	brge	.+2      	; 0x7e2 <vsnprintf+0x52>
 7e0:	9a 01       	movw	r18, r20
 7e2:	f8 01       	movw	r30, r16
 7e4:	e2 0f       	add	r30, r18
 7e6:	f3 1f       	adc	r31, r19
 7e8:	10 82       	st	Z, r1
 7ea:	2e 96       	adiw	r28, 0x0e	; 14
 7ec:	0f b6       	in	r0, 0x3f	; 63
 7ee:	f8 94       	cli
 7f0:	de bf       	out	0x3e, r29	; 62
 7f2:	0f be       	out	0x3f, r0	; 63
 7f4:	cd bf       	out	0x3d, r28	; 61
 7f6:	df 91       	pop	r29
 7f8:	cf 91       	pop	r28
 7fa:	1f 91       	pop	r17
 7fc:	0f 91       	pop	r16
 7fe:	08 95       	ret

00000800 <vfprintf>:
 800:	2f 92       	push	r2
 802:	3f 92       	push	r3
 804:	4f 92       	push	r4
 806:	5f 92       	push	r5
 808:	6f 92       	push	r6
 80a:	7f 92       	push	r7
 80c:	8f 92       	push	r8
 80e:	9f 92       	push	r9
 810:	af 92       	push	r10
 812:	bf 92       	push	r11
 814:	cf 92       	push	r12
 816:	df 92       	push	r13
 818:	ef 92       	push	r14
 81a:	ff 92       	push	r15
 81c:	0f 93       	push	r16
 81e:	1f 93       	push	r17
 820:	cf 93       	push	r28
 822:	df 93       	push	r29
 824:	cd b7       	in	r28, 0x3d	; 61
 826:	de b7       	in	r29, 0x3e	; 62
 828:	2b 97       	sbiw	r28, 0x0b	; 11
 82a:	0f b6       	in	r0, 0x3f	; 63
 82c:	f8 94       	cli
 82e:	de bf       	out	0x3e, r29	; 62
 830:	0f be       	out	0x3f, r0	; 63
 832:	cd bf       	out	0x3d, r28	; 61
 834:	6c 01       	movw	r12, r24
 836:	7b 01       	movw	r14, r22
 838:	8a 01       	movw	r16, r20
 83a:	fc 01       	movw	r30, r24
 83c:	17 82       	std	Z+7, r1	; 0x07
 83e:	16 82       	std	Z+6, r1	; 0x06
 840:	83 81       	ldd	r24, Z+3	; 0x03
 842:	81 ff       	sbrs	r24, 1
 844:	bf c1       	rjmp	.+894    	; 0xbc4 <vfprintf+0x3c4>
 846:	ce 01       	movw	r24, r28
 848:	01 96       	adiw	r24, 0x01	; 1
 84a:	3c 01       	movw	r6, r24
 84c:	f6 01       	movw	r30, r12
 84e:	93 81       	ldd	r25, Z+3	; 0x03
 850:	f7 01       	movw	r30, r14
 852:	93 fd       	sbrc	r25, 3
 854:	85 91       	lpm	r24, Z+
 856:	93 ff       	sbrs	r25, 3
 858:	81 91       	ld	r24, Z+
 85a:	7f 01       	movw	r14, r30
 85c:	88 23       	and	r24, r24
 85e:	09 f4       	brne	.+2      	; 0x862 <vfprintf+0x62>
 860:	ad c1       	rjmp	.+858    	; 0xbbc <vfprintf+0x3bc>
 862:	85 32       	cpi	r24, 0x25	; 37
 864:	39 f4       	brne	.+14     	; 0x874 <vfprintf+0x74>
 866:	93 fd       	sbrc	r25, 3
 868:	85 91       	lpm	r24, Z+
 86a:	93 ff       	sbrs	r25, 3
 86c:	81 91       	ld	r24, Z+
 86e:	7f 01       	movw	r14, r30
 870:	85 32       	cpi	r24, 0x25	; 37
 872:	21 f4       	brne	.+8      	; 0x87c <vfprintf+0x7c>
 874:	b6 01       	movw	r22, r12
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	d6 d1       	rcall	.+940    	; 0xc26 <fputc>
 87a:	e8 cf       	rjmp	.-48     	; 0x84c <vfprintf+0x4c>
 87c:	91 2c       	mov	r9, r1
 87e:	21 2c       	mov	r2, r1
 880:	31 2c       	mov	r3, r1
 882:	ff e1       	ldi	r31, 0x1F	; 31
 884:	f3 15       	cp	r31, r3
 886:	d8 f0       	brcs	.+54     	; 0x8be <vfprintf+0xbe>
 888:	8b 32       	cpi	r24, 0x2B	; 43
 88a:	79 f0       	breq	.+30     	; 0x8aa <vfprintf+0xaa>
 88c:	38 f4       	brcc	.+14     	; 0x89c <vfprintf+0x9c>
 88e:	80 32       	cpi	r24, 0x20	; 32
 890:	79 f0       	breq	.+30     	; 0x8b0 <vfprintf+0xb0>
 892:	83 32       	cpi	r24, 0x23	; 35
 894:	a1 f4       	brne	.+40     	; 0x8be <vfprintf+0xbe>
 896:	23 2d       	mov	r18, r3
 898:	20 61       	ori	r18, 0x10	; 16
 89a:	1d c0       	rjmp	.+58     	; 0x8d6 <vfprintf+0xd6>
 89c:	8d 32       	cpi	r24, 0x2D	; 45
 89e:	61 f0       	breq	.+24     	; 0x8b8 <vfprintf+0xb8>
 8a0:	80 33       	cpi	r24, 0x30	; 48
 8a2:	69 f4       	brne	.+26     	; 0x8be <vfprintf+0xbe>
 8a4:	23 2d       	mov	r18, r3
 8a6:	21 60       	ori	r18, 0x01	; 1
 8a8:	16 c0       	rjmp	.+44     	; 0x8d6 <vfprintf+0xd6>
 8aa:	83 2d       	mov	r24, r3
 8ac:	82 60       	ori	r24, 0x02	; 2
 8ae:	38 2e       	mov	r3, r24
 8b0:	e3 2d       	mov	r30, r3
 8b2:	e4 60       	ori	r30, 0x04	; 4
 8b4:	3e 2e       	mov	r3, r30
 8b6:	2a c0       	rjmp	.+84     	; 0x90c <vfprintf+0x10c>
 8b8:	f3 2d       	mov	r31, r3
 8ba:	f8 60       	ori	r31, 0x08	; 8
 8bc:	1d c0       	rjmp	.+58     	; 0x8f8 <vfprintf+0xf8>
 8be:	37 fc       	sbrc	r3, 7
 8c0:	2d c0       	rjmp	.+90     	; 0x91c <vfprintf+0x11c>
 8c2:	20 ed       	ldi	r18, 0xD0	; 208
 8c4:	28 0f       	add	r18, r24
 8c6:	2a 30       	cpi	r18, 0x0A	; 10
 8c8:	40 f0       	brcs	.+16     	; 0x8da <vfprintf+0xda>
 8ca:	8e 32       	cpi	r24, 0x2E	; 46
 8cc:	b9 f4       	brne	.+46     	; 0x8fc <vfprintf+0xfc>
 8ce:	36 fc       	sbrc	r3, 6
 8d0:	75 c1       	rjmp	.+746    	; 0xbbc <vfprintf+0x3bc>
 8d2:	23 2d       	mov	r18, r3
 8d4:	20 64       	ori	r18, 0x40	; 64
 8d6:	32 2e       	mov	r3, r18
 8d8:	19 c0       	rjmp	.+50     	; 0x90c <vfprintf+0x10c>
 8da:	36 fe       	sbrs	r3, 6
 8dc:	06 c0       	rjmp	.+12     	; 0x8ea <vfprintf+0xea>
 8de:	8a e0       	ldi	r24, 0x0A	; 10
 8e0:	98 9e       	mul	r9, r24
 8e2:	20 0d       	add	r18, r0
 8e4:	11 24       	eor	r1, r1
 8e6:	92 2e       	mov	r9, r18
 8e8:	11 c0       	rjmp	.+34     	; 0x90c <vfprintf+0x10c>
 8ea:	ea e0       	ldi	r30, 0x0A	; 10
 8ec:	2e 9e       	mul	r2, r30
 8ee:	20 0d       	add	r18, r0
 8f0:	11 24       	eor	r1, r1
 8f2:	22 2e       	mov	r2, r18
 8f4:	f3 2d       	mov	r31, r3
 8f6:	f0 62       	ori	r31, 0x20	; 32
 8f8:	3f 2e       	mov	r3, r31
 8fa:	08 c0       	rjmp	.+16     	; 0x90c <vfprintf+0x10c>
 8fc:	8c 36       	cpi	r24, 0x6C	; 108
 8fe:	21 f4       	brne	.+8      	; 0x908 <vfprintf+0x108>
 900:	83 2d       	mov	r24, r3
 902:	80 68       	ori	r24, 0x80	; 128
 904:	38 2e       	mov	r3, r24
 906:	02 c0       	rjmp	.+4      	; 0x90c <vfprintf+0x10c>
 908:	88 36       	cpi	r24, 0x68	; 104
 90a:	41 f4       	brne	.+16     	; 0x91c <vfprintf+0x11c>
 90c:	f7 01       	movw	r30, r14
 90e:	93 fd       	sbrc	r25, 3
 910:	85 91       	lpm	r24, Z+
 912:	93 ff       	sbrs	r25, 3
 914:	81 91       	ld	r24, Z+
 916:	7f 01       	movw	r14, r30
 918:	81 11       	cpse	r24, r1
 91a:	b3 cf       	rjmp	.-154    	; 0x882 <vfprintf+0x82>
 91c:	98 2f       	mov	r25, r24
 91e:	9f 7d       	andi	r25, 0xDF	; 223
 920:	95 54       	subi	r25, 0x45	; 69
 922:	93 30       	cpi	r25, 0x03	; 3
 924:	28 f4       	brcc	.+10     	; 0x930 <vfprintf+0x130>
 926:	0c 5f       	subi	r16, 0xFC	; 252
 928:	1f 4f       	sbci	r17, 0xFF	; 255
 92a:	9f e3       	ldi	r25, 0x3F	; 63
 92c:	99 83       	std	Y+1, r25	; 0x01
 92e:	0d c0       	rjmp	.+26     	; 0x94a <vfprintf+0x14a>
 930:	83 36       	cpi	r24, 0x63	; 99
 932:	31 f0       	breq	.+12     	; 0x940 <vfprintf+0x140>
 934:	83 37       	cpi	r24, 0x73	; 115
 936:	71 f0       	breq	.+28     	; 0x954 <vfprintf+0x154>
 938:	83 35       	cpi	r24, 0x53	; 83
 93a:	09 f0       	breq	.+2      	; 0x93e <vfprintf+0x13e>
 93c:	55 c0       	rjmp	.+170    	; 0x9e8 <vfprintf+0x1e8>
 93e:	20 c0       	rjmp	.+64     	; 0x980 <vfprintf+0x180>
 940:	f8 01       	movw	r30, r16
 942:	80 81       	ld	r24, Z
 944:	89 83       	std	Y+1, r24	; 0x01
 946:	0e 5f       	subi	r16, 0xFE	; 254
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	88 24       	eor	r8, r8
 94c:	83 94       	inc	r8
 94e:	91 2c       	mov	r9, r1
 950:	53 01       	movw	r10, r6
 952:	12 c0       	rjmp	.+36     	; 0x978 <vfprintf+0x178>
 954:	28 01       	movw	r4, r16
 956:	f2 e0       	ldi	r31, 0x02	; 2
 958:	4f 0e       	add	r4, r31
 95a:	51 1c       	adc	r5, r1
 95c:	f8 01       	movw	r30, r16
 95e:	a0 80       	ld	r10, Z
 960:	b1 80       	ldd	r11, Z+1	; 0x01
 962:	36 fe       	sbrs	r3, 6
 964:	03 c0       	rjmp	.+6      	; 0x96c <vfprintf+0x16c>
 966:	69 2d       	mov	r22, r9
 968:	70 e0       	ldi	r23, 0x00	; 0
 96a:	02 c0       	rjmp	.+4      	; 0x970 <vfprintf+0x170>
 96c:	6f ef       	ldi	r22, 0xFF	; 255
 96e:	7f ef       	ldi	r23, 0xFF	; 255
 970:	c5 01       	movw	r24, r10
 972:	4e d1       	rcall	.+668    	; 0xc10 <strnlen>
 974:	4c 01       	movw	r8, r24
 976:	82 01       	movw	r16, r4
 978:	f3 2d       	mov	r31, r3
 97a:	ff 77       	andi	r31, 0x7F	; 127
 97c:	3f 2e       	mov	r3, r31
 97e:	15 c0       	rjmp	.+42     	; 0x9aa <vfprintf+0x1aa>
 980:	28 01       	movw	r4, r16
 982:	22 e0       	ldi	r18, 0x02	; 2
 984:	42 0e       	add	r4, r18
 986:	51 1c       	adc	r5, r1
 988:	f8 01       	movw	r30, r16
 98a:	a0 80       	ld	r10, Z
 98c:	b1 80       	ldd	r11, Z+1	; 0x01
 98e:	36 fe       	sbrs	r3, 6
 990:	03 c0       	rjmp	.+6      	; 0x998 <vfprintf+0x198>
 992:	69 2d       	mov	r22, r9
 994:	70 e0       	ldi	r23, 0x00	; 0
 996:	02 c0       	rjmp	.+4      	; 0x99c <vfprintf+0x19c>
 998:	6f ef       	ldi	r22, 0xFF	; 255
 99a:	7f ef       	ldi	r23, 0xFF	; 255
 99c:	c5 01       	movw	r24, r10
 99e:	2d d1       	rcall	.+602    	; 0xbfa <strnlen_P>
 9a0:	4c 01       	movw	r8, r24
 9a2:	f3 2d       	mov	r31, r3
 9a4:	f0 68       	ori	r31, 0x80	; 128
 9a6:	3f 2e       	mov	r3, r31
 9a8:	82 01       	movw	r16, r4
 9aa:	33 fc       	sbrc	r3, 3
 9ac:	19 c0       	rjmp	.+50     	; 0x9e0 <vfprintf+0x1e0>
 9ae:	82 2d       	mov	r24, r2
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	88 16       	cp	r8, r24
 9b4:	99 06       	cpc	r9, r25
 9b6:	a0 f4       	brcc	.+40     	; 0x9e0 <vfprintf+0x1e0>
 9b8:	b6 01       	movw	r22, r12
 9ba:	80 e2       	ldi	r24, 0x20	; 32
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	33 d1       	rcall	.+614    	; 0xc26 <fputc>
 9c0:	2a 94       	dec	r2
 9c2:	f5 cf       	rjmp	.-22     	; 0x9ae <vfprintf+0x1ae>
 9c4:	f5 01       	movw	r30, r10
 9c6:	37 fc       	sbrc	r3, 7
 9c8:	85 91       	lpm	r24, Z+
 9ca:	37 fe       	sbrs	r3, 7
 9cc:	81 91       	ld	r24, Z+
 9ce:	5f 01       	movw	r10, r30
 9d0:	b6 01       	movw	r22, r12
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	28 d1       	rcall	.+592    	; 0xc26 <fputc>
 9d6:	21 10       	cpse	r2, r1
 9d8:	2a 94       	dec	r2
 9da:	21 e0       	ldi	r18, 0x01	; 1
 9dc:	82 1a       	sub	r8, r18
 9de:	91 08       	sbc	r9, r1
 9e0:	81 14       	cp	r8, r1
 9e2:	91 04       	cpc	r9, r1
 9e4:	79 f7       	brne	.-34     	; 0x9c4 <vfprintf+0x1c4>
 9e6:	e1 c0       	rjmp	.+450    	; 0xbaa <vfprintf+0x3aa>
 9e8:	84 36       	cpi	r24, 0x64	; 100
 9ea:	11 f0       	breq	.+4      	; 0x9f0 <vfprintf+0x1f0>
 9ec:	89 36       	cpi	r24, 0x69	; 105
 9ee:	39 f5       	brne	.+78     	; 0xa3e <vfprintf+0x23e>
 9f0:	f8 01       	movw	r30, r16
 9f2:	37 fe       	sbrs	r3, 7
 9f4:	07 c0       	rjmp	.+14     	; 0xa04 <vfprintf+0x204>
 9f6:	60 81       	ld	r22, Z
 9f8:	71 81       	ldd	r23, Z+1	; 0x01
 9fa:	82 81       	ldd	r24, Z+2	; 0x02
 9fc:	93 81       	ldd	r25, Z+3	; 0x03
 9fe:	0c 5f       	subi	r16, 0xFC	; 252
 a00:	1f 4f       	sbci	r17, 0xFF	; 255
 a02:	08 c0       	rjmp	.+16     	; 0xa14 <vfprintf+0x214>
 a04:	60 81       	ld	r22, Z
 a06:	71 81       	ldd	r23, Z+1	; 0x01
 a08:	07 2e       	mov	r0, r23
 a0a:	00 0c       	add	r0, r0
 a0c:	88 0b       	sbc	r24, r24
 a0e:	99 0b       	sbc	r25, r25
 a10:	0e 5f       	subi	r16, 0xFE	; 254
 a12:	1f 4f       	sbci	r17, 0xFF	; 255
 a14:	f3 2d       	mov	r31, r3
 a16:	ff 76       	andi	r31, 0x6F	; 111
 a18:	3f 2e       	mov	r3, r31
 a1a:	97 ff       	sbrs	r25, 7
 a1c:	09 c0       	rjmp	.+18     	; 0xa30 <vfprintf+0x230>
 a1e:	90 95       	com	r25
 a20:	80 95       	com	r24
 a22:	70 95       	com	r23
 a24:	61 95       	neg	r22
 a26:	7f 4f       	sbci	r23, 0xFF	; 255
 a28:	8f 4f       	sbci	r24, 0xFF	; 255
 a2a:	9f 4f       	sbci	r25, 0xFF	; 255
 a2c:	f0 68       	ori	r31, 0x80	; 128
 a2e:	3f 2e       	mov	r3, r31
 a30:	2a e0       	ldi	r18, 0x0A	; 10
 a32:	30 e0       	ldi	r19, 0x00	; 0
 a34:	a3 01       	movw	r20, r6
 a36:	33 d1       	rcall	.+614    	; 0xc9e <__ultoa_invert>
 a38:	88 2e       	mov	r8, r24
 a3a:	86 18       	sub	r8, r6
 a3c:	44 c0       	rjmp	.+136    	; 0xac6 <vfprintf+0x2c6>
 a3e:	85 37       	cpi	r24, 0x75	; 117
 a40:	31 f4       	brne	.+12     	; 0xa4e <vfprintf+0x24e>
 a42:	23 2d       	mov	r18, r3
 a44:	2f 7e       	andi	r18, 0xEF	; 239
 a46:	b2 2e       	mov	r11, r18
 a48:	2a e0       	ldi	r18, 0x0A	; 10
 a4a:	30 e0       	ldi	r19, 0x00	; 0
 a4c:	25 c0       	rjmp	.+74     	; 0xa98 <vfprintf+0x298>
 a4e:	93 2d       	mov	r25, r3
 a50:	99 7f       	andi	r25, 0xF9	; 249
 a52:	b9 2e       	mov	r11, r25
 a54:	8f 36       	cpi	r24, 0x6F	; 111
 a56:	c1 f0       	breq	.+48     	; 0xa88 <vfprintf+0x288>
 a58:	18 f4       	brcc	.+6      	; 0xa60 <vfprintf+0x260>
 a5a:	88 35       	cpi	r24, 0x58	; 88
 a5c:	79 f0       	breq	.+30     	; 0xa7c <vfprintf+0x27c>
 a5e:	ae c0       	rjmp	.+348    	; 0xbbc <vfprintf+0x3bc>
 a60:	80 37       	cpi	r24, 0x70	; 112
 a62:	19 f0       	breq	.+6      	; 0xa6a <vfprintf+0x26a>
 a64:	88 37       	cpi	r24, 0x78	; 120
 a66:	21 f0       	breq	.+8      	; 0xa70 <vfprintf+0x270>
 a68:	a9 c0       	rjmp	.+338    	; 0xbbc <vfprintf+0x3bc>
 a6a:	e9 2f       	mov	r30, r25
 a6c:	e0 61       	ori	r30, 0x10	; 16
 a6e:	be 2e       	mov	r11, r30
 a70:	b4 fe       	sbrs	r11, 4
 a72:	0d c0       	rjmp	.+26     	; 0xa8e <vfprintf+0x28e>
 a74:	fb 2d       	mov	r31, r11
 a76:	f4 60       	ori	r31, 0x04	; 4
 a78:	bf 2e       	mov	r11, r31
 a7a:	09 c0       	rjmp	.+18     	; 0xa8e <vfprintf+0x28e>
 a7c:	34 fe       	sbrs	r3, 4
 a7e:	0a c0       	rjmp	.+20     	; 0xa94 <vfprintf+0x294>
 a80:	29 2f       	mov	r18, r25
 a82:	26 60       	ori	r18, 0x06	; 6
 a84:	b2 2e       	mov	r11, r18
 a86:	06 c0       	rjmp	.+12     	; 0xa94 <vfprintf+0x294>
 a88:	28 e0       	ldi	r18, 0x08	; 8
 a8a:	30 e0       	ldi	r19, 0x00	; 0
 a8c:	05 c0       	rjmp	.+10     	; 0xa98 <vfprintf+0x298>
 a8e:	20 e1       	ldi	r18, 0x10	; 16
 a90:	30 e0       	ldi	r19, 0x00	; 0
 a92:	02 c0       	rjmp	.+4      	; 0xa98 <vfprintf+0x298>
 a94:	20 e1       	ldi	r18, 0x10	; 16
 a96:	32 e0       	ldi	r19, 0x02	; 2
 a98:	f8 01       	movw	r30, r16
 a9a:	b7 fe       	sbrs	r11, 7
 a9c:	07 c0       	rjmp	.+14     	; 0xaac <vfprintf+0x2ac>
 a9e:	60 81       	ld	r22, Z
 aa0:	71 81       	ldd	r23, Z+1	; 0x01
 aa2:	82 81       	ldd	r24, Z+2	; 0x02
 aa4:	93 81       	ldd	r25, Z+3	; 0x03
 aa6:	0c 5f       	subi	r16, 0xFC	; 252
 aa8:	1f 4f       	sbci	r17, 0xFF	; 255
 aaa:	06 c0       	rjmp	.+12     	; 0xab8 <vfprintf+0x2b8>
 aac:	60 81       	ld	r22, Z
 aae:	71 81       	ldd	r23, Z+1	; 0x01
 ab0:	80 e0       	ldi	r24, 0x00	; 0
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 5f       	subi	r16, 0xFE	; 254
 ab6:	1f 4f       	sbci	r17, 0xFF	; 255
 ab8:	a3 01       	movw	r20, r6
 aba:	f1 d0       	rcall	.+482    	; 0xc9e <__ultoa_invert>
 abc:	88 2e       	mov	r8, r24
 abe:	86 18       	sub	r8, r6
 ac0:	fb 2d       	mov	r31, r11
 ac2:	ff 77       	andi	r31, 0x7F	; 127
 ac4:	3f 2e       	mov	r3, r31
 ac6:	36 fe       	sbrs	r3, 6
 ac8:	0d c0       	rjmp	.+26     	; 0xae4 <vfprintf+0x2e4>
 aca:	23 2d       	mov	r18, r3
 acc:	2e 7f       	andi	r18, 0xFE	; 254
 ace:	a2 2e       	mov	r10, r18
 ad0:	89 14       	cp	r8, r9
 ad2:	58 f4       	brcc	.+22     	; 0xaea <vfprintf+0x2ea>
 ad4:	34 fe       	sbrs	r3, 4
 ad6:	0b c0       	rjmp	.+22     	; 0xaee <vfprintf+0x2ee>
 ad8:	32 fc       	sbrc	r3, 2
 ada:	09 c0       	rjmp	.+18     	; 0xaee <vfprintf+0x2ee>
 adc:	83 2d       	mov	r24, r3
 ade:	8e 7e       	andi	r24, 0xEE	; 238
 ae0:	a8 2e       	mov	r10, r24
 ae2:	05 c0       	rjmp	.+10     	; 0xaee <vfprintf+0x2ee>
 ae4:	b8 2c       	mov	r11, r8
 ae6:	a3 2c       	mov	r10, r3
 ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <vfprintf+0x2f0>
 aea:	b8 2c       	mov	r11, r8
 aec:	01 c0       	rjmp	.+2      	; 0xaf0 <vfprintf+0x2f0>
 aee:	b9 2c       	mov	r11, r9
 af0:	a4 fe       	sbrs	r10, 4
 af2:	0f c0       	rjmp	.+30     	; 0xb12 <vfprintf+0x312>
 af4:	fe 01       	movw	r30, r28
 af6:	e8 0d       	add	r30, r8
 af8:	f1 1d       	adc	r31, r1
 afa:	80 81       	ld	r24, Z
 afc:	80 33       	cpi	r24, 0x30	; 48
 afe:	21 f4       	brne	.+8      	; 0xb08 <vfprintf+0x308>
 b00:	9a 2d       	mov	r25, r10
 b02:	99 7e       	andi	r25, 0xE9	; 233
 b04:	a9 2e       	mov	r10, r25
 b06:	09 c0       	rjmp	.+18     	; 0xb1a <vfprintf+0x31a>
 b08:	a2 fe       	sbrs	r10, 2
 b0a:	06 c0       	rjmp	.+12     	; 0xb18 <vfprintf+0x318>
 b0c:	b3 94       	inc	r11
 b0e:	b3 94       	inc	r11
 b10:	04 c0       	rjmp	.+8      	; 0xb1a <vfprintf+0x31a>
 b12:	8a 2d       	mov	r24, r10
 b14:	86 78       	andi	r24, 0x86	; 134
 b16:	09 f0       	breq	.+2      	; 0xb1a <vfprintf+0x31a>
 b18:	b3 94       	inc	r11
 b1a:	a3 fc       	sbrc	r10, 3
 b1c:	10 c0       	rjmp	.+32     	; 0xb3e <vfprintf+0x33e>
 b1e:	a0 fe       	sbrs	r10, 0
 b20:	06 c0       	rjmp	.+12     	; 0xb2e <vfprintf+0x32e>
 b22:	b2 14       	cp	r11, r2
 b24:	80 f4       	brcc	.+32     	; 0xb46 <vfprintf+0x346>
 b26:	28 0c       	add	r2, r8
 b28:	92 2c       	mov	r9, r2
 b2a:	9b 18       	sub	r9, r11
 b2c:	0d c0       	rjmp	.+26     	; 0xb48 <vfprintf+0x348>
 b2e:	b2 14       	cp	r11, r2
 b30:	58 f4       	brcc	.+22     	; 0xb48 <vfprintf+0x348>
 b32:	b6 01       	movw	r22, r12
 b34:	80 e2       	ldi	r24, 0x20	; 32
 b36:	90 e0       	ldi	r25, 0x00	; 0
 b38:	76 d0       	rcall	.+236    	; 0xc26 <fputc>
 b3a:	b3 94       	inc	r11
 b3c:	f8 cf       	rjmp	.-16     	; 0xb2e <vfprintf+0x32e>
 b3e:	b2 14       	cp	r11, r2
 b40:	18 f4       	brcc	.+6      	; 0xb48 <vfprintf+0x348>
 b42:	2b 18       	sub	r2, r11
 b44:	02 c0       	rjmp	.+4      	; 0xb4a <vfprintf+0x34a>
 b46:	98 2c       	mov	r9, r8
 b48:	21 2c       	mov	r2, r1
 b4a:	a4 fe       	sbrs	r10, 4
 b4c:	0f c0       	rjmp	.+30     	; 0xb6c <vfprintf+0x36c>
 b4e:	b6 01       	movw	r22, r12
 b50:	80 e3       	ldi	r24, 0x30	; 48
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	68 d0       	rcall	.+208    	; 0xc26 <fputc>
 b56:	a2 fe       	sbrs	r10, 2
 b58:	16 c0       	rjmp	.+44     	; 0xb86 <vfprintf+0x386>
 b5a:	a1 fc       	sbrc	r10, 1
 b5c:	03 c0       	rjmp	.+6      	; 0xb64 <vfprintf+0x364>
 b5e:	88 e7       	ldi	r24, 0x78	; 120
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	02 c0       	rjmp	.+4      	; 0xb68 <vfprintf+0x368>
 b64:	88 e5       	ldi	r24, 0x58	; 88
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	b6 01       	movw	r22, r12
 b6a:	0c c0       	rjmp	.+24     	; 0xb84 <vfprintf+0x384>
 b6c:	8a 2d       	mov	r24, r10
 b6e:	86 78       	andi	r24, 0x86	; 134
 b70:	51 f0       	breq	.+20     	; 0xb86 <vfprintf+0x386>
 b72:	a1 fe       	sbrs	r10, 1
 b74:	02 c0       	rjmp	.+4      	; 0xb7a <vfprintf+0x37a>
 b76:	8b e2       	ldi	r24, 0x2B	; 43
 b78:	01 c0       	rjmp	.+2      	; 0xb7c <vfprintf+0x37c>
 b7a:	80 e2       	ldi	r24, 0x20	; 32
 b7c:	a7 fc       	sbrc	r10, 7
 b7e:	8d e2       	ldi	r24, 0x2D	; 45
 b80:	b6 01       	movw	r22, r12
 b82:	90 e0       	ldi	r25, 0x00	; 0
 b84:	50 d0       	rcall	.+160    	; 0xc26 <fputc>
 b86:	89 14       	cp	r8, r9
 b88:	30 f4       	brcc	.+12     	; 0xb96 <vfprintf+0x396>
 b8a:	b6 01       	movw	r22, r12
 b8c:	80 e3       	ldi	r24, 0x30	; 48
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	4a d0       	rcall	.+148    	; 0xc26 <fputc>
 b92:	9a 94       	dec	r9
 b94:	f8 cf       	rjmp	.-16     	; 0xb86 <vfprintf+0x386>
 b96:	8a 94       	dec	r8
 b98:	f3 01       	movw	r30, r6
 b9a:	e8 0d       	add	r30, r8
 b9c:	f1 1d       	adc	r31, r1
 b9e:	80 81       	ld	r24, Z
 ba0:	b6 01       	movw	r22, r12
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	40 d0       	rcall	.+128    	; 0xc26 <fputc>
 ba6:	81 10       	cpse	r8, r1
 ba8:	f6 cf       	rjmp	.-20     	; 0xb96 <vfprintf+0x396>
 baa:	22 20       	and	r2, r2
 bac:	09 f4       	brne	.+2      	; 0xbb0 <vfprintf+0x3b0>
 bae:	4e ce       	rjmp	.-868    	; 0x84c <vfprintf+0x4c>
 bb0:	b6 01       	movw	r22, r12
 bb2:	80 e2       	ldi	r24, 0x20	; 32
 bb4:	90 e0       	ldi	r25, 0x00	; 0
 bb6:	37 d0       	rcall	.+110    	; 0xc26 <fputc>
 bb8:	2a 94       	dec	r2
 bba:	f7 cf       	rjmp	.-18     	; 0xbaa <vfprintf+0x3aa>
 bbc:	f6 01       	movw	r30, r12
 bbe:	86 81       	ldd	r24, Z+6	; 0x06
 bc0:	97 81       	ldd	r25, Z+7	; 0x07
 bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <vfprintf+0x3c8>
 bc4:	8f ef       	ldi	r24, 0xFF	; 255
 bc6:	9f ef       	ldi	r25, 0xFF	; 255
 bc8:	2b 96       	adiw	r28, 0x0b	; 11
 bca:	0f b6       	in	r0, 0x3f	; 63
 bcc:	f8 94       	cli
 bce:	de bf       	out	0x3e, r29	; 62
 bd0:	0f be       	out	0x3f, r0	; 63
 bd2:	cd bf       	out	0x3d, r28	; 61
 bd4:	df 91       	pop	r29
 bd6:	cf 91       	pop	r28
 bd8:	1f 91       	pop	r17
 bda:	0f 91       	pop	r16
 bdc:	ff 90       	pop	r15
 bde:	ef 90       	pop	r14
 be0:	df 90       	pop	r13
 be2:	cf 90       	pop	r12
 be4:	bf 90       	pop	r11
 be6:	af 90       	pop	r10
 be8:	9f 90       	pop	r9
 bea:	8f 90       	pop	r8
 bec:	7f 90       	pop	r7
 bee:	6f 90       	pop	r6
 bf0:	5f 90       	pop	r5
 bf2:	4f 90       	pop	r4
 bf4:	3f 90       	pop	r3
 bf6:	2f 90       	pop	r2
 bf8:	08 95       	ret

00000bfa <strnlen_P>:
 bfa:	fc 01       	movw	r30, r24
 bfc:	05 90       	lpm	r0, Z+
 bfe:	61 50       	subi	r22, 0x01	; 1
 c00:	70 40       	sbci	r23, 0x00	; 0
 c02:	01 10       	cpse	r0, r1
 c04:	d8 f7       	brcc	.-10     	; 0xbfc <strnlen_P+0x2>
 c06:	80 95       	com	r24
 c08:	90 95       	com	r25
 c0a:	8e 0f       	add	r24, r30
 c0c:	9f 1f       	adc	r25, r31
 c0e:	08 95       	ret

00000c10 <strnlen>:
 c10:	fc 01       	movw	r30, r24
 c12:	61 50       	subi	r22, 0x01	; 1
 c14:	70 40       	sbci	r23, 0x00	; 0
 c16:	01 90       	ld	r0, Z+
 c18:	01 10       	cpse	r0, r1
 c1a:	d8 f7       	brcc	.-10     	; 0xc12 <strnlen+0x2>
 c1c:	80 95       	com	r24
 c1e:	90 95       	com	r25
 c20:	8e 0f       	add	r24, r30
 c22:	9f 1f       	adc	r25, r31
 c24:	08 95       	ret

00000c26 <fputc>:
 c26:	0f 93       	push	r16
 c28:	1f 93       	push	r17
 c2a:	cf 93       	push	r28
 c2c:	df 93       	push	r29
 c2e:	fb 01       	movw	r30, r22
 c30:	23 81       	ldd	r18, Z+3	; 0x03
 c32:	21 fd       	sbrc	r18, 1
 c34:	03 c0       	rjmp	.+6      	; 0xc3c <fputc+0x16>
 c36:	8f ef       	ldi	r24, 0xFF	; 255
 c38:	9f ef       	ldi	r25, 0xFF	; 255
 c3a:	2c c0       	rjmp	.+88     	; 0xc94 <fputc+0x6e>
 c3c:	22 ff       	sbrs	r18, 2
 c3e:	16 c0       	rjmp	.+44     	; 0xc6c <fputc+0x46>
 c40:	46 81       	ldd	r20, Z+6	; 0x06
 c42:	57 81       	ldd	r21, Z+7	; 0x07
 c44:	24 81       	ldd	r18, Z+4	; 0x04
 c46:	35 81       	ldd	r19, Z+5	; 0x05
 c48:	42 17       	cp	r20, r18
 c4a:	53 07       	cpc	r21, r19
 c4c:	44 f4       	brge	.+16     	; 0xc5e <fputc+0x38>
 c4e:	a0 81       	ld	r26, Z
 c50:	b1 81       	ldd	r27, Z+1	; 0x01
 c52:	9d 01       	movw	r18, r26
 c54:	2f 5f       	subi	r18, 0xFF	; 255
 c56:	3f 4f       	sbci	r19, 0xFF	; 255
 c58:	31 83       	std	Z+1, r19	; 0x01
 c5a:	20 83       	st	Z, r18
 c5c:	8c 93       	st	X, r24
 c5e:	26 81       	ldd	r18, Z+6	; 0x06
 c60:	37 81       	ldd	r19, Z+7	; 0x07
 c62:	2f 5f       	subi	r18, 0xFF	; 255
 c64:	3f 4f       	sbci	r19, 0xFF	; 255
 c66:	37 83       	std	Z+7, r19	; 0x07
 c68:	26 83       	std	Z+6, r18	; 0x06
 c6a:	14 c0       	rjmp	.+40     	; 0xc94 <fputc+0x6e>
 c6c:	8b 01       	movw	r16, r22
 c6e:	ec 01       	movw	r28, r24
 c70:	fb 01       	movw	r30, r22
 c72:	00 84       	ldd	r0, Z+8	; 0x08
 c74:	f1 85       	ldd	r31, Z+9	; 0x09
 c76:	e0 2d       	mov	r30, r0
 c78:	19 95       	eicall
 c7a:	89 2b       	or	r24, r25
 c7c:	e1 f6       	brne	.-72     	; 0xc36 <fputc+0x10>
 c7e:	d8 01       	movw	r26, r16
 c80:	16 96       	adiw	r26, 0x06	; 6
 c82:	8d 91       	ld	r24, X+
 c84:	9c 91       	ld	r25, X
 c86:	17 97       	sbiw	r26, 0x07	; 7
 c88:	01 96       	adiw	r24, 0x01	; 1
 c8a:	17 96       	adiw	r26, 0x07	; 7
 c8c:	9c 93       	st	X, r25
 c8e:	8e 93       	st	-X, r24
 c90:	16 97       	sbiw	r26, 0x06	; 6
 c92:	ce 01       	movw	r24, r28
 c94:	df 91       	pop	r29
 c96:	cf 91       	pop	r28
 c98:	1f 91       	pop	r17
 c9a:	0f 91       	pop	r16
 c9c:	08 95       	ret

00000c9e <__ultoa_invert>:
 c9e:	fa 01       	movw	r30, r20
 ca0:	aa 27       	eor	r26, r26
 ca2:	28 30       	cpi	r18, 0x08	; 8
 ca4:	51 f1       	breq	.+84     	; 0xcfa <__ultoa_invert+0x5c>
 ca6:	20 31       	cpi	r18, 0x10	; 16
 ca8:	81 f1       	breq	.+96     	; 0xd0a <__ultoa_invert+0x6c>
 caa:	e8 94       	clt
 cac:	6f 93       	push	r22
 cae:	6e 7f       	andi	r22, 0xFE	; 254
 cb0:	6e 5f       	subi	r22, 0xFE	; 254
 cb2:	7f 4f       	sbci	r23, 0xFF	; 255
 cb4:	8f 4f       	sbci	r24, 0xFF	; 255
 cb6:	9f 4f       	sbci	r25, 0xFF	; 255
 cb8:	af 4f       	sbci	r26, 0xFF	; 255
 cba:	b1 e0       	ldi	r27, 0x01	; 1
 cbc:	3e d0       	rcall	.+124    	; 0xd3a <__ultoa_invert+0x9c>
 cbe:	b4 e0       	ldi	r27, 0x04	; 4
 cc0:	3c d0       	rcall	.+120    	; 0xd3a <__ultoa_invert+0x9c>
 cc2:	67 0f       	add	r22, r23
 cc4:	78 1f       	adc	r23, r24
 cc6:	89 1f       	adc	r24, r25
 cc8:	9a 1f       	adc	r25, r26
 cca:	a1 1d       	adc	r26, r1
 ccc:	68 0f       	add	r22, r24
 cce:	79 1f       	adc	r23, r25
 cd0:	8a 1f       	adc	r24, r26
 cd2:	91 1d       	adc	r25, r1
 cd4:	a1 1d       	adc	r26, r1
 cd6:	6a 0f       	add	r22, r26
 cd8:	71 1d       	adc	r23, r1
 cda:	81 1d       	adc	r24, r1
 cdc:	91 1d       	adc	r25, r1
 cde:	a1 1d       	adc	r26, r1
 ce0:	20 d0       	rcall	.+64     	; 0xd22 <__ultoa_invert+0x84>
 ce2:	09 f4       	brne	.+2      	; 0xce6 <__ultoa_invert+0x48>
 ce4:	68 94       	set
 ce6:	3f 91       	pop	r19
 ce8:	2a e0       	ldi	r18, 0x0A	; 10
 cea:	26 9f       	mul	r18, r22
 cec:	11 24       	eor	r1, r1
 cee:	30 19       	sub	r19, r0
 cf0:	30 5d       	subi	r19, 0xD0	; 208
 cf2:	31 93       	st	Z+, r19
 cf4:	de f6       	brtc	.-74     	; 0xcac <__ultoa_invert+0xe>
 cf6:	cf 01       	movw	r24, r30
 cf8:	08 95       	ret
 cfa:	46 2f       	mov	r20, r22
 cfc:	47 70       	andi	r20, 0x07	; 7
 cfe:	40 5d       	subi	r20, 0xD0	; 208
 d00:	41 93       	st	Z+, r20
 d02:	b3 e0       	ldi	r27, 0x03	; 3
 d04:	0f d0       	rcall	.+30     	; 0xd24 <__ultoa_invert+0x86>
 d06:	c9 f7       	brne	.-14     	; 0xcfa <__ultoa_invert+0x5c>
 d08:	f6 cf       	rjmp	.-20     	; 0xcf6 <__ultoa_invert+0x58>
 d0a:	46 2f       	mov	r20, r22
 d0c:	4f 70       	andi	r20, 0x0F	; 15
 d0e:	40 5d       	subi	r20, 0xD0	; 208
 d10:	4a 33       	cpi	r20, 0x3A	; 58
 d12:	18 f0       	brcs	.+6      	; 0xd1a <__ultoa_invert+0x7c>
 d14:	49 5d       	subi	r20, 0xD9	; 217
 d16:	31 fd       	sbrc	r19, 1
 d18:	40 52       	subi	r20, 0x20	; 32
 d1a:	41 93       	st	Z+, r20
 d1c:	02 d0       	rcall	.+4      	; 0xd22 <__ultoa_invert+0x84>
 d1e:	a9 f7       	brne	.-22     	; 0xd0a <__ultoa_invert+0x6c>
 d20:	ea cf       	rjmp	.-44     	; 0xcf6 <__ultoa_invert+0x58>
 d22:	b4 e0       	ldi	r27, 0x04	; 4
 d24:	a6 95       	lsr	r26
 d26:	97 95       	ror	r25
 d28:	87 95       	ror	r24
 d2a:	77 95       	ror	r23
 d2c:	67 95       	ror	r22
 d2e:	ba 95       	dec	r27
 d30:	c9 f7       	brne	.-14     	; 0xd24 <__ultoa_invert+0x86>
 d32:	00 97       	sbiw	r24, 0x00	; 0
 d34:	61 05       	cpc	r22, r1
 d36:	71 05       	cpc	r23, r1
 d38:	08 95       	ret
 d3a:	9b 01       	movw	r18, r22
 d3c:	ac 01       	movw	r20, r24
 d3e:	0a 2e       	mov	r0, r26
 d40:	06 94       	lsr	r0
 d42:	57 95       	ror	r21
 d44:	47 95       	ror	r20
 d46:	37 95       	ror	r19
 d48:	27 95       	ror	r18
 d4a:	ba 95       	dec	r27
 d4c:	c9 f7       	brne	.-14     	; 0xd40 <__ultoa_invert+0xa2>
 d4e:	62 0f       	add	r22, r18
 d50:	73 1f       	adc	r23, r19
 d52:	84 1f       	adc	r24, r20
 d54:	95 1f       	adc	r25, r21
 d56:	a0 1d       	adc	r26, r0
 d58:	08 95       	ret

00000d5a <_exit>:
 d5a:	f8 94       	cli

00000d5c <__stop_program>:
 d5c:	ff cf       	rjmp	.-2      	; 0xd5c <__stop_program>
