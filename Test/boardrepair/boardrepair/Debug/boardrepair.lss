
boardrepair.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000dfe  00000e92  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dfe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000f06  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f06  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000259a  00000000  00000000  00001194  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f8a  00000000  00000000  0000372e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000161c  00000000  00000000  000046b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  00005cd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cee  00000000  00000000  00006358  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001bb5  00000000  00000000  00007046  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008bfb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	91 c3       	rjmp	.+1826   	; 0x780 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee ef       	ldi	r30, 0xFE	; 254
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	6c c6       	rjmp	.+3288   	; 0xdfa <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    uint16_t vablu=600;
    uint16_t vagre=600;
    uint8_t flagred=0;
    uint8_t flagblu=0;
    uint8_t flaggre=1;
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	c6 d1       	rcall	.+908    	; 0x4b4 <initBoard>
    uint16_t vared=1;
    uint16_t vablu=600;
    uint16_t vagre=600;
    uint8_t flagred=0;
    uint8_t flagblu=0;
    uint8_t flaggre=1;
 128:	bb 24       	eor	r11, r11
 12a:	b3 94       	inc	r11
{
    uint16_t vared=1;
    uint16_t vablu=600;
    uint16_t vagre=600;
    uint8_t flagred=0;
    uint8_t flagblu=0;
 12c:	c1 2c       	mov	r12, r1
int main(void)
{
    uint16_t vared=1;
    uint16_t vablu=600;
    uint16_t vagre=600;
    uint8_t flagred=0;
 12e:	d1 2c       	mov	r13, r1

int main(void)
{
    uint16_t vared=1;
    uint16_t vablu=600;
    uint16_t vagre=600;
 130:	0f 2e       	mov	r0, r31
 132:	f8 e5       	ldi	r31, 0x58	; 88
 134:	ef 2e       	mov	r14, r31
 136:	f2 e0       	ldi	r31, 0x02	; 2
 138:	ff 2e       	mov	r15, r31
 13a:	f0 2d       	mov	r31, r0


int main(void)
{
    uint16_t vared=1;
    uint16_t vablu=600;
 13c:	08 e5       	ldi	r16, 0x58	; 88
 13e:	12 e0       	ldi	r17, 0x02	; 2
#include "ucBoardDriver.h"


int main(void)
{
    uint16_t vared=1;
 140:	c1 e0       	ldi	r28, 0x01	; 1
 142:	d0 e0       	ldi	r29, 0x00	; 0
    uint8_t flagblu=0;
    uint8_t flaggre=1;
    initBoard(1);
    while (1) 
    {
        if (!vared||vared==900)
 144:	20 97       	sbiw	r28, 0x00	; 0
 146:	21 f0       	breq	.+8      	; 0x150 <main+0x2c>
 148:	c4 38       	cpi	r28, 0x84	; 132
 14a:	83 e0       	ldi	r24, 0x03	; 3
 14c:	d8 07       	cpc	r29, r24
 14e:	21 f4       	brne	.+8      	; 0x158 <main+0x34>
        {
            flagred=!flagred;
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	d1 10       	cpse	r13, r1
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	d8 2e       	mov	r13, r24
        }
        if (!vablu||vablu==900)
 158:	01 15       	cp	r16, r1
 15a:	11 05       	cpc	r17, r1
 15c:	21 f0       	breq	.+8      	; 0x166 <main+0x42>
 15e:	04 38       	cpi	r16, 0x84	; 132
 160:	93 e0       	ldi	r25, 0x03	; 3
 162:	19 07       	cpc	r17, r25
 164:	21 f4       	brne	.+8      	; 0x16e <main+0x4a>
        {
            flagblu=!flagblu;
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	c1 10       	cpse	r12, r1
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	c8 2e       	mov	r12, r24
        }
        if (!vagre||vagre==900)
 16e:	e1 14       	cp	r14, r1
 170:	f1 04       	cpc	r15, r1
 172:	29 f0       	breq	.+10     	; 0x17e <main+0x5a>
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	e8 16       	cp	r14, r24
 178:	83 e0       	ldi	r24, 0x03	; 3
 17a:	f8 06       	cpc	r15, r24
 17c:	21 f4       	brne	.+8      	; 0x186 <main+0x62>
        {
            flaggre=!flaggre;
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	b1 10       	cpse	r11, r1
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	b8 2e       	mov	r11, r24
        }
        
        if (flagred)
 186:	dd 20       	and	r13, r13
 188:	11 f0       	breq	.+4      	; 0x18e <main+0x6a>
        {
            vared=vared-1;
 18a:	21 97       	sbiw	r28, 0x01	; 1
 18c:	01 c0       	rjmp	.+2      	; 0x190 <main+0x6c>
        } 
        else
        {
            vared=vared+1;
 18e:	21 96       	adiw	r28, 0x01	; 1
        }
        if (flagblu)
 190:	cc 20       	and	r12, r12
 192:	19 f0       	breq	.+6      	; 0x19a <main+0x76>
        {
            vablu=vablu-1;
 194:	01 50       	subi	r16, 0x01	; 1
 196:	11 09       	sbc	r17, r1
 198:	02 c0       	rjmp	.+4      	; 0x19e <main+0x7a>
        }
        else
        {
            vablu=vablu+1;
 19a:	0f 5f       	subi	r16, 0xFF	; 255
 19c:	1f 4f       	sbci	r17, 0xFF	; 255
        }
        if (flaggre)
 19e:	bb 20       	and	r11, r11
 1a0:	21 f0       	breq	.+8      	; 0x1aa <main+0x86>
        {
            vagre=vagre-1;
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	e9 1a       	sub	r14, r25
 1a6:	f1 08       	sbc	r15, r1
 1a8:	03 c0       	rjmp	.+6      	; 0x1b0 <main+0x8c>
        }
        else
        {
            vagre=vagre+1;
 1aa:	8f ef       	ldi	r24, 0xFF	; 255
 1ac:	e8 1a       	sub	r14, r24
 1ae:	f8 0a       	sbc	r15, r24
        }
        

        rgbWrite(vared,0,0);
 1b0:	40 e0       	ldi	r20, 0x00	; 0
 1b2:	50 e0       	ldi	r21, 0x00	; 0
 1b4:	60 e0       	ldi	r22, 0x00	; 0
 1b6:	70 e0       	ldi	r23, 0x00	; 0
 1b8:	ce 01       	movw	r24, r28
 1ba:	39 d0       	rcall	.+114    	; 0x22e <rgbWrite>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1bc:	8f ed       	ldi	r24, 0xDF	; 223
 1be:	9e e2       	ldi	r25, 0x2E	; 46
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <main+0x9c>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0xa2>
 1c6:	00 00       	nop
 1c8:	bd cf       	rjmp	.-134    	; 0x144 <main+0x20>

000001ca <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1ca:	82 b9       	out	0x02, r24	; 2
 1cc:	95 b9       	out	0x05, r25	; 5
 1ce:	08 95       	ret

000001d0 <buttonReadAllPL>:
 1d0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 1d4:	08 95       	ret

000001d6 <startSystemTimeMs>:
 1d6:	83 e0       	ldi	r24, 0x03	; 3
 1d8:	84 bd       	out	0x24, r24	; 36
 1da:	8b e0       	ldi	r24, 0x0B	; 11
 1dc:	85 bd       	out	0x25, r24	; 37
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 1e4:	89 ef       	ldi	r24, 0xF9	; 249
 1e6:	87 bd       	out	0x27, r24	; 39
 1e8:	08 95       	ret

000001ea <initAdc>:
 1ea:	11 ba       	out	0x11, r1	; 17
 1ec:	10 ba       	out	0x10, r1	; 16
 1ee:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 1f2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 1f6:	80 e4       	ldi	r24, 0x40	; 64
 1f8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 1fc:	8f e0       	ldi	r24, 0x0F	; 15
 1fe:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 208:	ea e7       	ldi	r30, 0x7A	; 122
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	87 ea       	ldi	r24, 0xA7	; 167
 20e:	80 83       	st	Z, r24
 210:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 214:	80 81       	ld	r24, Z
 216:	80 64       	ori	r24, 0x40	; 64
 218:	80 83       	st	Z, r24
 21a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 21e:	84 ff       	sbrs	r24, 4
 220:	fc cf       	rjmp	.-8      	; 0x21a <initAdc+0x30>
 222:	ea e7       	ldi	r30, 0x7A	; 122
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	8f 7e       	andi	r24, 0xEF	; 239
 22a:	80 83       	st	Z, r24
 22c:	08 95       	ret

0000022e <rgbWrite>:
 22e:	2f ef       	ldi	r18, 0xFF	; 255
 230:	33 e0       	ldi	r19, 0x03	; 3
 232:	f9 01       	movw	r30, r18
 234:	e8 1b       	sub	r30, r24
 236:	f9 0b       	sbc	r31, r25
 238:	c9 01       	movw	r24, r18
 23a:	86 1b       	sub	r24, r22
 23c:	97 0b       	sbc	r25, r23
 23e:	24 1b       	sub	r18, r20
 240:	35 0b       	sbc	r19, r21
 242:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 246:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 24a:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 24e:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 252:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 256:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 25a:	08 95       	ret

0000025c <initRgb>:
 25c:	8e ef       	ldi	r24, 0xFE	; 254
 25e:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 262:	8b e1       	ldi	r24, 0x1B	; 27
 264:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 268:	83 e0       	ldi	r24, 0x03	; 3
 26a:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 26e:	8f ef       	ldi	r24, 0xFF	; 255
 270:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	50 e0       	ldi	r21, 0x00	; 0
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	d6 cf       	rjmp	.-84     	; 0x22e <rgbWrite>
 282:	08 95       	ret

00000284 <lcdSid>:
 284:	88 23       	and	r24, r24
 286:	21 f0       	breq	.+8      	; 0x290 <lcdSid+0xc>
 288:	84 b3       	in	r24, 0x14	; 20
 28a:	81 60       	ori	r24, 0x01	; 1
 28c:	84 bb       	out	0x14, r24	; 20
 28e:	08 95       	ret
 290:	84 b3       	in	r24, 0x14	; 20
 292:	8e 7f       	andi	r24, 0xFE	; 254
 294:	84 bb       	out	0x14, r24	; 20
 296:	08 95       	ret

00000298 <lcdSclk>:
 298:	88 23       	and	r24, r24
 29a:	21 f0       	breq	.+8      	; 0x2a4 <lcdSclk+0xc>
 29c:	84 b3       	in	r24, 0x14	; 20
 29e:	82 60       	ori	r24, 0x02	; 2
 2a0:	84 bb       	out	0x14, r24	; 20
 2a2:	08 95       	ret
 2a4:	84 b3       	in	r24, 0x14	; 20
 2a6:	8d 7f       	andi	r24, 0xFD	; 253
 2a8:	84 bb       	out	0x14, r24	; 20
 2aa:	08 95       	ret

000002ac <lcdLight>:
 2ac:	81 11       	cpse	r24, r1
 2ae:	04 c0       	rjmp	.+8      	; 0x2b8 <lcdLight+0xc>
 2b0:	84 b5       	in	r24, 0x24	; 36
 2b2:	8f 7d       	andi	r24, 0xDF	; 223
 2b4:	84 bd       	out	0x24, r24	; 36
 2b6:	08 95       	ret
 2b8:	94 b5       	in	r25, 0x24	; 36
 2ba:	90 62       	ori	r25, 0x20	; 32
 2bc:	94 bd       	out	0x24, r25	; 36
 2be:	88 bd       	out	0x28, r24	; 40
 2c0:	08 95       	ret

000002c2 <writeLcdF>:
 2c2:	ef 92       	push	r14
 2c4:	ff 92       	push	r15
 2c6:	0f 93       	push	r16
 2c8:	1f 93       	push	r17
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	7c 01       	movw	r14, r24
 2d0:	eb 01       	movw	r28, r22
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	d7 df       	rcall	.-82     	; 0x284 <lcdSid>
 2d6:	00 e0       	ldi	r16, 0x00	; 0
 2d8:	10 e0       	ldi	r17, 0x00	; 0
 2da:	06 c0       	rjmp	.+12     	; 0x2e8 <writeLcdF+0x26>
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	dc df       	rcall	.-72     	; 0x298 <lcdSclk>
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	da df       	rcall	.-76     	; 0x298 <lcdSclk>
 2e4:	0f 5f       	subi	r16, 0xFF	; 255
 2e6:	1f 4f       	sbci	r17, 0xFF	; 255
 2e8:	05 30       	cpi	r16, 0x05	; 5
 2ea:	11 05       	cpc	r17, r1
 2ec:	b8 f3       	brcs	.-18     	; 0x2dc <writeLcdF+0x1a>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	c9 df       	rcall	.-110    	; 0x284 <lcdSid>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	d1 df       	rcall	.-94     	; 0x298 <lcdSclk>
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	cf df       	rcall	.-98     	; 0x298 <lcdSclk>
 2fa:	83 e4       	ldi	r24, 0x43	; 67
 2fc:	e8 16       	cp	r14, r24
 2fe:	f1 04       	cpc	r15, r1
 300:	19 f4       	brne	.+6      	; 0x308 <writeLcdF+0x46>
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	bf df       	rcall	.-130    	; 0x284 <lcdSid>
 306:	02 c0       	rjmp	.+4      	; 0x30c <writeLcdF+0x4a>
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	bc df       	rcall	.-136    	; 0x284 <lcdSid>
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	c4 df       	rcall	.-120    	; 0x298 <lcdSclk>
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	c2 df       	rcall	.-124    	; 0x298 <lcdSclk>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	b6 df       	rcall	.-148    	; 0x284 <lcdSid>
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	be df       	rcall	.-132    	; 0x298 <lcdSclk>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	bc df       	rcall	.-136    	; 0x298 <lcdSclk>
 320:	00 e0       	ldi	r16, 0x00	; 0
 322:	10 e0       	ldi	r17, 0x00	; 0
 324:	11 c0       	rjmp	.+34     	; 0x348 <writeLcdF+0x86>
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	b7 df       	rcall	.-146    	; 0x298 <lcdSclk>
 32a:	c0 ff       	sbrs	r28, 0
 32c:	03 c0       	rjmp	.+6      	; 0x334 <writeLcdF+0x72>
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	a9 df       	rcall	.-174    	; 0x284 <lcdSid>
 332:	02 c0       	rjmp	.+4      	; 0x338 <writeLcdF+0x76>
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	a6 df       	rcall	.-180    	; 0x284 <lcdSid>
 338:	d6 95       	lsr	r29
 33a:	c7 95       	ror	r28
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	ac df       	rcall	.-168    	; 0x298 <lcdSclk>
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	aa df       	rcall	.-172    	; 0x298 <lcdSclk>
 344:	0f 5f       	subi	r16, 0xFF	; 255
 346:	1f 4f       	sbci	r17, 0xFF	; 255
 348:	04 30       	cpi	r16, 0x04	; 4
 34a:	11 05       	cpc	r17, r1
 34c:	60 f3       	brcs	.-40     	; 0x326 <writeLcdF+0x64>
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	99 df       	rcall	.-206    	; 0x284 <lcdSid>
 352:	00 e0       	ldi	r16, 0x00	; 0
 354:	10 e0       	ldi	r17, 0x00	; 0
 356:	06 c0       	rjmp	.+12     	; 0x364 <writeLcdF+0xa2>
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	9e df       	rcall	.-196    	; 0x298 <lcdSclk>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	9c df       	rcall	.-200    	; 0x298 <lcdSclk>
 360:	0f 5f       	subi	r16, 0xFF	; 255
 362:	1f 4f       	sbci	r17, 0xFF	; 255
 364:	04 30       	cpi	r16, 0x04	; 4
 366:	11 05       	cpc	r17, r1
 368:	b8 f3       	brcs	.-18     	; 0x358 <writeLcdF+0x96>
 36a:	00 e0       	ldi	r16, 0x00	; 0
 36c:	10 e0       	ldi	r17, 0x00	; 0
 36e:	11 c0       	rjmp	.+34     	; 0x392 <writeLcdF+0xd0>
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	92 df       	rcall	.-220    	; 0x298 <lcdSclk>
 374:	c0 ff       	sbrs	r28, 0
 376:	03 c0       	rjmp	.+6      	; 0x37e <writeLcdF+0xbc>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	84 df       	rcall	.-248    	; 0x284 <lcdSid>
 37c:	02 c0       	rjmp	.+4      	; 0x382 <writeLcdF+0xc0>
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	81 df       	rcall	.-254    	; 0x284 <lcdSid>
 382:	d6 95       	lsr	r29
 384:	c7 95       	ror	r28
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	87 df       	rcall	.-242    	; 0x298 <lcdSclk>
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	85 df       	rcall	.-246    	; 0x298 <lcdSclk>
 38e:	0f 5f       	subi	r16, 0xFF	; 255
 390:	1f 4f       	sbci	r17, 0xFF	; 255
 392:	04 30       	cpi	r16, 0x04	; 4
 394:	11 05       	cpc	r17, r1
 396:	60 f3       	brcs	.-40     	; 0x370 <writeLcdF+0xae>
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	74 df       	rcall	.-280    	; 0x284 <lcdSid>
 39c:	c0 e0       	ldi	r28, 0x00	; 0
 39e:	d0 e0       	ldi	r29, 0x00	; 0
 3a0:	05 c0       	rjmp	.+10     	; 0x3ac <writeLcdF+0xea>
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	79 df       	rcall	.-270    	; 0x298 <lcdSclk>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	77 df       	rcall	.-274    	; 0x298 <lcdSclk>
 3aa:	21 96       	adiw	r28, 0x01	; 1
 3ac:	c4 30       	cpi	r28, 0x04	; 4
 3ae:	d1 05       	cpc	r29, r1
 3b0:	c0 f3       	brcs	.-16     	; 0x3a2 <writeLcdF+0xe0>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	67 df       	rcall	.-306    	; 0x284 <lcdSid>
 3b6:	87 ec       	ldi	r24, 0xC7	; 199
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	01 97       	sbiw	r24, 0x01	; 1
 3bc:	f1 f7       	brne	.-4      	; 0x3ba <writeLcdF+0xf8>
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <writeLcdF+0xfe>
 3c0:	00 00       	nop
 3c2:	df 91       	pop	r29
 3c4:	cf 91       	pop	r28
 3c6:	1f 91       	pop	r17
 3c8:	0f 91       	pop	r16
 3ca:	ff 90       	pop	r15
 3cc:	ef 90       	pop	r14
 3ce:	08 95       	ret

000003d0 <lcdWriteText>:
 3d0:	1f 93       	push	r17
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	cd b7       	in	r28, 0x3d	; 61
 3d8:	de b7       	in	r29, 0x3e	; 62
 3da:	65 97       	sbiw	r28, 0x15	; 21
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	f8 94       	cli
 3e0:	de bf       	out	0x3e, r29	; 62
 3e2:	0f be       	out	0x3f, r0	; 63
 3e4:	cd bf       	out	0x3d, r28	; 61
 3e6:	9e 01       	movw	r18, r28
 3e8:	20 5e       	subi	r18, 0xE0	; 224
 3ea:	3f 4f       	sbci	r19, 0xFF	; 255
 3ec:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3ee:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3f0:	65 e1       	ldi	r22, 0x15	; 21
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	ce 01       	movw	r24, r28
 3f6:	01 96       	adiw	r24, 0x01	; 1
 3f8:	1b d2       	rcall	.+1078   	; 0x830 <vsnprintf>
 3fa:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3fc:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3fe:	90 e2       	ldi	r25, 0x20	; 32
 400:	89 9f       	mul	r24, r25
 402:	60 0d       	add	r22, r0
 404:	11 24       	eor	r1, r1
 406:	60 68       	ori	r22, 0x80	; 128
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	83 e4       	ldi	r24, 0x43	; 67
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	59 df       	rcall	.-334    	; 0x2c2 <writeLcdF>
 410:	10 e0       	ldi	r17, 0x00	; 0
 412:	05 c0       	rjmp	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	1f 5f       	subi	r17, 0xFF	; 255
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	84 e4       	ldi	r24, 0x44	; 68
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	52 df       	rcall	.-348    	; 0x2c2 <writeLcdF>
 41e:	e1 e0       	ldi	r30, 0x01	; 1
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	ec 0f       	add	r30, r28
 424:	fd 1f       	adc	r31, r29
 426:	e1 0f       	add	r30, r17
 428:	f1 1d       	adc	r31, r1
 42a:	60 81       	ld	r22, Z
 42c:	61 11       	cpse	r22, r1
 42e:	f2 cf       	rjmp	.-28     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 430:	65 96       	adiw	r28, 0x15	; 21
 432:	0f b6       	in	r0, 0x3f	; 63
 434:	f8 94       	cli
 436:	de bf       	out	0x3e, r29	; 62
 438:	0f be       	out	0x3f, r0	; 63
 43a:	cd bf       	out	0x3d, r28	; 61
 43c:	df 91       	pop	r29
 43e:	cf 91       	pop	r28
 440:	1f 91       	pop	r17
 442:	08 95       	ret

00000444 <lcdClear>:
 444:	61 e0       	ldi	r22, 0x01	; 1
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	83 e4       	ldi	r24, 0x43	; 67
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	3a df       	rcall	.-396    	; 0x2c2 <writeLcdF>
 44e:	8f e3       	ldi	r24, 0x3F	; 63
 450:	9f e1       	ldi	r25, 0x1F	; 31
 452:	01 97       	sbiw	r24, 0x01	; 1
 454:	f1 f7       	brne	.-4      	; 0x452 <lcdClear+0xe>
 456:	00 c0       	rjmp	.+0      	; 0x458 <lcdClear+0x14>
 458:	00 00       	nop
 45a:	80 e3       	ldi	r24, 0x30	; 48
 45c:	92 e0       	ldi	r25, 0x02	; 2
 45e:	9f 93       	push	r25
 460:	8f 93       	push	r24
 462:	1f 92       	push	r1
 464:	1f 92       	push	r1
 466:	b4 df       	rcall	.-152    	; 0x3d0 <lcdWriteText>
 468:	0f 90       	pop	r0
 46a:	0f 90       	pop	r0
 46c:	0f 90       	pop	r0
 46e:	0f 90       	pop	r0
 470:	08 95       	ret

00000472 <initLcd>:
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	11 df       	rcall	.-478    	; 0x298 <lcdSclk>
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	05 df       	rcall	.-502    	; 0x284 <lcdSid>
 47a:	64 e3       	ldi	r22, 0x34	; 52
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	83 e4       	ldi	r24, 0x43	; 67
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	1f df       	rcall	.-450    	; 0x2c2 <writeLcdF>
 484:	69 e0       	ldi	r22, 0x09	; 9
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	83 e4       	ldi	r24, 0x43	; 67
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	1a df       	rcall	.-460    	; 0x2c2 <writeLcdF>
 48e:	60 e3       	ldi	r22, 0x30	; 48
 490:	70 e0       	ldi	r23, 0x00	; 0
 492:	83 e4       	ldi	r24, 0x43	; 67
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	15 df       	rcall	.-470    	; 0x2c2 <writeLcdF>
 498:	6c e0       	ldi	r22, 0x0C	; 12
 49a:	70 e0       	ldi	r23, 0x00	; 0
 49c:	83 e4       	ldi	r24, 0x43	; 67
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	10 df       	rcall	.-480    	; 0x2c2 <writeLcdF>
 4a2:	d0 df       	rcall	.-96     	; 0x444 <lcdClear>
 4a4:	67 e0       	ldi	r22, 0x07	; 7
 4a6:	70 e0       	ldi	r23, 0x00	; 0
 4a8:	83 e4       	ldi	r24, 0x43	; 67
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0a df       	rcall	.-492    	; 0x2c2 <writeLcdF>
 4ae:	80 e0       	ldi	r24, 0x00	; 0
 4b0:	fd ce       	rjmp	.-518    	; 0x2ac <lcdLight>
 4b2:	08 95       	ret

000004b4 <initBoard>:
 4b4:	ff 92       	push	r15
 4b6:	0f 93       	push	r16
 4b8:	1f 93       	push	r17
 4ba:	cf 93       	push	r28
 4bc:	df 93       	push	r29
 4be:	c8 2f       	mov	r28, r24
 4c0:	85 b7       	in	r24, 0x35	; 53
 4c2:	85 bf       	out	0x35, r24	; 53
 4c4:	12 b8       	out	0x02, r1	; 2
 4c6:	8f ef       	ldi	r24, 0xFF	; 255
 4c8:	81 b9       	out	0x01, r24	; 1
 4ca:	15 b8       	out	0x05, r1	; 5
 4cc:	84 b9       	out	0x04, r24	; 4
 4ce:	88 b9       	out	0x08, r24	; 8
 4d0:	17 b8       	out	0x07, r1	; 7
 4d2:	8b b9       	out	0x0b, r24	; 11
 4d4:	1a b8       	out	0x0a, r1	; 10
 4d6:	8e b9       	out	0x0e, r24	; 14
 4d8:	1d b8       	out	0x0d, r1	; 13
 4da:	9e b1       	in	r25, 0x0e	; 14
 4dc:	9b 7f       	andi	r25, 0xFB	; 251
 4de:	9e b9       	out	0x0e, r25	; 14
 4e0:	11 ba       	out	0x11, r1	; 17
 4e2:	10 ba       	out	0x10, r1	; 16
 4e4:	94 e0       	ldi	r25, 0x04	; 4
 4e6:	94 bb       	out	0x14, r25	; 20
 4e8:	93 b3       	in	r25, 0x13	; 19
 4ea:	93 60       	ori	r25, 0x03	; 3
 4ec:	93 bb       	out	0x13, r25	; 19
 4ee:	93 b3       	in	r25, 0x13	; 19
 4f0:	90 62       	ori	r25, 0x20	; 32
 4f2:	93 bb       	out	0x13, r25	; 19
 4f4:	97 ec       	ldi	r25, 0xC7	; 199
 4f6:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 4fa:	98 e3       	ldi	r25, 0x38	; 56
 4fc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 500:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 504:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 508:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 50c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 510:	8c e3       	ldi	r24, 0x3C	; 60
 512:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 516:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 51a:	78 94       	sei
 51c:	5c de       	rcall	.-840    	; 0x1d6 <startSystemTimeMs>
 51e:	a9 df       	rcall	.-174    	; 0x472 <initLcd>
 520:	64 de       	rcall	.-824    	; 0x1ea <initAdc>
 522:	9c de       	rcall	.-712    	; 0x25c <initRgb>
 524:	cc 23       	and	r28, r28
 526:	09 f4       	brne	.+2      	; 0x52a <initBoard+0x76>
 528:	a3 c0       	rjmp	.+326    	; 0x670 <initBoard+0x1bc>
 52a:	8f ef       	ldi	r24, 0xFF	; 255
 52c:	bf de       	rcall	.-642    	; 0x2ac <lcdLight>
 52e:	40 e0       	ldi	r20, 0x00	; 0
 530:	50 e0       	ldi	r21, 0x00	; 0
 532:	6f ef       	ldi	r22, 0xFF	; 255
 534:	73 e0       	ldi	r23, 0x03	; 3
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	79 de       	rcall	.-782    	; 0x22e <rgbWrite>
 53c:	8d e1       	ldi	r24, 0x1D	; 29
 53e:	92 e0       	ldi	r25, 0x02	; 2
 540:	9f 93       	push	r25
 542:	8f 93       	push	r24
 544:	1f 92       	push	r1
 546:	1f 92       	push	r1
 548:	43 df       	rcall	.-378    	; 0x3d0 <lcdWriteText>
 54a:	82 e3       	ldi	r24, 0x32	; 50
 54c:	92 e0       	ldi	r25, 0x02	; 2
 54e:	9f 93       	push	r25
 550:	8f 93       	push	r24
 552:	1f 92       	push	r1
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	8f 93       	push	r24
 558:	3b df       	rcall	.-394    	; 0x3d0 <lcdWriteText>
 55a:	88 e0       	ldi	r24, 0x08	; 8
 55c:	92 e0       	ldi	r25, 0x02	; 2
 55e:	9f 93       	push	r25
 560:	8f 93       	push	r24
 562:	1f 92       	push	r1
 564:	82 e0       	ldi	r24, 0x02	; 2
 566:	8f 93       	push	r24
 568:	33 df       	rcall	.-410    	; 0x3d0 <lcdWriteText>
 56a:	87 e4       	ldi	r24, 0x47	; 71
 56c:	92 e0       	ldi	r25, 0x02	; 2
 56e:	9f 93       	push	r25
 570:	8f 93       	push	r24
 572:	1f 92       	push	r1
 574:	83 e0       	ldi	r24, 0x03	; 3
 576:	8f 93       	push	r24
 578:	2b df       	rcall	.-426    	; 0x3d0 <lcdWriteText>
 57a:	8d b7       	in	r24, 0x3d	; 61
 57c:	9e b7       	in	r25, 0x3e	; 62
 57e:	40 96       	adiw	r24, 0x10	; 16
 580:	0f b6       	in	r0, 0x3f	; 63
 582:	f8 94       	cli
 584:	9e bf       	out	0x3e, r25	; 62
 586:	0f be       	out	0x3f, r0	; 63
 588:	8d bf       	out	0x3d, r24	; 61
 58a:	ff 24       	eor	r15, r15
 58c:	f3 94       	inc	r15
 58e:	c0 e0       	ldi	r28, 0x00	; 0
 590:	10 e0       	ldi	r17, 0x00	; 0
 592:	01 e0       	ldi	r16, 0x01	; 1
 594:	d0 e0       	ldi	r29, 0x00	; 0
 596:	00 23       	and	r16, r16
 598:	51 f0       	breq	.+20     	; 0x5ae <initBoard+0xfa>
 59a:	80 e0       	ldi	r24, 0x00	; 0
 59c:	90 e8       	ldi	r25, 0x80	; 128
 59e:	0d 2e       	mov	r0, r29
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <initBoard+0xf2>
 5a2:	96 95       	lsr	r25
 5a4:	87 95       	ror	r24
 5a6:	0a 94       	dec	r0
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <initBoard+0xee>
 5aa:	0f de       	rcall	.-994    	; 0x1ca <ledWriteAll>
 5ac:	09 c0       	rjmp	.+18     	; 0x5c0 <initBoard+0x10c>
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0d 2e       	mov	r0, r29
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <initBoard+0x106>
 5b6:	88 0f       	add	r24, r24
 5b8:	99 1f       	adc	r25, r25
 5ba:	0a 94       	dec	r0
 5bc:	e2 f7       	brpl	.-8      	; 0x5b6 <initBoard+0x102>
 5be:	05 de       	rcall	.-1014   	; 0x1ca <ledWriteAll>
 5c0:	df 5f       	subi	r29, 0xFF	; 255
 5c2:	d1 31       	cpi	r29, 0x11	; 17
 5c4:	28 f0       	brcs	.+10     	; 0x5d0 <initBoard+0x11c>
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	01 11       	cpse	r16, r1
 5ca:	80 e0       	ldi	r24, 0x00	; 0
 5cc:	08 2f       	mov	r16, r24
 5ce:	d0 e0       	ldi	r29, 0x00	; 0
 5d0:	ff 20       	and	r15, r15
 5d2:	11 f0       	breq	.+4      	; 0x5d8 <initBoard+0x124>
 5d4:	ce 5f       	subi	r28, 0xFE	; 254
 5d6:	01 c0       	rjmp	.+2      	; 0x5da <initBoard+0x126>
 5d8:	c2 50       	subi	r28, 0x02	; 2
 5da:	8c 2f       	mov	r24, r28
 5dc:	67 de       	rcall	.-818    	; 0x2ac <lcdLight>
 5de:	ce 3f       	cpi	r28, 0xFE	; 254
 5e0:	09 f4       	brne	.+2      	; 0x5e4 <initBoard+0x130>
 5e2:	f1 2c       	mov	r15, r1
 5e4:	c8 37       	cpi	r28, 0x78	; 120
 5e6:	11 f4       	brne	.+4      	; 0x5ec <initBoard+0x138>
 5e8:	ff 24       	eor	r15, r15
 5ea:	f3 94       	inc	r15
 5ec:	11 11       	cpse	r17, r1
 5ee:	17 c0       	rjmp	.+46     	; 0x61e <initBoard+0x16a>
 5f0:	ef dd       	rcall	.-1058   	; 0x1d0 <buttonReadAllPL>
 5f2:	83 7c       	andi	r24, 0xC3	; 195
 5f4:	a1 f0       	breq	.+40     	; 0x61e <initBoard+0x16a>
 5f6:	40 e0       	ldi	r20, 0x00	; 0
 5f8:	50 e0       	ldi	r21, 0x00	; 0
 5fa:	66 e2       	ldi	r22, 0x26	; 38
 5fc:	72 e0       	ldi	r23, 0x02	; 2
 5fe:	8f ef       	ldi	r24, 0xFF	; 255
 600:	93 e0       	ldi	r25, 0x03	; 3
 602:	15 de       	rcall	.-982    	; 0x22e <rgbWrite>
 604:	8c e5       	ldi	r24, 0x5C	; 92
 606:	92 e0       	ldi	r25, 0x02	; 2
 608:	9f 93       	push	r25
 60a:	8f 93       	push	r24
 60c:	1f 92       	push	r1
 60e:	83 e0       	ldi	r24, 0x03	; 3
 610:	8f 93       	push	r24
 612:	de de       	rcall	.-580    	; 0x3d0 <lcdWriteText>
 614:	0f 90       	pop	r0
 616:	0f 90       	pop	r0
 618:	0f 90       	pop	r0
 61a:	0f 90       	pop	r0
 61c:	11 e0       	ldi	r17, 0x01	; 1
 61e:	11 23       	and	r17, r17
 620:	19 f0       	breq	.+6      	; 0x628 <initBoard+0x174>
 622:	d6 dd       	rcall	.-1108   	; 0x1d0 <buttonReadAllPL>
 624:	83 7c       	andi	r24, 0xC3	; 195
 626:	39 f0       	breq	.+14     	; 0x636 <initBoard+0x182>
 628:	8f ef       	ldi	r24, 0xFF	; 255
 62a:	9c e7       	ldi	r25, 0x7C	; 124
 62c:	01 97       	sbiw	r24, 0x01	; 1
 62e:	f1 f7       	brne	.-4      	; 0x62c <initBoard+0x178>
 630:	00 c0       	rjmp	.+0      	; 0x632 <initBoard+0x17e>
 632:	00 00       	nop
 634:	b0 cf       	rjmp	.-160    	; 0x596 <initBoard+0xe2>
 636:	06 df       	rcall	.-500    	; 0x444 <lcdClear>
 638:	80 e0       	ldi	r24, 0x00	; 0
 63a:	38 de       	rcall	.-912    	; 0x2ac <lcdLight>
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	c4 dd       	rcall	.-1144   	; 0x1ca <ledWriteAll>
 642:	40 e0       	ldi	r20, 0x00	; 0
 644:	50 e0       	ldi	r21, 0x00	; 0
 646:	60 e0       	ldi	r22, 0x00	; 0
 648:	70 e0       	ldi	r23, 0x00	; 0
 64a:	80 e0       	ldi	r24, 0x00	; 0
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	ef dd       	rcall	.-1058   	; 0x22e <rgbWrite>
 650:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 654:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 658:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 65c:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 660:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 664:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 668:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 66c:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 670:	df 91       	pop	r29
 672:	cf 91       	pop	r28
 674:	1f 91       	pop	r17
 676:	0f 91       	pop	r16
 678:	ff 90       	pop	r15
 67a:	08 95       	ret

0000067c <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 67c:	cf 93       	push	r28
 67e:	df 93       	push	r29
 680:	cd b7       	in	r28, 0x3d	; 61
 682:	de b7       	in	r29, 0x3e	; 62
 684:	28 97       	sbiw	r28, 0x08	; 8
 686:	0f b6       	in	r0, 0x3f	; 63
 688:	f8 94       	cli
 68a:	de bf       	out	0x3e, r29	; 62
 68c:	0f be       	out	0x3f, r0	; 63
 68e:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 690:	88 e0       	ldi	r24, 0x08	; 8
 692:	e0 e0       	ldi	r30, 0x00	; 0
 694:	f2 e0       	ldi	r31, 0x02	; 2
 696:	de 01       	movw	r26, r28
 698:	11 96       	adiw	r26, 0x01	; 1
 69a:	01 90       	ld	r0, Z+
 69c:	0d 92       	st	X+, r0
 69e:	8a 95       	dec	r24
 6a0:	e1 f7       	brne	.-8      	; 0x69a <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6a2:	e5 e0       	ldi	r30, 0x05	; 5
 6a4:	f1 e0       	ldi	r31, 0x01	; 1
 6a6:	80 81       	ld	r24, Z
 6a8:	8f 7b       	andi	r24, 0xBF	; 191
 6aa:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6ac:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 6b0:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 6b4:	81 e0       	ldi	r24, 0x01	; 1
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	8c 0f       	add	r24, r28
 6ba:	9d 1f       	adc	r25, r29
 6bc:	e8 0f       	add	r30, r24
 6be:	f9 1f       	adc	r31, r25
 6c0:	80 81       	ld	r24, Z
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 6c8:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 6cc:	80 e0       	ldi	r24, 0x00	; 0
 6ce:	26 c0       	rjmp	.+76     	; 0x71c <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 6d0:	e7 e3       	ldi	r30, 0x37	; 55
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	e8 1b       	sub	r30, r24
 6d6:	f1 09       	sbc	r31, r1
 6d8:	ee 0f       	add	r30, r30
 6da:	ff 1f       	adc	r31, r31
 6dc:	ee 57       	subi	r30, 0x7E	; 126
 6de:	fd 4f       	sbci	r31, 0xFD	; 253
 6e0:	40 81       	ld	r20, Z
 6e2:	51 81       	ldd	r21, Z+1	; 0x01
 6e4:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__data_end>
 6e8:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__data_end+0x1>
 6ec:	24 23       	and	r18, r20
 6ee:	35 23       	and	r19, r21
 6f0:	23 2b       	or	r18, r19
 6f2:	31 f0       	breq	.+12     	; 0x700 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 6f4:	e5 e0       	ldi	r30, 0x05	; 5
 6f6:	f1 e0       	ldi	r31, 0x01	; 1
 6f8:	90 81       	ld	r25, Z
 6fa:	90 62       	ori	r25, 0x20	; 32
 6fc:	90 83       	st	Z, r25
 6fe:	05 c0       	rjmp	.+10     	; 0x70a <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 700:	e5 e0       	ldi	r30, 0x05	; 5
 702:	f1 e0       	ldi	r31, 0x01	; 1
 704:	90 81       	ld	r25, Z
 706:	9f 7d       	andi	r25, 0xDF	; 223
 708:	90 83       	st	Z, r25
        }
        CLOCK_1;
 70a:	e5 e0       	ldi	r30, 0x05	; 5
 70c:	f1 e0       	ldi	r31, 0x01	; 1
 70e:	90 81       	ld	r25, Z
 710:	90 61       	ori	r25, 0x10	; 16
 712:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 714:	90 81       	ld	r25, Z
 716:	9f 7e       	andi	r25, 0xEF	; 239
 718:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 71a:	8f 5f       	subi	r24, 0xFF	; 255
 71c:	88 33       	cpi	r24, 0x38	; 56
 71e:	c0 f2       	brcs	.-80     	; 0x6d0 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 720:	e5 e0       	ldi	r30, 0x05	; 5
 722:	f1 e0       	ldi	r31, 0x01	; 1
 724:	80 81       	ld	r24, Z
 726:	87 7f       	andi	r24, 0xF7	; 247
 728:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 72a:	80 81       	ld	r24, Z
 72c:	88 7f       	andi	r24, 0xF8	; 248
 72e:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 730:	90 81       	ld	r25, Z
 732:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 736:	89 2b       	or	r24, r25
 738:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 73a:	80 81       	ld	r24, Z
 73c:	80 64       	ori	r24, 0x40	; 64
 73e:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 740:	80 81       	ld	r24, Z
 742:	88 60       	ori	r24, 0x08	; 8
 744:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 746:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2743>
 74a:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2743+0x1>
 74e:	87 30       	cpi	r24, 0x07	; 7
 750:	91 05       	cpc	r25, r1
 752:	30 f4       	brcc	.+12     	; 0x760 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 754:	01 96       	adiw	r24, 0x01	; 1
 756:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2743+0x1>
 75a:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2743>
 75e:	07 c0       	rjmp	.+14     	; 0x76e <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 760:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2743+0x1>
 764:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2743>
        writeTextFinished = 1;
 768:	81 e0       	ldi	r24, 0x01	; 1
 76a:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 76e:	28 96       	adiw	r28, 0x08	; 8
 770:	0f b6       	in	r0, 0x3f	; 63
 772:	f8 94       	cli
 774:	de bf       	out	0x3e, r29	; 62
 776:	0f be       	out	0x3f, r0	; 63
 778:	cd bf       	out	0x3d, r28	; 61
 77a:	df 91       	pop	r29
 77c:	cf 91       	pop	r28
 77e:	08 95       	ret

00000780 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 780:	1f 92       	push	r1
 782:	0f 92       	push	r0
 784:	0f b6       	in	r0, 0x3f	; 63
 786:	0f 92       	push	r0
 788:	11 24       	eor	r1, r1
 78a:	0b b6       	in	r0, 0x3b	; 59
 78c:	0f 92       	push	r0
 78e:	2f 93       	push	r18
 790:	3f 93       	push	r19
 792:	4f 93       	push	r20
 794:	5f 93       	push	r21
 796:	6f 93       	push	r22
 798:	7f 93       	push	r23
 79a:	8f 93       	push	r24
 79c:	9f 93       	push	r25
 79e:	af 93       	push	r26
 7a0:	bf 93       	push	r27
 7a2:	ef 93       	push	r30
 7a4:	ff 93       	push	r31
    systemTimeMs += 1;
 7a6:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 7aa:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 7ae:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 7b2:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 7b6:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 7ba:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 7be:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 7c2:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 7c6:	a1 e0       	ldi	r26, 0x01	; 1
 7c8:	27 d0       	rcall	.+78     	; 0x818 <__adddi3_s8>
 7ca:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 7ce:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 7d2:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 7d6:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 7da:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 7de:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 7e2:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 7e6:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 7ea:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 7ee:	81 11       	cpse	r24, r1
 7f0:	45 df       	rcall	.-374    	; 0x67c <matrixWriteNextLine>
}
 7f2:	ff 91       	pop	r31
 7f4:	ef 91       	pop	r30
 7f6:	bf 91       	pop	r27
 7f8:	af 91       	pop	r26
 7fa:	9f 91       	pop	r25
 7fc:	8f 91       	pop	r24
 7fe:	7f 91       	pop	r23
 800:	6f 91       	pop	r22
 802:	5f 91       	pop	r21
 804:	4f 91       	pop	r20
 806:	3f 91       	pop	r19
 808:	2f 91       	pop	r18
 80a:	0f 90       	pop	r0
 80c:	0b be       	out	0x3b, r0	; 59
 80e:	0f 90       	pop	r0
 810:	0f be       	out	0x3f, r0	; 63
 812:	0f 90       	pop	r0
 814:	1f 90       	pop	r1
 816:	18 95       	reti

00000818 <__adddi3_s8>:
 818:	00 24       	eor	r0, r0
 81a:	a7 fd       	sbrc	r26, 7
 81c:	00 94       	com	r0
 81e:	2a 0f       	add	r18, r26
 820:	30 1d       	adc	r19, r0
 822:	40 1d       	adc	r20, r0
 824:	50 1d       	adc	r21, r0
 826:	60 1d       	adc	r22, r0
 828:	70 1d       	adc	r23, r0
 82a:	80 1d       	adc	r24, r0
 82c:	90 1d       	adc	r25, r0
 82e:	08 95       	ret

00000830 <vsnprintf>:
 830:	0f 93       	push	r16
 832:	1f 93       	push	r17
 834:	cf 93       	push	r28
 836:	df 93       	push	r29
 838:	cd b7       	in	r28, 0x3d	; 61
 83a:	de b7       	in	r29, 0x3e	; 62
 83c:	2e 97       	sbiw	r28, 0x0e	; 14
 83e:	0f b6       	in	r0, 0x3f	; 63
 840:	f8 94       	cli
 842:	de bf       	out	0x3e, r29	; 62
 844:	0f be       	out	0x3f, r0	; 63
 846:	cd bf       	out	0x3d, r28	; 61
 848:	8c 01       	movw	r16, r24
 84a:	fa 01       	movw	r30, r20
 84c:	86 e0       	ldi	r24, 0x06	; 6
 84e:	8c 83       	std	Y+4, r24	; 0x04
 850:	1a 83       	std	Y+2, r17	; 0x02
 852:	09 83       	std	Y+1, r16	; 0x01
 854:	77 ff       	sbrs	r23, 7
 856:	02 c0       	rjmp	.+4      	; 0x85c <vsnprintf+0x2c>
 858:	60 e0       	ldi	r22, 0x00	; 0
 85a:	70 e8       	ldi	r23, 0x80	; 128
 85c:	cb 01       	movw	r24, r22
 85e:	01 97       	sbiw	r24, 0x01	; 1
 860:	9e 83       	std	Y+6, r25	; 0x06
 862:	8d 83       	std	Y+5, r24	; 0x05
 864:	a9 01       	movw	r20, r18
 866:	bf 01       	movw	r22, r30
 868:	ce 01       	movw	r24, r28
 86a:	01 96       	adiw	r24, 0x01	; 1
 86c:	19 d0       	rcall	.+50     	; 0x8a0 <vfprintf>
 86e:	4d 81       	ldd	r20, Y+5	; 0x05
 870:	5e 81       	ldd	r21, Y+6	; 0x06
 872:	57 fd       	sbrc	r21, 7
 874:	0a c0       	rjmp	.+20     	; 0x88a <vsnprintf+0x5a>
 876:	2f 81       	ldd	r18, Y+7	; 0x07
 878:	38 85       	ldd	r19, Y+8	; 0x08
 87a:	42 17       	cp	r20, r18
 87c:	53 07       	cpc	r21, r19
 87e:	0c f4       	brge	.+2      	; 0x882 <vsnprintf+0x52>
 880:	9a 01       	movw	r18, r20
 882:	f8 01       	movw	r30, r16
 884:	e2 0f       	add	r30, r18
 886:	f3 1f       	adc	r31, r19
 888:	10 82       	st	Z, r1
 88a:	2e 96       	adiw	r28, 0x0e	; 14
 88c:	0f b6       	in	r0, 0x3f	; 63
 88e:	f8 94       	cli
 890:	de bf       	out	0x3e, r29	; 62
 892:	0f be       	out	0x3f, r0	; 63
 894:	cd bf       	out	0x3d, r28	; 61
 896:	df 91       	pop	r29
 898:	cf 91       	pop	r28
 89a:	1f 91       	pop	r17
 89c:	0f 91       	pop	r16
 89e:	08 95       	ret

000008a0 <vfprintf>:
 8a0:	2f 92       	push	r2
 8a2:	3f 92       	push	r3
 8a4:	4f 92       	push	r4
 8a6:	5f 92       	push	r5
 8a8:	6f 92       	push	r6
 8aa:	7f 92       	push	r7
 8ac:	8f 92       	push	r8
 8ae:	9f 92       	push	r9
 8b0:	af 92       	push	r10
 8b2:	bf 92       	push	r11
 8b4:	cf 92       	push	r12
 8b6:	df 92       	push	r13
 8b8:	ef 92       	push	r14
 8ba:	ff 92       	push	r15
 8bc:	0f 93       	push	r16
 8be:	1f 93       	push	r17
 8c0:	cf 93       	push	r28
 8c2:	df 93       	push	r29
 8c4:	cd b7       	in	r28, 0x3d	; 61
 8c6:	de b7       	in	r29, 0x3e	; 62
 8c8:	2b 97       	sbiw	r28, 0x0b	; 11
 8ca:	0f b6       	in	r0, 0x3f	; 63
 8cc:	f8 94       	cli
 8ce:	de bf       	out	0x3e, r29	; 62
 8d0:	0f be       	out	0x3f, r0	; 63
 8d2:	cd bf       	out	0x3d, r28	; 61
 8d4:	6c 01       	movw	r12, r24
 8d6:	7b 01       	movw	r14, r22
 8d8:	8a 01       	movw	r16, r20
 8da:	fc 01       	movw	r30, r24
 8dc:	17 82       	std	Z+7, r1	; 0x07
 8de:	16 82       	std	Z+6, r1	; 0x06
 8e0:	83 81       	ldd	r24, Z+3	; 0x03
 8e2:	81 ff       	sbrs	r24, 1
 8e4:	bf c1       	rjmp	.+894    	; 0xc64 <vfprintf+0x3c4>
 8e6:	ce 01       	movw	r24, r28
 8e8:	01 96       	adiw	r24, 0x01	; 1
 8ea:	3c 01       	movw	r6, r24
 8ec:	f6 01       	movw	r30, r12
 8ee:	93 81       	ldd	r25, Z+3	; 0x03
 8f0:	f7 01       	movw	r30, r14
 8f2:	93 fd       	sbrc	r25, 3
 8f4:	85 91       	lpm	r24, Z+
 8f6:	93 ff       	sbrs	r25, 3
 8f8:	81 91       	ld	r24, Z+
 8fa:	7f 01       	movw	r14, r30
 8fc:	88 23       	and	r24, r24
 8fe:	09 f4       	brne	.+2      	; 0x902 <vfprintf+0x62>
 900:	ad c1       	rjmp	.+858    	; 0xc5c <vfprintf+0x3bc>
 902:	85 32       	cpi	r24, 0x25	; 37
 904:	39 f4       	brne	.+14     	; 0x914 <vfprintf+0x74>
 906:	93 fd       	sbrc	r25, 3
 908:	85 91       	lpm	r24, Z+
 90a:	93 ff       	sbrs	r25, 3
 90c:	81 91       	ld	r24, Z+
 90e:	7f 01       	movw	r14, r30
 910:	85 32       	cpi	r24, 0x25	; 37
 912:	21 f4       	brne	.+8      	; 0x91c <vfprintf+0x7c>
 914:	b6 01       	movw	r22, r12
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	d6 d1       	rcall	.+940    	; 0xcc6 <fputc>
 91a:	e8 cf       	rjmp	.-48     	; 0x8ec <vfprintf+0x4c>
 91c:	91 2c       	mov	r9, r1
 91e:	21 2c       	mov	r2, r1
 920:	31 2c       	mov	r3, r1
 922:	ff e1       	ldi	r31, 0x1F	; 31
 924:	f3 15       	cp	r31, r3
 926:	d8 f0       	brcs	.+54     	; 0x95e <vfprintf+0xbe>
 928:	8b 32       	cpi	r24, 0x2B	; 43
 92a:	79 f0       	breq	.+30     	; 0x94a <vfprintf+0xaa>
 92c:	38 f4       	brcc	.+14     	; 0x93c <vfprintf+0x9c>
 92e:	80 32       	cpi	r24, 0x20	; 32
 930:	79 f0       	breq	.+30     	; 0x950 <vfprintf+0xb0>
 932:	83 32       	cpi	r24, 0x23	; 35
 934:	a1 f4       	brne	.+40     	; 0x95e <vfprintf+0xbe>
 936:	23 2d       	mov	r18, r3
 938:	20 61       	ori	r18, 0x10	; 16
 93a:	1d c0       	rjmp	.+58     	; 0x976 <vfprintf+0xd6>
 93c:	8d 32       	cpi	r24, 0x2D	; 45
 93e:	61 f0       	breq	.+24     	; 0x958 <vfprintf+0xb8>
 940:	80 33       	cpi	r24, 0x30	; 48
 942:	69 f4       	brne	.+26     	; 0x95e <vfprintf+0xbe>
 944:	23 2d       	mov	r18, r3
 946:	21 60       	ori	r18, 0x01	; 1
 948:	16 c0       	rjmp	.+44     	; 0x976 <vfprintf+0xd6>
 94a:	83 2d       	mov	r24, r3
 94c:	82 60       	ori	r24, 0x02	; 2
 94e:	38 2e       	mov	r3, r24
 950:	e3 2d       	mov	r30, r3
 952:	e4 60       	ori	r30, 0x04	; 4
 954:	3e 2e       	mov	r3, r30
 956:	2a c0       	rjmp	.+84     	; 0x9ac <vfprintf+0x10c>
 958:	f3 2d       	mov	r31, r3
 95a:	f8 60       	ori	r31, 0x08	; 8
 95c:	1d c0       	rjmp	.+58     	; 0x998 <vfprintf+0xf8>
 95e:	37 fc       	sbrc	r3, 7
 960:	2d c0       	rjmp	.+90     	; 0x9bc <vfprintf+0x11c>
 962:	20 ed       	ldi	r18, 0xD0	; 208
 964:	28 0f       	add	r18, r24
 966:	2a 30       	cpi	r18, 0x0A	; 10
 968:	40 f0       	brcs	.+16     	; 0x97a <vfprintf+0xda>
 96a:	8e 32       	cpi	r24, 0x2E	; 46
 96c:	b9 f4       	brne	.+46     	; 0x99c <vfprintf+0xfc>
 96e:	36 fc       	sbrc	r3, 6
 970:	75 c1       	rjmp	.+746    	; 0xc5c <vfprintf+0x3bc>
 972:	23 2d       	mov	r18, r3
 974:	20 64       	ori	r18, 0x40	; 64
 976:	32 2e       	mov	r3, r18
 978:	19 c0       	rjmp	.+50     	; 0x9ac <vfprintf+0x10c>
 97a:	36 fe       	sbrs	r3, 6
 97c:	06 c0       	rjmp	.+12     	; 0x98a <vfprintf+0xea>
 97e:	8a e0       	ldi	r24, 0x0A	; 10
 980:	98 9e       	mul	r9, r24
 982:	20 0d       	add	r18, r0
 984:	11 24       	eor	r1, r1
 986:	92 2e       	mov	r9, r18
 988:	11 c0       	rjmp	.+34     	; 0x9ac <vfprintf+0x10c>
 98a:	ea e0       	ldi	r30, 0x0A	; 10
 98c:	2e 9e       	mul	r2, r30
 98e:	20 0d       	add	r18, r0
 990:	11 24       	eor	r1, r1
 992:	22 2e       	mov	r2, r18
 994:	f3 2d       	mov	r31, r3
 996:	f0 62       	ori	r31, 0x20	; 32
 998:	3f 2e       	mov	r3, r31
 99a:	08 c0       	rjmp	.+16     	; 0x9ac <vfprintf+0x10c>
 99c:	8c 36       	cpi	r24, 0x6C	; 108
 99e:	21 f4       	brne	.+8      	; 0x9a8 <vfprintf+0x108>
 9a0:	83 2d       	mov	r24, r3
 9a2:	80 68       	ori	r24, 0x80	; 128
 9a4:	38 2e       	mov	r3, r24
 9a6:	02 c0       	rjmp	.+4      	; 0x9ac <vfprintf+0x10c>
 9a8:	88 36       	cpi	r24, 0x68	; 104
 9aa:	41 f4       	brne	.+16     	; 0x9bc <vfprintf+0x11c>
 9ac:	f7 01       	movw	r30, r14
 9ae:	93 fd       	sbrc	r25, 3
 9b0:	85 91       	lpm	r24, Z+
 9b2:	93 ff       	sbrs	r25, 3
 9b4:	81 91       	ld	r24, Z+
 9b6:	7f 01       	movw	r14, r30
 9b8:	81 11       	cpse	r24, r1
 9ba:	b3 cf       	rjmp	.-154    	; 0x922 <vfprintf+0x82>
 9bc:	98 2f       	mov	r25, r24
 9be:	9f 7d       	andi	r25, 0xDF	; 223
 9c0:	95 54       	subi	r25, 0x45	; 69
 9c2:	93 30       	cpi	r25, 0x03	; 3
 9c4:	28 f4       	brcc	.+10     	; 0x9d0 <vfprintf+0x130>
 9c6:	0c 5f       	subi	r16, 0xFC	; 252
 9c8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ca:	9f e3       	ldi	r25, 0x3F	; 63
 9cc:	99 83       	std	Y+1, r25	; 0x01
 9ce:	0d c0       	rjmp	.+26     	; 0x9ea <vfprintf+0x14a>
 9d0:	83 36       	cpi	r24, 0x63	; 99
 9d2:	31 f0       	breq	.+12     	; 0x9e0 <vfprintf+0x140>
 9d4:	83 37       	cpi	r24, 0x73	; 115
 9d6:	71 f0       	breq	.+28     	; 0x9f4 <vfprintf+0x154>
 9d8:	83 35       	cpi	r24, 0x53	; 83
 9da:	09 f0       	breq	.+2      	; 0x9de <vfprintf+0x13e>
 9dc:	55 c0       	rjmp	.+170    	; 0xa88 <vfprintf+0x1e8>
 9de:	20 c0       	rjmp	.+64     	; 0xa20 <vfprintf+0x180>
 9e0:	f8 01       	movw	r30, r16
 9e2:	80 81       	ld	r24, Z
 9e4:	89 83       	std	Y+1, r24	; 0x01
 9e6:	0e 5f       	subi	r16, 0xFE	; 254
 9e8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ea:	88 24       	eor	r8, r8
 9ec:	83 94       	inc	r8
 9ee:	91 2c       	mov	r9, r1
 9f0:	53 01       	movw	r10, r6
 9f2:	12 c0       	rjmp	.+36     	; 0xa18 <vfprintf+0x178>
 9f4:	28 01       	movw	r4, r16
 9f6:	f2 e0       	ldi	r31, 0x02	; 2
 9f8:	4f 0e       	add	r4, r31
 9fa:	51 1c       	adc	r5, r1
 9fc:	f8 01       	movw	r30, r16
 9fe:	a0 80       	ld	r10, Z
 a00:	b1 80       	ldd	r11, Z+1	; 0x01
 a02:	36 fe       	sbrs	r3, 6
 a04:	03 c0       	rjmp	.+6      	; 0xa0c <vfprintf+0x16c>
 a06:	69 2d       	mov	r22, r9
 a08:	70 e0       	ldi	r23, 0x00	; 0
 a0a:	02 c0       	rjmp	.+4      	; 0xa10 <vfprintf+0x170>
 a0c:	6f ef       	ldi	r22, 0xFF	; 255
 a0e:	7f ef       	ldi	r23, 0xFF	; 255
 a10:	c5 01       	movw	r24, r10
 a12:	4e d1       	rcall	.+668    	; 0xcb0 <strnlen>
 a14:	4c 01       	movw	r8, r24
 a16:	82 01       	movw	r16, r4
 a18:	f3 2d       	mov	r31, r3
 a1a:	ff 77       	andi	r31, 0x7F	; 127
 a1c:	3f 2e       	mov	r3, r31
 a1e:	15 c0       	rjmp	.+42     	; 0xa4a <vfprintf+0x1aa>
 a20:	28 01       	movw	r4, r16
 a22:	22 e0       	ldi	r18, 0x02	; 2
 a24:	42 0e       	add	r4, r18
 a26:	51 1c       	adc	r5, r1
 a28:	f8 01       	movw	r30, r16
 a2a:	a0 80       	ld	r10, Z
 a2c:	b1 80       	ldd	r11, Z+1	; 0x01
 a2e:	36 fe       	sbrs	r3, 6
 a30:	03 c0       	rjmp	.+6      	; 0xa38 <vfprintf+0x198>
 a32:	69 2d       	mov	r22, r9
 a34:	70 e0       	ldi	r23, 0x00	; 0
 a36:	02 c0       	rjmp	.+4      	; 0xa3c <vfprintf+0x19c>
 a38:	6f ef       	ldi	r22, 0xFF	; 255
 a3a:	7f ef       	ldi	r23, 0xFF	; 255
 a3c:	c5 01       	movw	r24, r10
 a3e:	2d d1       	rcall	.+602    	; 0xc9a <strnlen_P>
 a40:	4c 01       	movw	r8, r24
 a42:	f3 2d       	mov	r31, r3
 a44:	f0 68       	ori	r31, 0x80	; 128
 a46:	3f 2e       	mov	r3, r31
 a48:	82 01       	movw	r16, r4
 a4a:	33 fc       	sbrc	r3, 3
 a4c:	19 c0       	rjmp	.+50     	; 0xa80 <vfprintf+0x1e0>
 a4e:	82 2d       	mov	r24, r2
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	88 16       	cp	r8, r24
 a54:	99 06       	cpc	r9, r25
 a56:	a0 f4       	brcc	.+40     	; 0xa80 <vfprintf+0x1e0>
 a58:	b6 01       	movw	r22, r12
 a5a:	80 e2       	ldi	r24, 0x20	; 32
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	33 d1       	rcall	.+614    	; 0xcc6 <fputc>
 a60:	2a 94       	dec	r2
 a62:	f5 cf       	rjmp	.-22     	; 0xa4e <vfprintf+0x1ae>
 a64:	f5 01       	movw	r30, r10
 a66:	37 fc       	sbrc	r3, 7
 a68:	85 91       	lpm	r24, Z+
 a6a:	37 fe       	sbrs	r3, 7
 a6c:	81 91       	ld	r24, Z+
 a6e:	5f 01       	movw	r10, r30
 a70:	b6 01       	movw	r22, r12
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	28 d1       	rcall	.+592    	; 0xcc6 <fputc>
 a76:	21 10       	cpse	r2, r1
 a78:	2a 94       	dec	r2
 a7a:	21 e0       	ldi	r18, 0x01	; 1
 a7c:	82 1a       	sub	r8, r18
 a7e:	91 08       	sbc	r9, r1
 a80:	81 14       	cp	r8, r1
 a82:	91 04       	cpc	r9, r1
 a84:	79 f7       	brne	.-34     	; 0xa64 <vfprintf+0x1c4>
 a86:	e1 c0       	rjmp	.+450    	; 0xc4a <vfprintf+0x3aa>
 a88:	84 36       	cpi	r24, 0x64	; 100
 a8a:	11 f0       	breq	.+4      	; 0xa90 <vfprintf+0x1f0>
 a8c:	89 36       	cpi	r24, 0x69	; 105
 a8e:	39 f5       	brne	.+78     	; 0xade <vfprintf+0x23e>
 a90:	f8 01       	movw	r30, r16
 a92:	37 fe       	sbrs	r3, 7
 a94:	07 c0       	rjmp	.+14     	; 0xaa4 <vfprintf+0x204>
 a96:	60 81       	ld	r22, Z
 a98:	71 81       	ldd	r23, Z+1	; 0x01
 a9a:	82 81       	ldd	r24, Z+2	; 0x02
 a9c:	93 81       	ldd	r25, Z+3	; 0x03
 a9e:	0c 5f       	subi	r16, 0xFC	; 252
 aa0:	1f 4f       	sbci	r17, 0xFF	; 255
 aa2:	08 c0       	rjmp	.+16     	; 0xab4 <vfprintf+0x214>
 aa4:	60 81       	ld	r22, Z
 aa6:	71 81       	ldd	r23, Z+1	; 0x01
 aa8:	07 2e       	mov	r0, r23
 aaa:	00 0c       	add	r0, r0
 aac:	88 0b       	sbc	r24, r24
 aae:	99 0b       	sbc	r25, r25
 ab0:	0e 5f       	subi	r16, 0xFE	; 254
 ab2:	1f 4f       	sbci	r17, 0xFF	; 255
 ab4:	f3 2d       	mov	r31, r3
 ab6:	ff 76       	andi	r31, 0x6F	; 111
 ab8:	3f 2e       	mov	r3, r31
 aba:	97 ff       	sbrs	r25, 7
 abc:	09 c0       	rjmp	.+18     	; 0xad0 <vfprintf+0x230>
 abe:	90 95       	com	r25
 ac0:	80 95       	com	r24
 ac2:	70 95       	com	r23
 ac4:	61 95       	neg	r22
 ac6:	7f 4f       	sbci	r23, 0xFF	; 255
 ac8:	8f 4f       	sbci	r24, 0xFF	; 255
 aca:	9f 4f       	sbci	r25, 0xFF	; 255
 acc:	f0 68       	ori	r31, 0x80	; 128
 ace:	3f 2e       	mov	r3, r31
 ad0:	2a e0       	ldi	r18, 0x0A	; 10
 ad2:	30 e0       	ldi	r19, 0x00	; 0
 ad4:	a3 01       	movw	r20, r6
 ad6:	33 d1       	rcall	.+614    	; 0xd3e <__ultoa_invert>
 ad8:	88 2e       	mov	r8, r24
 ada:	86 18       	sub	r8, r6
 adc:	44 c0       	rjmp	.+136    	; 0xb66 <vfprintf+0x2c6>
 ade:	85 37       	cpi	r24, 0x75	; 117
 ae0:	31 f4       	brne	.+12     	; 0xaee <vfprintf+0x24e>
 ae2:	23 2d       	mov	r18, r3
 ae4:	2f 7e       	andi	r18, 0xEF	; 239
 ae6:	b2 2e       	mov	r11, r18
 ae8:	2a e0       	ldi	r18, 0x0A	; 10
 aea:	30 e0       	ldi	r19, 0x00	; 0
 aec:	25 c0       	rjmp	.+74     	; 0xb38 <vfprintf+0x298>
 aee:	93 2d       	mov	r25, r3
 af0:	99 7f       	andi	r25, 0xF9	; 249
 af2:	b9 2e       	mov	r11, r25
 af4:	8f 36       	cpi	r24, 0x6F	; 111
 af6:	c1 f0       	breq	.+48     	; 0xb28 <vfprintf+0x288>
 af8:	18 f4       	brcc	.+6      	; 0xb00 <vfprintf+0x260>
 afa:	88 35       	cpi	r24, 0x58	; 88
 afc:	79 f0       	breq	.+30     	; 0xb1c <vfprintf+0x27c>
 afe:	ae c0       	rjmp	.+348    	; 0xc5c <vfprintf+0x3bc>
 b00:	80 37       	cpi	r24, 0x70	; 112
 b02:	19 f0       	breq	.+6      	; 0xb0a <vfprintf+0x26a>
 b04:	88 37       	cpi	r24, 0x78	; 120
 b06:	21 f0       	breq	.+8      	; 0xb10 <vfprintf+0x270>
 b08:	a9 c0       	rjmp	.+338    	; 0xc5c <vfprintf+0x3bc>
 b0a:	e9 2f       	mov	r30, r25
 b0c:	e0 61       	ori	r30, 0x10	; 16
 b0e:	be 2e       	mov	r11, r30
 b10:	b4 fe       	sbrs	r11, 4
 b12:	0d c0       	rjmp	.+26     	; 0xb2e <vfprintf+0x28e>
 b14:	fb 2d       	mov	r31, r11
 b16:	f4 60       	ori	r31, 0x04	; 4
 b18:	bf 2e       	mov	r11, r31
 b1a:	09 c0       	rjmp	.+18     	; 0xb2e <vfprintf+0x28e>
 b1c:	34 fe       	sbrs	r3, 4
 b1e:	0a c0       	rjmp	.+20     	; 0xb34 <vfprintf+0x294>
 b20:	29 2f       	mov	r18, r25
 b22:	26 60       	ori	r18, 0x06	; 6
 b24:	b2 2e       	mov	r11, r18
 b26:	06 c0       	rjmp	.+12     	; 0xb34 <vfprintf+0x294>
 b28:	28 e0       	ldi	r18, 0x08	; 8
 b2a:	30 e0       	ldi	r19, 0x00	; 0
 b2c:	05 c0       	rjmp	.+10     	; 0xb38 <vfprintf+0x298>
 b2e:	20 e1       	ldi	r18, 0x10	; 16
 b30:	30 e0       	ldi	r19, 0x00	; 0
 b32:	02 c0       	rjmp	.+4      	; 0xb38 <vfprintf+0x298>
 b34:	20 e1       	ldi	r18, 0x10	; 16
 b36:	32 e0       	ldi	r19, 0x02	; 2
 b38:	f8 01       	movw	r30, r16
 b3a:	b7 fe       	sbrs	r11, 7
 b3c:	07 c0       	rjmp	.+14     	; 0xb4c <vfprintf+0x2ac>
 b3e:	60 81       	ld	r22, Z
 b40:	71 81       	ldd	r23, Z+1	; 0x01
 b42:	82 81       	ldd	r24, Z+2	; 0x02
 b44:	93 81       	ldd	r25, Z+3	; 0x03
 b46:	0c 5f       	subi	r16, 0xFC	; 252
 b48:	1f 4f       	sbci	r17, 0xFF	; 255
 b4a:	06 c0       	rjmp	.+12     	; 0xb58 <vfprintf+0x2b8>
 b4c:	60 81       	ld	r22, Z
 b4e:	71 81       	ldd	r23, Z+1	; 0x01
 b50:	80 e0       	ldi	r24, 0x00	; 0
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	0e 5f       	subi	r16, 0xFE	; 254
 b56:	1f 4f       	sbci	r17, 0xFF	; 255
 b58:	a3 01       	movw	r20, r6
 b5a:	f1 d0       	rcall	.+482    	; 0xd3e <__ultoa_invert>
 b5c:	88 2e       	mov	r8, r24
 b5e:	86 18       	sub	r8, r6
 b60:	fb 2d       	mov	r31, r11
 b62:	ff 77       	andi	r31, 0x7F	; 127
 b64:	3f 2e       	mov	r3, r31
 b66:	36 fe       	sbrs	r3, 6
 b68:	0d c0       	rjmp	.+26     	; 0xb84 <vfprintf+0x2e4>
 b6a:	23 2d       	mov	r18, r3
 b6c:	2e 7f       	andi	r18, 0xFE	; 254
 b6e:	a2 2e       	mov	r10, r18
 b70:	89 14       	cp	r8, r9
 b72:	58 f4       	brcc	.+22     	; 0xb8a <vfprintf+0x2ea>
 b74:	34 fe       	sbrs	r3, 4
 b76:	0b c0       	rjmp	.+22     	; 0xb8e <vfprintf+0x2ee>
 b78:	32 fc       	sbrc	r3, 2
 b7a:	09 c0       	rjmp	.+18     	; 0xb8e <vfprintf+0x2ee>
 b7c:	83 2d       	mov	r24, r3
 b7e:	8e 7e       	andi	r24, 0xEE	; 238
 b80:	a8 2e       	mov	r10, r24
 b82:	05 c0       	rjmp	.+10     	; 0xb8e <vfprintf+0x2ee>
 b84:	b8 2c       	mov	r11, r8
 b86:	a3 2c       	mov	r10, r3
 b88:	03 c0       	rjmp	.+6      	; 0xb90 <vfprintf+0x2f0>
 b8a:	b8 2c       	mov	r11, r8
 b8c:	01 c0       	rjmp	.+2      	; 0xb90 <vfprintf+0x2f0>
 b8e:	b9 2c       	mov	r11, r9
 b90:	a4 fe       	sbrs	r10, 4
 b92:	0f c0       	rjmp	.+30     	; 0xbb2 <vfprintf+0x312>
 b94:	fe 01       	movw	r30, r28
 b96:	e8 0d       	add	r30, r8
 b98:	f1 1d       	adc	r31, r1
 b9a:	80 81       	ld	r24, Z
 b9c:	80 33       	cpi	r24, 0x30	; 48
 b9e:	21 f4       	brne	.+8      	; 0xba8 <vfprintf+0x308>
 ba0:	9a 2d       	mov	r25, r10
 ba2:	99 7e       	andi	r25, 0xE9	; 233
 ba4:	a9 2e       	mov	r10, r25
 ba6:	09 c0       	rjmp	.+18     	; 0xbba <vfprintf+0x31a>
 ba8:	a2 fe       	sbrs	r10, 2
 baa:	06 c0       	rjmp	.+12     	; 0xbb8 <vfprintf+0x318>
 bac:	b3 94       	inc	r11
 bae:	b3 94       	inc	r11
 bb0:	04 c0       	rjmp	.+8      	; 0xbba <vfprintf+0x31a>
 bb2:	8a 2d       	mov	r24, r10
 bb4:	86 78       	andi	r24, 0x86	; 134
 bb6:	09 f0       	breq	.+2      	; 0xbba <vfprintf+0x31a>
 bb8:	b3 94       	inc	r11
 bba:	a3 fc       	sbrc	r10, 3
 bbc:	10 c0       	rjmp	.+32     	; 0xbde <vfprintf+0x33e>
 bbe:	a0 fe       	sbrs	r10, 0
 bc0:	06 c0       	rjmp	.+12     	; 0xbce <vfprintf+0x32e>
 bc2:	b2 14       	cp	r11, r2
 bc4:	80 f4       	brcc	.+32     	; 0xbe6 <vfprintf+0x346>
 bc6:	28 0c       	add	r2, r8
 bc8:	92 2c       	mov	r9, r2
 bca:	9b 18       	sub	r9, r11
 bcc:	0d c0       	rjmp	.+26     	; 0xbe8 <vfprintf+0x348>
 bce:	b2 14       	cp	r11, r2
 bd0:	58 f4       	brcc	.+22     	; 0xbe8 <vfprintf+0x348>
 bd2:	b6 01       	movw	r22, r12
 bd4:	80 e2       	ldi	r24, 0x20	; 32
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	76 d0       	rcall	.+236    	; 0xcc6 <fputc>
 bda:	b3 94       	inc	r11
 bdc:	f8 cf       	rjmp	.-16     	; 0xbce <vfprintf+0x32e>
 bde:	b2 14       	cp	r11, r2
 be0:	18 f4       	brcc	.+6      	; 0xbe8 <vfprintf+0x348>
 be2:	2b 18       	sub	r2, r11
 be4:	02 c0       	rjmp	.+4      	; 0xbea <vfprintf+0x34a>
 be6:	98 2c       	mov	r9, r8
 be8:	21 2c       	mov	r2, r1
 bea:	a4 fe       	sbrs	r10, 4
 bec:	0f c0       	rjmp	.+30     	; 0xc0c <vfprintf+0x36c>
 bee:	b6 01       	movw	r22, r12
 bf0:	80 e3       	ldi	r24, 0x30	; 48
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	68 d0       	rcall	.+208    	; 0xcc6 <fputc>
 bf6:	a2 fe       	sbrs	r10, 2
 bf8:	16 c0       	rjmp	.+44     	; 0xc26 <vfprintf+0x386>
 bfa:	a1 fc       	sbrc	r10, 1
 bfc:	03 c0       	rjmp	.+6      	; 0xc04 <vfprintf+0x364>
 bfe:	88 e7       	ldi	r24, 0x78	; 120
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	02 c0       	rjmp	.+4      	; 0xc08 <vfprintf+0x368>
 c04:	88 e5       	ldi	r24, 0x58	; 88
 c06:	90 e0       	ldi	r25, 0x00	; 0
 c08:	b6 01       	movw	r22, r12
 c0a:	0c c0       	rjmp	.+24     	; 0xc24 <vfprintf+0x384>
 c0c:	8a 2d       	mov	r24, r10
 c0e:	86 78       	andi	r24, 0x86	; 134
 c10:	51 f0       	breq	.+20     	; 0xc26 <vfprintf+0x386>
 c12:	a1 fe       	sbrs	r10, 1
 c14:	02 c0       	rjmp	.+4      	; 0xc1a <vfprintf+0x37a>
 c16:	8b e2       	ldi	r24, 0x2B	; 43
 c18:	01 c0       	rjmp	.+2      	; 0xc1c <vfprintf+0x37c>
 c1a:	80 e2       	ldi	r24, 0x20	; 32
 c1c:	a7 fc       	sbrc	r10, 7
 c1e:	8d e2       	ldi	r24, 0x2D	; 45
 c20:	b6 01       	movw	r22, r12
 c22:	90 e0       	ldi	r25, 0x00	; 0
 c24:	50 d0       	rcall	.+160    	; 0xcc6 <fputc>
 c26:	89 14       	cp	r8, r9
 c28:	30 f4       	brcc	.+12     	; 0xc36 <vfprintf+0x396>
 c2a:	b6 01       	movw	r22, r12
 c2c:	80 e3       	ldi	r24, 0x30	; 48
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	4a d0       	rcall	.+148    	; 0xcc6 <fputc>
 c32:	9a 94       	dec	r9
 c34:	f8 cf       	rjmp	.-16     	; 0xc26 <vfprintf+0x386>
 c36:	8a 94       	dec	r8
 c38:	f3 01       	movw	r30, r6
 c3a:	e8 0d       	add	r30, r8
 c3c:	f1 1d       	adc	r31, r1
 c3e:	80 81       	ld	r24, Z
 c40:	b6 01       	movw	r22, r12
 c42:	90 e0       	ldi	r25, 0x00	; 0
 c44:	40 d0       	rcall	.+128    	; 0xcc6 <fputc>
 c46:	81 10       	cpse	r8, r1
 c48:	f6 cf       	rjmp	.-20     	; 0xc36 <vfprintf+0x396>
 c4a:	22 20       	and	r2, r2
 c4c:	09 f4       	brne	.+2      	; 0xc50 <vfprintf+0x3b0>
 c4e:	4e ce       	rjmp	.-868    	; 0x8ec <vfprintf+0x4c>
 c50:	b6 01       	movw	r22, r12
 c52:	80 e2       	ldi	r24, 0x20	; 32
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	37 d0       	rcall	.+110    	; 0xcc6 <fputc>
 c58:	2a 94       	dec	r2
 c5a:	f7 cf       	rjmp	.-18     	; 0xc4a <vfprintf+0x3aa>
 c5c:	f6 01       	movw	r30, r12
 c5e:	86 81       	ldd	r24, Z+6	; 0x06
 c60:	97 81       	ldd	r25, Z+7	; 0x07
 c62:	02 c0       	rjmp	.+4      	; 0xc68 <vfprintf+0x3c8>
 c64:	8f ef       	ldi	r24, 0xFF	; 255
 c66:	9f ef       	ldi	r25, 0xFF	; 255
 c68:	2b 96       	adiw	r28, 0x0b	; 11
 c6a:	0f b6       	in	r0, 0x3f	; 63
 c6c:	f8 94       	cli
 c6e:	de bf       	out	0x3e, r29	; 62
 c70:	0f be       	out	0x3f, r0	; 63
 c72:	cd bf       	out	0x3d, r28	; 61
 c74:	df 91       	pop	r29
 c76:	cf 91       	pop	r28
 c78:	1f 91       	pop	r17
 c7a:	0f 91       	pop	r16
 c7c:	ff 90       	pop	r15
 c7e:	ef 90       	pop	r14
 c80:	df 90       	pop	r13
 c82:	cf 90       	pop	r12
 c84:	bf 90       	pop	r11
 c86:	af 90       	pop	r10
 c88:	9f 90       	pop	r9
 c8a:	8f 90       	pop	r8
 c8c:	7f 90       	pop	r7
 c8e:	6f 90       	pop	r6
 c90:	5f 90       	pop	r5
 c92:	4f 90       	pop	r4
 c94:	3f 90       	pop	r3
 c96:	2f 90       	pop	r2
 c98:	08 95       	ret

00000c9a <strnlen_P>:
 c9a:	fc 01       	movw	r30, r24
 c9c:	05 90       	lpm	r0, Z+
 c9e:	61 50       	subi	r22, 0x01	; 1
 ca0:	70 40       	sbci	r23, 0x00	; 0
 ca2:	01 10       	cpse	r0, r1
 ca4:	d8 f7       	brcc	.-10     	; 0xc9c <strnlen_P+0x2>
 ca6:	80 95       	com	r24
 ca8:	90 95       	com	r25
 caa:	8e 0f       	add	r24, r30
 cac:	9f 1f       	adc	r25, r31
 cae:	08 95       	ret

00000cb0 <strnlen>:
 cb0:	fc 01       	movw	r30, r24
 cb2:	61 50       	subi	r22, 0x01	; 1
 cb4:	70 40       	sbci	r23, 0x00	; 0
 cb6:	01 90       	ld	r0, Z+
 cb8:	01 10       	cpse	r0, r1
 cba:	d8 f7       	brcc	.-10     	; 0xcb2 <strnlen+0x2>
 cbc:	80 95       	com	r24
 cbe:	90 95       	com	r25
 cc0:	8e 0f       	add	r24, r30
 cc2:	9f 1f       	adc	r25, r31
 cc4:	08 95       	ret

00000cc6 <fputc>:
 cc6:	0f 93       	push	r16
 cc8:	1f 93       	push	r17
 cca:	cf 93       	push	r28
 ccc:	df 93       	push	r29
 cce:	fb 01       	movw	r30, r22
 cd0:	23 81       	ldd	r18, Z+3	; 0x03
 cd2:	21 fd       	sbrc	r18, 1
 cd4:	03 c0       	rjmp	.+6      	; 0xcdc <fputc+0x16>
 cd6:	8f ef       	ldi	r24, 0xFF	; 255
 cd8:	9f ef       	ldi	r25, 0xFF	; 255
 cda:	2c c0       	rjmp	.+88     	; 0xd34 <fputc+0x6e>
 cdc:	22 ff       	sbrs	r18, 2
 cde:	16 c0       	rjmp	.+44     	; 0xd0c <fputc+0x46>
 ce0:	46 81       	ldd	r20, Z+6	; 0x06
 ce2:	57 81       	ldd	r21, Z+7	; 0x07
 ce4:	24 81       	ldd	r18, Z+4	; 0x04
 ce6:	35 81       	ldd	r19, Z+5	; 0x05
 ce8:	42 17       	cp	r20, r18
 cea:	53 07       	cpc	r21, r19
 cec:	44 f4       	brge	.+16     	; 0xcfe <fputc+0x38>
 cee:	a0 81       	ld	r26, Z
 cf0:	b1 81       	ldd	r27, Z+1	; 0x01
 cf2:	9d 01       	movw	r18, r26
 cf4:	2f 5f       	subi	r18, 0xFF	; 255
 cf6:	3f 4f       	sbci	r19, 0xFF	; 255
 cf8:	31 83       	std	Z+1, r19	; 0x01
 cfa:	20 83       	st	Z, r18
 cfc:	8c 93       	st	X, r24
 cfe:	26 81       	ldd	r18, Z+6	; 0x06
 d00:	37 81       	ldd	r19, Z+7	; 0x07
 d02:	2f 5f       	subi	r18, 0xFF	; 255
 d04:	3f 4f       	sbci	r19, 0xFF	; 255
 d06:	37 83       	std	Z+7, r19	; 0x07
 d08:	26 83       	std	Z+6, r18	; 0x06
 d0a:	14 c0       	rjmp	.+40     	; 0xd34 <fputc+0x6e>
 d0c:	8b 01       	movw	r16, r22
 d0e:	ec 01       	movw	r28, r24
 d10:	fb 01       	movw	r30, r22
 d12:	00 84       	ldd	r0, Z+8	; 0x08
 d14:	f1 85       	ldd	r31, Z+9	; 0x09
 d16:	e0 2d       	mov	r30, r0
 d18:	19 95       	eicall
 d1a:	89 2b       	or	r24, r25
 d1c:	e1 f6       	brne	.-72     	; 0xcd6 <fputc+0x10>
 d1e:	d8 01       	movw	r26, r16
 d20:	16 96       	adiw	r26, 0x06	; 6
 d22:	8d 91       	ld	r24, X+
 d24:	9c 91       	ld	r25, X
 d26:	17 97       	sbiw	r26, 0x07	; 7
 d28:	01 96       	adiw	r24, 0x01	; 1
 d2a:	17 96       	adiw	r26, 0x07	; 7
 d2c:	9c 93       	st	X, r25
 d2e:	8e 93       	st	-X, r24
 d30:	16 97       	sbiw	r26, 0x06	; 6
 d32:	ce 01       	movw	r24, r28
 d34:	df 91       	pop	r29
 d36:	cf 91       	pop	r28
 d38:	1f 91       	pop	r17
 d3a:	0f 91       	pop	r16
 d3c:	08 95       	ret

00000d3e <__ultoa_invert>:
 d3e:	fa 01       	movw	r30, r20
 d40:	aa 27       	eor	r26, r26
 d42:	28 30       	cpi	r18, 0x08	; 8
 d44:	51 f1       	breq	.+84     	; 0xd9a <__ultoa_invert+0x5c>
 d46:	20 31       	cpi	r18, 0x10	; 16
 d48:	81 f1       	breq	.+96     	; 0xdaa <__ultoa_invert+0x6c>
 d4a:	e8 94       	clt
 d4c:	6f 93       	push	r22
 d4e:	6e 7f       	andi	r22, 0xFE	; 254
 d50:	6e 5f       	subi	r22, 0xFE	; 254
 d52:	7f 4f       	sbci	r23, 0xFF	; 255
 d54:	8f 4f       	sbci	r24, 0xFF	; 255
 d56:	9f 4f       	sbci	r25, 0xFF	; 255
 d58:	af 4f       	sbci	r26, 0xFF	; 255
 d5a:	b1 e0       	ldi	r27, 0x01	; 1
 d5c:	3e d0       	rcall	.+124    	; 0xdda <__ultoa_invert+0x9c>
 d5e:	b4 e0       	ldi	r27, 0x04	; 4
 d60:	3c d0       	rcall	.+120    	; 0xdda <__ultoa_invert+0x9c>
 d62:	67 0f       	add	r22, r23
 d64:	78 1f       	adc	r23, r24
 d66:	89 1f       	adc	r24, r25
 d68:	9a 1f       	adc	r25, r26
 d6a:	a1 1d       	adc	r26, r1
 d6c:	68 0f       	add	r22, r24
 d6e:	79 1f       	adc	r23, r25
 d70:	8a 1f       	adc	r24, r26
 d72:	91 1d       	adc	r25, r1
 d74:	a1 1d       	adc	r26, r1
 d76:	6a 0f       	add	r22, r26
 d78:	71 1d       	adc	r23, r1
 d7a:	81 1d       	adc	r24, r1
 d7c:	91 1d       	adc	r25, r1
 d7e:	a1 1d       	adc	r26, r1
 d80:	20 d0       	rcall	.+64     	; 0xdc2 <__ultoa_invert+0x84>
 d82:	09 f4       	brne	.+2      	; 0xd86 <__ultoa_invert+0x48>
 d84:	68 94       	set
 d86:	3f 91       	pop	r19
 d88:	2a e0       	ldi	r18, 0x0A	; 10
 d8a:	26 9f       	mul	r18, r22
 d8c:	11 24       	eor	r1, r1
 d8e:	30 19       	sub	r19, r0
 d90:	30 5d       	subi	r19, 0xD0	; 208
 d92:	31 93       	st	Z+, r19
 d94:	de f6       	brtc	.-74     	; 0xd4c <__ultoa_invert+0xe>
 d96:	cf 01       	movw	r24, r30
 d98:	08 95       	ret
 d9a:	46 2f       	mov	r20, r22
 d9c:	47 70       	andi	r20, 0x07	; 7
 d9e:	40 5d       	subi	r20, 0xD0	; 208
 da0:	41 93       	st	Z+, r20
 da2:	b3 e0       	ldi	r27, 0x03	; 3
 da4:	0f d0       	rcall	.+30     	; 0xdc4 <__ultoa_invert+0x86>
 da6:	c9 f7       	brne	.-14     	; 0xd9a <__ultoa_invert+0x5c>
 da8:	f6 cf       	rjmp	.-20     	; 0xd96 <__ultoa_invert+0x58>
 daa:	46 2f       	mov	r20, r22
 dac:	4f 70       	andi	r20, 0x0F	; 15
 dae:	40 5d       	subi	r20, 0xD0	; 208
 db0:	4a 33       	cpi	r20, 0x3A	; 58
 db2:	18 f0       	brcs	.+6      	; 0xdba <__ultoa_invert+0x7c>
 db4:	49 5d       	subi	r20, 0xD9	; 217
 db6:	31 fd       	sbrc	r19, 1
 db8:	40 52       	subi	r20, 0x20	; 32
 dba:	41 93       	st	Z+, r20
 dbc:	02 d0       	rcall	.+4      	; 0xdc2 <__ultoa_invert+0x84>
 dbe:	a9 f7       	brne	.-22     	; 0xdaa <__ultoa_invert+0x6c>
 dc0:	ea cf       	rjmp	.-44     	; 0xd96 <__ultoa_invert+0x58>
 dc2:	b4 e0       	ldi	r27, 0x04	; 4
 dc4:	a6 95       	lsr	r26
 dc6:	97 95       	ror	r25
 dc8:	87 95       	ror	r24
 dca:	77 95       	ror	r23
 dcc:	67 95       	ror	r22
 dce:	ba 95       	dec	r27
 dd0:	c9 f7       	brne	.-14     	; 0xdc4 <__ultoa_invert+0x86>
 dd2:	00 97       	sbiw	r24, 0x00	; 0
 dd4:	61 05       	cpc	r22, r1
 dd6:	71 05       	cpc	r23, r1
 dd8:	08 95       	ret
 dda:	9b 01       	movw	r18, r22
 ddc:	ac 01       	movw	r20, r24
 dde:	0a 2e       	mov	r0, r26
 de0:	06 94       	lsr	r0
 de2:	57 95       	ror	r21
 de4:	47 95       	ror	r20
 de6:	37 95       	ror	r19
 de8:	27 95       	ror	r18
 dea:	ba 95       	dec	r27
 dec:	c9 f7       	brne	.-14     	; 0xde0 <__ultoa_invert+0xa2>
 dee:	62 0f       	add	r22, r18
 df0:	73 1f       	adc	r23, r19
 df2:	84 1f       	adc	r24, r20
 df4:	95 1f       	adc	r25, r21
 df6:	a0 1d       	adc	r26, r0
 df8:	08 95       	ret

00000dfa <_exit>:
 dfa:	f8 94       	cli

00000dfc <__stop_program>:
 dfc:	ff cf       	rjmp	.-2      	; 0xdfc <__stop_program>
