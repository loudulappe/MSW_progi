
Reparatur LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800200  00000e32  00000ec6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  0080027a  0080027a  00000f40  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f40  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002487  00000000  00000000  000011cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f0f  00000000  00000000  00003653  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014ad  00000000  00000000  00004562  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000690  00000000  00000000  00005a10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c94  00000000  00000000  000060a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b24  00000000  00000000  00006d34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008858  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	ab c3       	rjmp	.+1878   	; 0x7b4 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e3       	ldi	r30, 0x32	; 50
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	aa 37       	cpi	r26, 0x7A	; 122
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	aa e7       	ldi	r26, 0x7A	; 122
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 3f       	cpi	r26, 0xF8	; 248
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	86 c6       	rjmp	.+3340   	; 0xe2e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#include "ucBoardDriver.h"


int main(void)
{
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	e0 d1       	rcall	.+960    	; 0x4e8 <initBoard>
    while (1) 
    {
        lcdShowText("alive");
 128:	88 e0       	ldi	r24, 0x08	; 8
 12a:	92 e0       	ldi	r25, 0x02	; 2
 12c:	9f 93       	push	r25
 12e:	8f 93       	push	r24
 130:	40 d1       	rcall	.+640    	; 0x3b2 <lcdShowText>
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
 136:	f8 cf       	rjmp	.-16     	; 0x128 <main+0x4>

00000138 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 138:	82 b9       	out	0x02, r24	; 2
 13a:	95 b9       	out	0x05, r25	; 5
 13c:	08 95       	ret

0000013e <buttonReadAllPL>:
 13e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
 142:	08 95       	ret

00000144 <startSystemTimeMs>:
 144:	83 e0       	ldi	r24, 0x03	; 3
 146:	84 bd       	out	0x24, r24	; 36
 148:	8b e0       	ldi	r24, 0x0B	; 11
 14a:	85 bd       	out	0x25, r24	; 37
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 152:	89 ef       	ldi	r24, 0xF9	; 249
 154:	87 bd       	out	0x27, r24	; 39
 156:	08 95       	ret

00000158 <initAdc>:
 158:	11 ba       	out	0x11, r1	; 17
 15a:	10 ba       	out	0x10, r1	; 16
 15c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 160:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 164:	80 e4       	ldi	r24, 0x40	; 64
 166:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 16a:	8f e0       	ldi	r24, 0x0F	; 15
 16c:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
 176:	ea e7       	ldi	r30, 0x7A	; 122
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	87 ea       	ldi	r24, 0xA7	; 167
 17c:	80 83       	st	Z, r24
 17e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 182:	80 81       	ld	r24, Z
 184:	80 64       	ori	r24, 0x40	; 64
 186:	80 83       	st	Z, r24
 188:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 18c:	84 ff       	sbrs	r24, 4
 18e:	fc cf       	rjmp	.-8      	; 0x188 <initAdc+0x30>
 190:	ea e7       	ldi	r30, 0x7A	; 122
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	8f 7e       	andi	r24, 0xEF	; 239
 198:	80 83       	st	Z, r24
 19a:	08 95       	ret

0000019c <rgbWrite>:
 19c:	2f ef       	ldi	r18, 0xFF	; 255
 19e:	33 e0       	ldi	r19, 0x03	; 3
 1a0:	f9 01       	movw	r30, r18
 1a2:	e8 1b       	sub	r30, r24
 1a4:	f9 0b       	sbc	r31, r25
 1a6:	c9 01       	movw	r24, r18
 1a8:	86 1b       	sub	r24, r22
 1aa:	97 0b       	sbc	r25, r23
 1ac:	24 1b       	sub	r18, r20
 1ae:	35 0b       	sbc	r19, r21
 1b0:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
 1b4:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
 1b8:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
 1bc:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
 1c0:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
 1c4:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
 1c8:	08 95       	ret

000001ca <initRgb>:
 1ca:	8e ef       	ldi	r24, 0xFE	; 254
 1cc:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 1d0:	8b e1       	ldi	r24, 0x1B	; 27
 1d2:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 1d6:	83 e0       	ldi	r24, 0x03	; 3
 1d8:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
 1dc:	8f ef       	ldi	r24, 0xFF	; 255
 1de:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
 1e2:	40 e0       	ldi	r20, 0x00	; 0
 1e4:	50 e0       	ldi	r21, 0x00	; 0
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	d6 cf       	rjmp	.-84     	; 0x19c <rgbWrite>
 1f0:	08 95       	ret

000001f2 <lcdSid>:
 1f2:	88 23       	and	r24, r24
 1f4:	21 f0       	breq	.+8      	; 0x1fe <lcdSid+0xc>
 1f6:	84 b3       	in	r24, 0x14	; 20
 1f8:	81 60       	ori	r24, 0x01	; 1
 1fa:	84 bb       	out	0x14, r24	; 20
 1fc:	08 95       	ret
 1fe:	84 b3       	in	r24, 0x14	; 20
 200:	8e 7f       	andi	r24, 0xFE	; 254
 202:	84 bb       	out	0x14, r24	; 20
 204:	08 95       	ret

00000206 <lcdSclk>:
 206:	88 23       	and	r24, r24
 208:	21 f0       	breq	.+8      	; 0x212 <lcdSclk+0xc>
 20a:	84 b3       	in	r24, 0x14	; 20
 20c:	82 60       	ori	r24, 0x02	; 2
 20e:	84 bb       	out	0x14, r24	; 20
 210:	08 95       	ret
 212:	84 b3       	in	r24, 0x14	; 20
 214:	8d 7f       	andi	r24, 0xFD	; 253
 216:	84 bb       	out	0x14, r24	; 20
 218:	08 95       	ret

0000021a <lcdLight>:
 21a:	81 11       	cpse	r24, r1
 21c:	04 c0       	rjmp	.+8      	; 0x226 <lcdLight+0xc>
 21e:	84 b5       	in	r24, 0x24	; 36
 220:	8f 7d       	andi	r24, 0xDF	; 223
 222:	84 bd       	out	0x24, r24	; 36
 224:	08 95       	ret
 226:	94 b5       	in	r25, 0x24	; 36
 228:	90 62       	ori	r25, 0x20	; 32
 22a:	94 bd       	out	0x24, r25	; 36
 22c:	88 bd       	out	0x28, r24	; 40
 22e:	08 95       	ret

00000230 <writeLcdF>:
 230:	ef 92       	push	r14
 232:	ff 92       	push	r15
 234:	0f 93       	push	r16
 236:	1f 93       	push	r17
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	7c 01       	movw	r14, r24
 23e:	eb 01       	movw	r28, r22
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	d7 df       	rcall	.-82     	; 0x1f2 <lcdSid>
 244:	00 e0       	ldi	r16, 0x00	; 0
 246:	10 e0       	ldi	r17, 0x00	; 0
 248:	06 c0       	rjmp	.+12     	; 0x256 <writeLcdF+0x26>
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	dc df       	rcall	.-72     	; 0x206 <lcdSclk>
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	da df       	rcall	.-76     	; 0x206 <lcdSclk>
 252:	0f 5f       	subi	r16, 0xFF	; 255
 254:	1f 4f       	sbci	r17, 0xFF	; 255
 256:	05 30       	cpi	r16, 0x05	; 5
 258:	11 05       	cpc	r17, r1
 25a:	b8 f3       	brcs	.-18     	; 0x24a <writeLcdF+0x1a>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	c9 df       	rcall	.-110    	; 0x1f2 <lcdSid>
 260:	80 e0       	ldi	r24, 0x00	; 0
 262:	d1 df       	rcall	.-94     	; 0x206 <lcdSclk>
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	cf df       	rcall	.-98     	; 0x206 <lcdSclk>
 268:	83 e4       	ldi	r24, 0x43	; 67
 26a:	e8 16       	cp	r14, r24
 26c:	f1 04       	cpc	r15, r1
 26e:	19 f4       	brne	.+6      	; 0x276 <writeLcdF+0x46>
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	bf df       	rcall	.-130    	; 0x1f2 <lcdSid>
 274:	02 c0       	rjmp	.+4      	; 0x27a <writeLcdF+0x4a>
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	bc df       	rcall	.-136    	; 0x1f2 <lcdSid>
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	c4 df       	rcall	.-120    	; 0x206 <lcdSclk>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	c2 df       	rcall	.-124    	; 0x206 <lcdSclk>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	b6 df       	rcall	.-148    	; 0x1f2 <lcdSid>
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	be df       	rcall	.-132    	; 0x206 <lcdSclk>
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	bc df       	rcall	.-136    	; 0x206 <lcdSclk>
 28e:	00 e0       	ldi	r16, 0x00	; 0
 290:	10 e0       	ldi	r17, 0x00	; 0
 292:	11 c0       	rjmp	.+34     	; 0x2b6 <writeLcdF+0x86>
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	b7 df       	rcall	.-146    	; 0x206 <lcdSclk>
 298:	c0 ff       	sbrs	r28, 0
 29a:	03 c0       	rjmp	.+6      	; 0x2a2 <writeLcdF+0x72>
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	a9 df       	rcall	.-174    	; 0x1f2 <lcdSid>
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <writeLcdF+0x76>
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	a6 df       	rcall	.-180    	; 0x1f2 <lcdSid>
 2a6:	d6 95       	lsr	r29
 2a8:	c7 95       	ror	r28
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	ac df       	rcall	.-168    	; 0x206 <lcdSclk>
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	aa df       	rcall	.-172    	; 0x206 <lcdSclk>
 2b2:	0f 5f       	subi	r16, 0xFF	; 255
 2b4:	1f 4f       	sbci	r17, 0xFF	; 255
 2b6:	04 30       	cpi	r16, 0x04	; 4
 2b8:	11 05       	cpc	r17, r1
 2ba:	60 f3       	brcs	.-40     	; 0x294 <writeLcdF+0x64>
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	99 df       	rcall	.-206    	; 0x1f2 <lcdSid>
 2c0:	00 e0       	ldi	r16, 0x00	; 0
 2c2:	10 e0       	ldi	r17, 0x00	; 0
 2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <writeLcdF+0xa2>
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	9e df       	rcall	.-196    	; 0x206 <lcdSclk>
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	9c df       	rcall	.-200    	; 0x206 <lcdSclk>
 2ce:	0f 5f       	subi	r16, 0xFF	; 255
 2d0:	1f 4f       	sbci	r17, 0xFF	; 255
 2d2:	04 30       	cpi	r16, 0x04	; 4
 2d4:	11 05       	cpc	r17, r1
 2d6:	b8 f3       	brcs	.-18     	; 0x2c6 <writeLcdF+0x96>
 2d8:	00 e0       	ldi	r16, 0x00	; 0
 2da:	10 e0       	ldi	r17, 0x00	; 0
 2dc:	11 c0       	rjmp	.+34     	; 0x300 <writeLcdF+0xd0>
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	92 df       	rcall	.-220    	; 0x206 <lcdSclk>
 2e2:	c0 ff       	sbrs	r28, 0
 2e4:	03 c0       	rjmp	.+6      	; 0x2ec <writeLcdF+0xbc>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	84 df       	rcall	.-248    	; 0x1f2 <lcdSid>
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <writeLcdF+0xc0>
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	81 df       	rcall	.-254    	; 0x1f2 <lcdSid>
 2f0:	d6 95       	lsr	r29
 2f2:	c7 95       	ror	r28
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	87 df       	rcall	.-242    	; 0x206 <lcdSclk>
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	85 df       	rcall	.-246    	; 0x206 <lcdSclk>
 2fc:	0f 5f       	subi	r16, 0xFF	; 255
 2fe:	1f 4f       	sbci	r17, 0xFF	; 255
 300:	04 30       	cpi	r16, 0x04	; 4
 302:	11 05       	cpc	r17, r1
 304:	60 f3       	brcs	.-40     	; 0x2de <writeLcdF+0xae>
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	74 df       	rcall	.-280    	; 0x1f2 <lcdSid>
 30a:	c0 e0       	ldi	r28, 0x00	; 0
 30c:	d0 e0       	ldi	r29, 0x00	; 0
 30e:	05 c0       	rjmp	.+10     	; 0x31a <writeLcdF+0xea>
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	79 df       	rcall	.-270    	; 0x206 <lcdSclk>
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	77 df       	rcall	.-274    	; 0x206 <lcdSclk>
 318:	21 96       	adiw	r28, 0x01	; 1
 31a:	c4 30       	cpi	r28, 0x04	; 4
 31c:	d1 05       	cpc	r29, r1
 31e:	c0 f3       	brcs	.-16     	; 0x310 <writeLcdF+0xe0>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	67 df       	rcall	.-306    	; 0x1f2 <lcdSid>
 324:	87 ec       	ldi	r24, 0xC7	; 199
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <writeLcdF+0xf8>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <writeLcdF+0xfe>
 32e:	00 00       	nop
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	1f 91       	pop	r17
 336:	0f 91       	pop	r16
 338:	ff 90       	pop	r15
 33a:	ef 90       	pop	r14
 33c:	08 95       	ret

0000033e <lcdWriteText>:
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	cd b7       	in	r28, 0x3d	; 61
 346:	de b7       	in	r29, 0x3e	; 62
 348:	65 97       	sbiw	r28, 0x15	; 21
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	f8 94       	cli
 34e:	de bf       	out	0x3e, r29	; 62
 350:	0f be       	out	0x3f, r0	; 63
 352:	cd bf       	out	0x3d, r28	; 61
 354:	9e 01       	movw	r18, r28
 356:	20 5e       	subi	r18, 0xE0	; 224
 358:	3f 4f       	sbci	r19, 0xFF	; 255
 35a:	4e 8d       	ldd	r20, Y+30	; 0x1e
 35c:	5f 8d       	ldd	r21, Y+31	; 0x1f
 35e:	65 e1       	ldi	r22, 0x15	; 21
 360:	70 e0       	ldi	r23, 0x00	; 0
 362:	ce 01       	movw	r24, r28
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	7e d2       	rcall	.+1276   	; 0x864 <vsnprintf>
 368:	6d 8d       	ldd	r22, Y+29	; 0x1d
 36a:	8c 8d       	ldd	r24, Y+28	; 0x1c
 36c:	90 e2       	ldi	r25, 0x20	; 32
 36e:	89 9f       	mul	r24, r25
 370:	60 0d       	add	r22, r0
 372:	11 24       	eor	r1, r1
 374:	60 68       	ori	r22, 0x80	; 128
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	83 e4       	ldi	r24, 0x43	; 67
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	59 df       	rcall	.-334    	; 0x230 <writeLcdF>
 37e:	10 e0       	ldi	r17, 0x00	; 0
 380:	05 c0       	rjmp	.+10     	; 0x38c <lcdWriteText+0x4e>
 382:	1f 5f       	subi	r17, 0xFF	; 255
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	84 e4       	ldi	r24, 0x44	; 68
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	52 df       	rcall	.-348    	; 0x230 <writeLcdF>
 38c:	e1 e0       	ldi	r30, 0x01	; 1
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	ec 0f       	add	r30, r28
 392:	fd 1f       	adc	r31, r29
 394:	e1 0f       	add	r30, r17
 396:	f1 1d       	adc	r31, r1
 398:	60 81       	ld	r22, Z
 39a:	61 11       	cpse	r22, r1
 39c:	f2 cf       	rjmp	.-28     	; 0x382 <lcdWriteText+0x44>
 39e:	65 96       	adiw	r28, 0x15	; 21
 3a0:	0f b6       	in	r0, 0x3f	; 63
 3a2:	f8 94       	cli
 3a4:	de bf       	out	0x3e, r29	; 62
 3a6:	0f be       	out	0x3f, r0	; 63
 3a8:	cd bf       	out	0x3d, r28	; 61
 3aa:	df 91       	pop	r29
 3ac:	cf 91       	pop	r28
 3ae:	1f 91       	pop	r17
 3b0:	08 95       	ret

000003b2 <lcdShowText>:
 3b2:	0f 93       	push	r16
 3b4:	1f 93       	push	r17
 3b6:	cf 93       	push	r28
 3b8:	df 93       	push	r29
 3ba:	cd b7       	in	r28, 0x3d	; 61
 3bc:	de b7       	in	r29, 0x3e	; 62
 3be:	c1 55       	subi	r28, 0x51	; 81
 3c0:	d1 09       	sbc	r29, r1
 3c2:	0f b6       	in	r0, 0x3f	; 63
 3c4:	f8 94       	cli
 3c6:	de bf       	out	0x3e, r29	; 62
 3c8:	0f be       	out	0x3f, r0	; 63
 3ca:	cd bf       	out	0x3d, r28	; 61
 3cc:	9e 01       	movw	r18, r28
 3ce:	27 5a       	subi	r18, 0xA7	; 167
 3d0:	3f 4f       	sbci	r19, 0xFF	; 255
 3d2:	f9 01       	movw	r30, r18
 3d4:	41 91       	ld	r20, Z+
 3d6:	51 91       	ld	r21, Z+
 3d8:	9f 01       	movw	r18, r30
 3da:	61 e5       	ldi	r22, 0x51	; 81
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	8e 01       	movw	r16, r28
 3e0:	0f 5f       	subi	r16, 0xFF	; 255
 3e2:	1f 4f       	sbci	r17, 0xFF	; 255
 3e4:	c8 01       	movw	r24, r16
 3e6:	3e d2       	rcall	.+1148   	; 0x864 <vsnprintf>
 3e8:	f8 01       	movw	r30, r16
 3ea:	01 90       	ld	r0, Z+
 3ec:	00 20       	and	r0, r0
 3ee:	e9 f7       	brne	.-6      	; 0x3ea <lcdShowText+0x38>
 3f0:	31 97       	sbiw	r30, 0x01	; 1
 3f2:	cf 01       	movw	r24, r30
 3f4:	80 1b       	sub	r24, r16
 3f6:	91 0b       	sbc	r25, r17
 3f8:	09 c0       	rjmp	.+18     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fa:	e1 e0       	ldi	r30, 0x01	; 1
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	ec 0f       	add	r30, r28
 400:	fd 1f       	adc	r31, r29
 402:	e8 0f       	add	r30, r24
 404:	f9 1f       	adc	r31, r25
 406:	20 e2       	ldi	r18, 0x20	; 32
 408:	20 83       	st	Z, r18
 40a:	01 96       	adiw	r24, 0x01	; 1
 40c:	81 35       	cpi	r24, 0x51	; 81
 40e:	91 05       	cpc	r25, r1
 410:	a0 f3       	brcs	.-24     	; 0x3fa <lcdShowText+0x48>
 412:	62 96       	adiw	r28, 0x12	; 18
 414:	1f ae       	std	Y+63, r1	; 0x3f
 416:	62 97       	sbiw	r28, 0x12	; 18
 418:	ce 01       	movw	r24, r28
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	9f 93       	push	r25
 41e:	8f 93       	push	r24
 420:	1f 92       	push	r1
 422:	1f 92       	push	r1
 424:	8c df       	rcall	.-232    	; 0x33e <lcdWriteText>
 426:	ce 01       	movw	r24, r28
 428:	45 96       	adiw	r24, 0x15	; 21
 42a:	9f 93       	push	r25
 42c:	8f 93       	push	r24
 42e:	1f 92       	push	r1
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	8f 93       	push	r24
 434:	84 df       	rcall	.-248    	; 0x33e <lcdWriteText>
 436:	ce 01       	movw	r24, r28
 438:	89 96       	adiw	r24, 0x29	; 41
 43a:	9f 93       	push	r25
 43c:	8f 93       	push	r24
 43e:	1f 92       	push	r1
 440:	82 e0       	ldi	r24, 0x02	; 2
 442:	8f 93       	push	r24
 444:	7c df       	rcall	.-264    	; 0x33e <lcdWriteText>
 446:	ce 01       	movw	r24, r28
 448:	cd 96       	adiw	r24, 0x3d	; 61
 44a:	9f 93       	push	r25
 44c:	8f 93       	push	r24
 44e:	1f 92       	push	r1
 450:	83 e0       	ldi	r24, 0x03	; 3
 452:	8f 93       	push	r24
 454:	74 df       	rcall	.-280    	; 0x33e <lcdWriteText>
 456:	0f b6       	in	r0, 0x3f	; 63
 458:	f8 94       	cli
 45a:	de bf       	out	0x3e, r29	; 62
 45c:	0f be       	out	0x3f, r0	; 63
 45e:	cd bf       	out	0x3d, r28	; 61
 460:	cf 5a       	subi	r28, 0xAF	; 175
 462:	df 4f       	sbci	r29, 0xFF	; 255
 464:	0f b6       	in	r0, 0x3f	; 63
 466:	f8 94       	cli
 468:	de bf       	out	0x3e, r29	; 62
 46a:	0f be       	out	0x3f, r0	; 63
 46c:	cd bf       	out	0x3d, r28	; 61
 46e:	df 91       	pop	r29
 470:	cf 91       	pop	r28
 472:	1f 91       	pop	r17
 474:	0f 91       	pop	r16
 476:	08 95       	ret

00000478 <lcdClear>:
 478:	61 e0       	ldi	r22, 0x01	; 1
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	83 e4       	ldi	r24, 0x43	; 67
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	d7 de       	rcall	.-594    	; 0x230 <writeLcdF>
 482:	8f e3       	ldi	r24, 0x3F	; 63
 484:	9f e1       	ldi	r25, 0x1F	; 31
 486:	01 97       	sbiw	r24, 0x01	; 1
 488:	f1 f7       	brne	.-4      	; 0x486 <lcdClear+0xe>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <lcdClear+0x14>
 48c:	00 00       	nop
 48e:	86 e3       	ldi	r24, 0x36	; 54
 490:	92 e0       	ldi	r25, 0x02	; 2
 492:	9f 93       	push	r25
 494:	8f 93       	push	r24
 496:	1f 92       	push	r1
 498:	1f 92       	push	r1
 49a:	51 df       	rcall	.-350    	; 0x33e <lcdWriteText>
 49c:	0f 90       	pop	r0
 49e:	0f 90       	pop	r0
 4a0:	0f 90       	pop	r0
 4a2:	0f 90       	pop	r0
 4a4:	08 95       	ret

000004a6 <initLcd>:
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	ae de       	rcall	.-676    	; 0x206 <lcdSclk>
 4aa:	80 e0       	ldi	r24, 0x00	; 0
 4ac:	a2 de       	rcall	.-700    	; 0x1f2 <lcdSid>
 4ae:	64 e3       	ldi	r22, 0x34	; 52
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	83 e4       	ldi	r24, 0x43	; 67
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	bc de       	rcall	.-648    	; 0x230 <writeLcdF>
 4b8:	69 e0       	ldi	r22, 0x09	; 9
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	83 e4       	ldi	r24, 0x43	; 67
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	b7 de       	rcall	.-658    	; 0x230 <writeLcdF>
 4c2:	60 e3       	ldi	r22, 0x30	; 48
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	83 e4       	ldi	r24, 0x43	; 67
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	b2 de       	rcall	.-668    	; 0x230 <writeLcdF>
 4cc:	6c e0       	ldi	r22, 0x0C	; 12
 4ce:	70 e0       	ldi	r23, 0x00	; 0
 4d0:	83 e4       	ldi	r24, 0x43	; 67
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	ad de       	rcall	.-678    	; 0x230 <writeLcdF>
 4d6:	d0 df       	rcall	.-96     	; 0x478 <lcdClear>
 4d8:	67 e0       	ldi	r22, 0x07	; 7
 4da:	70 e0       	ldi	r23, 0x00	; 0
 4dc:	83 e4       	ldi	r24, 0x43	; 67
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	a7 de       	rcall	.-690    	; 0x230 <writeLcdF>
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	9a ce       	rjmp	.-716    	; 0x21a <lcdLight>
 4e6:	08 95       	ret

000004e8 <initBoard>:
 4e8:	ff 92       	push	r15
 4ea:	0f 93       	push	r16
 4ec:	1f 93       	push	r17
 4ee:	cf 93       	push	r28
 4f0:	df 93       	push	r29
 4f2:	c8 2f       	mov	r28, r24
 4f4:	85 b7       	in	r24, 0x35	; 53
 4f6:	85 bf       	out	0x35, r24	; 53
 4f8:	12 b8       	out	0x02, r1	; 2
 4fa:	8f ef       	ldi	r24, 0xFF	; 255
 4fc:	81 b9       	out	0x01, r24	; 1
 4fe:	15 b8       	out	0x05, r1	; 5
 500:	84 b9       	out	0x04, r24	; 4
 502:	88 b9       	out	0x08, r24	; 8
 504:	17 b8       	out	0x07, r1	; 7
 506:	8b b9       	out	0x0b, r24	; 11
 508:	1a b8       	out	0x0a, r1	; 10
 50a:	8e b9       	out	0x0e, r24	; 14
 50c:	1d b8       	out	0x0d, r1	; 13
 50e:	9e b1       	in	r25, 0x0e	; 14
 510:	9b 7f       	andi	r25, 0xFB	; 251
 512:	9e b9       	out	0x0e, r25	; 14
 514:	11 ba       	out	0x11, r1	; 17
 516:	10 ba       	out	0x10, r1	; 16
 518:	94 e0       	ldi	r25, 0x04	; 4
 51a:	94 bb       	out	0x14, r25	; 20
 51c:	93 b3       	in	r25, 0x13	; 19
 51e:	93 60       	ori	r25, 0x03	; 3
 520:	93 bb       	out	0x13, r25	; 19
 522:	93 b3       	in	r25, 0x13	; 19
 524:	90 62       	ori	r25, 0x20	; 32
 526:	93 bb       	out	0x13, r25	; 19
 528:	97 ec       	ldi	r25, 0xC7	; 199
 52a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
 52e:	98 e3       	ldi	r25, 0x38	; 56
 530:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
 534:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
 538:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
 53c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
 540:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
 544:	8c e3       	ldi	r24, 0x3C	; 60
 546:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
 54a:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
 54e:	78 94       	sei
 550:	f9 dd       	rcall	.-1038   	; 0x144 <startSystemTimeMs>
 552:	a9 df       	rcall	.-174    	; 0x4a6 <initLcd>
 554:	01 de       	rcall	.-1022   	; 0x158 <initAdc>
 556:	39 de       	rcall	.-910    	; 0x1ca <initRgb>
 558:	cc 23       	and	r28, r28
 55a:	09 f4       	brne	.+2      	; 0x55e <initBoard+0x76>
 55c:	a3 c0       	rjmp	.+326    	; 0x6a4 <initBoard+0x1bc>
 55e:	8f ef       	ldi	r24, 0xFF	; 255
 560:	5c de       	rcall	.-840    	; 0x21a <lcdLight>
 562:	40 e0       	ldi	r20, 0x00	; 0
 564:	50 e0       	ldi	r21, 0x00	; 0
 566:	6f ef       	ldi	r22, 0xFF	; 255
 568:	73 e0       	ldi	r23, 0x03	; 3
 56a:	80 e0       	ldi	r24, 0x00	; 0
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	16 de       	rcall	.-980    	; 0x19c <rgbWrite>
 570:	83 e2       	ldi	r24, 0x23	; 35
 572:	92 e0       	ldi	r25, 0x02	; 2
 574:	9f 93       	push	r25
 576:	8f 93       	push	r24
 578:	1f 92       	push	r1
 57a:	1f 92       	push	r1
 57c:	e0 de       	rcall	.-576    	; 0x33e <lcdWriteText>
 57e:	88 e3       	ldi	r24, 0x38	; 56
 580:	92 e0       	ldi	r25, 0x02	; 2
 582:	9f 93       	push	r25
 584:	8f 93       	push	r24
 586:	1f 92       	push	r1
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	8f 93       	push	r24
 58c:	d8 de       	rcall	.-592    	; 0x33e <lcdWriteText>
 58e:	8e e0       	ldi	r24, 0x0E	; 14
 590:	92 e0       	ldi	r25, 0x02	; 2
 592:	9f 93       	push	r25
 594:	8f 93       	push	r24
 596:	1f 92       	push	r1
 598:	82 e0       	ldi	r24, 0x02	; 2
 59a:	8f 93       	push	r24
 59c:	d0 de       	rcall	.-608    	; 0x33e <lcdWriteText>
 59e:	8d e4       	ldi	r24, 0x4D	; 77
 5a0:	92 e0       	ldi	r25, 0x02	; 2
 5a2:	9f 93       	push	r25
 5a4:	8f 93       	push	r24
 5a6:	1f 92       	push	r1
 5a8:	83 e0       	ldi	r24, 0x03	; 3
 5aa:	8f 93       	push	r24
 5ac:	c8 de       	rcall	.-624    	; 0x33e <lcdWriteText>
 5ae:	8d b7       	in	r24, 0x3d	; 61
 5b0:	9e b7       	in	r25, 0x3e	; 62
 5b2:	40 96       	adiw	r24, 0x10	; 16
 5b4:	0f b6       	in	r0, 0x3f	; 63
 5b6:	f8 94       	cli
 5b8:	9e bf       	out	0x3e, r25	; 62
 5ba:	0f be       	out	0x3f, r0	; 63
 5bc:	8d bf       	out	0x3d, r24	; 61
 5be:	ff 24       	eor	r15, r15
 5c0:	f3 94       	inc	r15
 5c2:	c0 e0       	ldi	r28, 0x00	; 0
 5c4:	10 e0       	ldi	r17, 0x00	; 0
 5c6:	01 e0       	ldi	r16, 0x01	; 1
 5c8:	d0 e0       	ldi	r29, 0x00	; 0
 5ca:	00 23       	and	r16, r16
 5cc:	51 f0       	breq	.+20     	; 0x5e2 <initBoard+0xfa>
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	90 e8       	ldi	r25, 0x80	; 128
 5d2:	0d 2e       	mov	r0, r29
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <initBoard+0xf2>
 5d6:	96 95       	lsr	r25
 5d8:	87 95       	ror	r24
 5da:	0a 94       	dec	r0
 5dc:	e2 f7       	brpl	.-8      	; 0x5d6 <initBoard+0xee>
 5de:	ac dd       	rcall	.-1192   	; 0x138 <ledWriteAll>
 5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <initBoard+0x10c>
 5e2:	81 e0       	ldi	r24, 0x01	; 1
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0d 2e       	mov	r0, r29
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <initBoard+0x106>
 5ea:	88 0f       	add	r24, r24
 5ec:	99 1f       	adc	r25, r25
 5ee:	0a 94       	dec	r0
 5f0:	e2 f7       	brpl	.-8      	; 0x5ea <initBoard+0x102>
 5f2:	a2 dd       	rcall	.-1212   	; 0x138 <ledWriteAll>
 5f4:	df 5f       	subi	r29, 0xFF	; 255
 5f6:	d1 31       	cpi	r29, 0x11	; 17
 5f8:	28 f0       	brcs	.+10     	; 0x604 <initBoard+0x11c>
 5fa:	81 e0       	ldi	r24, 0x01	; 1
 5fc:	01 11       	cpse	r16, r1
 5fe:	80 e0       	ldi	r24, 0x00	; 0
 600:	08 2f       	mov	r16, r24
 602:	d0 e0       	ldi	r29, 0x00	; 0
 604:	ff 20       	and	r15, r15
 606:	11 f0       	breq	.+4      	; 0x60c <initBoard+0x124>
 608:	ce 5f       	subi	r28, 0xFE	; 254
 60a:	01 c0       	rjmp	.+2      	; 0x60e <initBoard+0x126>
 60c:	c2 50       	subi	r28, 0x02	; 2
 60e:	8c 2f       	mov	r24, r28
 610:	04 de       	rcall	.-1016   	; 0x21a <lcdLight>
 612:	ce 3f       	cpi	r28, 0xFE	; 254
 614:	09 f4       	brne	.+2      	; 0x618 <initBoard+0x130>
 616:	f1 2c       	mov	r15, r1
 618:	c8 37       	cpi	r28, 0x78	; 120
 61a:	11 f4       	brne	.+4      	; 0x620 <initBoard+0x138>
 61c:	ff 24       	eor	r15, r15
 61e:	f3 94       	inc	r15
 620:	11 11       	cpse	r17, r1
 622:	17 c0       	rjmp	.+46     	; 0x652 <initBoard+0x16a>
 624:	8c dd       	rcall	.-1256   	; 0x13e <buttonReadAllPL>
 626:	83 7c       	andi	r24, 0xC3	; 195
 628:	a1 f0       	breq	.+40     	; 0x652 <initBoard+0x16a>
 62a:	40 e0       	ldi	r20, 0x00	; 0
 62c:	50 e0       	ldi	r21, 0x00	; 0
 62e:	66 e2       	ldi	r22, 0x26	; 38
 630:	72 e0       	ldi	r23, 0x02	; 2
 632:	8f ef       	ldi	r24, 0xFF	; 255
 634:	93 e0       	ldi	r25, 0x03	; 3
 636:	b2 dd       	rcall	.-1180   	; 0x19c <rgbWrite>
 638:	82 e6       	ldi	r24, 0x62	; 98
 63a:	92 e0       	ldi	r25, 0x02	; 2
 63c:	9f 93       	push	r25
 63e:	8f 93       	push	r24
 640:	1f 92       	push	r1
 642:	83 e0       	ldi	r24, 0x03	; 3
 644:	8f 93       	push	r24
 646:	7b de       	rcall	.-778    	; 0x33e <lcdWriteText>
 648:	0f 90       	pop	r0
 64a:	0f 90       	pop	r0
 64c:	0f 90       	pop	r0
 64e:	0f 90       	pop	r0
 650:	11 e0       	ldi	r17, 0x01	; 1
 652:	11 23       	and	r17, r17
 654:	19 f0       	breq	.+6      	; 0x65c <initBoard+0x174>
 656:	73 dd       	rcall	.-1306   	; 0x13e <buttonReadAllPL>
 658:	83 7c       	andi	r24, 0xC3	; 195
 65a:	39 f0       	breq	.+14     	; 0x66a <initBoard+0x182>
 65c:	8f ef       	ldi	r24, 0xFF	; 255
 65e:	9c e7       	ldi	r25, 0x7C	; 124
 660:	01 97       	sbiw	r24, 0x01	; 1
 662:	f1 f7       	brne	.-4      	; 0x660 <initBoard+0x178>
 664:	00 c0       	rjmp	.+0      	; 0x666 <initBoard+0x17e>
 666:	00 00       	nop
 668:	b0 cf       	rjmp	.-160    	; 0x5ca <initBoard+0xe2>
 66a:	06 df       	rcall	.-500    	; 0x478 <lcdClear>
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	d5 dd       	rcall	.-1110   	; 0x21a <lcdLight>
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	61 dd       	rcall	.-1342   	; 0x138 <ledWriteAll>
 676:	40 e0       	ldi	r20, 0x00	; 0
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	60 e0       	ldi	r22, 0x00	; 0
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	80 e0       	ldi	r24, 0x00	; 0
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	8c dd       	rcall	.-1256   	; 0x19c <rgbWrite>
 684:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs>
 688:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x1>
 68c:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <systemTimeMs+0x2>
 690:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <systemTimeMs+0x3>
 694:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <systemTimeMs+0x4>
 698:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <systemTimeMs+0x5>
 69c:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <systemTimeMs+0x6>
 6a0:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <systemTimeMs+0x7>
 6a4:	df 91       	pop	r29
 6a6:	cf 91       	pop	r28
 6a8:	1f 91       	pop	r17
 6aa:	0f 91       	pop	r16
 6ac:	ff 90       	pop	r15
 6ae:	08 95       	ret

000006b0 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 6b0:	cf 93       	push	r28
 6b2:	df 93       	push	r29
 6b4:	cd b7       	in	r28, 0x3d	; 61
 6b6:	de b7       	in	r29, 0x3e	; 62
 6b8:	28 97       	sbiw	r28, 0x08	; 8
 6ba:	0f b6       	in	r0, 0x3f	; 63
 6bc:	f8 94       	cli
 6be:	de bf       	out	0x3e, r29	; 62
 6c0:	0f be       	out	0x3f, r0	; 63
 6c2:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 6c4:	88 e0       	ldi	r24, 0x08	; 8
 6c6:	e0 e0       	ldi	r30, 0x00	; 0
 6c8:	f2 e0       	ldi	r31, 0x02	; 2
 6ca:	de 01       	movw	r26, r28
 6cc:	11 96       	adiw	r26, 0x01	; 1
 6ce:	01 90       	ld	r0, Z+
 6d0:	0d 92       	st	X+, r0
 6d2:	8a 95       	dec	r24
 6d4:	e1 f7       	brne	.-8      	; 0x6ce <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6d6:	e5 e0       	ldi	r30, 0x05	; 5
 6d8:	f1 e0       	ldi	r31, 0x01	; 1
 6da:	80 81       	ld	r24, Z
 6dc:	8f 7b       	andi	r24, 0xBF	; 191
 6de:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6e0:	e0 91 7c 02 	lds	r30, 0x027C	; 0x80027c <Zeilen_Nr.2743>
 6e4:	f0 91 7d 02 	lds	r31, 0x027D	; 0x80027d <Zeilen_Nr.2743+0x1>
 6e8:	81 e0       	ldi	r24, 0x01	; 1
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	8c 0f       	add	r24, r28
 6ee:	9d 1f       	adc	r25, r29
 6f0:	e8 0f       	add	r30, r24
 6f2:	f9 1f       	adc	r31, r25
 6f4:	80 81       	ld	r24, Z
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <__data_end+0x1>
 6fc:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <__data_end>
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 700:	80 e0       	ldi	r24, 0x00	; 0
 702:	26 c0       	rjmp	.+76     	; 0x750 <matrixWriteNextLine+0xa0>
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 704:	e7 e3       	ldi	r30, 0x37	; 55
 706:	f0 e0       	ldi	r31, 0x00	; 0
 708:	e8 1b       	sub	r30, r24
 70a:	f1 09       	sbc	r31, r1
 70c:	ee 0f       	add	r30, r30
 70e:	ff 1f       	adc	r31, r31
 710:	e8 57       	subi	r30, 0x78	; 120
 712:	fd 4f       	sbci	r31, 0xFD	; 253
 714:	40 81       	ld	r20, Z
 716:	51 81       	ldd	r21, Z+1	; 0x01
 718:	20 91 7a 02 	lds	r18, 0x027A	; 0x80027a <__data_end>
 71c:	30 91 7b 02 	lds	r19, 0x027B	; 0x80027b <__data_end+0x1>
 720:	24 23       	and	r18, r20
 722:	35 23       	and	r19, r21
 724:	23 2b       	or	r18, r19
 726:	31 f0       	breq	.+12     	; 0x734 <matrixWriteNextLine+0x84>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 728:	e5 e0       	ldi	r30, 0x05	; 5
 72a:	f1 e0       	ldi	r31, 0x01	; 1
 72c:	90 81       	ld	r25, Z
 72e:	90 62       	ori	r25, 0x20	; 32
 730:	90 83       	st	Z, r25
 732:	05 c0       	rjmp	.+10     	; 0x73e <matrixWriteNextLine+0x8e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 734:	e5 e0       	ldi	r30, 0x05	; 5
 736:	f1 e0       	ldi	r31, 0x01	; 1
 738:	90 81       	ld	r25, Z
 73a:	9f 7d       	andi	r25, 0xDF	; 223
 73c:	90 83       	st	Z, r25
        }
        CLOCK_1;
 73e:	e5 e0       	ldi	r30, 0x05	; 5
 740:	f1 e0       	ldi	r31, 0x01	; 1
 742:	90 81       	ld	r25, Z
 744:	90 61       	ori	r25, 0x10	; 16
 746:	90 83       	st	Z, r25
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 748:	90 81       	ld	r25, Z
 74a:	9f 7e       	andi	r25, 0xEF	; 239
 74c:	90 83       	st	Z, r25
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 74e:	8f 5f       	subi	r24, 0xFF	; 255
 750:	88 33       	cpi	r24, 0x38	; 56
 752:	c0 f2       	brcs	.-80     	; 0x704 <matrixWriteNextLine+0x54>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 754:	e5 e0       	ldi	r30, 0x05	; 5
 756:	f1 e0       	ldi	r31, 0x01	; 1
 758:	80 81       	ld	r24, Z
 75a:	87 7f       	andi	r24, 0xF7	; 247
 75c:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 75e:	80 81       	ld	r24, Z
 760:	88 7f       	andi	r24, 0xF8	; 248
 762:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 764:	90 81       	ld	r25, Z
 766:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <Zeilen_Nr.2743>
 76a:	89 2b       	or	r24, r25
 76c:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 76e:	80 81       	ld	r24, Z
 770:	80 64       	ori	r24, 0x40	; 64
 772:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 774:	80 81       	ld	r24, Z
 776:	88 60       	ori	r24, 0x08	; 8
 778:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 77a:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <Zeilen_Nr.2743>
 77e:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <Zeilen_Nr.2743+0x1>
 782:	87 30       	cpi	r24, 0x07	; 7
 784:	91 05       	cpc	r25, r1
 786:	30 f4       	brcc	.+12     	; 0x794 <matrixWriteNextLine+0xe4>
    {
        Zeilen_Nr++;
 788:	01 96       	adiw	r24, 0x01	; 1
 78a:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <Zeilen_Nr.2743+0x1>
 78e:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <Zeilen_Nr.2743>
 792:	07 c0       	rjmp	.+14     	; 0x7a2 <matrixWriteNextLine+0xf2>
    }
    else
    {
        Zeilen_Nr = 0;
 794:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <Zeilen_Nr.2743+0x1>
 798:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <Zeilen_Nr.2743>
        writeTextFinished = 1;
 79c:	81 e0       	ldi	r24, 0x01	; 1
 79e:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <writeTextFinished>
    }
    
 7a2:	28 96       	adiw	r28, 0x08	; 8
 7a4:	0f b6       	in	r0, 0x3f	; 63
 7a6:	f8 94       	cli
 7a8:	de bf       	out	0x3e, r29	; 62
 7aa:	0f be       	out	0x3f, r0	; 63
 7ac:	cd bf       	out	0x3d, r28	; 61
 7ae:	df 91       	pop	r29
 7b0:	cf 91       	pop	r28
 7b2:	08 95       	ret

000007b4 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 7b4:	1f 92       	push	r1
 7b6:	0f 92       	push	r0
 7b8:	0f b6       	in	r0, 0x3f	; 63
 7ba:	0f 92       	push	r0
 7bc:	11 24       	eor	r1, r1
 7be:	0b b6       	in	r0, 0x3b	; 59
 7c0:	0f 92       	push	r0
 7c2:	2f 93       	push	r18
 7c4:	3f 93       	push	r19
 7c6:	4f 93       	push	r20
 7c8:	5f 93       	push	r21
 7ca:	6f 93       	push	r22
 7cc:	7f 93       	push	r23
 7ce:	8f 93       	push	r24
 7d0:	9f 93       	push	r25
 7d2:	af 93       	push	r26
 7d4:	bf 93       	push	r27
 7d6:	ef 93       	push	r30
 7d8:	ff 93       	push	r31
    systemTimeMs += 1;
 7da:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <systemTimeMs>
 7de:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <systemTimeMs+0x1>
 7e2:	40 91 81 02 	lds	r20, 0x0281	; 0x800281 <systemTimeMs+0x2>
 7e6:	50 91 82 02 	lds	r21, 0x0282	; 0x800282 <systemTimeMs+0x3>
 7ea:	60 91 83 02 	lds	r22, 0x0283	; 0x800283 <systemTimeMs+0x4>
 7ee:	70 91 84 02 	lds	r23, 0x0284	; 0x800284 <systemTimeMs+0x5>
 7f2:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <systemTimeMs+0x6>
 7f6:	90 91 86 02 	lds	r25, 0x0286	; 0x800286 <systemTimeMs+0x7>
 7fa:	a1 e0       	ldi	r26, 0x01	; 1
 7fc:	27 d0       	rcall	.+78     	; 0x84c <__adddi3_s8>
 7fe:	20 93 7f 02 	sts	0x027F, r18	; 0x80027f <systemTimeMs>
 802:	30 93 80 02 	sts	0x0280, r19	; 0x800280 <systemTimeMs+0x1>
 806:	40 93 81 02 	sts	0x0281, r20	; 0x800281 <systemTimeMs+0x2>
 80a:	50 93 82 02 	sts	0x0282, r21	; 0x800282 <systemTimeMs+0x3>
 80e:	60 93 83 02 	sts	0x0283, r22	; 0x800283 <systemTimeMs+0x4>
 812:	70 93 84 02 	sts	0x0284, r23	; 0x800284 <systemTimeMs+0x5>
 816:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <systemTimeMs+0x6>
 81a:	90 93 86 02 	sts	0x0286, r25	; 0x800286 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 81e:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <matrixRunning>
 822:	81 11       	cpse	r24, r1
 824:	45 df       	rcall	.-374    	; 0x6b0 <matrixWriteNextLine>
}
 826:	ff 91       	pop	r31
 828:	ef 91       	pop	r30
 82a:	bf 91       	pop	r27
 82c:	af 91       	pop	r26
 82e:	9f 91       	pop	r25
 830:	8f 91       	pop	r24
 832:	7f 91       	pop	r23
 834:	6f 91       	pop	r22
 836:	5f 91       	pop	r21
 838:	4f 91       	pop	r20
 83a:	3f 91       	pop	r19
 83c:	2f 91       	pop	r18
 83e:	0f 90       	pop	r0
 840:	0b be       	out	0x3b, r0	; 59
 842:	0f 90       	pop	r0
 844:	0f be       	out	0x3f, r0	; 63
 846:	0f 90       	pop	r0
 848:	1f 90       	pop	r1
 84a:	18 95       	reti

0000084c <__adddi3_s8>:
 84c:	00 24       	eor	r0, r0
 84e:	a7 fd       	sbrc	r26, 7
 850:	00 94       	com	r0
 852:	2a 0f       	add	r18, r26
 854:	30 1d       	adc	r19, r0
 856:	40 1d       	adc	r20, r0
 858:	50 1d       	adc	r21, r0
 85a:	60 1d       	adc	r22, r0
 85c:	70 1d       	adc	r23, r0
 85e:	80 1d       	adc	r24, r0
 860:	90 1d       	adc	r25, r0
 862:	08 95       	ret

00000864 <vsnprintf>:
 864:	0f 93       	push	r16
 866:	1f 93       	push	r17
 868:	cf 93       	push	r28
 86a:	df 93       	push	r29
 86c:	cd b7       	in	r28, 0x3d	; 61
 86e:	de b7       	in	r29, 0x3e	; 62
 870:	2e 97       	sbiw	r28, 0x0e	; 14
 872:	0f b6       	in	r0, 0x3f	; 63
 874:	f8 94       	cli
 876:	de bf       	out	0x3e, r29	; 62
 878:	0f be       	out	0x3f, r0	; 63
 87a:	cd bf       	out	0x3d, r28	; 61
 87c:	8c 01       	movw	r16, r24
 87e:	fa 01       	movw	r30, r20
 880:	86 e0       	ldi	r24, 0x06	; 6
 882:	8c 83       	std	Y+4, r24	; 0x04
 884:	1a 83       	std	Y+2, r17	; 0x02
 886:	09 83       	std	Y+1, r16	; 0x01
 888:	77 ff       	sbrs	r23, 7
 88a:	02 c0       	rjmp	.+4      	; 0x890 <vsnprintf+0x2c>
 88c:	60 e0       	ldi	r22, 0x00	; 0
 88e:	70 e8       	ldi	r23, 0x80	; 128
 890:	cb 01       	movw	r24, r22
 892:	01 97       	sbiw	r24, 0x01	; 1
 894:	9e 83       	std	Y+6, r25	; 0x06
 896:	8d 83       	std	Y+5, r24	; 0x05
 898:	a9 01       	movw	r20, r18
 89a:	bf 01       	movw	r22, r30
 89c:	ce 01       	movw	r24, r28
 89e:	01 96       	adiw	r24, 0x01	; 1
 8a0:	19 d0       	rcall	.+50     	; 0x8d4 <vfprintf>
 8a2:	4d 81       	ldd	r20, Y+5	; 0x05
 8a4:	5e 81       	ldd	r21, Y+6	; 0x06
 8a6:	57 fd       	sbrc	r21, 7
 8a8:	0a c0       	rjmp	.+20     	; 0x8be <vsnprintf+0x5a>
 8aa:	2f 81       	ldd	r18, Y+7	; 0x07
 8ac:	38 85       	ldd	r19, Y+8	; 0x08
 8ae:	42 17       	cp	r20, r18
 8b0:	53 07       	cpc	r21, r19
 8b2:	0c f4       	brge	.+2      	; 0x8b6 <vsnprintf+0x52>
 8b4:	9a 01       	movw	r18, r20
 8b6:	f8 01       	movw	r30, r16
 8b8:	e2 0f       	add	r30, r18
 8ba:	f3 1f       	adc	r31, r19
 8bc:	10 82       	st	Z, r1
 8be:	2e 96       	adiw	r28, 0x0e	; 14
 8c0:	0f b6       	in	r0, 0x3f	; 63
 8c2:	f8 94       	cli
 8c4:	de bf       	out	0x3e, r29	; 62
 8c6:	0f be       	out	0x3f, r0	; 63
 8c8:	cd bf       	out	0x3d, r28	; 61
 8ca:	df 91       	pop	r29
 8cc:	cf 91       	pop	r28
 8ce:	1f 91       	pop	r17
 8d0:	0f 91       	pop	r16
 8d2:	08 95       	ret

000008d4 <vfprintf>:
 8d4:	2f 92       	push	r2
 8d6:	3f 92       	push	r3
 8d8:	4f 92       	push	r4
 8da:	5f 92       	push	r5
 8dc:	6f 92       	push	r6
 8de:	7f 92       	push	r7
 8e0:	8f 92       	push	r8
 8e2:	9f 92       	push	r9
 8e4:	af 92       	push	r10
 8e6:	bf 92       	push	r11
 8e8:	cf 92       	push	r12
 8ea:	df 92       	push	r13
 8ec:	ef 92       	push	r14
 8ee:	ff 92       	push	r15
 8f0:	0f 93       	push	r16
 8f2:	1f 93       	push	r17
 8f4:	cf 93       	push	r28
 8f6:	df 93       	push	r29
 8f8:	cd b7       	in	r28, 0x3d	; 61
 8fa:	de b7       	in	r29, 0x3e	; 62
 8fc:	2b 97       	sbiw	r28, 0x0b	; 11
 8fe:	0f b6       	in	r0, 0x3f	; 63
 900:	f8 94       	cli
 902:	de bf       	out	0x3e, r29	; 62
 904:	0f be       	out	0x3f, r0	; 63
 906:	cd bf       	out	0x3d, r28	; 61
 908:	6c 01       	movw	r12, r24
 90a:	7b 01       	movw	r14, r22
 90c:	8a 01       	movw	r16, r20
 90e:	fc 01       	movw	r30, r24
 910:	17 82       	std	Z+7, r1	; 0x07
 912:	16 82       	std	Z+6, r1	; 0x06
 914:	83 81       	ldd	r24, Z+3	; 0x03
 916:	81 ff       	sbrs	r24, 1
 918:	bf c1       	rjmp	.+894    	; 0xc98 <vfprintf+0x3c4>
 91a:	ce 01       	movw	r24, r28
 91c:	01 96       	adiw	r24, 0x01	; 1
 91e:	3c 01       	movw	r6, r24
 920:	f6 01       	movw	r30, r12
 922:	93 81       	ldd	r25, Z+3	; 0x03
 924:	f7 01       	movw	r30, r14
 926:	93 fd       	sbrc	r25, 3
 928:	85 91       	lpm	r24, Z+
 92a:	93 ff       	sbrs	r25, 3
 92c:	81 91       	ld	r24, Z+
 92e:	7f 01       	movw	r14, r30
 930:	88 23       	and	r24, r24
 932:	09 f4       	brne	.+2      	; 0x936 <vfprintf+0x62>
 934:	ad c1       	rjmp	.+858    	; 0xc90 <vfprintf+0x3bc>
 936:	85 32       	cpi	r24, 0x25	; 37
 938:	39 f4       	brne	.+14     	; 0x948 <vfprintf+0x74>
 93a:	93 fd       	sbrc	r25, 3
 93c:	85 91       	lpm	r24, Z+
 93e:	93 ff       	sbrs	r25, 3
 940:	81 91       	ld	r24, Z+
 942:	7f 01       	movw	r14, r30
 944:	85 32       	cpi	r24, 0x25	; 37
 946:	21 f4       	brne	.+8      	; 0x950 <vfprintf+0x7c>
 948:	b6 01       	movw	r22, r12
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	d6 d1       	rcall	.+940    	; 0xcfa <fputc>
 94e:	e8 cf       	rjmp	.-48     	; 0x920 <vfprintf+0x4c>
 950:	91 2c       	mov	r9, r1
 952:	21 2c       	mov	r2, r1
 954:	31 2c       	mov	r3, r1
 956:	ff e1       	ldi	r31, 0x1F	; 31
 958:	f3 15       	cp	r31, r3
 95a:	d8 f0       	brcs	.+54     	; 0x992 <vfprintf+0xbe>
 95c:	8b 32       	cpi	r24, 0x2B	; 43
 95e:	79 f0       	breq	.+30     	; 0x97e <vfprintf+0xaa>
 960:	38 f4       	brcc	.+14     	; 0x970 <vfprintf+0x9c>
 962:	80 32       	cpi	r24, 0x20	; 32
 964:	79 f0       	breq	.+30     	; 0x984 <vfprintf+0xb0>
 966:	83 32       	cpi	r24, 0x23	; 35
 968:	a1 f4       	brne	.+40     	; 0x992 <vfprintf+0xbe>
 96a:	23 2d       	mov	r18, r3
 96c:	20 61       	ori	r18, 0x10	; 16
 96e:	1d c0       	rjmp	.+58     	; 0x9aa <vfprintf+0xd6>
 970:	8d 32       	cpi	r24, 0x2D	; 45
 972:	61 f0       	breq	.+24     	; 0x98c <vfprintf+0xb8>
 974:	80 33       	cpi	r24, 0x30	; 48
 976:	69 f4       	brne	.+26     	; 0x992 <vfprintf+0xbe>
 978:	23 2d       	mov	r18, r3
 97a:	21 60       	ori	r18, 0x01	; 1
 97c:	16 c0       	rjmp	.+44     	; 0x9aa <vfprintf+0xd6>
 97e:	83 2d       	mov	r24, r3
 980:	82 60       	ori	r24, 0x02	; 2
 982:	38 2e       	mov	r3, r24
 984:	e3 2d       	mov	r30, r3
 986:	e4 60       	ori	r30, 0x04	; 4
 988:	3e 2e       	mov	r3, r30
 98a:	2a c0       	rjmp	.+84     	; 0x9e0 <vfprintf+0x10c>
 98c:	f3 2d       	mov	r31, r3
 98e:	f8 60       	ori	r31, 0x08	; 8
 990:	1d c0       	rjmp	.+58     	; 0x9cc <vfprintf+0xf8>
 992:	37 fc       	sbrc	r3, 7
 994:	2d c0       	rjmp	.+90     	; 0x9f0 <vfprintf+0x11c>
 996:	20 ed       	ldi	r18, 0xD0	; 208
 998:	28 0f       	add	r18, r24
 99a:	2a 30       	cpi	r18, 0x0A	; 10
 99c:	40 f0       	brcs	.+16     	; 0x9ae <vfprintf+0xda>
 99e:	8e 32       	cpi	r24, 0x2E	; 46
 9a0:	b9 f4       	brne	.+46     	; 0x9d0 <vfprintf+0xfc>
 9a2:	36 fc       	sbrc	r3, 6
 9a4:	75 c1       	rjmp	.+746    	; 0xc90 <vfprintf+0x3bc>
 9a6:	23 2d       	mov	r18, r3
 9a8:	20 64       	ori	r18, 0x40	; 64
 9aa:	32 2e       	mov	r3, r18
 9ac:	19 c0       	rjmp	.+50     	; 0x9e0 <vfprintf+0x10c>
 9ae:	36 fe       	sbrs	r3, 6
 9b0:	06 c0       	rjmp	.+12     	; 0x9be <vfprintf+0xea>
 9b2:	8a e0       	ldi	r24, 0x0A	; 10
 9b4:	98 9e       	mul	r9, r24
 9b6:	20 0d       	add	r18, r0
 9b8:	11 24       	eor	r1, r1
 9ba:	92 2e       	mov	r9, r18
 9bc:	11 c0       	rjmp	.+34     	; 0x9e0 <vfprintf+0x10c>
 9be:	ea e0       	ldi	r30, 0x0A	; 10
 9c0:	2e 9e       	mul	r2, r30
 9c2:	20 0d       	add	r18, r0
 9c4:	11 24       	eor	r1, r1
 9c6:	22 2e       	mov	r2, r18
 9c8:	f3 2d       	mov	r31, r3
 9ca:	f0 62       	ori	r31, 0x20	; 32
 9cc:	3f 2e       	mov	r3, r31
 9ce:	08 c0       	rjmp	.+16     	; 0x9e0 <vfprintf+0x10c>
 9d0:	8c 36       	cpi	r24, 0x6C	; 108
 9d2:	21 f4       	brne	.+8      	; 0x9dc <vfprintf+0x108>
 9d4:	83 2d       	mov	r24, r3
 9d6:	80 68       	ori	r24, 0x80	; 128
 9d8:	38 2e       	mov	r3, r24
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <vfprintf+0x10c>
 9dc:	88 36       	cpi	r24, 0x68	; 104
 9de:	41 f4       	brne	.+16     	; 0x9f0 <vfprintf+0x11c>
 9e0:	f7 01       	movw	r30, r14
 9e2:	93 fd       	sbrc	r25, 3
 9e4:	85 91       	lpm	r24, Z+
 9e6:	93 ff       	sbrs	r25, 3
 9e8:	81 91       	ld	r24, Z+
 9ea:	7f 01       	movw	r14, r30
 9ec:	81 11       	cpse	r24, r1
 9ee:	b3 cf       	rjmp	.-154    	; 0x956 <vfprintf+0x82>
 9f0:	98 2f       	mov	r25, r24
 9f2:	9f 7d       	andi	r25, 0xDF	; 223
 9f4:	95 54       	subi	r25, 0x45	; 69
 9f6:	93 30       	cpi	r25, 0x03	; 3
 9f8:	28 f4       	brcc	.+10     	; 0xa04 <vfprintf+0x130>
 9fa:	0c 5f       	subi	r16, 0xFC	; 252
 9fc:	1f 4f       	sbci	r17, 0xFF	; 255
 9fe:	9f e3       	ldi	r25, 0x3F	; 63
 a00:	99 83       	std	Y+1, r25	; 0x01
 a02:	0d c0       	rjmp	.+26     	; 0xa1e <vfprintf+0x14a>
 a04:	83 36       	cpi	r24, 0x63	; 99
 a06:	31 f0       	breq	.+12     	; 0xa14 <vfprintf+0x140>
 a08:	83 37       	cpi	r24, 0x73	; 115
 a0a:	71 f0       	breq	.+28     	; 0xa28 <vfprintf+0x154>
 a0c:	83 35       	cpi	r24, 0x53	; 83
 a0e:	09 f0       	breq	.+2      	; 0xa12 <vfprintf+0x13e>
 a10:	55 c0       	rjmp	.+170    	; 0xabc <vfprintf+0x1e8>
 a12:	20 c0       	rjmp	.+64     	; 0xa54 <vfprintf+0x180>
 a14:	f8 01       	movw	r30, r16
 a16:	80 81       	ld	r24, Z
 a18:	89 83       	std	Y+1, r24	; 0x01
 a1a:	0e 5f       	subi	r16, 0xFE	; 254
 a1c:	1f 4f       	sbci	r17, 0xFF	; 255
 a1e:	88 24       	eor	r8, r8
 a20:	83 94       	inc	r8
 a22:	91 2c       	mov	r9, r1
 a24:	53 01       	movw	r10, r6
 a26:	12 c0       	rjmp	.+36     	; 0xa4c <vfprintf+0x178>
 a28:	28 01       	movw	r4, r16
 a2a:	f2 e0       	ldi	r31, 0x02	; 2
 a2c:	4f 0e       	add	r4, r31
 a2e:	51 1c       	adc	r5, r1
 a30:	f8 01       	movw	r30, r16
 a32:	a0 80       	ld	r10, Z
 a34:	b1 80       	ldd	r11, Z+1	; 0x01
 a36:	36 fe       	sbrs	r3, 6
 a38:	03 c0       	rjmp	.+6      	; 0xa40 <vfprintf+0x16c>
 a3a:	69 2d       	mov	r22, r9
 a3c:	70 e0       	ldi	r23, 0x00	; 0
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <vfprintf+0x170>
 a40:	6f ef       	ldi	r22, 0xFF	; 255
 a42:	7f ef       	ldi	r23, 0xFF	; 255
 a44:	c5 01       	movw	r24, r10
 a46:	4e d1       	rcall	.+668    	; 0xce4 <strnlen>
 a48:	4c 01       	movw	r8, r24
 a4a:	82 01       	movw	r16, r4
 a4c:	f3 2d       	mov	r31, r3
 a4e:	ff 77       	andi	r31, 0x7F	; 127
 a50:	3f 2e       	mov	r3, r31
 a52:	15 c0       	rjmp	.+42     	; 0xa7e <vfprintf+0x1aa>
 a54:	28 01       	movw	r4, r16
 a56:	22 e0       	ldi	r18, 0x02	; 2
 a58:	42 0e       	add	r4, r18
 a5a:	51 1c       	adc	r5, r1
 a5c:	f8 01       	movw	r30, r16
 a5e:	a0 80       	ld	r10, Z
 a60:	b1 80       	ldd	r11, Z+1	; 0x01
 a62:	36 fe       	sbrs	r3, 6
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <vfprintf+0x198>
 a66:	69 2d       	mov	r22, r9
 a68:	70 e0       	ldi	r23, 0x00	; 0
 a6a:	02 c0       	rjmp	.+4      	; 0xa70 <vfprintf+0x19c>
 a6c:	6f ef       	ldi	r22, 0xFF	; 255
 a6e:	7f ef       	ldi	r23, 0xFF	; 255
 a70:	c5 01       	movw	r24, r10
 a72:	2d d1       	rcall	.+602    	; 0xcce <strnlen_P>
 a74:	4c 01       	movw	r8, r24
 a76:	f3 2d       	mov	r31, r3
 a78:	f0 68       	ori	r31, 0x80	; 128
 a7a:	3f 2e       	mov	r3, r31
 a7c:	82 01       	movw	r16, r4
 a7e:	33 fc       	sbrc	r3, 3
 a80:	19 c0       	rjmp	.+50     	; 0xab4 <vfprintf+0x1e0>
 a82:	82 2d       	mov	r24, r2
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	88 16       	cp	r8, r24
 a88:	99 06       	cpc	r9, r25
 a8a:	a0 f4       	brcc	.+40     	; 0xab4 <vfprintf+0x1e0>
 a8c:	b6 01       	movw	r22, r12
 a8e:	80 e2       	ldi	r24, 0x20	; 32
 a90:	90 e0       	ldi	r25, 0x00	; 0
 a92:	33 d1       	rcall	.+614    	; 0xcfa <fputc>
 a94:	2a 94       	dec	r2
 a96:	f5 cf       	rjmp	.-22     	; 0xa82 <vfprintf+0x1ae>
 a98:	f5 01       	movw	r30, r10
 a9a:	37 fc       	sbrc	r3, 7
 a9c:	85 91       	lpm	r24, Z+
 a9e:	37 fe       	sbrs	r3, 7
 aa0:	81 91       	ld	r24, Z+
 aa2:	5f 01       	movw	r10, r30
 aa4:	b6 01       	movw	r22, r12
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	28 d1       	rcall	.+592    	; 0xcfa <fputc>
 aaa:	21 10       	cpse	r2, r1
 aac:	2a 94       	dec	r2
 aae:	21 e0       	ldi	r18, 0x01	; 1
 ab0:	82 1a       	sub	r8, r18
 ab2:	91 08       	sbc	r9, r1
 ab4:	81 14       	cp	r8, r1
 ab6:	91 04       	cpc	r9, r1
 ab8:	79 f7       	brne	.-34     	; 0xa98 <vfprintf+0x1c4>
 aba:	e1 c0       	rjmp	.+450    	; 0xc7e <vfprintf+0x3aa>
 abc:	84 36       	cpi	r24, 0x64	; 100
 abe:	11 f0       	breq	.+4      	; 0xac4 <vfprintf+0x1f0>
 ac0:	89 36       	cpi	r24, 0x69	; 105
 ac2:	39 f5       	brne	.+78     	; 0xb12 <vfprintf+0x23e>
 ac4:	f8 01       	movw	r30, r16
 ac6:	37 fe       	sbrs	r3, 7
 ac8:	07 c0       	rjmp	.+14     	; 0xad8 <vfprintf+0x204>
 aca:	60 81       	ld	r22, Z
 acc:	71 81       	ldd	r23, Z+1	; 0x01
 ace:	82 81       	ldd	r24, Z+2	; 0x02
 ad0:	93 81       	ldd	r25, Z+3	; 0x03
 ad2:	0c 5f       	subi	r16, 0xFC	; 252
 ad4:	1f 4f       	sbci	r17, 0xFF	; 255
 ad6:	08 c0       	rjmp	.+16     	; 0xae8 <vfprintf+0x214>
 ad8:	60 81       	ld	r22, Z
 ada:	71 81       	ldd	r23, Z+1	; 0x01
 adc:	07 2e       	mov	r0, r23
 ade:	00 0c       	add	r0, r0
 ae0:	88 0b       	sbc	r24, r24
 ae2:	99 0b       	sbc	r25, r25
 ae4:	0e 5f       	subi	r16, 0xFE	; 254
 ae6:	1f 4f       	sbci	r17, 0xFF	; 255
 ae8:	f3 2d       	mov	r31, r3
 aea:	ff 76       	andi	r31, 0x6F	; 111
 aec:	3f 2e       	mov	r3, r31
 aee:	97 ff       	sbrs	r25, 7
 af0:	09 c0       	rjmp	.+18     	; 0xb04 <vfprintf+0x230>
 af2:	90 95       	com	r25
 af4:	80 95       	com	r24
 af6:	70 95       	com	r23
 af8:	61 95       	neg	r22
 afa:	7f 4f       	sbci	r23, 0xFF	; 255
 afc:	8f 4f       	sbci	r24, 0xFF	; 255
 afe:	9f 4f       	sbci	r25, 0xFF	; 255
 b00:	f0 68       	ori	r31, 0x80	; 128
 b02:	3f 2e       	mov	r3, r31
 b04:	2a e0       	ldi	r18, 0x0A	; 10
 b06:	30 e0       	ldi	r19, 0x00	; 0
 b08:	a3 01       	movw	r20, r6
 b0a:	33 d1       	rcall	.+614    	; 0xd72 <__ultoa_invert>
 b0c:	88 2e       	mov	r8, r24
 b0e:	86 18       	sub	r8, r6
 b10:	44 c0       	rjmp	.+136    	; 0xb9a <vfprintf+0x2c6>
 b12:	85 37       	cpi	r24, 0x75	; 117
 b14:	31 f4       	brne	.+12     	; 0xb22 <vfprintf+0x24e>
 b16:	23 2d       	mov	r18, r3
 b18:	2f 7e       	andi	r18, 0xEF	; 239
 b1a:	b2 2e       	mov	r11, r18
 b1c:	2a e0       	ldi	r18, 0x0A	; 10
 b1e:	30 e0       	ldi	r19, 0x00	; 0
 b20:	25 c0       	rjmp	.+74     	; 0xb6c <vfprintf+0x298>
 b22:	93 2d       	mov	r25, r3
 b24:	99 7f       	andi	r25, 0xF9	; 249
 b26:	b9 2e       	mov	r11, r25
 b28:	8f 36       	cpi	r24, 0x6F	; 111
 b2a:	c1 f0       	breq	.+48     	; 0xb5c <vfprintf+0x288>
 b2c:	18 f4       	brcc	.+6      	; 0xb34 <vfprintf+0x260>
 b2e:	88 35       	cpi	r24, 0x58	; 88
 b30:	79 f0       	breq	.+30     	; 0xb50 <vfprintf+0x27c>
 b32:	ae c0       	rjmp	.+348    	; 0xc90 <vfprintf+0x3bc>
 b34:	80 37       	cpi	r24, 0x70	; 112
 b36:	19 f0       	breq	.+6      	; 0xb3e <vfprintf+0x26a>
 b38:	88 37       	cpi	r24, 0x78	; 120
 b3a:	21 f0       	breq	.+8      	; 0xb44 <vfprintf+0x270>
 b3c:	a9 c0       	rjmp	.+338    	; 0xc90 <vfprintf+0x3bc>
 b3e:	e9 2f       	mov	r30, r25
 b40:	e0 61       	ori	r30, 0x10	; 16
 b42:	be 2e       	mov	r11, r30
 b44:	b4 fe       	sbrs	r11, 4
 b46:	0d c0       	rjmp	.+26     	; 0xb62 <vfprintf+0x28e>
 b48:	fb 2d       	mov	r31, r11
 b4a:	f4 60       	ori	r31, 0x04	; 4
 b4c:	bf 2e       	mov	r11, r31
 b4e:	09 c0       	rjmp	.+18     	; 0xb62 <vfprintf+0x28e>
 b50:	34 fe       	sbrs	r3, 4
 b52:	0a c0       	rjmp	.+20     	; 0xb68 <vfprintf+0x294>
 b54:	29 2f       	mov	r18, r25
 b56:	26 60       	ori	r18, 0x06	; 6
 b58:	b2 2e       	mov	r11, r18
 b5a:	06 c0       	rjmp	.+12     	; 0xb68 <vfprintf+0x294>
 b5c:	28 e0       	ldi	r18, 0x08	; 8
 b5e:	30 e0       	ldi	r19, 0x00	; 0
 b60:	05 c0       	rjmp	.+10     	; 0xb6c <vfprintf+0x298>
 b62:	20 e1       	ldi	r18, 0x10	; 16
 b64:	30 e0       	ldi	r19, 0x00	; 0
 b66:	02 c0       	rjmp	.+4      	; 0xb6c <vfprintf+0x298>
 b68:	20 e1       	ldi	r18, 0x10	; 16
 b6a:	32 e0       	ldi	r19, 0x02	; 2
 b6c:	f8 01       	movw	r30, r16
 b6e:	b7 fe       	sbrs	r11, 7
 b70:	07 c0       	rjmp	.+14     	; 0xb80 <vfprintf+0x2ac>
 b72:	60 81       	ld	r22, Z
 b74:	71 81       	ldd	r23, Z+1	; 0x01
 b76:	82 81       	ldd	r24, Z+2	; 0x02
 b78:	93 81       	ldd	r25, Z+3	; 0x03
 b7a:	0c 5f       	subi	r16, 0xFC	; 252
 b7c:	1f 4f       	sbci	r17, 0xFF	; 255
 b7e:	06 c0       	rjmp	.+12     	; 0xb8c <vfprintf+0x2b8>
 b80:	60 81       	ld	r22, Z
 b82:	71 81       	ldd	r23, Z+1	; 0x01
 b84:	80 e0       	ldi	r24, 0x00	; 0
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	0e 5f       	subi	r16, 0xFE	; 254
 b8a:	1f 4f       	sbci	r17, 0xFF	; 255
 b8c:	a3 01       	movw	r20, r6
 b8e:	f1 d0       	rcall	.+482    	; 0xd72 <__ultoa_invert>
 b90:	88 2e       	mov	r8, r24
 b92:	86 18       	sub	r8, r6
 b94:	fb 2d       	mov	r31, r11
 b96:	ff 77       	andi	r31, 0x7F	; 127
 b98:	3f 2e       	mov	r3, r31
 b9a:	36 fe       	sbrs	r3, 6
 b9c:	0d c0       	rjmp	.+26     	; 0xbb8 <vfprintf+0x2e4>
 b9e:	23 2d       	mov	r18, r3
 ba0:	2e 7f       	andi	r18, 0xFE	; 254
 ba2:	a2 2e       	mov	r10, r18
 ba4:	89 14       	cp	r8, r9
 ba6:	58 f4       	brcc	.+22     	; 0xbbe <vfprintf+0x2ea>
 ba8:	34 fe       	sbrs	r3, 4
 baa:	0b c0       	rjmp	.+22     	; 0xbc2 <vfprintf+0x2ee>
 bac:	32 fc       	sbrc	r3, 2
 bae:	09 c0       	rjmp	.+18     	; 0xbc2 <vfprintf+0x2ee>
 bb0:	83 2d       	mov	r24, r3
 bb2:	8e 7e       	andi	r24, 0xEE	; 238
 bb4:	a8 2e       	mov	r10, r24
 bb6:	05 c0       	rjmp	.+10     	; 0xbc2 <vfprintf+0x2ee>
 bb8:	b8 2c       	mov	r11, r8
 bba:	a3 2c       	mov	r10, r3
 bbc:	03 c0       	rjmp	.+6      	; 0xbc4 <vfprintf+0x2f0>
 bbe:	b8 2c       	mov	r11, r8
 bc0:	01 c0       	rjmp	.+2      	; 0xbc4 <vfprintf+0x2f0>
 bc2:	b9 2c       	mov	r11, r9
 bc4:	a4 fe       	sbrs	r10, 4
 bc6:	0f c0       	rjmp	.+30     	; 0xbe6 <vfprintf+0x312>
 bc8:	fe 01       	movw	r30, r28
 bca:	e8 0d       	add	r30, r8
 bcc:	f1 1d       	adc	r31, r1
 bce:	80 81       	ld	r24, Z
 bd0:	80 33       	cpi	r24, 0x30	; 48
 bd2:	21 f4       	brne	.+8      	; 0xbdc <vfprintf+0x308>
 bd4:	9a 2d       	mov	r25, r10
 bd6:	99 7e       	andi	r25, 0xE9	; 233
 bd8:	a9 2e       	mov	r10, r25
 bda:	09 c0       	rjmp	.+18     	; 0xbee <vfprintf+0x31a>
 bdc:	a2 fe       	sbrs	r10, 2
 bde:	06 c0       	rjmp	.+12     	; 0xbec <vfprintf+0x318>
 be0:	b3 94       	inc	r11
 be2:	b3 94       	inc	r11
 be4:	04 c0       	rjmp	.+8      	; 0xbee <vfprintf+0x31a>
 be6:	8a 2d       	mov	r24, r10
 be8:	86 78       	andi	r24, 0x86	; 134
 bea:	09 f0       	breq	.+2      	; 0xbee <vfprintf+0x31a>
 bec:	b3 94       	inc	r11
 bee:	a3 fc       	sbrc	r10, 3
 bf0:	10 c0       	rjmp	.+32     	; 0xc12 <vfprintf+0x33e>
 bf2:	a0 fe       	sbrs	r10, 0
 bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0x32e>
 bf6:	b2 14       	cp	r11, r2
 bf8:	80 f4       	brcc	.+32     	; 0xc1a <vfprintf+0x346>
 bfa:	28 0c       	add	r2, r8
 bfc:	92 2c       	mov	r9, r2
 bfe:	9b 18       	sub	r9, r11
 c00:	0d c0       	rjmp	.+26     	; 0xc1c <vfprintf+0x348>
 c02:	b2 14       	cp	r11, r2
 c04:	58 f4       	brcc	.+22     	; 0xc1c <vfprintf+0x348>
 c06:	b6 01       	movw	r22, r12
 c08:	80 e2       	ldi	r24, 0x20	; 32
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	76 d0       	rcall	.+236    	; 0xcfa <fputc>
 c0e:	b3 94       	inc	r11
 c10:	f8 cf       	rjmp	.-16     	; 0xc02 <vfprintf+0x32e>
 c12:	b2 14       	cp	r11, r2
 c14:	18 f4       	brcc	.+6      	; 0xc1c <vfprintf+0x348>
 c16:	2b 18       	sub	r2, r11
 c18:	02 c0       	rjmp	.+4      	; 0xc1e <vfprintf+0x34a>
 c1a:	98 2c       	mov	r9, r8
 c1c:	21 2c       	mov	r2, r1
 c1e:	a4 fe       	sbrs	r10, 4
 c20:	0f c0       	rjmp	.+30     	; 0xc40 <vfprintf+0x36c>
 c22:	b6 01       	movw	r22, r12
 c24:	80 e3       	ldi	r24, 0x30	; 48
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	68 d0       	rcall	.+208    	; 0xcfa <fputc>
 c2a:	a2 fe       	sbrs	r10, 2
 c2c:	16 c0       	rjmp	.+44     	; 0xc5a <vfprintf+0x386>
 c2e:	a1 fc       	sbrc	r10, 1
 c30:	03 c0       	rjmp	.+6      	; 0xc38 <vfprintf+0x364>
 c32:	88 e7       	ldi	r24, 0x78	; 120
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	02 c0       	rjmp	.+4      	; 0xc3c <vfprintf+0x368>
 c38:	88 e5       	ldi	r24, 0x58	; 88
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	b6 01       	movw	r22, r12
 c3e:	0c c0       	rjmp	.+24     	; 0xc58 <vfprintf+0x384>
 c40:	8a 2d       	mov	r24, r10
 c42:	86 78       	andi	r24, 0x86	; 134
 c44:	51 f0       	breq	.+20     	; 0xc5a <vfprintf+0x386>
 c46:	a1 fe       	sbrs	r10, 1
 c48:	02 c0       	rjmp	.+4      	; 0xc4e <vfprintf+0x37a>
 c4a:	8b e2       	ldi	r24, 0x2B	; 43
 c4c:	01 c0       	rjmp	.+2      	; 0xc50 <vfprintf+0x37c>
 c4e:	80 e2       	ldi	r24, 0x20	; 32
 c50:	a7 fc       	sbrc	r10, 7
 c52:	8d e2       	ldi	r24, 0x2D	; 45
 c54:	b6 01       	movw	r22, r12
 c56:	90 e0       	ldi	r25, 0x00	; 0
 c58:	50 d0       	rcall	.+160    	; 0xcfa <fputc>
 c5a:	89 14       	cp	r8, r9
 c5c:	30 f4       	brcc	.+12     	; 0xc6a <vfprintf+0x396>
 c5e:	b6 01       	movw	r22, r12
 c60:	80 e3       	ldi	r24, 0x30	; 48
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	4a d0       	rcall	.+148    	; 0xcfa <fputc>
 c66:	9a 94       	dec	r9
 c68:	f8 cf       	rjmp	.-16     	; 0xc5a <vfprintf+0x386>
 c6a:	8a 94       	dec	r8
 c6c:	f3 01       	movw	r30, r6
 c6e:	e8 0d       	add	r30, r8
 c70:	f1 1d       	adc	r31, r1
 c72:	80 81       	ld	r24, Z
 c74:	b6 01       	movw	r22, r12
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	40 d0       	rcall	.+128    	; 0xcfa <fputc>
 c7a:	81 10       	cpse	r8, r1
 c7c:	f6 cf       	rjmp	.-20     	; 0xc6a <vfprintf+0x396>
 c7e:	22 20       	and	r2, r2
 c80:	09 f4       	brne	.+2      	; 0xc84 <vfprintf+0x3b0>
 c82:	4e ce       	rjmp	.-868    	; 0x920 <vfprintf+0x4c>
 c84:	b6 01       	movw	r22, r12
 c86:	80 e2       	ldi	r24, 0x20	; 32
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	37 d0       	rcall	.+110    	; 0xcfa <fputc>
 c8c:	2a 94       	dec	r2
 c8e:	f7 cf       	rjmp	.-18     	; 0xc7e <vfprintf+0x3aa>
 c90:	f6 01       	movw	r30, r12
 c92:	86 81       	ldd	r24, Z+6	; 0x06
 c94:	97 81       	ldd	r25, Z+7	; 0x07
 c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x3c8>
 c98:	8f ef       	ldi	r24, 0xFF	; 255
 c9a:	9f ef       	ldi	r25, 0xFF	; 255
 c9c:	2b 96       	adiw	r28, 0x0b	; 11
 c9e:	0f b6       	in	r0, 0x3f	; 63
 ca0:	f8 94       	cli
 ca2:	de bf       	out	0x3e, r29	; 62
 ca4:	0f be       	out	0x3f, r0	; 63
 ca6:	cd bf       	out	0x3d, r28	; 61
 ca8:	df 91       	pop	r29
 caa:	cf 91       	pop	r28
 cac:	1f 91       	pop	r17
 cae:	0f 91       	pop	r16
 cb0:	ff 90       	pop	r15
 cb2:	ef 90       	pop	r14
 cb4:	df 90       	pop	r13
 cb6:	cf 90       	pop	r12
 cb8:	bf 90       	pop	r11
 cba:	af 90       	pop	r10
 cbc:	9f 90       	pop	r9
 cbe:	8f 90       	pop	r8
 cc0:	7f 90       	pop	r7
 cc2:	6f 90       	pop	r6
 cc4:	5f 90       	pop	r5
 cc6:	4f 90       	pop	r4
 cc8:	3f 90       	pop	r3
 cca:	2f 90       	pop	r2
 ccc:	08 95       	ret

00000cce <strnlen_P>:
 cce:	fc 01       	movw	r30, r24
 cd0:	05 90       	lpm	r0, Z+
 cd2:	61 50       	subi	r22, 0x01	; 1
 cd4:	70 40       	sbci	r23, 0x00	; 0
 cd6:	01 10       	cpse	r0, r1
 cd8:	d8 f7       	brcc	.-10     	; 0xcd0 <strnlen_P+0x2>
 cda:	80 95       	com	r24
 cdc:	90 95       	com	r25
 cde:	8e 0f       	add	r24, r30
 ce0:	9f 1f       	adc	r25, r31
 ce2:	08 95       	ret

00000ce4 <strnlen>:
 ce4:	fc 01       	movw	r30, r24
 ce6:	61 50       	subi	r22, 0x01	; 1
 ce8:	70 40       	sbci	r23, 0x00	; 0
 cea:	01 90       	ld	r0, Z+
 cec:	01 10       	cpse	r0, r1
 cee:	d8 f7       	brcc	.-10     	; 0xce6 <strnlen+0x2>
 cf0:	80 95       	com	r24
 cf2:	90 95       	com	r25
 cf4:	8e 0f       	add	r24, r30
 cf6:	9f 1f       	adc	r25, r31
 cf8:	08 95       	ret

00000cfa <fputc>:
 cfa:	0f 93       	push	r16
 cfc:	1f 93       	push	r17
 cfe:	cf 93       	push	r28
 d00:	df 93       	push	r29
 d02:	fb 01       	movw	r30, r22
 d04:	23 81       	ldd	r18, Z+3	; 0x03
 d06:	21 fd       	sbrc	r18, 1
 d08:	03 c0       	rjmp	.+6      	; 0xd10 <fputc+0x16>
 d0a:	8f ef       	ldi	r24, 0xFF	; 255
 d0c:	9f ef       	ldi	r25, 0xFF	; 255
 d0e:	2c c0       	rjmp	.+88     	; 0xd68 <fputc+0x6e>
 d10:	22 ff       	sbrs	r18, 2
 d12:	16 c0       	rjmp	.+44     	; 0xd40 <fputc+0x46>
 d14:	46 81       	ldd	r20, Z+6	; 0x06
 d16:	57 81       	ldd	r21, Z+7	; 0x07
 d18:	24 81       	ldd	r18, Z+4	; 0x04
 d1a:	35 81       	ldd	r19, Z+5	; 0x05
 d1c:	42 17       	cp	r20, r18
 d1e:	53 07       	cpc	r21, r19
 d20:	44 f4       	brge	.+16     	; 0xd32 <fputc+0x38>
 d22:	a0 81       	ld	r26, Z
 d24:	b1 81       	ldd	r27, Z+1	; 0x01
 d26:	9d 01       	movw	r18, r26
 d28:	2f 5f       	subi	r18, 0xFF	; 255
 d2a:	3f 4f       	sbci	r19, 0xFF	; 255
 d2c:	31 83       	std	Z+1, r19	; 0x01
 d2e:	20 83       	st	Z, r18
 d30:	8c 93       	st	X, r24
 d32:	26 81       	ldd	r18, Z+6	; 0x06
 d34:	37 81       	ldd	r19, Z+7	; 0x07
 d36:	2f 5f       	subi	r18, 0xFF	; 255
 d38:	3f 4f       	sbci	r19, 0xFF	; 255
 d3a:	37 83       	std	Z+7, r19	; 0x07
 d3c:	26 83       	std	Z+6, r18	; 0x06
 d3e:	14 c0       	rjmp	.+40     	; 0xd68 <fputc+0x6e>
 d40:	8b 01       	movw	r16, r22
 d42:	ec 01       	movw	r28, r24
 d44:	fb 01       	movw	r30, r22
 d46:	00 84       	ldd	r0, Z+8	; 0x08
 d48:	f1 85       	ldd	r31, Z+9	; 0x09
 d4a:	e0 2d       	mov	r30, r0
 d4c:	19 95       	eicall
 d4e:	89 2b       	or	r24, r25
 d50:	e1 f6       	brne	.-72     	; 0xd0a <fputc+0x10>
 d52:	d8 01       	movw	r26, r16
 d54:	16 96       	adiw	r26, 0x06	; 6
 d56:	8d 91       	ld	r24, X+
 d58:	9c 91       	ld	r25, X
 d5a:	17 97       	sbiw	r26, 0x07	; 7
 d5c:	01 96       	adiw	r24, 0x01	; 1
 d5e:	17 96       	adiw	r26, 0x07	; 7
 d60:	9c 93       	st	X, r25
 d62:	8e 93       	st	-X, r24
 d64:	16 97       	sbiw	r26, 0x06	; 6
 d66:	ce 01       	movw	r24, r28
 d68:	df 91       	pop	r29
 d6a:	cf 91       	pop	r28
 d6c:	1f 91       	pop	r17
 d6e:	0f 91       	pop	r16
 d70:	08 95       	ret

00000d72 <__ultoa_invert>:
 d72:	fa 01       	movw	r30, r20
 d74:	aa 27       	eor	r26, r26
 d76:	28 30       	cpi	r18, 0x08	; 8
 d78:	51 f1       	breq	.+84     	; 0xdce <__ultoa_invert+0x5c>
 d7a:	20 31       	cpi	r18, 0x10	; 16
 d7c:	81 f1       	breq	.+96     	; 0xdde <__ultoa_invert+0x6c>
 d7e:	e8 94       	clt
 d80:	6f 93       	push	r22
 d82:	6e 7f       	andi	r22, 0xFE	; 254
 d84:	6e 5f       	subi	r22, 0xFE	; 254
 d86:	7f 4f       	sbci	r23, 0xFF	; 255
 d88:	8f 4f       	sbci	r24, 0xFF	; 255
 d8a:	9f 4f       	sbci	r25, 0xFF	; 255
 d8c:	af 4f       	sbci	r26, 0xFF	; 255
 d8e:	b1 e0       	ldi	r27, 0x01	; 1
 d90:	3e d0       	rcall	.+124    	; 0xe0e <__ultoa_invert+0x9c>
 d92:	b4 e0       	ldi	r27, 0x04	; 4
 d94:	3c d0       	rcall	.+120    	; 0xe0e <__ultoa_invert+0x9c>
 d96:	67 0f       	add	r22, r23
 d98:	78 1f       	adc	r23, r24
 d9a:	89 1f       	adc	r24, r25
 d9c:	9a 1f       	adc	r25, r26
 d9e:	a1 1d       	adc	r26, r1
 da0:	68 0f       	add	r22, r24
 da2:	79 1f       	adc	r23, r25
 da4:	8a 1f       	adc	r24, r26
 da6:	91 1d       	adc	r25, r1
 da8:	a1 1d       	adc	r26, r1
 daa:	6a 0f       	add	r22, r26
 dac:	71 1d       	adc	r23, r1
 dae:	81 1d       	adc	r24, r1
 db0:	91 1d       	adc	r25, r1
 db2:	a1 1d       	adc	r26, r1
 db4:	20 d0       	rcall	.+64     	; 0xdf6 <__ultoa_invert+0x84>
 db6:	09 f4       	brne	.+2      	; 0xdba <__ultoa_invert+0x48>
 db8:	68 94       	set
 dba:	3f 91       	pop	r19
 dbc:	2a e0       	ldi	r18, 0x0A	; 10
 dbe:	26 9f       	mul	r18, r22
 dc0:	11 24       	eor	r1, r1
 dc2:	30 19       	sub	r19, r0
 dc4:	30 5d       	subi	r19, 0xD0	; 208
 dc6:	31 93       	st	Z+, r19
 dc8:	de f6       	brtc	.-74     	; 0xd80 <__ultoa_invert+0xe>
 dca:	cf 01       	movw	r24, r30
 dcc:	08 95       	ret
 dce:	46 2f       	mov	r20, r22
 dd0:	47 70       	andi	r20, 0x07	; 7
 dd2:	40 5d       	subi	r20, 0xD0	; 208
 dd4:	41 93       	st	Z+, r20
 dd6:	b3 e0       	ldi	r27, 0x03	; 3
 dd8:	0f d0       	rcall	.+30     	; 0xdf8 <__ultoa_invert+0x86>
 dda:	c9 f7       	brne	.-14     	; 0xdce <__ultoa_invert+0x5c>
 ddc:	f6 cf       	rjmp	.-20     	; 0xdca <__ultoa_invert+0x58>
 dde:	46 2f       	mov	r20, r22
 de0:	4f 70       	andi	r20, 0x0F	; 15
 de2:	40 5d       	subi	r20, 0xD0	; 208
 de4:	4a 33       	cpi	r20, 0x3A	; 58
 de6:	18 f0       	brcs	.+6      	; 0xdee <__ultoa_invert+0x7c>
 de8:	49 5d       	subi	r20, 0xD9	; 217
 dea:	31 fd       	sbrc	r19, 1
 dec:	40 52       	subi	r20, 0x20	; 32
 dee:	41 93       	st	Z+, r20
 df0:	02 d0       	rcall	.+4      	; 0xdf6 <__ultoa_invert+0x84>
 df2:	a9 f7       	brne	.-22     	; 0xdde <__ultoa_invert+0x6c>
 df4:	ea cf       	rjmp	.-44     	; 0xdca <__ultoa_invert+0x58>
 df6:	b4 e0       	ldi	r27, 0x04	; 4
 df8:	a6 95       	lsr	r26
 dfa:	97 95       	ror	r25
 dfc:	87 95       	ror	r24
 dfe:	77 95       	ror	r23
 e00:	67 95       	ror	r22
 e02:	ba 95       	dec	r27
 e04:	c9 f7       	brne	.-14     	; 0xdf8 <__ultoa_invert+0x86>
 e06:	00 97       	sbiw	r24, 0x00	; 0
 e08:	61 05       	cpc	r22, r1
 e0a:	71 05       	cpc	r23, r1
 e0c:	08 95       	ret
 e0e:	9b 01       	movw	r18, r22
 e10:	ac 01       	movw	r20, r24
 e12:	0a 2e       	mov	r0, r26
 e14:	06 94       	lsr	r0
 e16:	57 95       	ror	r21
 e18:	47 95       	ror	r20
 e1a:	37 95       	ror	r19
 e1c:	27 95       	ror	r18
 e1e:	ba 95       	dec	r27
 e20:	c9 f7       	brne	.-14     	; 0xe14 <__ultoa_invert+0xa2>
 e22:	62 0f       	add	r22, r18
 e24:	73 1f       	adc	r23, r19
 e26:	84 1f       	adc	r24, r20
 e28:	95 1f       	adc	r25, r21
 e2a:	a0 1d       	adc	r26, r0
 e2c:	08 95       	ret

00000e2e <_exit>:
 e2e:	f8 94       	cli

00000e30 <__stop_program>:
 e30:	ff cf       	rjmp	.-2      	; 0xe30 <__stop_program>
